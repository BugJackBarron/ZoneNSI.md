{"config":{"indexing":"full","lang":["fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Nouvelle version Ceci est mon nouveau site. Il est prioritairement \u00e0 destination de mes \u00e9l\u00e8ves, mais vous pouvez m'envoyer vos commentaires par le lien situ\u00e9 en bas de page. L'ancien site peut-\u00eatre trouv\u00e9 ici .","title":"Home"},{"location":"#nouvelle-version","text":"Ceci est mon nouveau site. Il est prioritairement \u00e0 destination de mes \u00e9l\u00e8ves, mais vous pouvez m'envoyer vos commentaires par le lien situ\u00e9 en bas de page. L'ancien site peut-\u00eatre trouv\u00e9 ici .","title":"Nouvelle version"},{"location":"WorkInProgress/","text":"","title":"Flask"},{"location":"Maths/Seconde/home/","text":"Le programme Documents officiels Le programme de maths de seconde se trouve ici . Pr\u00e9vision de progression annuelle 2021-2022 Cette progression n'est valable que pour les \u00e9l\u00e8ves de seconde I du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e... N\u00b0 Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques 1 Ensembles et intervalles 2 Notions de vecteurs 3 G\u00e9n\u00e9ralit\u00e9s sur les fonctions 4 Configuration du plan et orthogonalit\u00e9 5 Calcul litt\u00e9ral 6 Fonctions de r\u00e9f\u00e9rences 1 (affines et carr\u00e9s) 7 G\u00e9om\u00e9trie rep\u00e9r\u00e9e 8 Arithm\u00e9tique 9 Pourcentages 10 Fonctions de r\u00e9f\u00e9rences 2 11 Probabilit\u00e9s 12 Equations cart\u00e9siennes et syst\u00e8mes 13 Statistiques 14 Echantillonage A toutes ces notions, il faut rajouter les bases d'algorithmique et de programmation en Python : Types de variables ; Affectations de variables ; Structures conditionnelles : Boucles born\u00e9es et non-born\u00e9es. Epreuves communes Deux \u00e9preuves communes sont pr\u00e9vues pour l'ann\u00e9e 2021-2022 : la premi\u00e8re juste avant les vacances de la toussaint, sur les chapitres 1 \u00e0 3 La deuxi\u00e8me avant les vacances de f\u00e9vrier, sur les chapitres 1 \u00e0 7.","title":"Pr\u00e9sentation"},{"location":"Maths/Seconde/home/#le-programme","text":"","title":"Le programme"},{"location":"Maths/Seconde/home/#documents-officiels","text":"Le programme de maths de seconde se trouve ici .","title":"Documents officiels"},{"location":"Maths/Seconde/home/#prevision-de-progression-annuelle-2021-2022","text":"Cette progression n'est valable que pour les \u00e9l\u00e8ves de seconde I du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e... N\u00b0 Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques 1 Ensembles et intervalles 2 Notions de vecteurs 3 G\u00e9n\u00e9ralit\u00e9s sur les fonctions 4 Configuration du plan et orthogonalit\u00e9 5 Calcul litt\u00e9ral 6 Fonctions de r\u00e9f\u00e9rences 1 (affines et carr\u00e9s) 7 G\u00e9om\u00e9trie rep\u00e9r\u00e9e 8 Arithm\u00e9tique 9 Pourcentages 10 Fonctions de r\u00e9f\u00e9rences 2 11 Probabilit\u00e9s 12 Equations cart\u00e9siennes et syst\u00e8mes 13 Statistiques 14 Echantillonage A toutes ces notions, il faut rajouter les bases d'algorithmique et de programmation en Python : Types de variables ; Affectations de variables ; Structures conditionnelles : Boucles born\u00e9es et non-born\u00e9es.","title":"Pr\u00e9vision de progression annuelle 2021-2022"},{"location":"Maths/Seconde/home/#epreuves-communes","text":"Deux \u00e9preuves communes sont pr\u00e9vues pour l'ann\u00e9e 2021-2022 : la premi\u00e8re juste avant les vacances de la toussaint, sur les chapitres 1 \u00e0 3 La deuxi\u00e8me avant les vacances de f\u00e9vrier, sur les chapitres 1 \u00e0 7.","title":"Epreuves communes"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/","text":"Algorithmes, types de variables et affectations Notion d'algorithme D\u00e9finition : Algorithme Un algorithme est une suite finie d' instructions \u00e0 appliquer : dans un ordre d\u00e9termin\u00e9, \u00e0 un nombre fini de donn\u00e9es , en un nombre fini d'\u00e9tapes, pour arriver \u00e0 un certain r\u00e9sultat. Des algorithmes, il en existe beaucoup. Certains sont des algorithmes num\u00e9riques (ils travaillent sur des nombres), d'autres sont des algorithmes textuels (ils travaillent sur des textes), ou encore sur d'autres types de donn\u00e9es (musiques, images, ou donn\u00e9es plus abstraites). Mais souvent les algorithmes sont r\u00e9p\u00e9titifs, longs \u00e0 faire \u00e0 la main, et n\u00e9cessitent de fastidieux calculs. Ce qui est particuli\u00e8rement p\u00e9nible pour un \u00eatre humain... Mais les humains ont invent\u00e9 les ordinateurs, qui eux sont capables de faire des t\u00e2ches r\u00e9p\u00e9titives et des calculs tr\u00e8s tr\u00e8s rapidement - un ordinateur dont le processeur est cadenc\u00e9 \u00e0 3 GHz effectue 3 milliards d'op\u00e9rations \u00e9l\u00e9mentaires par seconde (les op\u00e9rations \u00e9l\u00e9mentaires sont g\u00e9n\u00e9ralement des additions sur des entiers pas trop grands). Donc, dans un ordinateur, les donn\u00e9es vont \u00eatre utilis\u00e9es et modifi\u00e9es par l'algorithme, afin de produire son r\u00e9sultat, qui sera lui-m\u00eame une donn\u00e9e. Pour cela les donn\u00e9es sont stock\u00e9es dans des cases m\u00e9moires de l'ordinateur, cases que l'on rep\u00e8rera par leur nom Variables, types et affectations Une variable est une case m\u00e9moire poss\u00e9dant un nom , dans lequel on range une donn\u00e9e . Les donn\u00e9es informatiques de base peuvent \u00eatre class\u00e9es dans 4 types diff\u00e9rents : les entiers ( nombre entier relatif ) ; les flottants ( en simplifiant, les nombres d\u00e9cimaux ); les cha\u00eenes de caract\u00e8res ( des suites de lettres, chiffres, symboles, encadr\u00e9es par des guillemets ); les bool\u00e9ens ( une valeur qui ne peut \u00eatre que dans deux \u00e9tats : Vrai et Faux ). L'affectation est l'op\u00e9ration qui consiste \u00e0 \u00ab ranger \u00bb une donn\u00e9e dans une variable. En pseudo-code elle est symbolis\u00e9e par une fl\u00e8che pointant vers la gauche : \\(\\leftarrow\\) . On lira l'instruction \\[ X \\leftarrow 7 \\] par \u00ab X prend la valeur 7 \u00bb. Exemple Consid\u00e9rons le programme de calcul suivant : Choisir un nombre Le multiplier par 5 Ajouter 4 au r\u00e9sultat Ce programme est bien un algorithme : il y a trois instructions ; on doit les appliquer dans l'ordre ; on a une seule donn\u00e9e de d\u00e9part ; il y aura deux \u00e9tapes de calcul. La seule donn\u00e9e utilis\u00e9e est le nombre de d\u00e9part. Si on applique cet algorithme : en nommant le nombre de d\u00e9part X en choisissant comme nombre de d\u00e9part 7 On obtient alors l'algorithme suivant, \u00e9crit en pseudo-code : \\[ \\begin{array}{rcl} X & \\leftarrow & 7\\\\ X & \\leftarrow & 5\\times X\\\\ X & \\leftarrow & X + 4\\\\ \\end{array} \\] On peut alors repr\u00e9senter le tableau d'\u00e9tat de la variable X : Etat de X Commentaire 7 C'est la ligne \\(X~<--~ 7\\) 35 C'est la ligne \\(X~<--~ 5\\times X\\) , \\(X\\) prend 5 fois la valeur qu'il poss\u00e8de 39 C'est la ligne \\(X~<--~ X+4\\) , \\(X\\) prend la valeur qu'il poss\u00e8de plus 4 Exemples de types de variables \\(a \\leftarrow 56\\) : la variable \\(a\\) prend la valeur enti\u00e8re \\(56\\) ; \\(b \\leftarrow 3,2\\) : la variable \\(b\\) prend la valeur flottante \\(3,2\\) ; \\(c \\leftarrow a+b\\) : la variable \\(c\\) prend la valeur de la somme des variables \\(a\\) et \\(b\\) ; \\(d \\leftarrow \\text{\"Hello world\"}\\) : la variable \\(d\\) re\u00e7oit la cha\u00eene de caract\u00e8res \"Hello world\" ; \\(e \\leftarrow True\\) : la variable \\(e\\) re\u00e7oit la valeur bool\u00e9enne Vrai; \\(f \\leftarrow 4<2\\) : la variable \\(f\\) re\u00e7oit la valeur bool\u00e9enne Faux. Le langage Python Langage Python Python est un langage informatique cr\u00e9\u00e9 en 1991 par l'informaticien N\u00e9erlandais Guido vann Rossum. C'est un langage de haut niveau , ce qui signifie qu'il est assez \u00e9loign\u00e9 du code machine qui est tr\u00e8s difficile \u00e0 lire et \u00e0 comprendre pour un \u00eatre humain. En ce sens, Python est un langage informatique simple \u00e0 apprendre, et dont l'\u00e9criture est proche du langage naturel. Il est ainsi devenu le langage g\u00e9n\u00e9rant le plus de recherches sur le web en octobre 2021. Pour autant, l'ordinateur qui ex\u00e9cute un programme Python reste une machine sans intelligence , et le programmeur doit respecter une syntaxe tr\u00e8s stricte pour que l'ordinateur ex\u00e9cutela t\u00e2che qui lui est confi\u00e9e. Exemple Voici le code python correspondant \u00e0 l'algorithme que nous avons \u00e9crit pr\u00e9c\u00e9demment : X = 7 X = 5 * X X = X + 4 On peut voir son ex\u00e9cution pas \u00e0 pas depuis le site python tutor : On constate que : en python, l'instruction d'affectation est \u00e9crite avec un signe = ; la multiplication se fait par l'interm\u00e9diaire du signe ast\u00e9risque * . Premiers exercices Exercice 1 On consid\u00e8re l'algorithme en pseudo-code suivant : \\[ \\begin{array}{|l|} \\hline A \\leftarrow 3\\\\ B \\leftarrow A+2\\\\ A \\leftarrow A\\times B\\\\ B \\leftarrow A+B\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat des variables suivants : \\[ \\begin{array}{|c|c|} \\hline A & B\\\\\\hline & \\\\\\hline & \\\\\\hline & \\\\\\hline \\end{array} \\] Quelles sont les valeurs contenues par les variables \\(A\\) et \\(B\\) apr\u00e8s l'ex\u00e9cution de l'algorithme ? V\u00e9rifier vos r\u00e9ponses pr\u00e9c\u00e9dentes ci-dessous : Exercice 2 Enonc\u00e9 On consid\u00e8re les deux algorithmes S1 et S2 suivants : S1 : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & \\text{\"bonjour\"}\\\\ A & \\leftarrow & \\text{\"bonsoir\"}\\\\\\hline \\end{array} \\] S2 : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & \\text{\"bonsoir\"}\\\\ A & \\leftarrow & \\text{\"bonjour\"}\\\\\\hline \\end{array} \\] Que contient A \u00e0 la fin de S1 ? de S2 ? L'ordre a-t-il une importance ? Solution A la fin de S1, \\(A\\) contient \"bonsoir\" . A la fin de S2, \\(A\\) contient \"bonjour\" . Oui, l'orde \u00e0 une importance. Les instructions sont lues de mani\u00e8re s\u00e9quentielle, du haut vers le bas Exercice 3 Enonc\u00e9 Soient deux variables \\(A\\) et \\(B\\) , et l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & 1\\\\ B & \\leftarrow & 3\\\\ A & \\leftarrow & A+B\\\\ B & \\leftarrow & A\\times B\\\\\\hline \\end{array} \\] Justifier qu'\u00e0 l'issue de l'algorithme ci-dessous, la valeur de la variable B est 12. A la fin de l'algorithme, on ajoute l'instruction \\(C \\leftarrow (A=12)\\) . Quel est le type de la donn\u00e9e contenue par C ? Quel est sa valeur ? Ecrire ce code en Python (attention il y a un pi\u00e8ge sur la derni\u00e8re ligne !) Solution Le programme suivant doit \u00eatre plac\u00e9 dans Python Tutor, et permet de r\u00e9pondre \u00e0 toutes les questions : A = 1 B = 3 A = A + B B = A * B C = ( A == 12 ) Le pi\u00e8ge est d'\u00e9crire A=12 , car en python, le symbole = ne permet pas de tester une \u00e9galit\u00e9 , vu qu'il est utilis\u00e9 pour l'affectation. Pour tester une \u00e9gaklit\u00e9, et donc r\u00e9cup\u00e9rer une valeur bool\u00e9enne , il faut utiliser un double-\u00e9gal : A==12 . Exercice 4 Enonc\u00e9 On consid\u00e8re l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline X & \\leftarrow & 4\\\\ X & \\leftarrow & 2 X\\\\ X & \\leftarrow & X+3\\\\ X & \\leftarrow & X\\times X\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\) . Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ? On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\) , o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Laquelle de ces trois propositions correspondent \u00e0 la valeur affect\u00e9 \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ? \\(2a+3^2\\) \\((2a+3)^2\\) \\(2(a+3)^2\\) Solution A venir ! Exercice 5 Enonc\u00e9 On consid\u00e8re l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline X & \\leftarrow & 4\\\\ X & \\leftarrow & X+3\\\\ X & \\leftarrow & X\\times X\\\\ X & \\leftarrow & 2 X\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\) . Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ? On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\) , o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Quelle expression d\u00e9pendant de \\(a\\) est affect\u00e9e \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ? Solution A venir !","title":"Algorithmes, affectations et types de variables"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#algorithmes-types-de-variables-et-affectations","text":"","title":"Algorithmes, types de variables et affectations"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#notion-dalgorithme","text":"D\u00e9finition : Algorithme Un algorithme est une suite finie d' instructions \u00e0 appliquer : dans un ordre d\u00e9termin\u00e9, \u00e0 un nombre fini de donn\u00e9es , en un nombre fini d'\u00e9tapes, pour arriver \u00e0 un certain r\u00e9sultat. Des algorithmes, il en existe beaucoup. Certains sont des algorithmes num\u00e9riques (ils travaillent sur des nombres), d'autres sont des algorithmes textuels (ils travaillent sur des textes), ou encore sur d'autres types de donn\u00e9es (musiques, images, ou donn\u00e9es plus abstraites). Mais souvent les algorithmes sont r\u00e9p\u00e9titifs, longs \u00e0 faire \u00e0 la main, et n\u00e9cessitent de fastidieux calculs. Ce qui est particuli\u00e8rement p\u00e9nible pour un \u00eatre humain... Mais les humains ont invent\u00e9 les ordinateurs, qui eux sont capables de faire des t\u00e2ches r\u00e9p\u00e9titives et des calculs tr\u00e8s tr\u00e8s rapidement - un ordinateur dont le processeur est cadenc\u00e9 \u00e0 3 GHz effectue 3 milliards d'op\u00e9rations \u00e9l\u00e9mentaires par seconde (les op\u00e9rations \u00e9l\u00e9mentaires sont g\u00e9n\u00e9ralement des additions sur des entiers pas trop grands). Donc, dans un ordinateur, les donn\u00e9es vont \u00eatre utilis\u00e9es et modifi\u00e9es par l'algorithme, afin de produire son r\u00e9sultat, qui sera lui-m\u00eame une donn\u00e9e. Pour cela les donn\u00e9es sont stock\u00e9es dans des cases m\u00e9moires de l'ordinateur, cases que l'on rep\u00e8rera par leur nom Variables, types et affectations Une variable est une case m\u00e9moire poss\u00e9dant un nom , dans lequel on range une donn\u00e9e . Les donn\u00e9es informatiques de base peuvent \u00eatre class\u00e9es dans 4 types diff\u00e9rents : les entiers ( nombre entier relatif ) ; les flottants ( en simplifiant, les nombres d\u00e9cimaux ); les cha\u00eenes de caract\u00e8res ( des suites de lettres, chiffres, symboles, encadr\u00e9es par des guillemets ); les bool\u00e9ens ( une valeur qui ne peut \u00eatre que dans deux \u00e9tats : Vrai et Faux ). L'affectation est l'op\u00e9ration qui consiste \u00e0 \u00ab ranger \u00bb une donn\u00e9e dans une variable. En pseudo-code elle est symbolis\u00e9e par une fl\u00e8che pointant vers la gauche : \\(\\leftarrow\\) . On lira l'instruction \\[ X \\leftarrow 7 \\] par \u00ab X prend la valeur 7 \u00bb. Exemple Consid\u00e9rons le programme de calcul suivant : Choisir un nombre Le multiplier par 5 Ajouter 4 au r\u00e9sultat Ce programme est bien un algorithme : il y a trois instructions ; on doit les appliquer dans l'ordre ; on a une seule donn\u00e9e de d\u00e9part ; il y aura deux \u00e9tapes de calcul. La seule donn\u00e9e utilis\u00e9e est le nombre de d\u00e9part. Si on applique cet algorithme : en nommant le nombre de d\u00e9part X en choisissant comme nombre de d\u00e9part 7 On obtient alors l'algorithme suivant, \u00e9crit en pseudo-code : \\[ \\begin{array}{rcl} X & \\leftarrow & 7\\\\ X & \\leftarrow & 5\\times X\\\\ X & \\leftarrow & X + 4\\\\ \\end{array} \\] On peut alors repr\u00e9senter le tableau d'\u00e9tat de la variable X : Etat de X Commentaire 7 C'est la ligne \\(X~<--~ 7\\) 35 C'est la ligne \\(X~<--~ 5\\times X\\) , \\(X\\) prend 5 fois la valeur qu'il poss\u00e8de 39 C'est la ligne \\(X~<--~ X+4\\) , \\(X\\) prend la valeur qu'il poss\u00e8de plus 4 Exemples de types de variables \\(a \\leftarrow 56\\) : la variable \\(a\\) prend la valeur enti\u00e8re \\(56\\) ; \\(b \\leftarrow 3,2\\) : la variable \\(b\\) prend la valeur flottante \\(3,2\\) ; \\(c \\leftarrow a+b\\) : la variable \\(c\\) prend la valeur de la somme des variables \\(a\\) et \\(b\\) ; \\(d \\leftarrow \\text{\"Hello world\"}\\) : la variable \\(d\\) re\u00e7oit la cha\u00eene de caract\u00e8res \"Hello world\" ; \\(e \\leftarrow True\\) : la variable \\(e\\) re\u00e7oit la valeur bool\u00e9enne Vrai; \\(f \\leftarrow 4<2\\) : la variable \\(f\\) re\u00e7oit la valeur bool\u00e9enne Faux.","title":"Notion d'algorithme"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#le-langage-python","text":"Langage Python Python est un langage informatique cr\u00e9\u00e9 en 1991 par l'informaticien N\u00e9erlandais Guido vann Rossum. C'est un langage de haut niveau , ce qui signifie qu'il est assez \u00e9loign\u00e9 du code machine qui est tr\u00e8s difficile \u00e0 lire et \u00e0 comprendre pour un \u00eatre humain. En ce sens, Python est un langage informatique simple \u00e0 apprendre, et dont l'\u00e9criture est proche du langage naturel. Il est ainsi devenu le langage g\u00e9n\u00e9rant le plus de recherches sur le web en octobre 2021. Pour autant, l'ordinateur qui ex\u00e9cute un programme Python reste une machine sans intelligence , et le programmeur doit respecter une syntaxe tr\u00e8s stricte pour que l'ordinateur ex\u00e9cutela t\u00e2che qui lui est confi\u00e9e. Exemple Voici le code python correspondant \u00e0 l'algorithme que nous avons \u00e9crit pr\u00e9c\u00e9demment : X = 7 X = 5 * X X = X + 4 On peut voir son ex\u00e9cution pas \u00e0 pas depuis le site python tutor : On constate que : en python, l'instruction d'affectation est \u00e9crite avec un signe = ; la multiplication se fait par l'interm\u00e9diaire du signe ast\u00e9risque * .","title":"Le langage Python"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#premiers-exercices","text":"Exercice 1 On consid\u00e8re l'algorithme en pseudo-code suivant : \\[ \\begin{array}{|l|} \\hline A \\leftarrow 3\\\\ B \\leftarrow A+2\\\\ A \\leftarrow A\\times B\\\\ B \\leftarrow A+B\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat des variables suivants : \\[ \\begin{array}{|c|c|} \\hline A & B\\\\\\hline & \\\\\\hline & \\\\\\hline & \\\\\\hline \\end{array} \\] Quelles sont les valeurs contenues par les variables \\(A\\) et \\(B\\) apr\u00e8s l'ex\u00e9cution de l'algorithme ? V\u00e9rifier vos r\u00e9ponses pr\u00e9c\u00e9dentes ci-dessous : Exercice 2 Enonc\u00e9 On consid\u00e8re les deux algorithmes S1 et S2 suivants : S1 : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & \\text{\"bonjour\"}\\\\ A & \\leftarrow & \\text{\"bonsoir\"}\\\\\\hline \\end{array} \\] S2 : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & \\text{\"bonsoir\"}\\\\ A & \\leftarrow & \\text{\"bonjour\"}\\\\\\hline \\end{array} \\] Que contient A \u00e0 la fin de S1 ? de S2 ? L'ordre a-t-il une importance ? Solution A la fin de S1, \\(A\\) contient \"bonsoir\" . A la fin de S2, \\(A\\) contient \"bonjour\" . Oui, l'orde \u00e0 une importance. Les instructions sont lues de mani\u00e8re s\u00e9quentielle, du haut vers le bas Exercice 3 Enonc\u00e9 Soient deux variables \\(A\\) et \\(B\\) , et l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & 1\\\\ B & \\leftarrow & 3\\\\ A & \\leftarrow & A+B\\\\ B & \\leftarrow & A\\times B\\\\\\hline \\end{array} \\] Justifier qu'\u00e0 l'issue de l'algorithme ci-dessous, la valeur de la variable B est 12. A la fin de l'algorithme, on ajoute l'instruction \\(C \\leftarrow (A=12)\\) . Quel est le type de la donn\u00e9e contenue par C ? Quel est sa valeur ? Ecrire ce code en Python (attention il y a un pi\u00e8ge sur la derni\u00e8re ligne !) Solution Le programme suivant doit \u00eatre plac\u00e9 dans Python Tutor, et permet de r\u00e9pondre \u00e0 toutes les questions : A = 1 B = 3 A = A + B B = A * B C = ( A == 12 ) Le pi\u00e8ge est d'\u00e9crire A=12 , car en python, le symbole = ne permet pas de tester une \u00e9galit\u00e9 , vu qu'il est utilis\u00e9 pour l'affectation. Pour tester une \u00e9gaklit\u00e9, et donc r\u00e9cup\u00e9rer une valeur bool\u00e9enne , il faut utiliser un double-\u00e9gal : A==12 . Exercice 4 Enonc\u00e9 On consid\u00e8re l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline X & \\leftarrow & 4\\\\ X & \\leftarrow & 2 X\\\\ X & \\leftarrow & X+3\\\\ X & \\leftarrow & X\\times X\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\) . Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ? On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\) , o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Laquelle de ces trois propositions correspondent \u00e0 la valeur affect\u00e9 \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ? \\(2a+3^2\\) \\((2a+3)^2\\) \\(2(a+3)^2\\) Solution A venir ! Exercice 5 Enonc\u00e9 On consid\u00e8re l'algorithme suivant : \\[ \\begin{array}{|rcl|} \\hline X & \\leftarrow & 4\\\\ X & \\leftarrow & X+3\\\\ X & \\leftarrow & X\\times X\\\\ X & \\leftarrow & 2 X\\\\\\hline \\end{array} \\] Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\) . Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ? On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\) , o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Quelle expression d\u00e9pendant de \\(a\\) est affect\u00e9e \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ? Solution A venir !","title":"Premiers exercices"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/","text":"Programmation en Python et utilisation de Thonny Pr\u00e9sentation de l'\u00e9diteur Thonny Thonny est un logiciel libre et gratuit permettant l'\u00e9criture et l'ex\u00e9cution de programmes \u00e9crits en Python. Il a \u00e9t\u00e9 cr\u00e9e \u00e0 destination des \u00e9l\u00e8ves et \u00e9tudiants d\u00e9couvrant la programmation par des professeurs de l'institut de Sciences Informatiques de l'universit\u00e9 de Tartu, en Estonie. Il est t\u00e9l\u00e9chargeable gratuitement ici , en version Windows, Mac ou Linux, et contient une version autonome de Python, qui ne perturbe en rien l'ordinateur sur lequel on installe le logiciel. Pr\u00e9sentation de l'interface graphique de Thonny Comme tout bon environnement de d\u00e9veloppement int\u00e9gr\u00e9 ou autrement dit IDE , Thonny propose plusieurs pour aider \u00e0 la programmation en Python. Nous ne pr\u00e9senterons ici que ceux n\u00e9cessaires \u00e0 une initiation \u00e0 Python. La zone d'ex\u00e9cution , aussi appel\u00e9e Shell ou console , est une zone interactive o\u00f9 une instruction Python est ex\u00e9cut\u00e9e directement apr\u00e8s avoir \u00e9t\u00e9 tap\u00e9e. Cette zone est souvent utilis\u00e9e pour tester une instruction ou s\u00e9rie d'instructions , mais est aussi l'endroit ou sera ex\u00e9cut\u00e9 un script Python . Attention, dans le Shell , il n'est pas possible de revenir en arri\u00e8re et de modifier ce qui a \u00e9t\u00e9 tap\u00e9 . En cas d'erreur, il faudra recommencer ! La zone d'\u00e9dition ou zone de scripts , est une zone dans laquelle on peut taper des s\u00e9ries d'instructions Python, et les sauvegarder sous la forme d'un fichier d'extension .py . Ces instructions ne seront pas ex\u00e9cut\u00e9es tant que l'utilisateur n'aura pas demand\u00e9 explicitement cette ex\u00e9cution. Pour ex\u00e9cuter un script , il faudra appuyer, soit sur la fl\u00e8che verte de la barre de menu, soit sur la touche F5 , soit par l'interm\u00e9diaire du menu Run>Run current script . Le r\u00e9sultat de l'ex\u00e9cution du script sera affich\u00e9 dans le shell . Les zones situ\u00e9s \u00e0 droite de l'\u00e9diteur (fen\u00eatre des variables et assistant d'\u00e9dition), contiennent des informations qui peuvent \u00eatre utiles pour analyser un programme qui ne fonctionne pas. Mais c'est en anglais Oui, l'interface de Thonny est en anglais, oui il n'y a un possibilit\u00e9 pour la passer en fran\u00e7ais, non je ne la donnerai pas ici, car l'anglais utilis\u00e9 est tr\u00e8s simple, \u00e0 vous de vous d\u00e9brouiller ! Premiers pas avec Thonny Exercice 1 : Prise en main Enonc\u00e9 Cr\u00e9er un dossier Maths dans votre dossier personnel. Cr\u00e9er un dossier Algorithmique dans le dossier Maths . Ouvrir le logiciel Thonny. Cr\u00e9er un script vide. Tapez le code suivant, en respectant scrupuleusement ce qui est \u00e9crit : 1 2 3 4 5 6 7 8 9 10 nom = input ( \"Quel est votre nom ?\" ) age = int ( input ( \"Quel est votre age ?\" )) majeur = age >= 18 if majeur : majorite = age - 18 message = f \"Bonjour { nom } , vous avez { age } ans et \u00eates majeur depuis { majorite } ans.\" else : majorite = 18 - age message = f \"Bonjour { nom } , vous avez { age } ans et serez majeur dans { majorite } ans.\" print ( message ) Enregistrer ce fichier sous le nom AP_Algo_1.py dans le dossier Algorithmique . Ex\u00e9cutez le script et r\u00e9pondez aux questions pos\u00e9es dans le shell . Que se passe-t-il ? Recommencez plusieurs fois, en essayant diff\u00e9rentes r\u00e9ponses. Pour les questions suivantes, vous pouvez vous aider de la fen\u00eatre des variables. Si elle n'est pas pr\u00e9sente, vous pouvez l'afficher par le menu View>Variables . A quoi sert l'instruction input en ligne 1 ? Quel est le type de la variable nom ? Quel est le type de la variable age ? Pourquoi n'est-elle pas du m\u00eame type que nom ? Quel est le type de la variable majeur ? Que cela signifie-t-il ? Quel est le type de la variable majorite ? Est-ce toujours le cas ? Quel est le type de la variable message ? Qu'a-t-elle de sp\u00e9cial ? Solution A venir Le calcul avec Python Python est capable de calculer avec des nombres entiers (tpe int ) et des nombres flottants (type float ). Les op\u00e9rations de bases sont g\u00e9r\u00e9es ainsi : les op\u00e9rations \\(+\\) , \\(-\\) , \\(\\times\\) et \\(\\div\\) s'\u00e9crivent respectivement + , - , * , / ; \\(x^n\\) s'\u00e9crit x**n ; Le reste de la division euclidienne de \\(a\\) par \\(b\\) s'obtient par a%b (lu \u00ab a modulo b \u00bb) ; le quotient de la division euclidienne de \\(a\\) par \\(b\\) s'obteint par a//b . Exercice 2 : Compl\u00e9ter un programme Enonc\u00e9 Cr\u00e9er un nouveau script, et enregistrez-le dans le dossier Algorithmique sous le nom AP_Algo_2.py . Tapez le code suivant dans le script : 1 2 3 4 5 x = 2 y = 3 z = x + y + x * y z = z ** 2 y = y / 2 Ex\u00e9cutez-le. Qu'obtient-on ? Compl\u00e9ter ce programme afin qu'une variable bool\u00e9enne t teste si z est pair. Solution A venir ! Exercice 3 : Se m\u00e9fier ! Enonc\u00e9 On consid\u00e8re l'algorithme suivant en pseudo-code, ainsi que le tableau d'\u00e9tat des variables correspondant: \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & 12\\\\ B & \\leftarrow & 4\\\\ C & \\leftarrow & \\dfrac{A}{B}\\\\ D & \\leftarrow & \\dfrac{A\\times 7}{B\\times 7}\\\\ T & \\leftarrow & C=D\\\\\\hline \\end{array} \\] A B C D T Compl\u00e9ter \u00e0 la main le tableau d'\u00e9tat des variables. Que dfoit contenir la variable T ? Cr\u00e9er un script vide et l'enregistrer dans le dossier Algorithmique sous le nom AP_Algo_3.py . Coder l'algorithme en Python. Ex\u00e9cutez-le. Le r\u00e9sultat est-il conforme \u00e0 vos attentes ? Corriger si besoin le code. Quel est le type des variables C et D ? Comment l'expliquer ? Solution A venir !","title":"Programmation en Python et utilisation de Thonny"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#programmation-en-python-et-utilisation-de-thonny","text":"","title":"Programmation en Python et utilisation de Thonny"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#presentation-de-lediteur-thonny","text":"Thonny est un logiciel libre et gratuit permettant l'\u00e9criture et l'ex\u00e9cution de programmes \u00e9crits en Python. Il a \u00e9t\u00e9 cr\u00e9e \u00e0 destination des \u00e9l\u00e8ves et \u00e9tudiants d\u00e9couvrant la programmation par des professeurs de l'institut de Sciences Informatiques de l'universit\u00e9 de Tartu, en Estonie. Il est t\u00e9l\u00e9chargeable gratuitement ici , en version Windows, Mac ou Linux, et contient une version autonome de Python, qui ne perturbe en rien l'ordinateur sur lequel on installe le logiciel. Pr\u00e9sentation de l'interface graphique de Thonny Comme tout bon environnement de d\u00e9veloppement int\u00e9gr\u00e9 ou autrement dit IDE , Thonny propose plusieurs pour aider \u00e0 la programmation en Python. Nous ne pr\u00e9senterons ici que ceux n\u00e9cessaires \u00e0 une initiation \u00e0 Python. La zone d'ex\u00e9cution , aussi appel\u00e9e Shell ou console , est une zone interactive o\u00f9 une instruction Python est ex\u00e9cut\u00e9e directement apr\u00e8s avoir \u00e9t\u00e9 tap\u00e9e. Cette zone est souvent utilis\u00e9e pour tester une instruction ou s\u00e9rie d'instructions , mais est aussi l'endroit ou sera ex\u00e9cut\u00e9 un script Python . Attention, dans le Shell , il n'est pas possible de revenir en arri\u00e8re et de modifier ce qui a \u00e9t\u00e9 tap\u00e9 . En cas d'erreur, il faudra recommencer ! La zone d'\u00e9dition ou zone de scripts , est une zone dans laquelle on peut taper des s\u00e9ries d'instructions Python, et les sauvegarder sous la forme d'un fichier d'extension .py . Ces instructions ne seront pas ex\u00e9cut\u00e9es tant que l'utilisateur n'aura pas demand\u00e9 explicitement cette ex\u00e9cution. Pour ex\u00e9cuter un script , il faudra appuyer, soit sur la fl\u00e8che verte de la barre de menu, soit sur la touche F5 , soit par l'interm\u00e9diaire du menu Run>Run current script . Le r\u00e9sultat de l'ex\u00e9cution du script sera affich\u00e9 dans le shell . Les zones situ\u00e9s \u00e0 droite de l'\u00e9diteur (fen\u00eatre des variables et assistant d'\u00e9dition), contiennent des informations qui peuvent \u00eatre utiles pour analyser un programme qui ne fonctionne pas. Mais c'est en anglais Oui, l'interface de Thonny est en anglais, oui il n'y a un possibilit\u00e9 pour la passer en fran\u00e7ais, non je ne la donnerai pas ici, car l'anglais utilis\u00e9 est tr\u00e8s simple, \u00e0 vous de vous d\u00e9brouiller !","title":"Pr\u00e9sentation de l'\u00e9diteur Thonny"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#premiers-pas-avec-thonny","text":"Exercice 1 : Prise en main Enonc\u00e9 Cr\u00e9er un dossier Maths dans votre dossier personnel. Cr\u00e9er un dossier Algorithmique dans le dossier Maths . Ouvrir le logiciel Thonny. Cr\u00e9er un script vide. Tapez le code suivant, en respectant scrupuleusement ce qui est \u00e9crit : 1 2 3 4 5 6 7 8 9 10 nom = input ( \"Quel est votre nom ?\" ) age = int ( input ( \"Quel est votre age ?\" )) majeur = age >= 18 if majeur : majorite = age - 18 message = f \"Bonjour { nom } , vous avez { age } ans et \u00eates majeur depuis { majorite } ans.\" else : majorite = 18 - age message = f \"Bonjour { nom } , vous avez { age } ans et serez majeur dans { majorite } ans.\" print ( message ) Enregistrer ce fichier sous le nom AP_Algo_1.py dans le dossier Algorithmique . Ex\u00e9cutez le script et r\u00e9pondez aux questions pos\u00e9es dans le shell . Que se passe-t-il ? Recommencez plusieurs fois, en essayant diff\u00e9rentes r\u00e9ponses. Pour les questions suivantes, vous pouvez vous aider de la fen\u00eatre des variables. Si elle n'est pas pr\u00e9sente, vous pouvez l'afficher par le menu View>Variables . A quoi sert l'instruction input en ligne 1 ? Quel est le type de la variable nom ? Quel est le type de la variable age ? Pourquoi n'est-elle pas du m\u00eame type que nom ? Quel est le type de la variable majeur ? Que cela signifie-t-il ? Quel est le type de la variable majorite ? Est-ce toujours le cas ? Quel est le type de la variable message ? Qu'a-t-elle de sp\u00e9cial ? Solution A venir Le calcul avec Python Python est capable de calculer avec des nombres entiers (tpe int ) et des nombres flottants (type float ). Les op\u00e9rations de bases sont g\u00e9r\u00e9es ainsi : les op\u00e9rations \\(+\\) , \\(-\\) , \\(\\times\\) et \\(\\div\\) s'\u00e9crivent respectivement + , - , * , / ; \\(x^n\\) s'\u00e9crit x**n ; Le reste de la division euclidienne de \\(a\\) par \\(b\\) s'obtient par a%b (lu \u00ab a modulo b \u00bb) ; le quotient de la division euclidienne de \\(a\\) par \\(b\\) s'obteint par a//b . Exercice 2 : Compl\u00e9ter un programme Enonc\u00e9 Cr\u00e9er un nouveau script, et enregistrez-le dans le dossier Algorithmique sous le nom AP_Algo_2.py . Tapez le code suivant dans le script : 1 2 3 4 5 x = 2 y = 3 z = x + y + x * y z = z ** 2 y = y / 2 Ex\u00e9cutez-le. Qu'obtient-on ? Compl\u00e9ter ce programme afin qu'une variable bool\u00e9enne t teste si z est pair. Solution A venir ! Exercice 3 : Se m\u00e9fier ! Enonc\u00e9 On consid\u00e8re l'algorithme suivant en pseudo-code, ainsi que le tableau d'\u00e9tat des variables correspondant: \\[ \\begin{array}{|rcl|} \\hline A & \\leftarrow & 12\\\\ B & \\leftarrow & 4\\\\ C & \\leftarrow & \\dfrac{A}{B}\\\\ D & \\leftarrow & \\dfrac{A\\times 7}{B\\times 7}\\\\ T & \\leftarrow & C=D\\\\\\hline \\end{array} \\] A B C D T Compl\u00e9ter \u00e0 la main le tableau d'\u00e9tat des variables. Que dfoit contenir la variable T ? Cr\u00e9er un script vide et l'enregistrer dans le dossier Algorithmique sous le nom AP_Algo_3.py . Coder l'algorithme en Python. Ex\u00e9cutez-le. Le r\u00e9sultat est-il conforme \u00e0 vos attentes ? Corriger si besoin le code. Quel est le type des variables C et D ? Comment l'expliquer ? Solution A venir !","title":"Premiers pas avec Thonny"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/","text":"C01-01 : Ensembles de Nombres La version pdf de ce cours est t\u00e9l\u00e9chargeable ici . (version 2021-2022) Activit\u00e9 : Classer des nombres Dans la liste ci-dessus, deux \u00e9critures sont interdites. Lesquelles et pourquoi ? Classer les nombres restants en cinq groupes , en justifiant vos choix. Diff\u00e9rence entres propri\u00e9t\u00e9s et \u00e9critures Un nombre peut \u00eatre \u00e9crit de diff\u00e9rentes mani\u00e8res, plus ou moins compliqu\u00e9es. Par exemple : \\[ 2 = \\cfrac{6}{3} = 20 \\times 10^{-1} = \\sqrt{4}= - \\left(-2\\right) = 2,0000 \\] Pour autant, ce qui nous int\u00e9resse en math\u00e9matiques c'est d'\u00e9tudier les propri\u00e9t\u00e9s de ce nombre, qui elles sont ind\u00e9pendantes de l'\u00e9criture de ce nombre. Nombres entiers naturels et relatifs D\u00e9finitions L'ensemble des entiers naturels , not\u00e9 \\(\\mathbb{N}\\) , est l'ensemble des nombres permettant de d\u00e9nombrer une collection d'objets, de personnes, etc, c'est-\u00e0-dire la suite naturelle \\(0~;~1~;~2~;~3~;~...\\) L'ensemble des entiers relatifs , not\u00e9 \\(\\mathbb{Z}\\) , est l'ensemble des entiers naturels et leurs oppos\u00e9s , c'est-\u00e0-dire la suite \\(...~;~-3~;~-2~;~-1~;~0~;~1~;~2~;~3~;~...\\) Info L'ensemble \\(\\mathbb{N}\\) poss\u00e8de un plus petit \u00e9l\u00e9ment, c'est \\(0\\) . Les nombres entiers naturels sont tous positifs ou nuls . Tous les entiers naturels sont aussi des entiers relatifs . Vocabulaire et notations Appartenance : On dit que \\(5\\) appartient \u00e0 \\(\\mathbb{N}\\) , et on note \\(5 \\in \\mathbb{N}\\) . De m\u00eame \\(-2\\) n'appartient pas \u00e0 \\(\\mathbb{N}\\) , et on note \\(-12 \\notin \\mathbb{N}\\) . Inclusion : Tous les \u00e9l\u00e9ments de \\(\\mathbb{N}\\) sont aussi des \u00e9l\u00e9ments de \\(\\mathbb{Z}\\) . On dit alors que \\(\\mathbb{N}\\) est un sous-ensemble de \\(\\mathbb{Z}\\) et on note alors \\(\\mathbb{N} \\subset \\mathbb{Z}\\) (qui se lit \\(\\mathbb{N}\\) est inclus dans \\(\\mathbb{Z}\\) ). Application : choix du bon symbole Exercice Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\) : \\(7 \\dots \\mathbb{N}\\) \\(-3 \\dots \\mathbb{N}\\) \\(-5 \\dots \\mathbb{Z}\\) \\(7 \\dots \\mathbb{Z}\\) \\(\\dfrac{1}{3} \\dots \\mathbb{N}\\) \\(\\sqrt{9} \\dots \\mathbb{N}\\) \\(-\\sqrt{25} \\dots \\mathbb{N}\\) \\(-\\sqrt{2} \\dots \\mathbb{Z}\\) \\(5 \\times 10^{3} \\dots \\mathbb{N}\\) \\(5 \\times 10 ^{-3} \\dots \\mathbb{Z}\\) \\(-4,2 \\dots \\mathbb{Z}\\) \\(3 \\times (1 - \\dfrac{1}{3}) \\dots \\mathbb{N}\\) Solution Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\) : \\(7 \\in \\mathbb{N}\\) \\(-3 \\notin \\mathbb{N}\\) \\(-5 \\in \\mathbb{Z}\\) \\(7 \\in \\mathbb{Z}\\) \\(\\dfrac{1}{3} \\notin \\mathbb{N}\\) \\(\\sqrt{9} \\in \\mathbb{N}\\) car \\(\\sqrt{9} = 3\\) \\(-\\sqrt{25} \\notin \\mathbb{N}\\) car \\(-\\sqrt{25} = -5\\) \\(-\\sqrt{2} \\notin \\mathbb{Z}\\) car \\(-\\sqrt{2} \\simeq -1,414...\\) \\(5 \\times 10^{3} \\in \\mathbb{N}\\) car \\(5 \\times 10^3 = 5 \\times 1000 = 5000\\) \\(5 \\times 10 ^{-3} \\notin \\mathbb{Z}\\) car \\(5 \\times 10 ^{-3} = 5 \\times 0,001 = 0,005\\) \\(-4,2 \\notin \\mathbb{Z}\\) \\(3 \\times (1 - \\dfrac{1}{3}) \\in \\mathbb{N}\\) car \\(3 \\times (1 - \\dfrac{1}{3}) = 3 - 1 = 2\\) (en d\u00e9veloppant) ou \\(3 \\times (1 - \\dfrac{1}{3}) = 3 \\times \\dfrac{2}{3} = 2\\) (en calculant entre parenth\u00e8ses). Nombres d\u00e9cimaux d\u00e9finition : Nombres d\u00e9cimaux Un nombre d\u00e9cimal est un nombre pouvant s'\u00e9crire sous la forme d'une fraction d\u00e9cimale , c'est \u00e0 dire sous la forme $$ \\dfrac{a}{10^n} $$ avec \\(a\\in \\mathbb{Z}\\) et \\(n\\in \\mathbb{N}\\) . L'ensemble des d\u00e9cimaux est not\u00e9 \\(\\mathbb{D}\\) . Application : Nombres d\u00e9cimaux et puissances de 10 Exercice Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\) . \\(4,37\\) \\(0,002\\) \\(-12\\) \\(\\dfrac{1}{3}\\) \\(\\dfrac{2}{5}\\) \\(\\sqrt{0,16}\\) \\(10^3\\) \\(10^{-5}\\) \\(-10^5\\) \\(\\dfrac{3.10^5}{10^7}\\) \\(\\dfrac{10^7}{3.10^5}\\) Solution Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\) . \\(4,37 = \\dfrac{437}{100} = \\dfrac{437}{10^{2}}\\) \\(0,002 = \\dfrac{2}{1~000} = \\dfrac{2}{10^{3}}\\) \\(-12 = \\dfrac{-12}{1} = \\dfrac{-12}{10^{0}}\\) ( car \\(a^0 =1\\) pour tout nombre \\(a \\neq 0\\) ). \\(\\dfrac{1}{3} \\notin \\mathbb{D}\\) car \\(\\dfrac{1}{3} \\simeq 0,333...\\) (La d\u00e9monstration r\u00e9elle sera donn\u00e9e plus tard dans l'ann\u00e9e) \\(\\dfrac{2}{5} = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\) \\(\\sqrt{0,16} = 0,4 = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\) \\(10^3 = \\dfrac{1~000}{1} = \\dfrac{1~000}{10^{0}}\\) \\(10^{-5} = \\dfrac{1}{10^5}\\) (par d\u00e9finition des exposants n\u00e9gatifs \\(a^{-n} = \\dfrac{1}{a^n}\\) pour tout \\(n \\in \\mathbb{Z}\\) si \\(a \\neq 0\\) ) \\(-10^5 = - 100~000 = \\dfrac{- 100~000}{1} = \\dfrac{- 100~000}{10^{0}}\\) $ \\(\\dfrac{3.10^5}{10^7} = \\dfrac{3}{10^2}\\) par division des puissances ( \\(\\dfrac{a^m}{a^n} = a^{m-n}\\) pour tout \\(m,n \\in \\Z\\) ) \\(\\dfrac{10^7}{3.10^5} = \\dfrac{10^2}{3} \\simeq 33,333.... \\notin \\mathbb{D}\\) Remarques Les entiers relatifs sont des d\u00e9cimaux, car si \\(k \\in \\mathbb{Z}\\) , on peut aussi \u00e9crire \\(k=\\dfrac{k}{1}=\\dfrac{k}{10^0}\\) . On a donc la propri\u00e9t\u00e9 \\(\\mathbb{Z} \\subset \\mathbb{D}\\) . Un nombre d\u00e9cimal poss\u00e8de une \u00e9criture d\u00e9cimale finie . Nombres rationnels D\u00e9finition : Nombres rationnels Un nombre rationnel est un nombre pouvant s'\u00e9crire sous la forme \\(\\dfrac{a}{b}\\) avec \\(a\\in \\mathbb{Z}\\) et \\(b\\in \\mathbb{N}^{*}\\) (c'est-\u00e0-dire \\(\\mathbb{N}\\) priv\u00e9 de \\(0\\) ). L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{Q}\\) . Remarque Un nombre d\u00e9cimal est par d\u00e9finition un nombre rationnel. Par d\u00e9finition de \\(\\mathbb{D}\\) et \\(\\mathbb{Q}\\) , on a la propri\u00e9t\u00e9 \\(\\mathbb{D} \\subset \\mathbb{Q}\\) . Propri\u00e9t\u00e9 : Caract\u00e9risation des rationnels non d\u00e9cimaux Tous les nombres rationnels ne poss\u00e8dent pas d'\u00e9criture d\u00e9cimale finie. En particulier, \\(\\dfrac{1}{3}\\) n'est pas d\u00e9cimal. Preuve La d\u00e9monstration de cette propri\u00e9t\u00e9 sera faite plus tard dans l'ann\u00e9e, dans le chapitre arithm\u00e9tique. Remarques Les nombres rationnels non d\u00e9cimaux poss\u00e8dent une \u00e9criture d\u00e9cimale infinie p\u00e9riodique , c'est-\u00e0-dire avec une s\u00e9rie de chiffres qui se r\u00e9p\u00e8tent \u00e0 l'infini. Par exemple \\(\\dfrac{1}{7} = 0,14285714285714...\\) (on constate la r\u00e9p\u00e9tition de la s\u00e9quence 142857}). R\u00e9ciproquement, si un nombre poss\u00e8de une \u00e9criture d\u00e9cimale infinie p\u00e9riodique, alors c'est un rationnel. M\u00e9thode : D\u00e9terminer une fraction \u00e9gale \u00e0 une \u00e9criture d\u00e9cimale infinie p\u00e9riodique On consid\u00e8re le nombre \\(a\\) dont l'\u00e9criture d\u00e9cimale est infinie p\u00e9riodique \\(a = 2,71347134...\\) . D\u00e9montrons que ce nombre est rationnel. Solution On constate que la partie r\u00e9p\u00e9titive des chiffres de \\(a\\) est \\(7134\\) , donc de taille 4. Donc \\(10^4 \\times a = 10~000\\times a = 27134,71347134...\\) . D'o\u00f9 \\(10~000\\times a - a = 27134,71347134... - 2,71347134... = 27134 -2 = 27~132\\) . Or \\(10~000\\times a - a = 9~999\\times a\\) . D'apr\u00e8s les deux lignes pr\u00e9c\u00e9dentes, on a alors \\(9~999\\times a = 27132\\) soit \\(a = \\dfrac{27~132}{9~999} = \\dfrac{9~044}{3~333}\\) . Donc \\(a\\) est bien un nombre rationnel puisqu'il s'\u00e9crit sous la forme d'une fraction. Application : Calculs avec les rationnels Exercice Dans chacun des cas suivants, calculer \u00e0 la main chacune des expressions suivantes : \\(A = \\dfrac {5}{7} - \\dfrac{3}{11}\\) \\(B = -\\dfrac {4}{3} + \\dfrac{7}{8}\\) \\(C = \\dfrac {3}{8} - \\dfrac{5}{12}\\) \\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9}\\) \\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right)\\) \\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64}\\) \\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21}\\) \\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}}\\) \\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}}\\) \\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3}\\) Solution \\(A = \\dfrac {5}{7} - \\dfrac{3}{11} = \\dfrac {5\\times 11}{7\\times 11} - \\dfrac{3\\times 7}{11\\times 7} = \\dfrac {55}{77} - \\dfrac{21}{77} = \\dfrac{34}{77}\\) \\(B = -\\dfrac {4}{3} + \\dfrac{7}{8} = -\\dfrac {4 \\times 8}{3 \\times 8} + \\dfrac{7 \\times 3}{8 \\times 3} = -\\dfrac {32}{24} + \\dfrac{21}{24} -\\dfrac {11}{24}\\) \\(C = \\dfrac {3}{8} - \\dfrac{5}{12} = \\dfrac {3\\times 3}{8\\times 3} - \\dfrac{5 \\times 2}{12 \\times 2} = \\dfrac {9}{24} - \\dfrac{10}{24} = - \\dfrac{1}{24}\\) \\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9} = \\dfrac{-6 \\times 8}{7 \\times 9} = \\dfrac{-2 \\times 3 \\times 8}{7 \\times 3 \\times 3} = -\\dfrac{16}{21}\\) N'oubliez pas de simplifier ! \\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right) = -\\dfrac {3 \\times 7}{2 \\times3} = - \\dfrac{7}{2}\\) \\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64} = \\dfrac{48 \\times 25}{35 \\times 64} = \\dfrac{2 \\times 3 \\times 8 \\times 5 \\times 5}{5\\times 7 \\times 2 \\times 4 \\times 8} = \\dfrac{15}{28}\\) \\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21} = \\dfrac {4}{7} \\times \\dfrac{21}{8} = \\dfrac{4 \\times 21}{7 \\times 8} = \\dfrac{ 4 \\times 3 \\times 7}{7 \\times 2 \\times 4} = \\dfrac{3}{2}\\) \\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}} = \\dfrac{3}{4}\\div\\dfrac{18}{20} = \\dfrac{3}{4}\\div\\dfrac{20}{18} = \\dfrac{3 \\times 4 \\times 5}{ 4 \\times 3 \\times 6} = \\dfrac{5}{6}\\) . \\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}} = 7 \\div \\dfrac{5}{3} = 7 \\times \\dfrac{3}{5} = \\dfrac{21}{5}\\) \\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3} = \\dfrac{7}{5} \\div 3 = \\dfrac{7}{5} \\times \\dfrac{1}{3} = \\dfrac{7}{15}\\) Nombres r\u00e9els D\u00e9finition : Nombres r\u00e9els Un {==nombre r\u00e9el est un nombre exprimant une longueur, ou l'oppos\u00e9 d'un nombre exprimant une longueur. L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{R}\\) . Remarques Un nombre r\u00e9el est un nombre dont le carr\u00e9 est positif ou nul . Par d\u00e9finition, tous les nombres rationnels sont des r\u00e9els. On a alors \\(\\mathbb{Q} \\subset \\mathbb{R}\\) . Certains nombres r\u00e9els ne sont pas rationnels. Par exemple \\(\\pi\\) n'est pas rationnel, tout comme \\(\\sqrt{2}\\) ( on le montrera en exercice ). Ces nombres sont dits irrationnels . Propri\u00e9t\u00e9 : Ensembles de nombres Des remarques pr\u00e9c\u00e9dentes, on \u00e0 la propri\u00e9t\u00e9 : \\[ \\mathbb{N} \\subset \\mathbb{Z} \\subset \\mathbb{D} \\subset \\mathbb{Q} \\subset \\mathbb{R} \\] Propri\u00e9t\u00e9 : Droite des r\u00e9els Tout nombre r\u00e9el est repr\u00e9sent\u00e9 par l'abscisse d'un point sur la droite num\u00e9rique ( appel\u00e9e aussi droite des r\u00e9els ). Application : Repr\u00e9senter sur la droite des r\u00e9els D\u00e9terminer l'abscisse de chacun des points de la droite ci-dessous : Repr\u00e9senter la droite des r\u00e9els ( unit\u00e9 : 5 ) et y placer le plus pr\u00e9cis\u00e9ment possible les nombres suivants : \\[ 3 ~;~ -0,75 ~;~ \\dfrac{5}{4} ~;~\\dfrac{-2}{5} ~;~ \\dfrac{7}{3} ~;~ \\sqrt{2} \\]","title":"Ensembles de nombres "},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#c01-01-ensembles-de-nombres","text":"La version pdf de ce cours est t\u00e9l\u00e9chargeable ici . (version 2021-2022)","title":"C01-01 : Ensembles de Nombres"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#activite-classer-des-nombres","text":"Dans la liste ci-dessus, deux \u00e9critures sont interdites. Lesquelles et pourquoi ? Classer les nombres restants en cinq groupes , en justifiant vos choix. Diff\u00e9rence entres propri\u00e9t\u00e9s et \u00e9critures Un nombre peut \u00eatre \u00e9crit de diff\u00e9rentes mani\u00e8res, plus ou moins compliqu\u00e9es. Par exemple : \\[ 2 = \\cfrac{6}{3} = 20 \\times 10^{-1} = \\sqrt{4}= - \\left(-2\\right) = 2,0000 \\] Pour autant, ce qui nous int\u00e9resse en math\u00e9matiques c'est d'\u00e9tudier les propri\u00e9t\u00e9s de ce nombre, qui elles sont ind\u00e9pendantes de l'\u00e9criture de ce nombre.","title":"Activit\u00e9 : Classer des nombres"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-entiers-naturels-et-relatifs","text":"D\u00e9finitions L'ensemble des entiers naturels , not\u00e9 \\(\\mathbb{N}\\) , est l'ensemble des nombres permettant de d\u00e9nombrer une collection d'objets, de personnes, etc, c'est-\u00e0-dire la suite naturelle \\(0~;~1~;~2~;~3~;~...\\) L'ensemble des entiers relatifs , not\u00e9 \\(\\mathbb{Z}\\) , est l'ensemble des entiers naturels et leurs oppos\u00e9s , c'est-\u00e0-dire la suite \\(...~;~-3~;~-2~;~-1~;~0~;~1~;~2~;~3~;~...\\) Info L'ensemble \\(\\mathbb{N}\\) poss\u00e8de un plus petit \u00e9l\u00e9ment, c'est \\(0\\) . Les nombres entiers naturels sont tous positifs ou nuls . Tous les entiers naturels sont aussi des entiers relatifs . Vocabulaire et notations Appartenance : On dit que \\(5\\) appartient \u00e0 \\(\\mathbb{N}\\) , et on note \\(5 \\in \\mathbb{N}\\) . De m\u00eame \\(-2\\) n'appartient pas \u00e0 \\(\\mathbb{N}\\) , et on note \\(-12 \\notin \\mathbb{N}\\) . Inclusion : Tous les \u00e9l\u00e9ments de \\(\\mathbb{N}\\) sont aussi des \u00e9l\u00e9ments de \\(\\mathbb{Z}\\) . On dit alors que \\(\\mathbb{N}\\) est un sous-ensemble de \\(\\mathbb{Z}\\) et on note alors \\(\\mathbb{N} \\subset \\mathbb{Z}\\) (qui se lit \\(\\mathbb{N}\\) est inclus dans \\(\\mathbb{Z}\\) ). Application : choix du bon symbole Exercice Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\) : \\(7 \\dots \\mathbb{N}\\) \\(-3 \\dots \\mathbb{N}\\) \\(-5 \\dots \\mathbb{Z}\\) \\(7 \\dots \\mathbb{Z}\\) \\(\\dfrac{1}{3} \\dots \\mathbb{N}\\) \\(\\sqrt{9} \\dots \\mathbb{N}\\) \\(-\\sqrt{25} \\dots \\mathbb{N}\\) \\(-\\sqrt{2} \\dots \\mathbb{Z}\\) \\(5 \\times 10^{3} \\dots \\mathbb{N}\\) \\(5 \\times 10 ^{-3} \\dots \\mathbb{Z}\\) \\(-4,2 \\dots \\mathbb{Z}\\) \\(3 \\times (1 - \\dfrac{1}{3}) \\dots \\mathbb{N}\\) Solution Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\) : \\(7 \\in \\mathbb{N}\\) \\(-3 \\notin \\mathbb{N}\\) \\(-5 \\in \\mathbb{Z}\\) \\(7 \\in \\mathbb{Z}\\) \\(\\dfrac{1}{3} \\notin \\mathbb{N}\\) \\(\\sqrt{9} \\in \\mathbb{N}\\) car \\(\\sqrt{9} = 3\\) \\(-\\sqrt{25} \\notin \\mathbb{N}\\) car \\(-\\sqrt{25} = -5\\) \\(-\\sqrt{2} \\notin \\mathbb{Z}\\) car \\(-\\sqrt{2} \\simeq -1,414...\\) \\(5 \\times 10^{3} \\in \\mathbb{N}\\) car \\(5 \\times 10^3 = 5 \\times 1000 = 5000\\) \\(5 \\times 10 ^{-3} \\notin \\mathbb{Z}\\) car \\(5 \\times 10 ^{-3} = 5 \\times 0,001 = 0,005\\) \\(-4,2 \\notin \\mathbb{Z}\\) \\(3 \\times (1 - \\dfrac{1}{3}) \\in \\mathbb{N}\\) car \\(3 \\times (1 - \\dfrac{1}{3}) = 3 - 1 = 2\\) (en d\u00e9veloppant) ou \\(3 \\times (1 - \\dfrac{1}{3}) = 3 \\times \\dfrac{2}{3} = 2\\) (en calculant entre parenth\u00e8ses).","title":"Nombres entiers naturels et relatifs"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-decimaux","text":"d\u00e9finition : Nombres d\u00e9cimaux Un nombre d\u00e9cimal est un nombre pouvant s'\u00e9crire sous la forme d'une fraction d\u00e9cimale , c'est \u00e0 dire sous la forme $$ \\dfrac{a}{10^n} $$ avec \\(a\\in \\mathbb{Z}\\) et \\(n\\in \\mathbb{N}\\) . L'ensemble des d\u00e9cimaux est not\u00e9 \\(\\mathbb{D}\\) . Application : Nombres d\u00e9cimaux et puissances de 10 Exercice Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\) . \\(4,37\\) \\(0,002\\) \\(-12\\) \\(\\dfrac{1}{3}\\) \\(\\dfrac{2}{5}\\) \\(\\sqrt{0,16}\\) \\(10^3\\) \\(10^{-5}\\) \\(-10^5\\) \\(\\dfrac{3.10^5}{10^7}\\) \\(\\dfrac{10^7}{3.10^5}\\) Solution Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\) . \\(4,37 = \\dfrac{437}{100} = \\dfrac{437}{10^{2}}\\) \\(0,002 = \\dfrac{2}{1~000} = \\dfrac{2}{10^{3}}\\) \\(-12 = \\dfrac{-12}{1} = \\dfrac{-12}{10^{0}}\\) ( car \\(a^0 =1\\) pour tout nombre \\(a \\neq 0\\) ). \\(\\dfrac{1}{3} \\notin \\mathbb{D}\\) car \\(\\dfrac{1}{3} \\simeq 0,333...\\) (La d\u00e9monstration r\u00e9elle sera donn\u00e9e plus tard dans l'ann\u00e9e) \\(\\dfrac{2}{5} = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\) \\(\\sqrt{0,16} = 0,4 = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\) \\(10^3 = \\dfrac{1~000}{1} = \\dfrac{1~000}{10^{0}}\\) \\(10^{-5} = \\dfrac{1}{10^5}\\) (par d\u00e9finition des exposants n\u00e9gatifs \\(a^{-n} = \\dfrac{1}{a^n}\\) pour tout \\(n \\in \\mathbb{Z}\\) si \\(a \\neq 0\\) ) \\(-10^5 = - 100~000 = \\dfrac{- 100~000}{1} = \\dfrac{- 100~000}{10^{0}}\\) $ \\(\\dfrac{3.10^5}{10^7} = \\dfrac{3}{10^2}\\) par division des puissances ( \\(\\dfrac{a^m}{a^n} = a^{m-n}\\) pour tout \\(m,n \\in \\Z\\) ) \\(\\dfrac{10^7}{3.10^5} = \\dfrac{10^2}{3} \\simeq 33,333.... \\notin \\mathbb{D}\\) Remarques Les entiers relatifs sont des d\u00e9cimaux, car si \\(k \\in \\mathbb{Z}\\) , on peut aussi \u00e9crire \\(k=\\dfrac{k}{1}=\\dfrac{k}{10^0}\\) . On a donc la propri\u00e9t\u00e9 \\(\\mathbb{Z} \\subset \\mathbb{D}\\) . Un nombre d\u00e9cimal poss\u00e8de une \u00e9criture d\u00e9cimale finie .","title":"Nombres d\u00e9cimaux"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-rationnels","text":"D\u00e9finition : Nombres rationnels Un nombre rationnel est un nombre pouvant s'\u00e9crire sous la forme \\(\\dfrac{a}{b}\\) avec \\(a\\in \\mathbb{Z}\\) et \\(b\\in \\mathbb{N}^{*}\\) (c'est-\u00e0-dire \\(\\mathbb{N}\\) priv\u00e9 de \\(0\\) ). L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{Q}\\) . Remarque Un nombre d\u00e9cimal est par d\u00e9finition un nombre rationnel. Par d\u00e9finition de \\(\\mathbb{D}\\) et \\(\\mathbb{Q}\\) , on a la propri\u00e9t\u00e9 \\(\\mathbb{D} \\subset \\mathbb{Q}\\) . Propri\u00e9t\u00e9 : Caract\u00e9risation des rationnels non d\u00e9cimaux Tous les nombres rationnels ne poss\u00e8dent pas d'\u00e9criture d\u00e9cimale finie. En particulier, \\(\\dfrac{1}{3}\\) n'est pas d\u00e9cimal. Preuve La d\u00e9monstration de cette propri\u00e9t\u00e9 sera faite plus tard dans l'ann\u00e9e, dans le chapitre arithm\u00e9tique. Remarques Les nombres rationnels non d\u00e9cimaux poss\u00e8dent une \u00e9criture d\u00e9cimale infinie p\u00e9riodique , c'est-\u00e0-dire avec une s\u00e9rie de chiffres qui se r\u00e9p\u00e8tent \u00e0 l'infini. Par exemple \\(\\dfrac{1}{7} = 0,14285714285714...\\) (on constate la r\u00e9p\u00e9tition de la s\u00e9quence 142857}). R\u00e9ciproquement, si un nombre poss\u00e8de une \u00e9criture d\u00e9cimale infinie p\u00e9riodique, alors c'est un rationnel. M\u00e9thode : D\u00e9terminer une fraction \u00e9gale \u00e0 une \u00e9criture d\u00e9cimale infinie p\u00e9riodique On consid\u00e8re le nombre \\(a\\) dont l'\u00e9criture d\u00e9cimale est infinie p\u00e9riodique \\(a = 2,71347134...\\) . D\u00e9montrons que ce nombre est rationnel. Solution On constate que la partie r\u00e9p\u00e9titive des chiffres de \\(a\\) est \\(7134\\) , donc de taille 4. Donc \\(10^4 \\times a = 10~000\\times a = 27134,71347134...\\) . D'o\u00f9 \\(10~000\\times a - a = 27134,71347134... - 2,71347134... = 27134 -2 = 27~132\\) . Or \\(10~000\\times a - a = 9~999\\times a\\) . D'apr\u00e8s les deux lignes pr\u00e9c\u00e9dentes, on a alors \\(9~999\\times a = 27132\\) soit \\(a = \\dfrac{27~132}{9~999} = \\dfrac{9~044}{3~333}\\) . Donc \\(a\\) est bien un nombre rationnel puisqu'il s'\u00e9crit sous la forme d'une fraction. Application : Calculs avec les rationnels Exercice Dans chacun des cas suivants, calculer \u00e0 la main chacune des expressions suivantes : \\(A = \\dfrac {5}{7} - \\dfrac{3}{11}\\) \\(B = -\\dfrac {4}{3} + \\dfrac{7}{8}\\) \\(C = \\dfrac {3}{8} - \\dfrac{5}{12}\\) \\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9}\\) \\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right)\\) \\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64}\\) \\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21}\\) \\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}}\\) \\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}}\\) \\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3}\\) Solution \\(A = \\dfrac {5}{7} - \\dfrac{3}{11} = \\dfrac {5\\times 11}{7\\times 11} - \\dfrac{3\\times 7}{11\\times 7} = \\dfrac {55}{77} - \\dfrac{21}{77} = \\dfrac{34}{77}\\) \\(B = -\\dfrac {4}{3} + \\dfrac{7}{8} = -\\dfrac {4 \\times 8}{3 \\times 8} + \\dfrac{7 \\times 3}{8 \\times 3} = -\\dfrac {32}{24} + \\dfrac{21}{24} -\\dfrac {11}{24}\\) \\(C = \\dfrac {3}{8} - \\dfrac{5}{12} = \\dfrac {3\\times 3}{8\\times 3} - \\dfrac{5 \\times 2}{12 \\times 2} = \\dfrac {9}{24} - \\dfrac{10}{24} = - \\dfrac{1}{24}\\) \\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9} = \\dfrac{-6 \\times 8}{7 \\times 9} = \\dfrac{-2 \\times 3 \\times 8}{7 \\times 3 \\times 3} = -\\dfrac{16}{21}\\) N'oubliez pas de simplifier ! \\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right) = -\\dfrac {3 \\times 7}{2 \\times3} = - \\dfrac{7}{2}\\) \\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64} = \\dfrac{48 \\times 25}{35 \\times 64} = \\dfrac{2 \\times 3 \\times 8 \\times 5 \\times 5}{5\\times 7 \\times 2 \\times 4 \\times 8} = \\dfrac{15}{28}\\) \\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21} = \\dfrac {4}{7} \\times \\dfrac{21}{8} = \\dfrac{4 \\times 21}{7 \\times 8} = \\dfrac{ 4 \\times 3 \\times 7}{7 \\times 2 \\times 4} = \\dfrac{3}{2}\\) \\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}} = \\dfrac{3}{4}\\div\\dfrac{18}{20} = \\dfrac{3}{4}\\div\\dfrac{20}{18} = \\dfrac{3 \\times 4 \\times 5}{ 4 \\times 3 \\times 6} = \\dfrac{5}{6}\\) . \\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}} = 7 \\div \\dfrac{5}{3} = 7 \\times \\dfrac{3}{5} = \\dfrac{21}{5}\\) \\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3} = \\dfrac{7}{5} \\div 3 = \\dfrac{7}{5} \\times \\dfrac{1}{3} = \\dfrac{7}{15}\\)","title":"Nombres rationnels"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-reels","text":"D\u00e9finition : Nombres r\u00e9els Un {==nombre r\u00e9el est un nombre exprimant une longueur, ou l'oppos\u00e9 d'un nombre exprimant une longueur. L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{R}\\) . Remarques Un nombre r\u00e9el est un nombre dont le carr\u00e9 est positif ou nul . Par d\u00e9finition, tous les nombres rationnels sont des r\u00e9els. On a alors \\(\\mathbb{Q} \\subset \\mathbb{R}\\) . Certains nombres r\u00e9els ne sont pas rationnels. Par exemple \\(\\pi\\) n'est pas rationnel, tout comme \\(\\sqrt{2}\\) ( on le montrera en exercice ). Ces nombres sont dits irrationnels . Propri\u00e9t\u00e9 : Ensembles de nombres Des remarques pr\u00e9c\u00e9dentes, on \u00e0 la propri\u00e9t\u00e9 : \\[ \\mathbb{N} \\subset \\mathbb{Z} \\subset \\mathbb{D} \\subset \\mathbb{Q} \\subset \\mathbb{R} \\] Propri\u00e9t\u00e9 : Droite des r\u00e9els Tout nombre r\u00e9el est repr\u00e9sent\u00e9 par l'abscisse d'un point sur la droite num\u00e9rique ( appel\u00e9e aussi droite des r\u00e9els ). Application : Repr\u00e9senter sur la droite des r\u00e9els D\u00e9terminer l'abscisse de chacun des points de la droite ci-dessous : Repr\u00e9senter la droite des r\u00e9els ( unit\u00e9 : 5 ) et y placer le plus pr\u00e9cis\u00e9ment possible les nombres suivants : \\[ 3 ~;~ -0,75 ~;~ \\dfrac{5}{4} ~;~\\dfrac{-2}{5} ~;~ \\dfrac{7}{3} ~;~ \\sqrt{2} \\]","title":"Nombres r\u00e9els"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/","text":"\\(C01-02\\) Intervalles Intervalles de nombres r\u00e9els D\u00e9finition Soient \\(a\\) et \\(b\\) deux nombres r\u00e9els tels que \\(a \\leqslant b\\) . On appelle intervalle ferm\u00e9 \\([a;b]\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a\\leqslant x\\leqslant b\\) . On appelle intervalle ouvert \\(]a;b[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a<x<b\\) . On d\u00e9finit de m\u00eame les intervalles \\([a;b[\\) et \\(]a;b]\\) . On note \\([a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x\\geqslant a\\) . On note \\(]a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x>a\\) . On d\u00e9finit de m\u00eame \\(]- \\infty;a]\\) et \\(]-\\infty;a[\\) . Remarques Le symbole \\(+\\infty\\) se lit \" Plus l'infini \". Le symbole \\(-\\infty\\) se lit \" Moins l'infini \". Repr\u00e9senter des intervalles Enonc\u00e9 Ecrire les in\u00e9galit\u00e9s suivantes sous la forme d'un intervalle, puis repr\u00e9senter cet intervalle sur la droite des r\u00e9els : \\(x\\leqslant 5\\) \\(x>-3\\) \\(2<x<5\\) \\(-4\\leqslant x \\leqslant -3\\) \\(-3\\leqslant x < 8\\) \\(-2< x \\leqslant 0\\) Solution \\(]-\\infty ; 5]\\) \\(]-3 ; +\\infty[\\) \\(]2;5[\\) \\([-4;-3]\\) \\([-3;8[\\) \\(]-2;0]\\) Appartient ou pas ? Enonc\u00e9 Compl\u00e9ter avec un symbole \\(\\in\\) ou \\(\\notin\\) : \\(-2 \\dots [-2; 1[\\) \\(-3 \\dots [-5; -1[\\) \\(-\\dfrac{26}{5} \\dots ]-5; -4[\\) \\(4 \\dots [-3; 4[\\) \\(2\\pi \\dots [7;8]\\) \\(0 \\dots \\mathbb{R}\\) \\(0 \\dots \\mathbb{R}^*\\) Solution \\(-2 \\in [-2; 1[\\) \\(-3 \\in [-5; -1[\\) \\(-\\dfrac{26}{5} \\notin ]-5; -4[\\) \\(4 \\notin [-3; 4[\\) \\(2\\pi \\notin [7;8]\\) \\(0 \\in \\mathbb{R}\\) \\(0 \\notin \\mathbb{R}^*\\) Travailler les repr\u00e9sentations Enonc\u00e9 Recopier et compl\u00e9ter : Solution A venir.... Unions et intersections d'intervalles D\u00e9finition Soient \\(I\\) et \\(J\\) deux intervalles. L\u2019intersection de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 la fois \u00e0 \\(I\\) \\textbf{ET} \u00e0 \\(J\\) . On note cet ensemble \\(I \\cap J\\) . La r\u00e9union de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 \\(I\\) \\textbf{OU} \u00e0 \\(J\\) . On note cet ensemble \\(I \\cup J\\) . Remarques La notation \\(\\cap\\) se lit \\og inter \\fg. D'o\u00f9 \\(I \\cap J\\) se lit \\og \\(I\\) inter \\(J\\) \\fg. La notation \\(\\cup\\) se lit \\og union \\fg. D'o\u00f9 \\(I \\cup J\\) se lit \\og \\(I\\) union \\(J\\) \\fg. Parfois, il n'y a aucun \u00e9l\u00e9ment qui appartiennent \u00e0 la fois \u00e0 \\(I\\) et \\(J\\) . L'intersection est donc \\textbf{vide}, et on note \\(\\emptyset\\) l'ensemble vide. Dans ce cas \\(I \\cap J = \\emptyset\\) . Exemple On consid\u00e8re les intervalles \\(I=[3;7]\\) et \\(J=]2; 5[\\) . L'ensemble \\(I\\cap J\\) est \\([3;5[\\) . L'ensemble \\(I\\cup J\\) est \\(]2;7]\\) . Utiliser les notations \\(\\cap\\) et \\(\\cup\\) Enonc\u00e9 R\\'eduire sous la forme d'un seul intervalle si possible et repr\u00e9senter sur la droite des r\u00e9els : \\(]-3;7] \\cap ]-2;8[\\) \\(]-4;3] \\cap [-2;3,5[\\) \\([-7;4[ \\cup ]-3;5]\\) \\(]-3;5] \\cup [-1;2]\\) \\([-6;6]\\cup[-2;2]\\) \\(]-\\infty;2[ \\cap ]1;+\\infty[\\) \\(]-\\infty;-1] \\cup ]2;6]\\) \\([-5;3] \\cap [6;8]\\) Solution \\(]-3;7] \\cap ]-2;8[ = ]-2;7]\\) \\(]-4;3] \\cap [-2;3,5[ = [-2;3]\\) \\([-7;4[ \\cup ]-3;5] = [-7;5]\\) \\(]-3;5] \\cup [-1;2] = ]-3;5]\\) \\([-6;6]\\cup[-2;2] = [-6;6]\\) \\(]-\\infty;2[ \\cap ]1;+\\infty[ = ]1;2[\\) \\(]-\\infty;-1] \\cup ]2;6] = ]-\\infty;-1] \\cup ]2;6]\\) \\([-5;3] \\cap [6;8] = \\emptyset\\) Ensemble vide L'ensemble vide est not\u00e9 \\(\\emptyset\\) . Travailler les in\u00e9quations et les intervalles Enonc\u00e9 Compl\u00e9ter en s'aidant de la m\u00e9thode donn\u00e9e dans l'exemple ci-dessous. Exemple On a les \u00e9quivalences : \\(x \\in [1;2]\\) \\(\\Longleftrightarrow\\) \\(1 \\leqslant x \\leqslant 2\\) par d\u00e9finition \\(\\Longleftrightarrow\\) \\(3 \\leqslant 3x \\leqslant 6\\) en multipliant chaque membre de l'in\u00e9galit\u00e9 par \\(3\\) \\(\\Longleftrightarrow\\) \\(3x \\in [3;6]\\) par d\u00e9finition d'o\u00f9 \\(x \\in [1;2]\\) si et seulement si \\(3x \\in [3;6]\\) \\(x \\in [7;20]\\) si et seulement si \\(7x \\in \\dots\\) \\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in \\dots\\) \\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in \\dots\\) \\(x \\in \\dots\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\) \\(x \\in \\dots\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\) \\(x \\in \\dots\\) si et seulement si \\(4x+3 \\in [-6;5]\\) Solution \\(x \\in [7;20]\\) si et seulement si \\(7x \\in [49;140]\\) \\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in ]3;7]\\) \\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in [2;6]\\) \\(x \\in ]-3 ; +\\infty[\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\) \\(x \\in ]-\\infty ; -2]\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\) \\(x \\in [-\\dfrac{9}{4};2]\\) si et seulement si \\(4x+3 \\in [-6;5]\\) Repr\u00e9senter sous la forme d'intervalles Enonc\u00e9 \\(y>-3\\) et \\(y<4\\) \\(y>-3\\) ou \\(y<4\\) \\(y \\leqslant \\dfrac{1}{3}\\) et \\(y \\leqslant \\dfrac{1}{2}\\) \\(y \\leqslant \\dfrac{1}{3}\\) ou \\(y \\leqslant \\dfrac{1}{2}\\) Solution A venir R\u00e9solutions d'\u00e9quations du premier degr\u00e9 Enonc\u00e9 R\u00e9soudre dans \\(\\mathbb{R}\\) chacune des \u00e9quations suivantes : \\(3x -6 =0\\) \\(3x -4 = 0\\) \\(-3x +64 = 19\\) \\(-2(x+5)=-8\\) \\(3x -\\pi=0\\) \\(\\dfrac{x-8}{3}=-4\\) Lesquelles de ces 4 \u00e9quations sont r\u00e9solubles dans \\(\\mathbb{Z}\\) ? Dans \\(\\mathbb{Q}\\) ? Solution A venir R\u00e9solutions d'in\u00e9quations du premier degr\u00e9 Enonc\u00e9 R\u00e9soudre les in\u00e9quations suivantes et pr\u00e9senter le r\u00e9sultat sous la forme d'un intervalle : \\(3x -6 >0\\) \\(3x -4 \\leqslant 0\\) \\(-3x +64 < 19\\)","title":"Intervalles"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#c01-02-intervalles","text":"","title":"\\(C01-02\\) Intervalles"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#intervalles-de-nombres-reels","text":"D\u00e9finition Soient \\(a\\) et \\(b\\) deux nombres r\u00e9els tels que \\(a \\leqslant b\\) . On appelle intervalle ferm\u00e9 \\([a;b]\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a\\leqslant x\\leqslant b\\) . On appelle intervalle ouvert \\(]a;b[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a<x<b\\) . On d\u00e9finit de m\u00eame les intervalles \\([a;b[\\) et \\(]a;b]\\) . On note \\([a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x\\geqslant a\\) . On note \\(]a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x>a\\) . On d\u00e9finit de m\u00eame \\(]- \\infty;a]\\) et \\(]-\\infty;a[\\) . Remarques Le symbole \\(+\\infty\\) se lit \" Plus l'infini \". Le symbole \\(-\\infty\\) se lit \" Moins l'infini \". Repr\u00e9senter des intervalles Enonc\u00e9 Ecrire les in\u00e9galit\u00e9s suivantes sous la forme d'un intervalle, puis repr\u00e9senter cet intervalle sur la droite des r\u00e9els : \\(x\\leqslant 5\\) \\(x>-3\\) \\(2<x<5\\) \\(-4\\leqslant x \\leqslant -3\\) \\(-3\\leqslant x < 8\\) \\(-2< x \\leqslant 0\\) Solution \\(]-\\infty ; 5]\\) \\(]-3 ; +\\infty[\\) \\(]2;5[\\) \\([-4;-3]\\) \\([-3;8[\\) \\(]-2;0]\\) Appartient ou pas ? Enonc\u00e9 Compl\u00e9ter avec un symbole \\(\\in\\) ou \\(\\notin\\) : \\(-2 \\dots [-2; 1[\\) \\(-3 \\dots [-5; -1[\\) \\(-\\dfrac{26}{5} \\dots ]-5; -4[\\) \\(4 \\dots [-3; 4[\\) \\(2\\pi \\dots [7;8]\\) \\(0 \\dots \\mathbb{R}\\) \\(0 \\dots \\mathbb{R}^*\\) Solution \\(-2 \\in [-2; 1[\\) \\(-3 \\in [-5; -1[\\) \\(-\\dfrac{26}{5} \\notin ]-5; -4[\\) \\(4 \\notin [-3; 4[\\) \\(2\\pi \\notin [7;8]\\) \\(0 \\in \\mathbb{R}\\) \\(0 \\notin \\mathbb{R}^*\\) Travailler les repr\u00e9sentations Enonc\u00e9 Recopier et compl\u00e9ter : Solution A venir....","title":"Intervalles de nombres r\u00e9els"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#unions-et-intersections-dintervalles","text":"D\u00e9finition Soient \\(I\\) et \\(J\\) deux intervalles. L\u2019intersection de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 la fois \u00e0 \\(I\\) \\textbf{ET} \u00e0 \\(J\\) . On note cet ensemble \\(I \\cap J\\) . La r\u00e9union de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 \\(I\\) \\textbf{OU} \u00e0 \\(J\\) . On note cet ensemble \\(I \\cup J\\) . Remarques La notation \\(\\cap\\) se lit \\og inter \\fg. D'o\u00f9 \\(I \\cap J\\) se lit \\og \\(I\\) inter \\(J\\) \\fg. La notation \\(\\cup\\) se lit \\og union \\fg. D'o\u00f9 \\(I \\cup J\\) se lit \\og \\(I\\) union \\(J\\) \\fg. Parfois, il n'y a aucun \u00e9l\u00e9ment qui appartiennent \u00e0 la fois \u00e0 \\(I\\) et \\(J\\) . L'intersection est donc \\textbf{vide}, et on note \\(\\emptyset\\) l'ensemble vide. Dans ce cas \\(I \\cap J = \\emptyset\\) . Exemple On consid\u00e8re les intervalles \\(I=[3;7]\\) et \\(J=]2; 5[\\) . L'ensemble \\(I\\cap J\\) est \\([3;5[\\) . L'ensemble \\(I\\cup J\\) est \\(]2;7]\\) . Utiliser les notations \\(\\cap\\) et \\(\\cup\\) Enonc\u00e9 R\\'eduire sous la forme d'un seul intervalle si possible et repr\u00e9senter sur la droite des r\u00e9els : \\(]-3;7] \\cap ]-2;8[\\) \\(]-4;3] \\cap [-2;3,5[\\) \\([-7;4[ \\cup ]-3;5]\\) \\(]-3;5] \\cup [-1;2]\\) \\([-6;6]\\cup[-2;2]\\) \\(]-\\infty;2[ \\cap ]1;+\\infty[\\) \\(]-\\infty;-1] \\cup ]2;6]\\) \\([-5;3] \\cap [6;8]\\) Solution \\(]-3;7] \\cap ]-2;8[ = ]-2;7]\\) \\(]-4;3] \\cap [-2;3,5[ = [-2;3]\\) \\([-7;4[ \\cup ]-3;5] = [-7;5]\\) \\(]-3;5] \\cup [-1;2] = ]-3;5]\\) \\([-6;6]\\cup[-2;2] = [-6;6]\\) \\(]-\\infty;2[ \\cap ]1;+\\infty[ = ]1;2[\\) \\(]-\\infty;-1] \\cup ]2;6] = ]-\\infty;-1] \\cup ]2;6]\\) \\([-5;3] \\cap [6;8] = \\emptyset\\) Ensemble vide L'ensemble vide est not\u00e9 \\(\\emptyset\\) . Travailler les in\u00e9quations et les intervalles Enonc\u00e9 Compl\u00e9ter en s'aidant de la m\u00e9thode donn\u00e9e dans l'exemple ci-dessous. Exemple On a les \u00e9quivalences : \\(x \\in [1;2]\\) \\(\\Longleftrightarrow\\) \\(1 \\leqslant x \\leqslant 2\\) par d\u00e9finition \\(\\Longleftrightarrow\\) \\(3 \\leqslant 3x \\leqslant 6\\) en multipliant chaque membre de l'in\u00e9galit\u00e9 par \\(3\\) \\(\\Longleftrightarrow\\) \\(3x \\in [3;6]\\) par d\u00e9finition d'o\u00f9 \\(x \\in [1;2]\\) si et seulement si \\(3x \\in [3;6]\\) \\(x \\in [7;20]\\) si et seulement si \\(7x \\in \\dots\\) \\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in \\dots\\) \\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in \\dots\\) \\(x \\in \\dots\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\) \\(x \\in \\dots\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\) \\(x \\in \\dots\\) si et seulement si \\(4x+3 \\in [-6;5]\\) Solution \\(x \\in [7;20]\\) si et seulement si \\(7x \\in [49;140]\\) \\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in ]3;7]\\) \\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in [2;6]\\) \\(x \\in ]-3 ; +\\infty[\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\) \\(x \\in ]-\\infty ; -2]\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\) \\(x \\in [-\\dfrac{9}{4};2]\\) si et seulement si \\(4x+3 \\in [-6;5]\\) Repr\u00e9senter sous la forme d'intervalles Enonc\u00e9 \\(y>-3\\) et \\(y<4\\) \\(y>-3\\) ou \\(y<4\\) \\(y \\leqslant \\dfrac{1}{3}\\) et \\(y \\leqslant \\dfrac{1}{2}\\) \\(y \\leqslant \\dfrac{1}{3}\\) ou \\(y \\leqslant \\dfrac{1}{2}\\) Solution A venir R\u00e9solutions d'\u00e9quations du premier degr\u00e9 Enonc\u00e9 R\u00e9soudre dans \\(\\mathbb{R}\\) chacune des \u00e9quations suivantes : \\(3x -6 =0\\) \\(3x -4 = 0\\) \\(-3x +64 = 19\\) \\(-2(x+5)=-8\\) \\(3x -\\pi=0\\) \\(\\dfrac{x-8}{3}=-4\\) Lesquelles de ces 4 \u00e9quations sont r\u00e9solubles dans \\(\\mathbb{Z}\\) ? Dans \\(\\mathbb{Q}\\) ? Solution A venir R\u00e9solutions d'in\u00e9quations du premier degr\u00e9 Enonc\u00e9 R\u00e9soudre les in\u00e9quations suivantes et pr\u00e9senter le r\u00e9sultat sous la forme d'un intervalle : \\(3x -6 >0\\) \\(3x -4 \\leqslant 0\\) \\(-3x +64 < 19\\)","title":"Unions et intersections d'intervalles"},{"location":"Miscellanees/mkdocs_cmd/","text":"Syntaxe des documents MkDocs Pour la documentation compl\u00e8te : mkdocs.org . Documentation sur materials : materials reference La documentation sur le plugin macro : macro plugin Bases de la syntaxe Markdown Le langage Mardown est en langage de balise simple, utilis\u00e9 entre autres dans les notebooks Jupyter, et pour lequel les r\u00e8gles d'utilisation sont simples : La mise en gras se fait par en encadrant par 2 \u00e9toiles : **Gras** -> Gras . La mise en italique se fait par en encadrant par 1 \u00e9toile : *Italique* -> Italique . Les titres de diff\u00e9rents niveaux sont obtenus en utilisant un certain nombre de di\u00e8se # Les images sont ins\u00e9r\u00e9es par la commande ![Alt text](/path/to/img.jpg \"Optional title\") Un texte sans fortmatage est obtenu en encadrant par des guillemets invvers\u00e9s ` : '**Truc**' n'est pas mis en forme Pour utiliser un caract\u00e8re * simple, il faut l'\u00e9chapper avec un backslash \\, comme pour tous les autres caract\u00e8re sp\u00e9ciaux. Les citations Pour ins\u00e9rer une citation, on utilise le chevron > devant chaque ligne de code : > Voici une citation > sur plusieurs lignes. donnera Voici une citation sur plusieurs lignes. A noter que si on ne saute pas de ligne, MkDocs formate selon la loingueur de la ligne courante : Pour ins\u00e9rer une citation, on utilise le chevron > devant chaque ligne de code : > Voici une citation > sur une seule ligne. donnera Voici une citation sur une seule ligne. Les hyperliens Le fonctionnement des hyperlmens est particulier \u00e0 MkDocs, donc ce qui suit n'est pas toujours valable dans n'importe quel environnement lisant du MarkDown . Le principe de base : [texte de remplacement](adresse du document) Il est possible de r\u00e9f\u00e9rer \u00e0 des documents internes en utilisant leur chemin relatif. Please see the [project license](../about/license.md) for further details. Il est possible de faire une r\u00e9f\u00e9rence \u00e0 une partie sp\u00e9cifique d'un document par l'interm\u00e9diaire d'ID g\u00e9n\u00e9r\u00e9es automatiquement par MkDocs pour chaque header (\u26a0\ufe0f les noms sont en minuscules et les caract\u00e8res sp\u00e9ciaux - y compris les espaces, sont remplac\u00e9 par des tirets. lers tirets doubles sont alors r\u00e9duits \u00e0 un simple tiret). Ainsi le lien [ceci](mkdocs_cmd.md#syntaxe-des-documents-mkdocs) renvoie ici renvoie vers le header de cette partie. Modules de MkDocs-Material Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Test code 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] supprime et insere et Surligne Keys Ctrl Alt Del Latex \\[ \\dfrac{3}{4x} \\] The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) . Admonitions (?) Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note On teste l'auto deploiement","title":"MkDocs"},{"location":"Miscellanees/mkdocs_cmd/#syntaxe-des-documents-mkdocs","text":"Pour la documentation compl\u00e8te : mkdocs.org . Documentation sur materials : materials reference La documentation sur le plugin macro : macro plugin","title":"Syntaxe des documents MkDocs"},{"location":"Miscellanees/mkdocs_cmd/#bases-de-la-syntaxe-markdown","text":"Le langage Mardown est en langage de balise simple, utilis\u00e9 entre autres dans les notebooks Jupyter, et pour lequel les r\u00e8gles d'utilisation sont simples : La mise en gras se fait par en encadrant par 2 \u00e9toiles : **Gras** -> Gras . La mise en italique se fait par en encadrant par 1 \u00e9toile : *Italique* -> Italique . Les titres de diff\u00e9rents niveaux sont obtenus en utilisant un certain nombre de di\u00e8se # Les images sont ins\u00e9r\u00e9es par la commande ![Alt text](/path/to/img.jpg \"Optional title\") Un texte sans fortmatage est obtenu en encadrant par des guillemets invvers\u00e9s ` : '**Truc**' n'est pas mis en forme Pour utiliser un caract\u00e8re * simple, il faut l'\u00e9chapper avec un backslash \\, comme pour tous les autres caract\u00e8re sp\u00e9ciaux.","title":"Bases de la syntaxe Markdown"},{"location":"Miscellanees/mkdocs_cmd/#les-citations","text":"Pour ins\u00e9rer une citation, on utilise le chevron > devant chaque ligne de code : > Voici une citation > sur plusieurs lignes. donnera Voici une citation sur plusieurs lignes. A noter que si on ne saute pas de ligne, MkDocs formate selon la loingueur de la ligne courante : Pour ins\u00e9rer une citation, on utilise le chevron > devant chaque ligne de code : > Voici une citation > sur une seule ligne. donnera Voici une citation sur une seule ligne.","title":"Les citations"},{"location":"Miscellanees/mkdocs_cmd/#les-hyperliens","text":"Le fonctionnement des hyperlmens est particulier \u00e0 MkDocs, donc ce qui suit n'est pas toujours valable dans n'importe quel environnement lisant du MarkDown . Le principe de base : [texte de remplacement](adresse du document) Il est possible de r\u00e9f\u00e9rer \u00e0 des documents internes en utilisant leur chemin relatif. Please see the [project license](../about/license.md) for further details. Il est possible de faire une r\u00e9f\u00e9rence \u00e0 une partie sp\u00e9cifique d'un document par l'interm\u00e9diaire d'ID g\u00e9n\u00e9r\u00e9es automatiquement par MkDocs pour chaque header (\u26a0\ufe0f les noms sont en minuscules et les caract\u00e8res sp\u00e9ciaux - y compris les espaces, sont remplac\u00e9 par des tirets. lers tirets doubles sont alors r\u00e9duits \u00e0 un simple tiret). Ainsi le lien [ceci](mkdocs_cmd.md#syntaxe-des-documents-mkdocs) renvoie ici renvoie vers le header de cette partie.","title":"Les hyperliens"},{"location":"Miscellanees/mkdocs_cmd/#modules-de-mkdocs-material","text":"","title":"Modules de MkDocs-Material"},{"location":"Miscellanees/mkdocs_cmd/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"Miscellanees/mkdocs_cmd/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Miscellanees/mkdocs_cmd/#test-code","text":"1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] supprime et insere et Surligne","title":"Test code"},{"location":"Miscellanees/mkdocs_cmd/#keys","text":"Ctrl Alt Del","title":"Keys"},{"location":"Miscellanees/mkdocs_cmd/#latex","text":"\\[ \\dfrac{3}{4x} \\] The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) .","title":"Latex"},{"location":"Miscellanees/mkdocs_cmd/#admonitions","text":"Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note On teste l'auto deploiement","title":"Admonitions (?)"},{"location":"Miscellanees/Manim/BasesManim/","text":"Bases de Manim Installation au Lyc\u00e9e Le plus simple : Thonny T\u00e9l\u00e9charger archive ffmpeg , puis d\u00e9compresser. faire une sauvegarde de l'actuel path : PATH > sauvePath.txt Ajouter au path le chemin vers ffmpeg: PATH %PATH%;P:\\Documents\\ffmpeg\\bin","title":"Manim"},{"location":"Miscellanees/Manim/BasesManim/#bases-de-manim","text":"","title":"Bases de Manim"},{"location":"Miscellanees/Manim/BasesManim/#installation-au-lycee","text":"Le plus simple : Thonny T\u00e9l\u00e9charger archive ffmpeg , puis d\u00e9compresser. faire une sauvegarde de l'actuel path : PATH > sauvePath.txt Ajouter au path le chemin vers ffmpeg: PATH %PATH%;P:\\Documents\\ffmpeg\\bin","title":"Installation au Lyc\u00e9e"},{"location":"Miscellanees/Pygame/Base_pygame/","text":"Bases de Pygame Ce cours est tr\u00e8s largement et assez honteusement copi\u00e9 sur celui-ci . Merci \u00e0 vous ! En cas de soucis de droits, n'h\u00e9sitez pas \u00e0 me contacter par le lien situ\u00e9 en bas de page ! Importer Pygame et ses constantes Pygame est une biblioth\u00e8que, et en tant que telle, elle est construite \u00e0 partir de plusieurs modules. Les noms de ces modules sont : display mixer draw event image mouse time Il existe alors plusieurs possibilit\u00e9s pour importe pygame Importation compl\u00e8te : import pygame La totalit\u00e9 de la biblioth\u00e8que est alors import\u00e9e, et pour utiliser la fonction update du module display on devra alors utiliser pygame.display.update() . Importation partielle des modules n\u00e9cessaires : from pygame import display Seul le module display est alors import\u00e9, et pour utiliser la fonction update de ce module, on devra alors utiliser display.update() . Importation compl\u00e8te avec import des constantes directement dans l'espace de nommage (conseill\u00e9e) : import pygame from pygame.locals import * Dans ce cas, pour utiliser la constante repr\u00e9sentant la touche espace, au lieu d'utiliser pygame.locals.K_SPACE , on utilisera simplement K_SPACE . Cr\u00e9ation d'une fen\u00eatre graphique et boucle d'\u00e9v\u00e8nements Le projet Commen\u00e7ons un petit programme qui nous am\u00e8nera \u00e0 d\u00e9placer un personnage de gauche \u00e0 droite sur un fond d'\u00e9cran, pendant que des balles tombent depuis le haut de l'\u00e9cran \u00e0 diff\u00e9rentes vitesses. Le jeu consistera \u00e0 \u00e9viter que le personnage entre en collision avec les balles, et s'arr\u00eatera d\u00e8s qu'une collision aura lieu. Le premier point est d'afficher une fen\u00eatre graphique d'une dimension donn\u00e9e : \\(640 \\times 480~ pixels^2\\) (oui, en bon prof de maths, je respecte \u00e0 minima les unit\u00e9s...). On utilise le script suivant, dans un fichier nomm\u00e9 dodgeTheBall.py : 1 2 3 4 5 6 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) Analysons le code Dans les deux premi\u00e8res lignes, nous importons pygame en totalit\u00e9 ainsi que les constantes sp\u00e9cifiques dans l'espace de nommage courant. En ligne 4, nous initialisons tous les modules de pygame . En ligne 6, nous appelons ensuite la fonction set_mode() contenue dans le module display de pygame , qui prend en argument un tuple contenant la largeur et la hauteur de la fen\u00eatre voulue (attention, c'est bien un tuple ! pygame.display.set_mode(640, 480) ne fonctionne pas !). Y'a un bug ! La fen\u00eatre reste bloqu\u00e9e et ne se ferme pas sauf si on force l'arr\u00eat du script ! Effectivement, on se retrouve bloqu\u00e9... Il faut rajouter \u00e0 notre code une instruction suppl\u00e9mentaire pour que la fen\u00ebtre se ferme : 1 2 3 4 5 6 7 8 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) pygame . quit () Encore un Et oui ! Notre fen\u00eatre s'ouvre mais se ferme imm\u00e9diatement ! Or nous aimerions qu'elle ne se ferme que sur demande explicite de l'utilisateur, par exemple par un clic sur la croix. C'est l\u00e0 qu'intervient la notion de boucle d'\u00e9v\u00e8nements . Dans un programme classique, en programmation imp\u00e9rative , le programme se d\u00e9roule plus ou moins lin\u00e9airement de la premi\u00e8re ligne \u00e0 la derni\u00e8re. Mais lorsqu'on utilise des interfaces graphiques , on ne peut pr\u00e9voir \u00e0 l'avance le comportement de l'utilisateur, et donc suivre un chemin clairement d\u00e9fini \u00e0 l'avance. C'est pour cette raison qu'on utilise plut\u00f4t le paradigme de la programmation \u00e9v\u00e9nementielle , c'est-\u00e0-dire un paradigme o\u00f9 on pr\u00e9voira l'action de l'utilisateur, mais pas dans un ordre pr\u00e9cis. Chaque action pr\u00e9vue dans la boucle d'\u00e9v\u00e8nements aura un impact pr\u00e9cis. Dans notre cas, nous souhaiterions que la fen\u00eatre reste ouverte tant que l'utilisateur n'a pas exprim\u00e9 le d\u00e9sir de la fermer, soit par l'interm\u00e9diaire de la croix, soit par l'interm\u00e9diaire de la combinaison de touches Alt + F4 . Notion d'\u00e9v\u00e8nements Dans la construction d'interfaces graphiques, on utilise souvent la notion d' \u00e9v\u00e8nements . Un \u00e9v\u00e8nement correspond \u00e0 : un d\u00e9placement de la souris ; le survol d'une zone sp\u00e9cifique de l'\u00e9cran par le pointeur de la souris ; un appui sur une ou plusieurs touches du clavier : le rel\u00e2chement d'une touche de clavier ; un appui ou rel\u00e2chement d'un bouton de la souris ; un \u00e9v\u00e9nement sp\u00e9cifique pr\u00e9vu dans le programme ; un changement de luminosit\u00e9 devant un capteur vid\u00e9o ; ... Ces \u00e9v\u00e8nements sont stock\u00e9s \u00e0 leur apparition dans une file (fifo) de dimension limit\u00e9e , nettoy\u00e9e r\u00e9guli\u00e8rement de ses \u00e9v\u00e8nements les plus anciens. Dans pygame , les \u00e9v\u00e8nements sont des constantes, et celui qui nous int\u00e9resse est l'\u00e9v\u00e8nement QUIT . Nous allons donc parcourir la liste des \u00e9v\u00e8nements pour ensuite pouvoir quitter la fen\u00eatre si celui-ci est exprim\u00e9 : 1 2 3 4 5 6 7 8 9 10 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) for event in pygame . event . get () : if event == QUIT : pygame . quit () L'arnaque : \u00e7a ne marche pas ! On retombe sur notre probl\u00e8me pr\u00e9c\u00e9dent : la fen\u00eatre ne se ferme plus... C'est parce que la file d'\u00e9v\u00e8nements se construit et se nettoie tr\u00e8s rapidement ! Nous n'avons pas le temps de cliquer sur la croix que d\u00e9j\u00e0 le parcours par la boucle for est termin\u00e9 ! Et donc dans ce cas on ne passe jamais par l'instruction pygame.quit() . Il va donc falloir r\u00e9p\u00e9ter la lecture d'\u00e9v\u00e8nements pour pouvoir d\u00e9tecter quand l'utilisateur souhaite fermer sa fen\u00eatre. Boucle d'\u00e9v\u00e8nements Une boucle d'\u00e9v\u00e8nements est une boucle qui se r\u00e9p\u00e8te tant qu'un \u00e9v\u00e8nement pr\u00e9cis ne s'est pas produit. A chaque tour de boucle on va lire la totalit\u00e9 des \u00e9v\u00e8nements enregistr\u00e9s dans la file, et on d\u00e9clenchera la sortie de cette boucle si l'\u00e9v\u00e8nement est trouv\u00e9. Pour notre exemple, nous allons cr\u00e9er une boucle while d\u00e9pendant d'une variable continuer initialis\u00e9e \u00e0 True , que nous basculerons \u00e0 False lorsque l'\u00e9v\u00e8nement QUIT est intercept\u00e9 : Un code fonctionnel 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . quit () Enfin ! Notre fen\u00eatre fonctionne ! Ajout d'image de Fond Image de fond Notre fond noir est un peu d\u00e9primant. Mettons un peu de verdure gr\u00e2ce \u00e0 l'image suivante : T\u00e9l\u00e9chargez cette image sous le nom background.jpg puis ajoutez la ligne suivante en ligne 7 : 7 fond = pygame . image . load ( \"background.jpg\" ) . convert () Bon : mauvaise nouvelle, ce ne sera pas suffisant ! La variable fond n'est qu'une r\u00e9f\u00e9rence \u00e0 une Surface de pygame , retourn\u00e9e par la fonction load() . Une Surface est une classe d'objets d\u00e9finie dans pygame qui poss\u00e8de de nombreux attributs et m\u00e9thodes (cf. la doc ). La m\u00e9thode convert() des objets Surface sert \u00e0 convertir l'image source au format utilis\u00e9 par pygame . Le principe d'affichage de la SDL (la sous-couche logicielle g\u00e9rant les images, le son, etc...) est \u00e0 conna\u00eetre pour bien afficher ses images : fenetre est une surface vide, sur laquelle on va \"coller\", ou \"empiler\" les autres images. Le fond doit donc \u00eatre empil\u00e9 sur la surface vide de la fen\u00eatre , gr\u00e2ce \u00e0 la m\u00e9thode blit() . Cette m\u00e9thode prend une Surface en argument ainsi qu'un tuple repr\u00e9sentant les coordonn\u00e9es du coin sup\u00e9rieur gauche auquel sera coll\u00e9 la Surface argument par rapport \u00e0 la Surface appelante. Syst\u00e8me de coordonn\u00e9es On peut donner comme exemples de tuple de coordonn\u00e9es ceux de l'image suivante : On pourrait donc utiliser le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . quit () Mais pourquoi \u00e7a n'affiche rien ! Parce que quand on blit une Surface , pygame calcule ce qu'il faut mais ne l'ex\u00e9cute pas r\u00e9ellement. Il faut forcer le rafra\u00eechissement de l'\u00e9cran pour y parvenir, par l'interm\u00e9diaire de la commande pygame.display.update() . Comme nous comptons bien faire bouger un personnage sur l'\u00e9cran, et que les mouvements de celui-ci d\u00e9pendront de la boucle d'\u00e9v\u00e8nements, autant mettre imm\u00e9diatement cette commande en fin de boucle, pour que l'image soit syst\u00e9matiquement mise \u00e0 jour. : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Et voil\u00e0 ! 15 lignes de code, et nous voil\u00e0 avec une fen\u00eatre graphique digne de ce nom ! Ajout du sprite du joueur Les sprites Explications Ajoutons maintenant une nouvelle image, celle repr\u00e9sentant le personnage du joueur. Cette image est de dimension \\(100 \\times 100\\) , et nous voudrions la placer tout en bas de l'\u00e9cran, au centre. Les coordonn\u00e9es de son coin sup\u00e9rieur gauche seront donc \\((\\dfrac{640 - 100}{2} ; 480 - 100)\\) . Pour cela, on ajoute hors de la boucle la commande suivante perso = pygame.image.load(\"perso.png\").convert() , suivie de la commande fenetre.blit(perso,(270,380)) (mais apr\u00e8s avoir coll\u00e9 le fond). Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert () fenetre . blit ( fond ,( 0 , 0 )) fenetre . blit ( perso , ( 270 , 380 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Transparence et canal alpha Canal Alpha Le r\u00e9sultat est peu probant. En effet nous voyons un cadre noir autour sprite du personnage. Il va donc falloir ajouter de la transparence \u00e0 cette image. Cette possibilit\u00e9 est offerte par le format png , qui poss\u00e8de un format de couleur bas\u00e9 sur la syst\u00e8me RGB + canal Alpha . Un pixel est donc repr\u00e9sent\u00e9 par 4 octets : Les trois premiers pour les canaux RGB , chacun \u00e9tant donc repr\u00e9sent\u00e9 par un nombre entre 0 et 255 ( sommairement 0 repr\u00e9sentant le canal \u00e9teint, et 255 le canal allum\u00e9 au maximum) ; Le dernier octet pour le canal Alpha , qui va repr\u00e9senter le niveau de transparence du pixel. Ainsi un pixel poss\u00e9dant un canal Alpha \u00e0 \\(0\\) sera totalement transparent, alors qu'avec une valeur de \\(255\\) , il sera totalement opaque. Pygame est bien entendu capable de g\u00e9rer cette transparence, il suffit d'utiliser la m\u00e9thode convert_alpha() \u00e0 la place de la m\u00e9thode convert() . Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () fenetre . blit ( fond ,( 0 , 0 )) fenetre . blit ( perso , ( 270 , 380 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Et les autres formats ? Le format png est \u00e0 privil\u00e9gier pour l'utilisation de sprites. cependant il est aussi possible de forcer une couleur d'une image de format quelconque \u00e0 devenir transparente, gr\u00e2ce \u00e0 la m\u00e9thode set_colorkey() utilis\u00e9e comme dans la ligne suivante : image.set_colorkey((255,255,255)) Ici on a rendu la couleur blanche (triplet RGB \\((255, 255, 255)\\) ) transparente pour l'objet image . D\u00e9placement du joueur Cette partie a pour objectif de vous faire comprendre deux points : la notion d'objet Rect de pygame ; l'utilisation d'\u00e9v\u00e8nements claviers. Elle n'est pas formellement correcte, car je n'utilise pas ici de constructeur d'objets et de capteurs d'\u00e9v\u00e8nements. Nous verrons ceci dans la partie suivante. Images et objets Rect Pygame utilises des objets de type Rect pour stocker et manipuler des surfaces rectangulaires. Un objet de type Rect peut \u00eatre cr\u00e9er par une combinaison de valeurs left, top, width, height repr\u00e9sentant respectivement l'abscisse du c\u00f4t\u00e9 gauche du rectangle, l'ordonn\u00e9e du c\u00f4t\u00e9 haut du rectangle, sa largeur puis sa hauteur en pixels. Des objets de type Rect peuvent \u00eatre aussi cr\u00e9\u00e9s \u00e0 partir d'autres objets pygame qui sont soit des Rect , soit poss\u00e8dent un attribut nomm\u00e9 rect (ce qui est le cas des images). Un objet de type Rect poss\u00e8de de nombreux attributs d\u00e9finissant la position et la taille de l'objet : x,y top, left, bottom, right topleft, bottomleft, topright, bottomright midtop, midleft, midbottom, midright center, centerx, centery size, width, height w,h On peut aussi affecter directement tous ces attributs : rect1.right = 10 rect2.center = (20,30) Affecter \u00e0 size, width, height, w ou h change les dimensions du rectangle. Toute les autres affectations d\u00e9placent le rectangle sans le redimmensionner. Notez que certains attributs sont des entiers ( x, y, top, bottom, centerx,... ), et que d'autres sont des tuples d'entiers de dimension 2 ( topleft, bottomright, center,... ) Les m\u00e9thodes ou fonctions `Rect` qui changent la position ou la taille d'un Rect renvoient une nouvelle copie de ce Rect avec les changements effectu\u00e9s . Le Rect original n'est pas modifi\u00e9. Cependant certaines m\u00e9thodes ont une version in-place qui retournent None mais affectent le Rect original. Ces m\u00e9thodes \"in-place\" sont celles pr\u00e9fix\u00e9es par ip_ . La liste compl\u00e8te des m\u00e9thodes et des d\u00e9tails est bien s\u00fbr disponible dans la doc pygame . Les \u00e9v\u00e8nements claviers Lorsque vous coderez une interface graphique, il est probable que vous assignerez des touches clavier aux diff\u00e9rentes actions. Le type d'\u00e9v\u00e9nement cr\u00e9\u00e9 lorsque l'on appuie sur une touche est rep\u00e9r\u00e9 par la constante KEYDOWN , (ou KEYUP au rel\u00e2chement de la touche). Dans la boucle d'\u00e9v\u00e8nement, on pourra alors utiliser une structure conditionnelle telle que if event.type == KEYDOWN: Mais attention, cette condition sera vraie quelque soit la touche press\u00e9e ! Pour d\u00e9finir une seule touche du clavier, vous devrez utilisez en plus event.key , qui d\u00e9termine la touche press\u00e9e, disponible uniquement lors d'un \u00e9v\u00e9nement clavier. Cet event.key peut prendre les valeurs suivantes : Lettres: K_a ... K_z Nombres: K_0 ... K_9 Contr\u00f4les: K_TAB, K_RETURN, K_ESCAPE,... Fl\u00e8ches: K_LEFT, K_UP, K_RIGHT, K_DOWN ... La liste compl\u00e8te des constantes est disponible ici D\u00e9placement du sprite de gauche \u00e0 droite Mise en place du code Bien maintenant nous savons a peu pr\u00eat quoi faire. Commen\u00e7ons par cr\u00e9er un Rect a partir de l'image du personnage, juste apr\u00e8s la ligne de cr\u00e9ation de l'image perso : persoRect = perso.get_rect() Mais attention, on ne vient que de cr\u00e9er le Rect , et il n'a pas de position d\u00e9finie. On va alors effacer la ligne de blit du personnage, et la remplacer par : persoRect.topleft = (270,380) Notre rectangle est ainsi positionn\u00e9 correctement au centre de l'\u00e9cran, en bas. Nous allons modifier ensuite persoRect pour d\u00e9placer le sprite. Nous fixons la vitesse de d\u00e9placement du sprite avec une base de \\(10\\) pixels par tour de boucle. Dans la boucle d'\u00e9v\u00e9nement, nous ajoutons alors les lignes suivantes : if event.type == KEYDOWN : if event.key == K_LEFT : if persoRect.left>=10 : persoRect = persoRect.move(-10,0) if event.key == K_RIGHT : if persoRect.right<=630 : persoRect = persoRect.move(10,0) Nous avons ainsi un d\u00e9placement, mais si vous testez le code \u00e0 ce moment, rien ne se passe. En effet, il ne faut pas oublier de blitter l'image \u00e0 la nouvelle position du Rect . On rajoute donc \u00e0 la fin de la boucle while True la ligne suivante : fenetre.blit(perso, persoRect) Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit () Mais c'est nul ! raisons et corrections Et oui, pour plusieurs raisons : * la page ne se rafra\u00eechit pas totalement, et la trace des anciennes positions du sprite est gard\u00e9e; * il faut r\u00e9-appuyer sur la touche pour re-d\u00e9placer le personnage, le d\u00e9placement n'est pas fluide. Le premier probl\u00e8me vient de la ligne pygame.display.update() , qui ne change que les pixels modifi\u00e9s par rapport au dernier affichage. Une solution simple consiste \u00e0 forcer l'affichage du fond avant le blit du sprite : fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) Pour le second probl\u00e8me, une solution simple (mais pas toujours efficace) consiste \u00e0 utiliser la m\u00e9thode set_repeat() du module key ,qui prend en param\u00e8tres : le d\u00e9lai avant de continuer les d\u00e9placements quand la touche reste enfonc\u00e9e (en millisecondes); le temps entre chaque d\u00e9placement. (en millisecondes) Vous devez donc, apr\u00e8s initialisation de pygame placer la ligne : pygame.key.set_repeat(400, 30) Le code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import pygame from pygame.locals import * pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit () Une solution plus \u00e9l\u00e9gante, et plus efficace (mais inutile ici) Solution Le probl\u00e8me de l'utilisation de la m\u00e9thode ci-dessus est qu'il est impossible de traiter des appuis sur des combinaisons de touches, puisqu'une seule touche est repr\u00e9sent\u00e9e par l'attribut event.key . Heureusement, les concepteurs de pygame ont pr\u00e9vu une m\u00e9thode bien plus efficace : la m\u00e9thode get_pressed() du module key , qui renvoie un dictionnaire de bool\u00e9ens ayant pour cl\u00e9 la constante repr\u00e9sentant la touche, et pour lequel les valeurs True correspondent aux touches actuellement appuy\u00e9es. On peut alors retirer de la boucle d'\u00e9v\u00e8nements toute la partie concernant les appuis de touches, et les remplacer par : dicKeys = pygame . key . get_pressed () if dicKeys [ K_LEFT ] : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if dicKeys [ K_RIGHT ] : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) Le code de remplacement 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import pygame from pygame.locals import * pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False dicKeys = pygame . key . get_pressed () if dicKeys [ K_LEFT ] : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if dicKeys [ K_RIGHT ] : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit () Cr\u00e9ation d'une classe d'objets \"Balle\" classe Balle Interface Sachant que plusieurs balles vont tomber simultan\u00e9ment, nous allons construire une classe d'objets pour repr\u00e9senter ces balles. Chaque balle sera repr\u00e9sent\u00e9e par une image , qui devra donc \u00eatre associ\u00e9e \u00e0 un rectangle . Chaque balle aura une position, qui sera donn\u00e9e originellement par son centre . Elle aura par ailleurs une vitesse , dont la valeur de d\u00e9part sera tir\u00e9e al\u00e9atoirement entre 1 et 5. Un certain nombre d'actions seront utilis\u00e9es sur ou par cette balle : elle se d\u00e9placera d'un nombre de pixels \u00e9gal \u00e0 sa vitesse ; on testera sa collision avec le joueur, en renvoyant un bool\u00e9en ; et bien sur on l' affichera dans la fenetre courante. On repr\u00e9sente donc la classe balle par l'interface suivante : Nous impl\u00e9mentons de cette classe dans un fichier balle.py . Le code est donn\u00e9 dans l'onglet ci contre, et ne n\u00e9cessite que peu de commentaires, \u00e0 part pour la m\u00e9thode collision(self,targetRect) . Dans le cadre de ce tutoriel, nous utiliserons la m\u00e9thode colliderect des objets Rect . Cette m\u00e9thode renvoie True si le rectangle de la balle est en collision avec le rectangle pass\u00e9 en argument et False sinon. Deux rectangles sont en collision si ils ont une partie commune. Pour les amateurs de hitbox plus pr\u00e9cises, il faudra voir du c\u00f4t\u00e9 de la classe Mask de pygame , qui utilise le canal alpha ou bien une cl\u00e9 colorim\u00e9trique pour d\u00e9tecter des collisions au pixel pr\u00e8s. Code du fichier balle.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import pygame from random import randint class Balle : def __init__ ( self , image , center ) : \"\"\" Initialisation d'un objet de classe Balle a partir de deux arguments : - image est l'adresse relative ou absolue de l'image voulue pour l'objet ; - center est un tuple de deux entiers donnant la position du centre de la balle lors de sa cr\u00e9ation.\"\"\" self . image = pygame . image . load ( image ) . convert_alpha () self . rect = self . image . get_rect () self . rect . center = center self . vitesse = randint ( 1 , 5 ) def affiche ( self , fenetre ) : fenetre . blit ( self . image , self . rect ) def deplace ( self ) : self . rect = self . rect . move ( 0 , self . vitesse ) def collision ( self , targetRect ) : return self . rect . colliderect ( targetRect ) Apparition des objets Balle et gestion des collisions \u00c9tablissons les r\u00e8gles On pose les r\u00e8gles suivantes concernant les balles : elles ne peuvent pas \u00eatre plus de 10 simultan\u00e9ment ; elles sont construites \u00e0 partir de l'image suivante, de dimension \\(50 \\times 50\\) : elles apparaissent avec une abscisse al\u00e9atoire entre 25 et 455 (pour ne pas d\u00e9passer de l'\u00e9cran ; elles disparaissent une fois compl\u00e8tement sorties de l'\u00e9cran ; le jeu s'arr\u00eate et ferme la fen\u00eatre d\u00e8s que le personnage est touch\u00e9 par une balle. Codons ! Description Commen\u00e7ons d\u00e9j\u00e0 par importer les objets de types Balle depuis balle.py , et importons aussi au passage la fonction randint du module random dont nous aurons besoin pour les tirages al\u00e9atoires des positions de d\u00e9part. from balle import Balle from random import randint Les balles existantes seront stock\u00e9es dans une liste python tout ce qui est de plus classique. Nous cr\u00e9ons donc une variable listeBalles au d\u00e9part vide, juste avant la boucle while continuer : . listeBalles = [] Ensuite il faut cr\u00e9er un syst\u00e8me d'apparition des balles. Pour cela, dans la boucle while continuer : , nous allons \u00e0 chaque tour de boucle ajouter une balle, si la longueur de la liste est inf\u00e9rieure \u00e0 10. Mais ce ne sera pas suffisant ! En effet, la boucle tourne tr\u00e8s vite ! Plusieurs centaines de fois voir plusieurs milliers de fois par seconde . Donc dans ce cas, le joueur aurait l'impression que les 10 balles arrivent de mani\u00e8re simultan\u00e9es. Il faut donc introduire un syst\u00e8me permettant de limiter ces apparitions, tout en gardant un c\u00f4t\u00e9 al\u00e9atoire pour le jeu. On utilisera alors les lignes suivantes : if len ( listeBalles ) < 10 and randint ( 1 , 500 ) <= 10 : listeBalles . append ( Balle ( 'golfBall.png' ,( randint ( 25 , 455 ), - 25 ))) Les valeurs pr\u00e9sentes dans la condition randint ont \u00e9t\u00e9 test\u00e9e sur mon PC, mais elles peuvent \u00eatre modifi\u00e9es selon la puissance de votre machine. Voil\u00e0, les objets de type Balle sont cr\u00e9es selon les conditions que nous avons pos\u00e9es au d\u00e9part. Reste \u00e0 les afficher, les d\u00e9placer et les faire dispara\u00eetre le cas \u00e9ch\u00e9ant. Pour les d\u00e9placer et les afficher, pla\u00e7ons nous juste apr\u00e8s le blit de l'image de fond. Nous parcourons alors la liste des balles et leur appliquons successivement les m\u00e9thodes deplace() et affiche() , en donnant comme argument la fen\u00eatre courante pour l'affichage : for ball in listeBalles : ball . deplace () ball . affiche ( fenetre ) Probl\u00e8me : nos balles disparaissent de l'\u00e9cran, mais de nouvelles n'apparaissent plus. C'est normal, nous avons satur\u00e9 la variable listeBalles qui ne peut contenir plus de 10 objets. Il faut donc faire dispara\u00eetre les objets de la liste quand ils sortent de l'\u00e9cran. for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : ball . affiche ( fenetre ) Il ne nous reste plus qu'\u00e0 g\u00e9rer la fin du jeu : quand une balle entre en collision avec le joueur, nous basculons la variable continuer \u00e0 False pour arr\u00eater la boucle while : for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : if ball . collision ( persoRect ) : continuer = False ball . affiche ( fenetre ) Voil\u00e0, le contrat est rempli. Bien entendu ce n'est qu'un d\u00e9but de jeu, et il reste beaucoup de points \u00e0 am\u00e9liorer. Mais vous avez maintenant les bases pour vous permettre de r\u00e9aliser des jeux d'arcades classiques. le code complet du fichier dodegTheBall.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import pygame from pygame.locals import * from balle import Balle from random import randint pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True listeBalles = [] while continuer : if len ( listeBalles ) < 10 and randint ( 1 , 500 ) <= 10 : listeBalles . append ( Balle ( 'golfBall.png' ,( randint ( 25 , 455 ), - 25 ))) for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : if ball . collision ( persoRect ) : continuer = False ball . affiche ( fenetre ) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . time . wait ( 10 ) pygame . quit ()","title":"Bases de Pygame"},{"location":"Miscellanees/Pygame/Base_pygame/#bases-de-pygame","text":"Ce cours est tr\u00e8s largement et assez honteusement copi\u00e9 sur celui-ci . Merci \u00e0 vous ! En cas de soucis de droits, n'h\u00e9sitez pas \u00e0 me contacter par le lien situ\u00e9 en bas de page !","title":"Bases de Pygame"},{"location":"Miscellanees/Pygame/Base_pygame/#importer-pygame-et-ses-constantes","text":"Pygame est une biblioth\u00e8que, et en tant que telle, elle est construite \u00e0 partir de plusieurs modules. Les noms de ces modules sont : display mixer draw event image mouse time Il existe alors plusieurs possibilit\u00e9s pour importe pygame Importation compl\u00e8te : import pygame La totalit\u00e9 de la biblioth\u00e8que est alors import\u00e9e, et pour utiliser la fonction update du module display on devra alors utiliser pygame.display.update() . Importation partielle des modules n\u00e9cessaires : from pygame import display Seul le module display est alors import\u00e9, et pour utiliser la fonction update de ce module, on devra alors utiliser display.update() . Importation compl\u00e8te avec import des constantes directement dans l'espace de nommage (conseill\u00e9e) : import pygame from pygame.locals import * Dans ce cas, pour utiliser la constante repr\u00e9sentant la touche espace, au lieu d'utiliser pygame.locals.K_SPACE , on utilisera simplement K_SPACE .","title":"Importer Pygame et ses constantes"},{"location":"Miscellanees/Pygame/Base_pygame/#creation-dune-fenetre-graphique-et-boucle-devenements","text":"Le projet Commen\u00e7ons un petit programme qui nous am\u00e8nera \u00e0 d\u00e9placer un personnage de gauche \u00e0 droite sur un fond d'\u00e9cran, pendant que des balles tombent depuis le haut de l'\u00e9cran \u00e0 diff\u00e9rentes vitesses. Le jeu consistera \u00e0 \u00e9viter que le personnage entre en collision avec les balles, et s'arr\u00eatera d\u00e8s qu'une collision aura lieu. Le premier point est d'afficher une fen\u00eatre graphique d'une dimension donn\u00e9e : \\(640 \\times 480~ pixels^2\\) (oui, en bon prof de maths, je respecte \u00e0 minima les unit\u00e9s...). On utilise le script suivant, dans un fichier nomm\u00e9 dodgeTheBall.py : 1 2 3 4 5 6 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) Analysons le code Dans les deux premi\u00e8res lignes, nous importons pygame en totalit\u00e9 ainsi que les constantes sp\u00e9cifiques dans l'espace de nommage courant. En ligne 4, nous initialisons tous les modules de pygame . En ligne 6, nous appelons ensuite la fonction set_mode() contenue dans le module display de pygame , qui prend en argument un tuple contenant la largeur et la hauteur de la fen\u00eatre voulue (attention, c'est bien un tuple ! pygame.display.set_mode(640, 480) ne fonctionne pas !). Y'a un bug ! La fen\u00eatre reste bloqu\u00e9e et ne se ferme pas sauf si on force l'arr\u00eat du script ! Effectivement, on se retrouve bloqu\u00e9... Il faut rajouter \u00e0 notre code une instruction suppl\u00e9mentaire pour que la fen\u00ebtre se ferme : 1 2 3 4 5 6 7 8 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) pygame . quit () Encore un Et oui ! Notre fen\u00eatre s'ouvre mais se ferme imm\u00e9diatement ! Or nous aimerions qu'elle ne se ferme que sur demande explicite de l'utilisateur, par exemple par un clic sur la croix. C'est l\u00e0 qu'intervient la notion de boucle d'\u00e9v\u00e8nements . Dans un programme classique, en programmation imp\u00e9rative , le programme se d\u00e9roule plus ou moins lin\u00e9airement de la premi\u00e8re ligne \u00e0 la derni\u00e8re. Mais lorsqu'on utilise des interfaces graphiques , on ne peut pr\u00e9voir \u00e0 l'avance le comportement de l'utilisateur, et donc suivre un chemin clairement d\u00e9fini \u00e0 l'avance. C'est pour cette raison qu'on utilise plut\u00f4t le paradigme de la programmation \u00e9v\u00e9nementielle , c'est-\u00e0-dire un paradigme o\u00f9 on pr\u00e9voira l'action de l'utilisateur, mais pas dans un ordre pr\u00e9cis. Chaque action pr\u00e9vue dans la boucle d'\u00e9v\u00e8nements aura un impact pr\u00e9cis. Dans notre cas, nous souhaiterions que la fen\u00eatre reste ouverte tant que l'utilisateur n'a pas exprim\u00e9 le d\u00e9sir de la fermer, soit par l'interm\u00e9diaire de la croix, soit par l'interm\u00e9diaire de la combinaison de touches Alt + F4 . Notion d'\u00e9v\u00e8nements Dans la construction d'interfaces graphiques, on utilise souvent la notion d' \u00e9v\u00e8nements . Un \u00e9v\u00e8nement correspond \u00e0 : un d\u00e9placement de la souris ; le survol d'une zone sp\u00e9cifique de l'\u00e9cran par le pointeur de la souris ; un appui sur une ou plusieurs touches du clavier : le rel\u00e2chement d'une touche de clavier ; un appui ou rel\u00e2chement d'un bouton de la souris ; un \u00e9v\u00e9nement sp\u00e9cifique pr\u00e9vu dans le programme ; un changement de luminosit\u00e9 devant un capteur vid\u00e9o ; ... Ces \u00e9v\u00e8nements sont stock\u00e9s \u00e0 leur apparition dans une file (fifo) de dimension limit\u00e9e , nettoy\u00e9e r\u00e9guli\u00e8rement de ses \u00e9v\u00e8nements les plus anciens. Dans pygame , les \u00e9v\u00e8nements sont des constantes, et celui qui nous int\u00e9resse est l'\u00e9v\u00e8nement QUIT . Nous allons donc parcourir la liste des \u00e9v\u00e8nements pour ensuite pouvoir quitter la fen\u00eatre si celui-ci est exprim\u00e9 : 1 2 3 4 5 6 7 8 9 10 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) for event in pygame . event . get () : if event == QUIT : pygame . quit () L'arnaque : \u00e7a ne marche pas ! On retombe sur notre probl\u00e8me pr\u00e9c\u00e9dent : la fen\u00eatre ne se ferme plus... C'est parce que la file d'\u00e9v\u00e8nements se construit et se nettoie tr\u00e8s rapidement ! Nous n'avons pas le temps de cliquer sur la croix que d\u00e9j\u00e0 le parcours par la boucle for est termin\u00e9 ! Et donc dans ce cas on ne passe jamais par l'instruction pygame.quit() . Il va donc falloir r\u00e9p\u00e9ter la lecture d'\u00e9v\u00e8nements pour pouvoir d\u00e9tecter quand l'utilisateur souhaite fermer sa fen\u00eatre. Boucle d'\u00e9v\u00e8nements Une boucle d'\u00e9v\u00e8nements est une boucle qui se r\u00e9p\u00e8te tant qu'un \u00e9v\u00e8nement pr\u00e9cis ne s'est pas produit. A chaque tour de boucle on va lire la totalit\u00e9 des \u00e9v\u00e8nements enregistr\u00e9s dans la file, et on d\u00e9clenchera la sortie de cette boucle si l'\u00e9v\u00e8nement est trouv\u00e9. Pour notre exemple, nous allons cr\u00e9er une boucle while d\u00e9pendant d'une variable continuer initialis\u00e9e \u00e0 True , que nous basculerons \u00e0 False lorsque l'\u00e9v\u00e8nement QUIT est intercept\u00e9 : Un code fonctionnel 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . quit () Enfin ! Notre fen\u00eatre fonctionne !","title":"Cr\u00e9ation d'une fen\u00eatre graphique et boucle d'\u00e9v\u00e8nements"},{"location":"Miscellanees/Pygame/Base_pygame/#ajout-dimage-de-fond","text":"Image de fond Notre fond noir est un peu d\u00e9primant. Mettons un peu de verdure gr\u00e2ce \u00e0 l'image suivante : T\u00e9l\u00e9chargez cette image sous le nom background.jpg puis ajoutez la ligne suivante en ligne 7 : 7 fond = pygame . image . load ( \"background.jpg\" ) . convert () Bon : mauvaise nouvelle, ce ne sera pas suffisant ! La variable fond n'est qu'une r\u00e9f\u00e9rence \u00e0 une Surface de pygame , retourn\u00e9e par la fonction load() . Une Surface est une classe d'objets d\u00e9finie dans pygame qui poss\u00e8de de nombreux attributs et m\u00e9thodes (cf. la doc ). La m\u00e9thode convert() des objets Surface sert \u00e0 convertir l'image source au format utilis\u00e9 par pygame . Le principe d'affichage de la SDL (la sous-couche logicielle g\u00e9rant les images, le son, etc...) est \u00e0 conna\u00eetre pour bien afficher ses images : fenetre est une surface vide, sur laquelle on va \"coller\", ou \"empiler\" les autres images. Le fond doit donc \u00eatre empil\u00e9 sur la surface vide de la fen\u00eatre , gr\u00e2ce \u00e0 la m\u00e9thode blit() . Cette m\u00e9thode prend une Surface en argument ainsi qu'un tuple repr\u00e9sentant les coordonn\u00e9es du coin sup\u00e9rieur gauche auquel sera coll\u00e9 la Surface argument par rapport \u00e0 la Surface appelante. Syst\u00e8me de coordonn\u00e9es On peut donner comme exemples de tuple de coordonn\u00e9es ceux de l'image suivante : On pourrait donc utiliser le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . quit () Mais pourquoi \u00e7a n'affiche rien ! Parce que quand on blit une Surface , pygame calcule ce qu'il faut mais ne l'ex\u00e9cute pas r\u00e9ellement. Il faut forcer le rafra\u00eechissement de l'\u00e9cran pour y parvenir, par l'interm\u00e9diaire de la commande pygame.display.update() . Comme nous comptons bien faire bouger un personnage sur l'\u00e9cran, et que les mouvements de celui-ci d\u00e9pendront de la boucle d'\u00e9v\u00e8nements, autant mettre imm\u00e9diatement cette commande en fin de boucle, pour que l'image soit syst\u00e9matiquement mise \u00e0 jour. : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Et voil\u00e0 ! 15 lignes de code, et nous voil\u00e0 avec une fen\u00eatre graphique digne de ce nom !","title":"Ajout d'image de Fond"},{"location":"Miscellanees/Pygame/Base_pygame/#ajout-du-sprite-du-joueur","text":"Les sprites Explications Ajoutons maintenant une nouvelle image, celle repr\u00e9sentant le personnage du joueur. Cette image est de dimension \\(100 \\times 100\\) , et nous voudrions la placer tout en bas de l'\u00e9cran, au centre. Les coordonn\u00e9es de son coin sup\u00e9rieur gauche seront donc \\((\\dfrac{640 - 100}{2} ; 480 - 100)\\) . Pour cela, on ajoute hors de la boucle la commande suivante perso = pygame.image.load(\"perso.png\").convert() , suivie de la commande fenetre.blit(perso,(270,380)) (mais apr\u00e8s avoir coll\u00e9 le fond). Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert () fenetre . blit ( fond ,( 0 , 0 )) fenetre . blit ( perso , ( 270 , 380 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Transparence et canal alpha Canal Alpha Le r\u00e9sultat est peu probant. En effet nous voyons un cadre noir autour sprite du personnage. Il va donc falloir ajouter de la transparence \u00e0 cette image. Cette possibilit\u00e9 est offerte par le format png , qui poss\u00e8de un format de couleur bas\u00e9 sur la syst\u00e8me RGB + canal Alpha . Un pixel est donc repr\u00e9sent\u00e9 par 4 octets : Les trois premiers pour les canaux RGB , chacun \u00e9tant donc repr\u00e9sent\u00e9 par un nombre entre 0 et 255 ( sommairement 0 repr\u00e9sentant le canal \u00e9teint, et 255 le canal allum\u00e9 au maximum) ; Le dernier octet pour le canal Alpha , qui va repr\u00e9senter le niveau de transparence du pixel. Ainsi un pixel poss\u00e9dant un canal Alpha \u00e0 \\(0\\) sera totalement transparent, alors qu'avec une valeur de \\(255\\) , il sera totalement opaque. Pygame est bien entendu capable de g\u00e9rer cette transparence, il suffit d'utiliser la m\u00e9thode convert_alpha() \u00e0 la place de la m\u00e9thode convert() . Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () fenetre . blit ( fond ,( 0 , 0 )) fenetre . blit ( perso , ( 270 , 380 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False pygame . display . update () pygame . quit () Et les autres formats ? Le format png est \u00e0 privil\u00e9gier pour l'utilisation de sprites. cependant il est aussi possible de forcer une couleur d'une image de format quelconque \u00e0 devenir transparente, gr\u00e2ce \u00e0 la m\u00e9thode set_colorkey() utilis\u00e9e comme dans la ligne suivante : image.set_colorkey((255,255,255)) Ici on a rendu la couleur blanche (triplet RGB \\((255, 255, 255)\\) ) transparente pour l'objet image .","title":"Ajout du sprite du joueur"},{"location":"Miscellanees/Pygame/Base_pygame/#deplacement-du-joueur","text":"Cette partie a pour objectif de vous faire comprendre deux points : la notion d'objet Rect de pygame ; l'utilisation d'\u00e9v\u00e8nements claviers. Elle n'est pas formellement correcte, car je n'utilise pas ici de constructeur d'objets et de capteurs d'\u00e9v\u00e8nements. Nous verrons ceci dans la partie suivante. Images et objets Rect Pygame utilises des objets de type Rect pour stocker et manipuler des surfaces rectangulaires. Un objet de type Rect peut \u00eatre cr\u00e9er par une combinaison de valeurs left, top, width, height repr\u00e9sentant respectivement l'abscisse du c\u00f4t\u00e9 gauche du rectangle, l'ordonn\u00e9e du c\u00f4t\u00e9 haut du rectangle, sa largeur puis sa hauteur en pixels. Des objets de type Rect peuvent \u00eatre aussi cr\u00e9\u00e9s \u00e0 partir d'autres objets pygame qui sont soit des Rect , soit poss\u00e8dent un attribut nomm\u00e9 rect (ce qui est le cas des images). Un objet de type Rect poss\u00e8de de nombreux attributs d\u00e9finissant la position et la taille de l'objet : x,y top, left, bottom, right topleft, bottomleft, topright, bottomright midtop, midleft, midbottom, midright center, centerx, centery size, width, height w,h On peut aussi affecter directement tous ces attributs : rect1.right = 10 rect2.center = (20,30) Affecter \u00e0 size, width, height, w ou h change les dimensions du rectangle. Toute les autres affectations d\u00e9placent le rectangle sans le redimmensionner. Notez que certains attributs sont des entiers ( x, y, top, bottom, centerx,... ), et que d'autres sont des tuples d'entiers de dimension 2 ( topleft, bottomright, center,... ) Les m\u00e9thodes ou fonctions `Rect` qui changent la position ou la taille d'un Rect renvoient une nouvelle copie de ce Rect avec les changements effectu\u00e9s . Le Rect original n'est pas modifi\u00e9. Cependant certaines m\u00e9thodes ont une version in-place qui retournent None mais affectent le Rect original. Ces m\u00e9thodes \"in-place\" sont celles pr\u00e9fix\u00e9es par ip_ . La liste compl\u00e8te des m\u00e9thodes et des d\u00e9tails est bien s\u00fbr disponible dans la doc pygame . Les \u00e9v\u00e8nements claviers Lorsque vous coderez une interface graphique, il est probable que vous assignerez des touches clavier aux diff\u00e9rentes actions. Le type d'\u00e9v\u00e9nement cr\u00e9\u00e9 lorsque l'on appuie sur une touche est rep\u00e9r\u00e9 par la constante KEYDOWN , (ou KEYUP au rel\u00e2chement de la touche). Dans la boucle d'\u00e9v\u00e8nement, on pourra alors utiliser une structure conditionnelle telle que if event.type == KEYDOWN: Mais attention, cette condition sera vraie quelque soit la touche press\u00e9e ! Pour d\u00e9finir une seule touche du clavier, vous devrez utilisez en plus event.key , qui d\u00e9termine la touche press\u00e9e, disponible uniquement lors d'un \u00e9v\u00e9nement clavier. Cet event.key peut prendre les valeurs suivantes : Lettres: K_a ... K_z Nombres: K_0 ... K_9 Contr\u00f4les: K_TAB, K_RETURN, K_ESCAPE,... Fl\u00e8ches: K_LEFT, K_UP, K_RIGHT, K_DOWN ... La liste compl\u00e8te des constantes est disponible ici D\u00e9placement du sprite de gauche \u00e0 droite Mise en place du code Bien maintenant nous savons a peu pr\u00eat quoi faire. Commen\u00e7ons par cr\u00e9er un Rect a partir de l'image du personnage, juste apr\u00e8s la ligne de cr\u00e9ation de l'image perso : persoRect = perso.get_rect() Mais attention, on ne vient que de cr\u00e9er le Rect , et il n'a pas de position d\u00e9finie. On va alors effacer la ligne de blit du personnage, et la remplacer par : persoRect.topleft = (270,380) Notre rectangle est ainsi positionn\u00e9 correctement au centre de l'\u00e9cran, en bas. Nous allons modifier ensuite persoRect pour d\u00e9placer le sprite. Nous fixons la vitesse de d\u00e9placement du sprite avec une base de \\(10\\) pixels par tour de boucle. Dans la boucle d'\u00e9v\u00e9nement, nous ajoutons alors les lignes suivantes : if event.type == KEYDOWN : if event.key == K_LEFT : if persoRect.left>=10 : persoRect = persoRect.move(-10,0) if event.key == K_RIGHT : if persoRect.right<=630 : persoRect = persoRect.move(10,0) Nous avons ainsi un d\u00e9placement, mais si vous testez le code \u00e0 ce moment, rien ne se passe. En effet, il ne faut pas oublier de blitter l'image \u00e0 la nouvelle position du Rect . On rajoute donc \u00e0 la fin de la boucle while True la ligne suivante : fenetre.blit(perso, persoRect) Code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import pygame from pygame.locals import * pygame . init () fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit () Mais c'est nul ! raisons et corrections Et oui, pour plusieurs raisons : * la page ne se rafra\u00eechit pas totalement, et la trace des anciennes positions du sprite est gard\u00e9e; * il faut r\u00e9-appuyer sur la touche pour re-d\u00e9placer le personnage, le d\u00e9placement n'est pas fluide. Le premier probl\u00e8me vient de la ligne pygame.display.update() , qui ne change que les pixels modifi\u00e9s par rapport au dernier affichage. Une solution simple consiste \u00e0 forcer l'affichage du fond avant le blit du sprite : fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) Pour le second probl\u00e8me, une solution simple (mais pas toujours efficace) consiste \u00e0 utiliser la m\u00e9thode set_repeat() du module key ,qui prend en param\u00e8tres : le d\u00e9lai avant de continuer les d\u00e9placements quand la touche reste enfonc\u00e9e (en millisecondes); le temps entre chaque d\u00e9placement. (en millisecondes) Vous devez donc, apr\u00e8s initialisation de pygame placer la ligne : pygame.key.set_repeat(400, 30) Le code complet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import pygame from pygame.locals import * pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit () Une solution plus \u00e9l\u00e9gante, et plus efficace (mais inutile ici) Solution Le probl\u00e8me de l'utilisation de la m\u00e9thode ci-dessus est qu'il est impossible de traiter des appuis sur des combinaisons de touches, puisqu'une seule touche est repr\u00e9sent\u00e9e par l'attribut event.key . Heureusement, les concepteurs de pygame ont pr\u00e9vu une m\u00e9thode bien plus efficace : la m\u00e9thode get_pressed() du module key , qui renvoie un dictionnaire de bool\u00e9ens ayant pour cl\u00e9 la constante repr\u00e9sentant la touche, et pour lequel les valeurs True correspondent aux touches actuellement appuy\u00e9es. On peut alors retirer de la boucle d'\u00e9v\u00e8nements toute la partie concernant les appuis de touches, et les remplacer par : dicKeys = pygame . key . get_pressed () if dicKeys [ K_LEFT ] : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if dicKeys [ K_RIGHT ] : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) Le code de remplacement 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import pygame from pygame.locals import * pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True while continuer : for event in pygame . event . get (): if event . type == QUIT : continuer = False dicKeys = pygame . key . get_pressed () if dicKeys [ K_LEFT ] : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if dicKeys [ K_RIGHT ] : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . quit ()","title":"D\u00e9placement du joueur"},{"location":"Miscellanees/Pygame/Base_pygame/#creation-dune-classe-dobjets-balle","text":"classe Balle Interface Sachant que plusieurs balles vont tomber simultan\u00e9ment, nous allons construire une classe d'objets pour repr\u00e9senter ces balles. Chaque balle sera repr\u00e9sent\u00e9e par une image , qui devra donc \u00eatre associ\u00e9e \u00e0 un rectangle . Chaque balle aura une position, qui sera donn\u00e9e originellement par son centre . Elle aura par ailleurs une vitesse , dont la valeur de d\u00e9part sera tir\u00e9e al\u00e9atoirement entre 1 et 5. Un certain nombre d'actions seront utilis\u00e9es sur ou par cette balle : elle se d\u00e9placera d'un nombre de pixels \u00e9gal \u00e0 sa vitesse ; on testera sa collision avec le joueur, en renvoyant un bool\u00e9en ; et bien sur on l' affichera dans la fenetre courante. On repr\u00e9sente donc la classe balle par l'interface suivante : Nous impl\u00e9mentons de cette classe dans un fichier balle.py . Le code est donn\u00e9 dans l'onglet ci contre, et ne n\u00e9cessite que peu de commentaires, \u00e0 part pour la m\u00e9thode collision(self,targetRect) . Dans le cadre de ce tutoriel, nous utiliserons la m\u00e9thode colliderect des objets Rect . Cette m\u00e9thode renvoie True si le rectangle de la balle est en collision avec le rectangle pass\u00e9 en argument et False sinon. Deux rectangles sont en collision si ils ont une partie commune. Pour les amateurs de hitbox plus pr\u00e9cises, il faudra voir du c\u00f4t\u00e9 de la classe Mask de pygame , qui utilise le canal alpha ou bien une cl\u00e9 colorim\u00e9trique pour d\u00e9tecter des collisions au pixel pr\u00e8s. Code du fichier balle.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import pygame from random import randint class Balle : def __init__ ( self , image , center ) : \"\"\" Initialisation d'un objet de classe Balle a partir de deux arguments : - image est l'adresse relative ou absolue de l'image voulue pour l'objet ; - center est un tuple de deux entiers donnant la position du centre de la balle lors de sa cr\u00e9ation.\"\"\" self . image = pygame . image . load ( image ) . convert_alpha () self . rect = self . image . get_rect () self . rect . center = center self . vitesse = randint ( 1 , 5 ) def affiche ( self , fenetre ) : fenetre . blit ( self . image , self . rect ) def deplace ( self ) : self . rect = self . rect . move ( 0 , self . vitesse ) def collision ( self , targetRect ) : return self . rect . colliderect ( targetRect )","title":"Cr\u00e9ation d'une classe d'objets \"Balle\""},{"location":"Miscellanees/Pygame/Base_pygame/#apparition-des-objets-balle-et-gestion-des-collisions","text":"\u00c9tablissons les r\u00e8gles On pose les r\u00e8gles suivantes concernant les balles : elles ne peuvent pas \u00eatre plus de 10 simultan\u00e9ment ; elles sont construites \u00e0 partir de l'image suivante, de dimension \\(50 \\times 50\\) : elles apparaissent avec une abscisse al\u00e9atoire entre 25 et 455 (pour ne pas d\u00e9passer de l'\u00e9cran ; elles disparaissent une fois compl\u00e8tement sorties de l'\u00e9cran ; le jeu s'arr\u00eate et ferme la fen\u00eatre d\u00e8s que le personnage est touch\u00e9 par une balle. Codons ! Description Commen\u00e7ons d\u00e9j\u00e0 par importer les objets de types Balle depuis balle.py , et importons aussi au passage la fonction randint du module random dont nous aurons besoin pour les tirages al\u00e9atoires des positions de d\u00e9part. from balle import Balle from random import randint Les balles existantes seront stock\u00e9es dans une liste python tout ce qui est de plus classique. Nous cr\u00e9ons donc une variable listeBalles au d\u00e9part vide, juste avant la boucle while continuer : . listeBalles = [] Ensuite il faut cr\u00e9er un syst\u00e8me d'apparition des balles. Pour cela, dans la boucle while continuer : , nous allons \u00e0 chaque tour de boucle ajouter une balle, si la longueur de la liste est inf\u00e9rieure \u00e0 10. Mais ce ne sera pas suffisant ! En effet, la boucle tourne tr\u00e8s vite ! Plusieurs centaines de fois voir plusieurs milliers de fois par seconde . Donc dans ce cas, le joueur aurait l'impression que les 10 balles arrivent de mani\u00e8re simultan\u00e9es. Il faut donc introduire un syst\u00e8me permettant de limiter ces apparitions, tout en gardant un c\u00f4t\u00e9 al\u00e9atoire pour le jeu. On utilisera alors les lignes suivantes : if len ( listeBalles ) < 10 and randint ( 1 , 500 ) <= 10 : listeBalles . append ( Balle ( 'golfBall.png' ,( randint ( 25 , 455 ), - 25 ))) Les valeurs pr\u00e9sentes dans la condition randint ont \u00e9t\u00e9 test\u00e9e sur mon PC, mais elles peuvent \u00eatre modifi\u00e9es selon la puissance de votre machine. Voil\u00e0, les objets de type Balle sont cr\u00e9es selon les conditions que nous avons pos\u00e9es au d\u00e9part. Reste \u00e0 les afficher, les d\u00e9placer et les faire dispara\u00eetre le cas \u00e9ch\u00e9ant. Pour les d\u00e9placer et les afficher, pla\u00e7ons nous juste apr\u00e8s le blit de l'image de fond. Nous parcourons alors la liste des balles et leur appliquons successivement les m\u00e9thodes deplace() et affiche() , en donnant comme argument la fen\u00eatre courante pour l'affichage : for ball in listeBalles : ball . deplace () ball . affiche ( fenetre ) Probl\u00e8me : nos balles disparaissent de l'\u00e9cran, mais de nouvelles n'apparaissent plus. C'est normal, nous avons satur\u00e9 la variable listeBalles qui ne peut contenir plus de 10 objets. Il faut donc faire dispara\u00eetre les objets de la liste quand ils sortent de l'\u00e9cran. for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : ball . affiche ( fenetre ) Il ne nous reste plus qu'\u00e0 g\u00e9rer la fin du jeu : quand une balle entre en collision avec le joueur, nous basculons la variable continuer \u00e0 False pour arr\u00eater la boucle while : for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : if ball . collision ( persoRect ) : continuer = False ball . affiche ( fenetre ) Voil\u00e0, le contrat est rempli. Bien entendu ce n'est qu'un d\u00e9but de jeu, et il reste beaucoup de points \u00e0 am\u00e9liorer. Mais vous avez maintenant les bases pour vous permettre de r\u00e9aliser des jeux d'arcades classiques. le code complet du fichier dodegTheBall.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import pygame from pygame.locals import * from balle import Balle from random import randint pygame . init () pygame . key . set_repeat ( 400 , 30 ) fenetre = pygame . display . set_mode (( 640 , 480 )) fond = pygame . image . load ( \"background.jpg\" ) . convert () perso = pygame . image . load ( \"Perso.png\" ) . convert_alpha () persoRect = perso . get_rect () persoRect . topleft = ( 270 , 380 ) fenetre . blit ( fond ,( 0 , 0 )) continuer = True listeBalles = [] while continuer : if len ( listeBalles ) < 10 and randint ( 1 , 500 ) <= 10 : listeBalles . append ( Balle ( 'golfBall.png' ,( randint ( 25 , 455 ), - 25 ))) for event in pygame . event . get (): if event . type == QUIT : continuer = False if event . type == KEYDOWN : if event . key == K_LEFT : if persoRect . left >= 10 : persoRect = persoRect . move ( - 10 , 0 ) if event . key == K_RIGHT : if persoRect . right <= 630 : persoRect = persoRect . move ( 10 , 0 ) fenetre . blit ( fond , ( 0 , 0 )) for ball in listeBalles : ball . deplace () if ball . rect . top >= 480 : listeBalles . remove ( ball ) else : if ball . collision ( persoRect ) : continuer = False ball . affiche ( fenetre ) fenetre . blit ( perso , persoRect ) pygame . display . update () pygame . time . wait ( 10 ) pygame . quit ()","title":"Apparition des objets Balle et gestion des collisions"},{"location":"Miscellanees/Pygame/InstallationPygame/","text":"Installation de Pygame dans Thonny C'est quoi Pygame Pygame Pygame est une biblioth\u00e8que (= un ensemble de modules), libre, multiplate-forme, qui facilite le d\u00e9veloppement de jeux vid\u00e9o temps r\u00e9el avec le langage de programmation Python. \"Construite sur la biblioth\u00e8que SDL , elle permet de programmer la partie multim\u00e9dia (graphismes, son et entr\u00e9es au clavier, \u00e0 la souris ou au joystick), sans se heurter aux difficult\u00e9s des langages de bas niveaux comme le C et ses d\u00e9riv\u00e9s. Cela se fonde sur la supposition que la partie multim\u00e9dia, souvent la plus contraignante \u00e0 programmer dans un tel jeu, est suffisamment ind\u00e9pendante de la logique m\u00eame du jeu pour qu'on puisse utiliser un langage de haut niveau (en l'occurrence le Python) pour la structure du jeu. Pygame, en plus d'adapter la SDL au Python, fournit \u00e9galement un petit nombre de fonctions sp\u00e9cifiques au d\u00e9veloppement de jeux. On peut aussi remarquer que Pygame n'est plus utilis\u00e9e exclusivement pour des jeux vid\u00e9o, mais \u00e9galement pour des applications diverses n\u00e9cessitant du graphisme. \" wikipedia . Depuis Octobre 2020, apr\u00e8s 20 ans d'existence, pygame est pass\u00e9 en version 2, et c'est une tr\u00e8s bonne nouvelle ! O\u00f9 trouver de la documentation ? La documentation en fran\u00e7ais de Pygame est \u00e0 la fois assez limit\u00e9e (il n'y a pas un site de r\u00e9f\u00e9rence) et en m\u00eame temps tr\u00e8s touffue (on trouve des dizaines de vid\u00e9os tutorielles sur Youtube). On trouvera cependant l'excellent tutoriel situ\u00e9 autrefois sur le site du z\u00e9ro (c'est une copie de mauvaise qualit\u00e9 graphique, mais le document en lui m\u00eame est excellent). Pour les plus anglophones d'entre-vous (mais vous l'\u00eates tous \ud83d\ude1b ), vous trouverez toutes les informations n\u00e9cessaires dans la documentation de pygame . Installation du module dans Thonny How to Dans Thonny, ouvrez le menu Tools puis Manage Packages : Dans la nouvelle fen\u00eatre, tapez pygame puis Search on PyPI : S\u00e9lectionnez le module pygame dans la fen\u00eatre de r\u00e9sultats : Cliquez enfin sur Install : Une fois ces manipulations termin\u00e9es, vous pouvez tester l'installation de Pygame dans le shell de Thonny . Si vous avez un message de bienvenue tel que dans l'image ci-contre, Pygame est install\u00e9. Sinon vous devriez recommencer l'installation, ou bien chercher l'erreur rencontr\u00e9e sur StackOverflow . Installation hors de Thonny Si vous n'utilisez pas d' environnements virtuel python (c'est une tr\u00e8s mauvaise id\u00e9e), vous pouvez toujours utiliser la commande suivante pour installer pygame : python3 -m pip install pygame Si vous utilisez un venv python, vous savez d\u00e9j\u00e0 probablement quoi faire !","title":"Installation"},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-de-pygame-dans-thonny","text":"","title":"Installation de Pygame dans Thonny"},{"location":"Miscellanees/Pygame/InstallationPygame/#cest-quoi-pygame","text":"Pygame Pygame est une biblioth\u00e8que (= un ensemble de modules), libre, multiplate-forme, qui facilite le d\u00e9veloppement de jeux vid\u00e9o temps r\u00e9el avec le langage de programmation Python. \"Construite sur la biblioth\u00e8que SDL , elle permet de programmer la partie multim\u00e9dia (graphismes, son et entr\u00e9es au clavier, \u00e0 la souris ou au joystick), sans se heurter aux difficult\u00e9s des langages de bas niveaux comme le C et ses d\u00e9riv\u00e9s. Cela se fonde sur la supposition que la partie multim\u00e9dia, souvent la plus contraignante \u00e0 programmer dans un tel jeu, est suffisamment ind\u00e9pendante de la logique m\u00eame du jeu pour qu'on puisse utiliser un langage de haut niveau (en l'occurrence le Python) pour la structure du jeu. Pygame, en plus d'adapter la SDL au Python, fournit \u00e9galement un petit nombre de fonctions sp\u00e9cifiques au d\u00e9veloppement de jeux. On peut aussi remarquer que Pygame n'est plus utilis\u00e9e exclusivement pour des jeux vid\u00e9o, mais \u00e9galement pour des applications diverses n\u00e9cessitant du graphisme. \" wikipedia . Depuis Octobre 2020, apr\u00e8s 20 ans d'existence, pygame est pass\u00e9 en version 2, et c'est une tr\u00e8s bonne nouvelle !","title":"C'est quoi Pygame"},{"location":"Miscellanees/Pygame/InstallationPygame/#ou-trouver-de-la-documentation","text":"La documentation en fran\u00e7ais de Pygame est \u00e0 la fois assez limit\u00e9e (il n'y a pas un site de r\u00e9f\u00e9rence) et en m\u00eame temps tr\u00e8s touffue (on trouve des dizaines de vid\u00e9os tutorielles sur Youtube). On trouvera cependant l'excellent tutoriel situ\u00e9 autrefois sur le site du z\u00e9ro (c'est une copie de mauvaise qualit\u00e9 graphique, mais le document en lui m\u00eame est excellent). Pour les plus anglophones d'entre-vous (mais vous l'\u00eates tous \ud83d\ude1b ), vous trouverez toutes les informations n\u00e9cessaires dans la documentation de pygame .","title":"O\u00f9 trouver de la documentation ?"},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-du-module-dans-thonny","text":"How to Dans Thonny, ouvrez le menu Tools puis Manage Packages : Dans la nouvelle fen\u00eatre, tapez pygame puis Search on PyPI : S\u00e9lectionnez le module pygame dans la fen\u00eatre de r\u00e9sultats : Cliquez enfin sur Install : Une fois ces manipulations termin\u00e9es, vous pouvez tester l'installation de Pygame dans le shell de Thonny . Si vous avez un message de bienvenue tel que dans l'image ci-contre, Pygame est install\u00e9. Sinon vous devriez recommencer l'installation, ou bien chercher l'erreur rencontr\u00e9e sur StackOverflow .","title":"Installation du module dans Thonny"},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-hors-de-thonny","text":"Si vous n'utilisez pas d' environnements virtuel python (c'est une tr\u00e8s mauvaise id\u00e9e), vous pouvez toujours utiliser la commande suivante pour installer pygame : python3 -m pip install pygame Si vous utilisez un venv python, vous savez d\u00e9j\u00e0 probablement quoi faire !","title":"Installation hors de Thonny"},{"location":"NSI/Premiere/C01/ProjetPendu/","text":"Projet : Jeu du Pendu principe du projet Vous travaillerez par binomes sur ce projet. Vous rendrez le code complet + votre dossier personnel pour le 16 octobre 2021 au plus tard. Vous aurez un temps en classe pour r\u00e9aliser le projet, mais ce temps ne sera pas suffisant ! Vous devrez vous coordonner pour arriver \u00e0 vos fins ! Description du projet jeu du Pendu Le principe retenu pour le jeu est le suivant : Un mot fran\u00e7ais est tir\u00e9 al\u00e9atoirement depuis un fichier externe. Ce mot est nettoy\u00e9 des accents et autres signes diacritiques fran\u00e7ais ( \u00e7 , \u0153 , \u00e6 , ...) puis converti en majuscules. Les tirets des mots compos\u00e9s sont conserv\u00e9s ! On affiche une s\u00e9rie de tirets correspondant aux emplacements des lettres ainsi que la potence de d\u00e9part du pendu. On demande \u00e0 l'utilisateur une lettre saisie au clavier, et on v\u00e9rifie que : c'est bien une unique lettre ; elle n'a pas d\u00e9j\u00e0 \u00e9t\u00e9 propos\u00e9e. Si la lettre fait partie du mot cherch\u00e9, les tirets correspondants sont remplac\u00e9s par la lettre. Sinon on ajoute un \u00e9l\u00e9ment au dessin du pendu. On reprend \u00e0 l'\u00e9tape 4 tant que : soit il reste des lettres \u00e0 trouver ; soit le pendu est compl\u00e8tement dessin\u00e9 (6 \u00e9checs). Une fois la partie termin\u00e9e, le joueur peut alors choisir de recommencer ou non une nouvelle partie. Le rendu final devrait ressembler si possible \u00e0 celui de la vid\u00e9o suivante : Les fichiers n\u00e9cessaires Mise en place du dossier de projet 1.Vous commencerez par cr\u00e9er un dossier NSI dans votre dossier Documents de votre r\u00e9pertoire personnel. 2.Puis vous cr\u00e9erez un sous dossier C01 dans le dossier NSI . Ce dossier final devra donc avoir comme adresse absolue : P:\\Documents\\NSI\\C01 Fichier de mots Pour mener \u00e0 bien le projet, vous aurez d'abord besoin du fichier des mots fran\u00e7ais. . Vous t\u00e9l\u00e9chargerez celui-ci et le copierez dans P:\\Documents\\NSI\\C01 J'ai retir\u00e9 de celui-ci tous les mots contenant des signes diacritiques autres que : les lettres accentu\u00e9es ; les tirets ; les c\u00e9dilles ; les lettres combin\u00e9es (e dans l'o,...) Les mots peuvent \u00eatre en majuscule, en minuscule, ou toute autre combinanison de casse. Base de code Python Je vous donne le code ci-dessous qui doit \u00eatre votre base de travail. Ce code sera sauvegard\u00e9 dans un fichier ProjetPendu.py qui sera enregistr\u00e9 \u00e0 l'aide du logiciel Thonny dans P:\\Documents\\NSI\\C01 from random import choice def choixMot ( adresseFichier ) : \"\"\" fonction ouvrant un fichier texte dont l'adresse absolue ou relative est pass\u00e9e en argument sous la forme d'une chaine de caract\u00e8re et renvoyant une chaine de caract\u00e8re issue d'une ligne al\u00e9atoire du fichier \"\"\" with open ( adresseFichier , 'r' , encoding = 'utf8' ) as file : mot = choice ([ m for m in file . readlines ()]) . replace ( ' \\n ' , '' ) . strip () return mot def formateMot ( mot ) : \"\"\" fonction transformant une chaine de caract\u00e8res accentu\u00e9s en une chaine de caract\u00e8re latin strict (sans accents ni signes diacritiques). La chaine renvoy\u00e9e est en majuscule. >>> formateMot('tRuC') 'TRUC' >>> formateMot('Ab\u00e9c\u00e9daire') 'ABECEDAIRE' >>> formateMot('') '' >>> formateMot('o\u00f9') 'OU' >>> formateMot('gar\u00e7ONs') 'GARCONS' >>> formateMot('\u00e0\u00e2\u00e4\u00e9\u00e8\u00ea\u00eb\u00ee\u00ef\u00f4\u00f6\u00fb\u00f9\u00fc\u00e7') 'AAAEEEEIIOOUUUC' >>> formateMot('\u0153il') 'OEIL' >>> formateMot('L\u00e6titia') 'LAETITIA' \"\"\" ... def genereTirets ( motATrouver , lettresUtilisees ) : \"\"\" fonction renvoyant une chaine de caract\u00e8re correspondant au mot \u00e0 trouver pour lequel : * les caract\u00e8res non pr\u00e9sents dans la chaine lettreUtilisees sont remplac\u00e9s par des _ (underscores) ; * les tirest hauts \"-\" sont conserv\u00e9s ; * tous les caract\u00e8res sont suivis d'un espace, y compris le dernier. >>> genereTirets(\"Bidules\", \"Ble\") 'B _ _ _ l e _ ' >>> genereTirets(\"toto\", \"\") '_ _ _ _ ' >>> genereTirets(\"bananes\", \"bn\") 'b _ n _ n _ _ ' >>> genereTirets(\"toto\", \"ot\") 't o t o ' >>> genereTirets(\"pull-over\", \"plr\") 'p _ l l - _ _ _ r ' >>> genereTirets(\"pull-over\", \"pulover\") 'p u l l - o v e r ' \"\"\" ... def compteRestantes ( motATrouver , lettresUtilisees ) : \"\"\" fonction renvoyant le nombre de lettres non encore trouv\u00e9es dans le mot, en connaissant les lettres d\u00e9j\u00e0 utilis\u00e9es. Un tiret haut \"-\" ne compte pas dans les lettres \u00e0 trouver. La valeur renvoy\u00e9e est un entier >>> compteRestantes(\"bananes\",\"bn\") 4 >>> compteRestantes(\"toto\",\"to\") 0 >>> compteRestantes(\"toto\",\"\") 4 >>> compteRestantes(\"\",\"\") 0 >>> compteRestantes(\"\",\"z\") 0 >>> compteRestantes(\"bidules\",\"bidule\") 1 >>> compteRestantes(\"pull-over\", \"plr\") 4 >>> compteRestantes(\"pull-over\", \"pulover\") 0 \"\"\" ... def affichePendu ( motATrouver , lettresUtilisees , nbEchecs ) : \"\"\" fonction affichant \u00e0 la fois la potence mais aussi le mot \u00e0 trouver sous sa forme de tirets \"\"\" ... def demandeJoueurLettre (): \"\"\" fonction demandant une lettre latine non accentu\u00e9e au joueur, et renvoyant cette lettre en majuscule. La fonction redemande au joueur tant que celui-ci n'a pas fourni une lettre correcte. La lettre est renvoy\u00e9e en par la fonction. \"\"\" ... def uneManche () : \"\"\" fonction d\u00e9clenchant une manche de jeu. On entend par manche de jeu : * le choix d'un mot dans le fichier 'liste_francais_modifiee.txt' ; * le formatage de ce mot ; * puis la r\u00e9p\u00e9titions de : * la demande d'une lettre au joueur ; * la mise \u00e0 jour des lettres utilis\u00e9e le cas \u00e9ch\u00e9ant ; * la mise \u00e0 jour de l'affichage jusqu'\u00e0 ce que soit le mot complet ait \u00e9t\u00e9 trouv\u00e9, soit que le dessin du pendu soit termin\u00e9 (6 \u00e9tapes). \"\"\" ... def presentation () : \"\"\" fonction affichant uniquement la pr\u00e9sentation\"\"\" print ( \"\"\" ############################################## # # # Jeu du Pendu # # # # 1\u00e8re NSI 2021-2022 # ############################################## \"\"\" ) def main () : \"\"\" fonction principale du jeu, permettant d'effectuer plusieurs manches\"\"\" while True : presentation () uneManche () rep = input ( \"Voulez-vous rejouer ? (o/n)\" ) if rep . lower () not in [ 'o' , 'oui' , 'y' , 'yes' ] : break print ( \"Au revoir !\" ) ## La partie ci-dessous n'est effectu\u00e9e que si vous d\u00e9clenchez le programme ## en tant que programme principal (notion de modules, vue en terminale) if __name__ == \"__main__\" : import doctest doctest . testmod () main () fonction choixMot(adresseFichier) Cette fonction ne doit pas \u00eatre modifi\u00e9e ! Elle prend en argument l'adresse relative ou absolue d'un fichier texte, et renvoie la chaine de caract\u00e8res correspondant \u00e0 une ligne de ce fichier, o\u00f9 : les \u00e9ventuels espaces de d\u00e9but et de fin de ligne sont supprim\u00e9s ; les caract\u00e8res retour chariot (sauts de lignes) \\n sont supprim\u00e9s. Dans le cadre de ce projet, le fichier liste_francais_modifiee.txt doit normalement \u00eatre situ\u00e9 dans le m\u00eame r\u00e9pertoire que ProjetPendu.py . Donc vous pouvez utiliser cette fonction de la mani\u00e8re suivante : mot = choixMot ( \"liste_francais_modifiee.txt\" ) Ainsi la variable mot contiendra un mot extrait al\u00e9atoirement du fichier. Plan de travail Vous commencerez par compl\u00e9ter la fonction formateMot(mot) , afin qu'elle renvoie une cha\u00eene de caract\u00e8res en majuscule dans laquelle tous les signes diacritiques ont \u00e9t\u00e9 supprim\u00e9s (\u00e0 par les tirets des mots compos\u00e9s). Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres. Vous compl\u00e8terez ensuite la fonction genereTirets(motATrouver,lettresUtilisees) , qui renvoie une cha\u00eene de caract\u00e8res correspondant \u00e0 celle pass\u00e9e en premier argument motATrouver , pour laquelle les lettres non pr\u00e9sentes dans la cha\u00eene de caract\u00e8re lettresUtilisees . De plus, chaque caract\u00e8re de la cha\u00eene finale devra \u00eatre suivi d'un espace . Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres. Vous compl\u00e8terez la fonction compteRestantes(motATrouver,lettresUtilisees) qui renvoie un entier correspondant au nombre de lettres restant \u00e0 trouver dans motATrouver sachant la cha\u00eene de lettres d\u00e9j\u00e0 utilis\u00e9es lettresUtilisees . Vous compl\u00e8terez ensuite la fonction demandeJoueurLettre() et la rendrez dumbproof : cette fonction doit continuer \u00e0 redemander au joueur de saisir une lettre tant que celle-ci n'est pas compatible avec les r\u00e8gles du jeu. Vous compl\u00e8terez ensuite la fonction affichePendu(motATrouver, lettresUtilisees, nbEchecs) qui affiche non seulement la potence, amis aussi le mot \u00e0 trouver sous sa forme de tirets. Pour construire cette fonction, vous utiliserez une f-string multi-lignes telle que : 1 2 3 4 5 6 7 8 9 f \"\"\" _ _ _ o | / | \\ | / \\ | | _______|__ \"\"\" 6. A partir de toutes les fonctions pr\u00e9c\u00e9dentes, vous finaliserez le jeu en compl\u00e9tant la fonction uneManche() . Une fois le jeu compl\u00e9t\u00e9, vous devrez en outre compl\u00e9ter un dossier personnel d'une ou deux pages pr\u00e9sentant : ce que vous avez r\u00e9alis\u00e9 individuellement dans ce projet ; les difficult\u00e9s rencontr\u00e9es et/ou les probl\u00e8mes que vous n'avez pas pu r\u00e9soudre ; les aides qui vous on \u00e9t\u00e9 apport\u00e9es. Vous pourrez enfin apporter des modifications et/ou am\u00e9liorations au code, par exemple en : ajoutant un compteur de score qui donne le nombre de r\u00e9ussites par rapport au nombre de parties jou\u00e9es. ajouter un niveau de difficult\u00e9, en changeant le nombre d'erreurs possibles ; etc... Grille de notation intitul\u00e9 bar\u00eame D\u00e9tails fonction formateMot 2 pt passage de tous les tests unitaires fonction genereTirets 2 pt passage de tous les tests unitaires fonction compteRestantes 1 pt passage de tous les tests unitaires fonction demandeJoueurLettre 1 pt dumbproof fonction affichePendu 2 pt Affichage correct fonction uneManche 3 pts On attend un jeu a minima fonctionnel Noms des variables clairs 2 pts On proscrira les noms de variable d'un seul caract\u00e8re, sauf compteurs pr\u00e9cis Code comment\u00e9 et clair 3 pts Des explications minimales doivent \u00eatre \u00e9crites pour expliquer votre code R\u00e9alisation d'un dossier personnel 2pts Rendu au format PDF ou ODT Am\u00e9liorations, qualit\u00e9 du code, etc... 2 pts","title":"Projet : Jeu du Pendu"},{"location":"NSI/Premiere/C01/ProjetPendu/#projet-jeu-du-pendu","text":"principe du projet Vous travaillerez par binomes sur ce projet. Vous rendrez le code complet + votre dossier personnel pour le 16 octobre 2021 au plus tard. Vous aurez un temps en classe pour r\u00e9aliser le projet, mais ce temps ne sera pas suffisant ! Vous devrez vous coordonner pour arriver \u00e0 vos fins !","title":"Projet : Jeu du Pendu"},{"location":"NSI/Premiere/C01/ProjetPendu/#description-du-projet","text":"jeu du Pendu Le principe retenu pour le jeu est le suivant : Un mot fran\u00e7ais est tir\u00e9 al\u00e9atoirement depuis un fichier externe. Ce mot est nettoy\u00e9 des accents et autres signes diacritiques fran\u00e7ais ( \u00e7 , \u0153 , \u00e6 , ...) puis converti en majuscules. Les tirets des mots compos\u00e9s sont conserv\u00e9s ! On affiche une s\u00e9rie de tirets correspondant aux emplacements des lettres ainsi que la potence de d\u00e9part du pendu. On demande \u00e0 l'utilisateur une lettre saisie au clavier, et on v\u00e9rifie que : c'est bien une unique lettre ; elle n'a pas d\u00e9j\u00e0 \u00e9t\u00e9 propos\u00e9e. Si la lettre fait partie du mot cherch\u00e9, les tirets correspondants sont remplac\u00e9s par la lettre. Sinon on ajoute un \u00e9l\u00e9ment au dessin du pendu. On reprend \u00e0 l'\u00e9tape 4 tant que : soit il reste des lettres \u00e0 trouver ; soit le pendu est compl\u00e8tement dessin\u00e9 (6 \u00e9checs). Une fois la partie termin\u00e9e, le joueur peut alors choisir de recommencer ou non une nouvelle partie. Le rendu final devrait ressembler si possible \u00e0 celui de la vid\u00e9o suivante :","title":"Description du projet"},{"location":"NSI/Premiere/C01/ProjetPendu/#les-fichiers-necessaires","text":"Mise en place du dossier de projet 1.Vous commencerez par cr\u00e9er un dossier NSI dans votre dossier Documents de votre r\u00e9pertoire personnel. 2.Puis vous cr\u00e9erez un sous dossier C01 dans le dossier NSI . Ce dossier final devra donc avoir comme adresse absolue : P:\\Documents\\NSI\\C01 Fichier de mots Pour mener \u00e0 bien le projet, vous aurez d'abord besoin du fichier des mots fran\u00e7ais. . Vous t\u00e9l\u00e9chargerez celui-ci et le copierez dans P:\\Documents\\NSI\\C01 J'ai retir\u00e9 de celui-ci tous les mots contenant des signes diacritiques autres que : les lettres accentu\u00e9es ; les tirets ; les c\u00e9dilles ; les lettres combin\u00e9es (e dans l'o,...) Les mots peuvent \u00eatre en majuscule, en minuscule, ou toute autre combinanison de casse. Base de code Python Je vous donne le code ci-dessous qui doit \u00eatre votre base de travail. Ce code sera sauvegard\u00e9 dans un fichier ProjetPendu.py qui sera enregistr\u00e9 \u00e0 l'aide du logiciel Thonny dans P:\\Documents\\NSI\\C01 from random import choice def choixMot ( adresseFichier ) : \"\"\" fonction ouvrant un fichier texte dont l'adresse absolue ou relative est pass\u00e9e en argument sous la forme d'une chaine de caract\u00e8re et renvoyant une chaine de caract\u00e8re issue d'une ligne al\u00e9atoire du fichier \"\"\" with open ( adresseFichier , 'r' , encoding = 'utf8' ) as file : mot = choice ([ m for m in file . readlines ()]) . replace ( ' \\n ' , '' ) . strip () return mot def formateMot ( mot ) : \"\"\" fonction transformant une chaine de caract\u00e8res accentu\u00e9s en une chaine de caract\u00e8re latin strict (sans accents ni signes diacritiques). La chaine renvoy\u00e9e est en majuscule. >>> formateMot('tRuC') 'TRUC' >>> formateMot('Ab\u00e9c\u00e9daire') 'ABECEDAIRE' >>> formateMot('') '' >>> formateMot('o\u00f9') 'OU' >>> formateMot('gar\u00e7ONs') 'GARCONS' >>> formateMot('\u00e0\u00e2\u00e4\u00e9\u00e8\u00ea\u00eb\u00ee\u00ef\u00f4\u00f6\u00fb\u00f9\u00fc\u00e7') 'AAAEEEEIIOOUUUC' >>> formateMot('\u0153il') 'OEIL' >>> formateMot('L\u00e6titia') 'LAETITIA' \"\"\" ... def genereTirets ( motATrouver , lettresUtilisees ) : \"\"\" fonction renvoyant une chaine de caract\u00e8re correspondant au mot \u00e0 trouver pour lequel : * les caract\u00e8res non pr\u00e9sents dans la chaine lettreUtilisees sont remplac\u00e9s par des _ (underscores) ; * les tirest hauts \"-\" sont conserv\u00e9s ; * tous les caract\u00e8res sont suivis d'un espace, y compris le dernier. >>> genereTirets(\"Bidules\", \"Ble\") 'B _ _ _ l e _ ' >>> genereTirets(\"toto\", \"\") '_ _ _ _ ' >>> genereTirets(\"bananes\", \"bn\") 'b _ n _ n _ _ ' >>> genereTirets(\"toto\", \"ot\") 't o t o ' >>> genereTirets(\"pull-over\", \"plr\") 'p _ l l - _ _ _ r ' >>> genereTirets(\"pull-over\", \"pulover\") 'p u l l - o v e r ' \"\"\" ... def compteRestantes ( motATrouver , lettresUtilisees ) : \"\"\" fonction renvoyant le nombre de lettres non encore trouv\u00e9es dans le mot, en connaissant les lettres d\u00e9j\u00e0 utilis\u00e9es. Un tiret haut \"-\" ne compte pas dans les lettres \u00e0 trouver. La valeur renvoy\u00e9e est un entier >>> compteRestantes(\"bananes\",\"bn\") 4 >>> compteRestantes(\"toto\",\"to\") 0 >>> compteRestantes(\"toto\",\"\") 4 >>> compteRestantes(\"\",\"\") 0 >>> compteRestantes(\"\",\"z\") 0 >>> compteRestantes(\"bidules\",\"bidule\") 1 >>> compteRestantes(\"pull-over\", \"plr\") 4 >>> compteRestantes(\"pull-over\", \"pulover\") 0 \"\"\" ... def affichePendu ( motATrouver , lettresUtilisees , nbEchecs ) : \"\"\" fonction affichant \u00e0 la fois la potence mais aussi le mot \u00e0 trouver sous sa forme de tirets \"\"\" ... def demandeJoueurLettre (): \"\"\" fonction demandant une lettre latine non accentu\u00e9e au joueur, et renvoyant cette lettre en majuscule. La fonction redemande au joueur tant que celui-ci n'a pas fourni une lettre correcte. La lettre est renvoy\u00e9e en par la fonction. \"\"\" ... def uneManche () : \"\"\" fonction d\u00e9clenchant une manche de jeu. On entend par manche de jeu : * le choix d'un mot dans le fichier 'liste_francais_modifiee.txt' ; * le formatage de ce mot ; * puis la r\u00e9p\u00e9titions de : * la demande d'une lettre au joueur ; * la mise \u00e0 jour des lettres utilis\u00e9e le cas \u00e9ch\u00e9ant ; * la mise \u00e0 jour de l'affichage jusqu'\u00e0 ce que soit le mot complet ait \u00e9t\u00e9 trouv\u00e9, soit que le dessin du pendu soit termin\u00e9 (6 \u00e9tapes). \"\"\" ... def presentation () : \"\"\" fonction affichant uniquement la pr\u00e9sentation\"\"\" print ( \"\"\" ############################################## # # # Jeu du Pendu # # # # 1\u00e8re NSI 2021-2022 # ############################################## \"\"\" ) def main () : \"\"\" fonction principale du jeu, permettant d'effectuer plusieurs manches\"\"\" while True : presentation () uneManche () rep = input ( \"Voulez-vous rejouer ? (o/n)\" ) if rep . lower () not in [ 'o' , 'oui' , 'y' , 'yes' ] : break print ( \"Au revoir !\" ) ## La partie ci-dessous n'est effectu\u00e9e que si vous d\u00e9clenchez le programme ## en tant que programme principal (notion de modules, vue en terminale) if __name__ == \"__main__\" : import doctest doctest . testmod () main () fonction choixMot(adresseFichier) Cette fonction ne doit pas \u00eatre modifi\u00e9e ! Elle prend en argument l'adresse relative ou absolue d'un fichier texte, et renvoie la chaine de caract\u00e8res correspondant \u00e0 une ligne de ce fichier, o\u00f9 : les \u00e9ventuels espaces de d\u00e9but et de fin de ligne sont supprim\u00e9s ; les caract\u00e8res retour chariot (sauts de lignes) \\n sont supprim\u00e9s. Dans le cadre de ce projet, le fichier liste_francais_modifiee.txt doit normalement \u00eatre situ\u00e9 dans le m\u00eame r\u00e9pertoire que ProjetPendu.py . Donc vous pouvez utiliser cette fonction de la mani\u00e8re suivante : mot = choixMot ( \"liste_francais_modifiee.txt\" ) Ainsi la variable mot contiendra un mot extrait al\u00e9atoirement du fichier.","title":"Les fichiers n\u00e9cessaires"},{"location":"NSI/Premiere/C01/ProjetPendu/#plan-de-travail","text":"Vous commencerez par compl\u00e9ter la fonction formateMot(mot) , afin qu'elle renvoie une cha\u00eene de caract\u00e8res en majuscule dans laquelle tous les signes diacritiques ont \u00e9t\u00e9 supprim\u00e9s (\u00e0 par les tirets des mots compos\u00e9s). Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres. Vous compl\u00e8terez ensuite la fonction genereTirets(motATrouver,lettresUtilisees) , qui renvoie une cha\u00eene de caract\u00e8res correspondant \u00e0 celle pass\u00e9e en premier argument motATrouver , pour laquelle les lettres non pr\u00e9sentes dans la cha\u00eene de caract\u00e8re lettresUtilisees . De plus, chaque caract\u00e8re de la cha\u00eene finale devra \u00eatre suivi d'un espace . Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres. Vous compl\u00e8terez la fonction compteRestantes(motATrouver,lettresUtilisees) qui renvoie un entier correspondant au nombre de lettres restant \u00e0 trouver dans motATrouver sachant la cha\u00eene de lettres d\u00e9j\u00e0 utilis\u00e9es lettresUtilisees . Vous compl\u00e8terez ensuite la fonction demandeJoueurLettre() et la rendrez dumbproof : cette fonction doit continuer \u00e0 redemander au joueur de saisir une lettre tant que celle-ci n'est pas compatible avec les r\u00e8gles du jeu. Vous compl\u00e8terez ensuite la fonction affichePendu(motATrouver, lettresUtilisees, nbEchecs) qui affiche non seulement la potence, amis aussi le mot \u00e0 trouver sous sa forme de tirets. Pour construire cette fonction, vous utiliserez une f-string multi-lignes telle que : 1 2 3 4 5 6 7 8 9 f \"\"\" _ _ _ o | / | \\ | / \\ | | _______|__ \"\"\" 6. A partir de toutes les fonctions pr\u00e9c\u00e9dentes, vous finaliserez le jeu en compl\u00e9tant la fonction uneManche() . Une fois le jeu compl\u00e9t\u00e9, vous devrez en outre compl\u00e9ter un dossier personnel d'une ou deux pages pr\u00e9sentant : ce que vous avez r\u00e9alis\u00e9 individuellement dans ce projet ; les difficult\u00e9s rencontr\u00e9es et/ou les probl\u00e8mes que vous n'avez pas pu r\u00e9soudre ; les aides qui vous on \u00e9t\u00e9 apport\u00e9es. Vous pourrez enfin apporter des modifications et/ou am\u00e9liorations au code, par exemple en : ajoutant un compteur de score qui donne le nombre de r\u00e9ussites par rapport au nombre de parties jou\u00e9es. ajouter un niveau de difficult\u00e9, en changeant le nombre d'erreurs possibles ; etc...","title":"Plan de travail"},{"location":"NSI/Premiere/C01/ProjetPendu/#grille-de-notation","text":"intitul\u00e9 bar\u00eame D\u00e9tails fonction formateMot 2 pt passage de tous les tests unitaires fonction genereTirets 2 pt passage de tous les tests unitaires fonction compteRestantes 1 pt passage de tous les tests unitaires fonction demandeJoueurLettre 1 pt dumbproof fonction affichePendu 2 pt Affichage correct fonction uneManche 3 pts On attend un jeu a minima fonctionnel Noms des variables clairs 2 pts On proscrira les noms de variable d'un seul caract\u00e8re, sauf compteurs pr\u00e9cis Code comment\u00e9 et clair 3 pts Des explications minimales doivent \u00eatre \u00e9crites pour expliquer votre code R\u00e9alisation d'un dossier personnel 2pts Rendu au format PDF ou ODT Am\u00e9liorations, qualit\u00e9 du code, etc... 2 pts","title":"Grille de notation"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/","text":"Binaire et repr\u00e9sentation des entiers L'information binaire Le bit L'histoire de l'informatique est intrins\u00e8quement d\u00e9pendante de l'histoire de la ma\u00eetrise de l'\u00e9lectricit\u00e9. Fondamentalement, tout ordinateur est construit \u00e0 partir de circuits \u00e9lectroniques qui: soit ne laissent pas passer le courant \u00e9lectrique ( Off ); soit laissent passer le courant \u00e9lectrique ( In ). Exemple Un circuit contenant un unique interrupteur admet donc deux \u00e9tats , il est binaire dans ce sens. D\u00e9finition : bit Un bit est l'unit\u00e9 \u00e9l\u00e9mentaire d'information pouvant prendre deux valeurs distinctes, not\u00e9es 0 et 1 (binaire). Le mot \u00ab bit \u00bb vient de l'anglais \u00ab Bi nary Digi t \u00bb, soit litt\u00e9ralement chiffre binaire . La notation internationale pour le bit est \\(b\\) . On parlera alors de \\(kb\\) , \\(Mb\\) , \\(Gb\\) . Grouper les bits Une information binaire est donc une suite de \\(0\\) et de \\(1\\) . Cette information peut-\u00eatre de diff\u00e9rente nature, tout d\u00e9pend de la norme d'encodage utilis\u00e9e. En soit, la m\u00eame suite binaire peut signifier des choses totalement diff\u00e9rentes comme : un nombre entier ; un nombre flottant ; un caract\u00e8re ; une note de musique ; ... Exemple L'\u00e9criture binaire \\(101010\\) signifie : \\(42\\) dans les nombres entiers non sign\u00e9s (c'est-\u00e0-dire positifs) ; >>> int ( '101010' , 2 ) 42 Le caract\u00e8re * en UTF-8 : >>> chr ( int ( '101010' , 2 )) '*' Bits et quantit\u00e9s d'informations Avec un unique bit, on ne peux stocker que deux informations (deux nombres, deux caract\u00e8res, deux notes de musiques,...). La quantit\u00e9 d'information diff\u00e9rentes pouvant \u00eatre repr\u00e9sent\u00e9es d\u00e9pend donc du nombre de bits utilis\u00e9s : Avec \\(2\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 = 2^2 = 4\\) informations diff\u00e9rentes. Avec \\(3\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 \\times 2= 2^3 = 8\\) informations diff\u00e9rentes. Avec \\(4\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 \\times 2 \\times 2= 2^4 = 16\\) informations diff\u00e9rentes. Avec un syst\u00e8me \u00e0 \\(n\\) bits, on peut repr\u00e9senter \\(2^n\\) informations diff\u00e9rentes. Octets Octets Pour quantifier les informations binaires, on utilise souvent le mot octet ( abusivement appel\u00e9 aussi byte dans le monde anglo-saxon). Un octet est un groupement de \\(8\\) bits. Il permet de repr\u00e9senter \\(2^8 = 256\\) informations diff\u00e9rentes. La notation internationale pour l'octet est \\(o\\) . On parlera alors de \\(ko\\) ( \\(1~ko = 1000 o\\) ), \\(Mo\\) ( \\(1~Mo = 10^3~ko = 10^6~o\\) ), \\(Go\\) ( \\(1~Go = 10^3~Mo = 10^9~o\\) ), etc, mais aussi de \\(ko/s\\) , \\(Mo/s\\) , etc... Remarque Les pr\u00e9fixes kilo , Mega , Giga ..., sont bien ceux du syst\u00e8me international, c'est-\u00e0-dire ceux pour \\(10^3\\) , \\(10^6\\) , \\(10^9\\) ... On verra dans la partie suivante qu'ils sont parfois confondus avec les pr\u00e9fixes binaires ( kibi , Mibi , Gibi ...) Ecritures en d'autres bases Les entiers en base d\u00e9cimale Rappels : Base d\u00e9cimale Un nombre entier \u00e9crit dans une base d\u00e9cimale ( base \\(10\\) ) v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les dix chiffres arabes : \\(0,1,2,3,4,5,6,7,8,9\\) ; chaque chiffre poss\u00e8de un poids, repr\u00e9sentant une puissance de \\(10\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Exercice Enonc\u00e9 \\(14~763 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 7 \\times 10^{\\dots}+ 6\\times 10^{\\dots} + 3\\times 10^{\\dots}\\) \\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\) Solution \\(14~763 = 1 \\times 10^{4} + 4 \\times 10^{3} + 7 \\times 10^{2}+ 6\\times 10^{1} + 3\\times 10^{0}\\) \\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\) La base 2 (syst\u00e8me binaire) Syst\u00e8me binaire Un nombre entier \u00e9crit dans le syst\u00e8me binaire v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les deux chiffres : \\(0\\) et \\(1\\) . chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(2\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Remarques et notations L'\u00e9criture \\(101\\) poss\u00e8de aussi bien un sens en binaire (un-z\u00e9ro-un) qu'en d\u00e9cimal ( cent-un ). Pour lever l'ambigu\u00eft\u00e9 , on \u00e9crira : \\((101)_{10}\\) ou simplement \\(101\\) pour le nombre en base \\(10\\) ; \\((101)_2\\) pour le nombre en base \\(2\\) . Exercice Enonc\u00e9 Consid\u00e9rons le nombre \\((101010)_2\\) . Convertissez ce nombre binaire en d\u00e9cimal : Solution \\[ \\begin{array}{cccccccc} (101010)_2&=& 1 \\times 2^{5}&+ 0 \\times 2^{4}&+ 1 \\times 2^{3}&+ 0 \\times 2^{2}&+ 1 \\times 2^{1}&+ 0 \\times 2^{0}\\\\ & = & 1 \\times 32 & + 0 \\times 16& + 1 \\times 8& + 0 \\times 4& + 1 \\times 2& + 0 \\times 1\\\\ &=& 42 &&&&&\\\\ \\end{array} \\] Exercice : Conversions de la base \\(2\\) vers la base \\(10\\) Enonc\u00e9 Ecrire les nombres suivants en base \\(10\\) : \\((101)_2\\) \\((11111111)_2\\) \\((10010011)_2\\) Solution A venir ! Exercice : Un peu de Python Enonc\u00e9 Compl\u00e9ter la fonction suivante, sans utiliser int(x,2) , afin qu'elle renvoie en base 10 le nombre \\(x\\) pass\u00e9 en argument en base \\(2\\) , sous la forme d'une chaine de caract\u00e8res. Vous pouvez cependant utiliser la fonction built-in int afin de convertir une chaine de carat\u00e8re en un entier. def bin2dec ( x ) : \"\"\"fonction convertissant le nombre (x)_2 en base 10 >>> bin2dec('0') 0 >>> bin2dec('1') 1 >>> bin2dec('11') 3 >>> bin2dec('1000') 8 >>> bin2dec('11111111') 255 \"\"\" Conversions de la base \\(10\\) vers la base \\(2\\) M\u00e9thode : Algorithme de conversion du nombre \\((n)_{10}\\) en base \\(2\\) En langage naturel fonction dec2bin(n) : base2 <- chaine de caract\u00e8re vide Tant que n!=0 : base2 <- base2+caractere(n%2) n <- n//2 Renvoyer base2 invers\u00e9e Sous forme de diagramme Exemple : Conversion de \\((135)_{10}\\) en base \\(2\\) A venir ! Conversions manuelles Enonc\u00e9 Convertir les nombres suivants en base \\(2\\) : \\((26)_{10}\\) \\((104)_{10}\\) \\((256)_{10}\\) \\((42)_{10}\\) Solution A venir ! Exercice : De l'algorithme au programme Enonc\u00e9 Compl\u00e9ter la fonction suivante en Python, qui renvoie la chaine de caract\u00e8res correspondant \u00e0 l'\u00e9criture de \\(n\\) en base \\(2\\) . def dec2bin ( n ) : \"\"\"fonction convertissant le nombre n en base 2, et renvoyant la chaine de caract\u00e8res correspondante >>> dec2bin(0) '0' >>> dec2bin(1) '1' >>> dec2bin(3) '11' >>> dec2bin(8) '1000' >>> dec2bin(255) '11111111' \"\"\" Solution A venir ! Nombre de bits n\u00e9cessaires Soit \\((x)_{10}\\) un nombre \u00e9crit en base \\(10\\) . Si \\(n\\) est l'entier tel que \\(2^{n-1} \\leqslant x <2^n\\) , alors le nombre \\(x\\) n\u00e9cessitera \\(n\\) bits pour \u00eatre repr\u00e9sent\u00e9 en binaire. Exercice : Nombre de bits n\u00e9cessaires Enonc\u00e9 D\u00e9terminer pour chacun des nombres ci-dessous le nombre de bits minimal qui seront n\u00e9cessaire dans l'\u00e9criture binaire de ce nombre : \\(12\\) \\(123\\) \\(999\\) \\(1927\\) Solution A venir ! Une autre base utile : l'hexad\u00e9cimal Outre que la lecture des nombres en \u00e9criture binaire par un humain est tr\u00e8s compliqu\u00e9e, il faut remarquer que, de par la construction de ces nombres, la quantit\u00e9 de symboles utilis\u00e9s en base \\(2\\) est largement sup\u00e9rieur \u00e0 celui utilis\u00e9 en base \\(10\\) - \\(3,2\\) fois plus grand en moyenne sur les \\(100~000\\) premiers entiers. Il peut donc \u00eatre utile de trouver un compromis entre la base \\(2\\) , utile pour l'ordinateur, et la base \\(10\\) , plus compr\u00e9hensible par un \u00eatre humain. Ce compromis peut-\u00eatre trouv\u00e9 avec le syst\u00e8me hexad\u00e9cimal , c'est-\u00e0-dire un syst\u00e8me de base 16 . Base hexad\u00e9cimale Un nombre entier \u00e9crit dans une base hexad\u00e9cimale ( base \\(16\\) ) v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les seize chiffres hexad\u00e9cimaux : \\(0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F\\) ; chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(16\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Exemple Le nombre hexad\u00e9cimal \\((5B6)_{16}\\) correspond donc en d\u00e9cimal \u00e0 : A compl\u00e9ter \\[ \\begin{array}{ccccc} (5B6)_{16}&=& \\dots \\times 16^{\\dots}&+ \\dots \\times 16^{\\dots}&+ \\dots \\times 16^{\\dots}\\\\ &=& \\dots \\times \\dots&+ \\dots \\times \\dots&+ \\dots \\times \\dots\\\\ &=&&&\\\\ \\end{array} \\] Solution \\[ \\begin{array}{ccccc} (5B6)_{16}&=& 5 \\times 16^{2}&+ 11 \\times 16^{1}&+ 6 \\times 16^{0}\\\\ &=& 5 \\times 256&+ 11 \\times 16&+ 6 \\times 1\\\\ &=&1~462&&\\\\ \\end{array} \\] Exercice Enonc\u00e9 Convertir de l'hexad\u00e9cimal vers le d\u00e9cimal : \\((FF)_{16}\\) \\((6E)_{16}\\) \\((245A)_{16}\\) M\u00e9thode : Convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal Pour convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal, on utilise la m\u00eame m\u00e9thode qu'en binaire mais en divisant par \\(16\\) . Exemple Enonc\u00e9 Convertir le nombre \\(244\\) en hexad\u00e9cimal. Solution A venir ! Remarques A un chiffre dans la base \\(16\\) , correspond exactement \\(4\\) chiffres dans la base \\(2\\) . Cela signifie que pour \u00e9crire un octet en hexad\u00e9cimal, deux chiffres hexad\u00e9cimaux suffisent . C'est pour cette raison que les octets \u00e9crits en base deux sont group\u00e9s par 4 chiffres : \\[ (189)_{10} = (BD)_{16} = (1011~1101)_2 \\] Ce syst\u00e8me de notation est tr\u00e8s pratique pour noter les codes des couleurs (par exemple en RGB : #7455BA signifie que l'octet repr\u00e9sentant le canal rouge a pour valeur 74 , celui du canal vert 55 , et celui du canal bleu BA ), pour les cl\u00e9s de chiffrement (code Wifi par exemple), ... Roue num\u00e9rique Ecriture d\u00e9cimale 0 0 0 - Reset + Ecriture binaire 0 0 0 0 0 0 0 0 Ecriture hexad\u00e9cimale 0 0 Acc\u00e8s au fichier de base : ici Op\u00e9rations \u00e9l\u00e9mentaires sur les nombres binaires Sommes de nombres binaires M\u00e9thode : Additionner deux nombres entiers en base 2 La technique d'addition de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale : En d\u00e9cimal \\[ \\begin{array}{cccc} &1&4&9\\\\ +&&7&8\\\\\\hline &&&\\\\ \\end{array} \\] En binaire \\[ \\begin{array}{*{9}{c}} &1&0&0&1&0&1&0&1\\\\ +&&1&0&0&1&1&1&0\\\\\\hline &&&&&&&&\\\\ \\end{array} \\] Produits de nombres binaires M\u00e9thode : Multiplier deux nombres entiers en base 2 La technique de multiplication de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale - mais la retenue peut se propager parfois plus loin que le rang imm\u00e9diatement sup\u00e9rieur : En d\u00e9cimal \\[ \\begin{array}{cccc} &&2&7\\\\ \\times&&1&3\\\\\\hline &&&\\\\ +&&&\\\\\\hline &&&\\\\ \\end{array} \\] En binaire \\[ \\begin{array}{*{10}{c}} &&&&&1&1&0&1&1\\\\ \\times&&&&&&1&1&0&1\\\\\\hline &&&&&&&&&\\\\ +&&&&&&&&&\\\\ +&&&&&&&&&\\\\ +&&&&&&&&&\\\\\\hline &&&&&&&&&\\\\ \\end{array} \\]","title":"Binaire et codage des entiers"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#binaire-et-representation-des-entiers","text":"","title":"Binaire et repr\u00e9sentation des entiers"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#linformation-binaire","text":"","title":"L'information binaire"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#le-bit","text":"L'histoire de l'informatique est intrins\u00e8quement d\u00e9pendante de l'histoire de la ma\u00eetrise de l'\u00e9lectricit\u00e9. Fondamentalement, tout ordinateur est construit \u00e0 partir de circuits \u00e9lectroniques qui: soit ne laissent pas passer le courant \u00e9lectrique ( Off ); soit laissent passer le courant \u00e9lectrique ( In ). Exemple Un circuit contenant un unique interrupteur admet donc deux \u00e9tats , il est binaire dans ce sens. D\u00e9finition : bit Un bit est l'unit\u00e9 \u00e9l\u00e9mentaire d'information pouvant prendre deux valeurs distinctes, not\u00e9es 0 et 1 (binaire). Le mot \u00ab bit \u00bb vient de l'anglais \u00ab Bi nary Digi t \u00bb, soit litt\u00e9ralement chiffre binaire . La notation internationale pour le bit est \\(b\\) . On parlera alors de \\(kb\\) , \\(Mb\\) , \\(Gb\\) .","title":"Le bit"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#grouper-les-bits","text":"Une information binaire est donc une suite de \\(0\\) et de \\(1\\) . Cette information peut-\u00eatre de diff\u00e9rente nature, tout d\u00e9pend de la norme d'encodage utilis\u00e9e. En soit, la m\u00eame suite binaire peut signifier des choses totalement diff\u00e9rentes comme : un nombre entier ; un nombre flottant ; un caract\u00e8re ; une note de musique ; ... Exemple L'\u00e9criture binaire \\(101010\\) signifie : \\(42\\) dans les nombres entiers non sign\u00e9s (c'est-\u00e0-dire positifs) ; >>> int ( '101010' , 2 ) 42 Le caract\u00e8re * en UTF-8 : >>> chr ( int ( '101010' , 2 )) '*' Bits et quantit\u00e9s d'informations Avec un unique bit, on ne peux stocker que deux informations (deux nombres, deux caract\u00e8res, deux notes de musiques,...). La quantit\u00e9 d'information diff\u00e9rentes pouvant \u00eatre repr\u00e9sent\u00e9es d\u00e9pend donc du nombre de bits utilis\u00e9s : Avec \\(2\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 = 2^2 = 4\\) informations diff\u00e9rentes. Avec \\(3\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 \\times 2= 2^3 = 8\\) informations diff\u00e9rentes. Avec \\(4\\) bits : Done On peux repr\u00e9senter \\(2 \\times 2 \\times 2 \\times 2= 2^4 = 16\\) informations diff\u00e9rentes. Avec un syst\u00e8me \u00e0 \\(n\\) bits, on peut repr\u00e9senter \\(2^n\\) informations diff\u00e9rentes.","title":"Grouper les bits"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#octets","text":"Octets Pour quantifier les informations binaires, on utilise souvent le mot octet ( abusivement appel\u00e9 aussi byte dans le monde anglo-saxon). Un octet est un groupement de \\(8\\) bits. Il permet de repr\u00e9senter \\(2^8 = 256\\) informations diff\u00e9rentes. La notation internationale pour l'octet est \\(o\\) . On parlera alors de \\(ko\\) ( \\(1~ko = 1000 o\\) ), \\(Mo\\) ( \\(1~Mo = 10^3~ko = 10^6~o\\) ), \\(Go\\) ( \\(1~Go = 10^3~Mo = 10^9~o\\) ), etc, mais aussi de \\(ko/s\\) , \\(Mo/s\\) , etc... Remarque Les pr\u00e9fixes kilo , Mega , Giga ..., sont bien ceux du syst\u00e8me international, c'est-\u00e0-dire ceux pour \\(10^3\\) , \\(10^6\\) , \\(10^9\\) ... On verra dans la partie suivante qu'ils sont parfois confondus avec les pr\u00e9fixes binaires ( kibi , Mibi , Gibi ...)","title":"Octets"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#ecritures-en-dautres-bases","text":"","title":"Ecritures en d'autres bases"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#les-entiers-en-base-decimale","text":"Rappels : Base d\u00e9cimale Un nombre entier \u00e9crit dans une base d\u00e9cimale ( base \\(10\\) ) v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les dix chiffres arabes : \\(0,1,2,3,4,5,6,7,8,9\\) ; chaque chiffre poss\u00e8de un poids, repr\u00e9sentant une puissance de \\(10\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Exercice Enonc\u00e9 \\(14~763 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 7 \\times 10^{\\dots}+ 6\\times 10^{\\dots} + 3\\times 10^{\\dots}\\) \\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\) Solution \\(14~763 = 1 \\times 10^{4} + 4 \\times 10^{3} + 7 \\times 10^{2}+ 6\\times 10^{1} + 3\\times 10^{0}\\) \\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\)","title":"Les entiers en base d\u00e9cimale"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#la-base-2-systeme-binaire","text":"Syst\u00e8me binaire Un nombre entier \u00e9crit dans le syst\u00e8me binaire v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les deux chiffres : \\(0\\) et \\(1\\) . chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(2\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Remarques et notations L'\u00e9criture \\(101\\) poss\u00e8de aussi bien un sens en binaire (un-z\u00e9ro-un) qu'en d\u00e9cimal ( cent-un ). Pour lever l'ambigu\u00eft\u00e9 , on \u00e9crira : \\((101)_{10}\\) ou simplement \\(101\\) pour le nombre en base \\(10\\) ; \\((101)_2\\) pour le nombre en base \\(2\\) . Exercice Enonc\u00e9 Consid\u00e9rons le nombre \\((101010)_2\\) . Convertissez ce nombre binaire en d\u00e9cimal : Solution \\[ \\begin{array}{cccccccc} (101010)_2&=& 1 \\times 2^{5}&+ 0 \\times 2^{4}&+ 1 \\times 2^{3}&+ 0 \\times 2^{2}&+ 1 \\times 2^{1}&+ 0 \\times 2^{0}\\\\ & = & 1 \\times 32 & + 0 \\times 16& + 1 \\times 8& + 0 \\times 4& + 1 \\times 2& + 0 \\times 1\\\\ &=& 42 &&&&&\\\\ \\end{array} \\] Exercice : Conversions de la base \\(2\\) vers la base \\(10\\) Enonc\u00e9 Ecrire les nombres suivants en base \\(10\\) : \\((101)_2\\) \\((11111111)_2\\) \\((10010011)_2\\) Solution A venir ! Exercice : Un peu de Python Enonc\u00e9 Compl\u00e9ter la fonction suivante, sans utiliser int(x,2) , afin qu'elle renvoie en base 10 le nombre \\(x\\) pass\u00e9 en argument en base \\(2\\) , sous la forme d'une chaine de caract\u00e8res. Vous pouvez cependant utiliser la fonction built-in int afin de convertir une chaine de carat\u00e8re en un entier. def bin2dec ( x ) : \"\"\"fonction convertissant le nombre (x)_2 en base 10 >>> bin2dec('0') 0 >>> bin2dec('1') 1 >>> bin2dec('11') 3 >>> bin2dec('1000') 8 >>> bin2dec('11111111') 255 \"\"\"","title":"La base 2 (syst\u00e8me binaire)"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#conversions-de-la-base-10-vers-la-base-2","text":"M\u00e9thode : Algorithme de conversion du nombre \\((n)_{10}\\) en base \\(2\\) En langage naturel fonction dec2bin(n) : base2 <- chaine de caract\u00e8re vide Tant que n!=0 : base2 <- base2+caractere(n%2) n <- n//2 Renvoyer base2 invers\u00e9e Sous forme de diagramme Exemple : Conversion de \\((135)_{10}\\) en base \\(2\\) A venir ! Conversions manuelles Enonc\u00e9 Convertir les nombres suivants en base \\(2\\) : \\((26)_{10}\\) \\((104)_{10}\\) \\((256)_{10}\\) \\((42)_{10}\\) Solution A venir ! Exercice : De l'algorithme au programme Enonc\u00e9 Compl\u00e9ter la fonction suivante en Python, qui renvoie la chaine de caract\u00e8res correspondant \u00e0 l'\u00e9criture de \\(n\\) en base \\(2\\) . def dec2bin ( n ) : \"\"\"fonction convertissant le nombre n en base 2, et renvoyant la chaine de caract\u00e8res correspondante >>> dec2bin(0) '0' >>> dec2bin(1) '1' >>> dec2bin(3) '11' >>> dec2bin(8) '1000' >>> dec2bin(255) '11111111' \"\"\" Solution A venir ! Nombre de bits n\u00e9cessaires Soit \\((x)_{10}\\) un nombre \u00e9crit en base \\(10\\) . Si \\(n\\) est l'entier tel que \\(2^{n-1} \\leqslant x <2^n\\) , alors le nombre \\(x\\) n\u00e9cessitera \\(n\\) bits pour \u00eatre repr\u00e9sent\u00e9 en binaire. Exercice : Nombre de bits n\u00e9cessaires Enonc\u00e9 D\u00e9terminer pour chacun des nombres ci-dessous le nombre de bits minimal qui seront n\u00e9cessaire dans l'\u00e9criture binaire de ce nombre : \\(12\\) \\(123\\) \\(999\\) \\(1927\\) Solution A venir !","title":"Conversions de la base \\(10\\) vers la base \\(2\\)"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#une-autre-base-utile-lhexadecimal","text":"Outre que la lecture des nombres en \u00e9criture binaire par un humain est tr\u00e8s compliqu\u00e9e, il faut remarquer que, de par la construction de ces nombres, la quantit\u00e9 de symboles utilis\u00e9s en base \\(2\\) est largement sup\u00e9rieur \u00e0 celui utilis\u00e9 en base \\(10\\) - \\(3,2\\) fois plus grand en moyenne sur les \\(100~000\\) premiers entiers. Il peut donc \u00eatre utile de trouver un compromis entre la base \\(2\\) , utile pour l'ordinateur, et la base \\(10\\) , plus compr\u00e9hensible par un \u00eatre humain. Ce compromis peut-\u00eatre trouv\u00e9 avec le syst\u00e8me hexad\u00e9cimal , c'est-\u00e0-dire un syst\u00e8me de base 16 . Base hexad\u00e9cimale Un nombre entier \u00e9crit dans une base hexad\u00e9cimale ( base \\(16\\) ) v\u00e9rifie les conditions suivantes : il est \u00e9crit avec les seize chiffres hexad\u00e9cimaux : \\(0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F\\) ; chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(16\\) , le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\) . Exemple Le nombre hexad\u00e9cimal \\((5B6)_{16}\\) correspond donc en d\u00e9cimal \u00e0 : A compl\u00e9ter \\[ \\begin{array}{ccccc} (5B6)_{16}&=& \\dots \\times 16^{\\dots}&+ \\dots \\times 16^{\\dots}&+ \\dots \\times 16^{\\dots}\\\\ &=& \\dots \\times \\dots&+ \\dots \\times \\dots&+ \\dots \\times \\dots\\\\ &=&&&\\\\ \\end{array} \\] Solution \\[ \\begin{array}{ccccc} (5B6)_{16}&=& 5 \\times 16^{2}&+ 11 \\times 16^{1}&+ 6 \\times 16^{0}\\\\ &=& 5 \\times 256&+ 11 \\times 16&+ 6 \\times 1\\\\ &=&1~462&&\\\\ \\end{array} \\] Exercice Enonc\u00e9 Convertir de l'hexad\u00e9cimal vers le d\u00e9cimal : \\((FF)_{16}\\) \\((6E)_{16}\\) \\((245A)_{16}\\) M\u00e9thode : Convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal Pour convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal, on utilise la m\u00eame m\u00e9thode qu'en binaire mais en divisant par \\(16\\) . Exemple Enonc\u00e9 Convertir le nombre \\(244\\) en hexad\u00e9cimal. Solution A venir ! Remarques A un chiffre dans la base \\(16\\) , correspond exactement \\(4\\) chiffres dans la base \\(2\\) . Cela signifie que pour \u00e9crire un octet en hexad\u00e9cimal, deux chiffres hexad\u00e9cimaux suffisent . C'est pour cette raison que les octets \u00e9crits en base deux sont group\u00e9s par 4 chiffres : \\[ (189)_{10} = (BD)_{16} = (1011~1101)_2 \\] Ce syst\u00e8me de notation est tr\u00e8s pratique pour noter les codes des couleurs (par exemple en RGB : #7455BA signifie que l'octet repr\u00e9sentant le canal rouge a pour valeur 74 , celui du canal vert 55 , et celui du canal bleu BA ), pour les cl\u00e9s de chiffrement (code Wifi par exemple), ... Roue num\u00e9rique Ecriture d\u00e9cimale 0 0 0 - Reset + Ecriture binaire 0 0 0 0 0 0 0 0 Ecriture hexad\u00e9cimale 0 0 Acc\u00e8s au fichier de base : ici","title":"Une autre base utile : l'hexad\u00e9cimal"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#operations-elementaires-sur-les-nombres-binaires","text":"","title":"Op\u00e9rations \u00e9l\u00e9mentaires sur les nombres binaires"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#sommes-de-nombres-binaires","text":"M\u00e9thode : Additionner deux nombres entiers en base 2 La technique d'addition de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale : En d\u00e9cimal \\[ \\begin{array}{cccc} &1&4&9\\\\ +&&7&8\\\\\\hline &&&\\\\ \\end{array} \\] En binaire \\[ \\begin{array}{*{9}{c}} &1&0&0&1&0&1&0&1\\\\ +&&1&0&0&1&1&1&0\\\\\\hline &&&&&&&&\\\\ \\end{array} \\]","title":"Sommes de nombres binaires"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#produits-de-nombres-binaires","text":"M\u00e9thode : Multiplier deux nombres entiers en base 2 La technique de multiplication de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale - mais la retenue peut se propager parfois plus loin que le rang imm\u00e9diatement sup\u00e9rieur : En d\u00e9cimal \\[ \\begin{array}{cccc} &&2&7\\\\ \\times&&1&3\\\\\\hline &&&\\\\ +&&&\\\\\\hline &&&\\\\ \\end{array} \\] En binaire \\[ \\begin{array}{*{10}{c}} &&&&&1&1&0&1&1\\\\ \\times&&&&&&1&1&0&1\\\\\\hline &&&&&&&&&\\\\ +&&&&&&&&&\\\\ +&&&&&&&&&\\\\ +&&&&&&&&&\\\\\\hline &&&&&&&&&\\\\ \\end{array} \\]","title":"Produits de nombres binaires"},{"location":"NSI/Premiere/C03/CSS/","text":"Mettre en forme : le CSS S\u00e9parer le fond et la forme : un exemple avec un traitement de texte Activit\u00e9 avec un traitement de texte T\u00e9l\u00e9chargez puis ouvrez le fichier StylesModeles.odt avec Libre Office . Allez \u00e0 la page 5 du document. Ouvrez la fen\u00eatre de style en appuyant sur F11 . D\u00e9ployez le menu Style par d\u00e9faut en appuyant sur + . D\u00e9ployez de m\u00eame le menu Titre , puis cliquez droit sur Titre 1 , puis modifier . Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? Y-a-t-il eu des changements sur d'autres pages ? Qu'ont en commun toutes les zones chang\u00e9es ? Dans la fen\u00eatre de style, modifiez Liste Puce 1 en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de tpe Radial . Observez les modifications du document. Allez \u00e0 la page 31, partie 5.2.c, s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en Liste Puce 1 , en Liste Puce 2 . le texte at-il \u00e9t\u00e9 chang\u00e9 ? S\u00e9parer le fond de la forme Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res : sur un \u00e9cran couleur ; par un logiciel de synth\u00e8se vocale ; sur un \u00e9cran monochrome ( ou dans la console) ; sur un \u00e9cran de smartphone ; par une impression sur un papier A4, ou A3, ou autres formats ; ... Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style , regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes... Cascading Style Sheets D\u00e9finition CSS CSS est l'acronyme de Cascading Style Sheets , soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier CSS est appel\u00e9 par une ou plusieurs pages HTML (entre autre), et associe \u00e0 certaines balises et/ou attributs html certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises. Pour utiliser une feuille de style nomm\u00e9e toto.css dans une page html , il faut inclure entre les balises <head> et </head> la ligne suivante : < link href = \"toto.css\" rel = \"stylesheet\" type = \"text/css\" /> Exemple Dans l'exemple ci-dessous, le fichier style.css est utilis\u00e9 par les diff\u00e9rentes pages html : D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples Vocabulaire Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles , qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple : le s\u00e9l\u00e9cteur p signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <p> et </p> . Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl + Alt + ` ou AltGr + ` donne { et Ctrl + Alt + = ou AltGr + = donne } ). la propri\u00e9t\u00e9 color indique que la r\u00e8gle concerne la couleur de police ; la valeur associ\u00e9e red indique que la couleur de police sera rouge ; la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points. Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable : h1 { color : magenta ; background-color : lightblue ; font-style : italic ; font-size : 3 em ; font-variant : small-caps ; } Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles . Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools . Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale . L'inspecteur d'objet Il est possible dans Firefox , comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans Firefox , vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl + Shift + I , ou bien par Menu > Outils suppl\u00e9mentaires > Outils de d\u00e9veloppement web . L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!) Exercice : Modifier une page web existante Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/ . Ouvrez l'inspecteur d'objets . Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page Mettre en forme : le CSS . Vous devez voir appar\u00e2itre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur .md-typeset h1 la d\u00e9claration background-color : pink . Enjoy Les s\u00e9lecteurs en CSS Le DOM, ou comment \u00e7a marche en vrai ! le DOM Le DOM , ou Document Object Model est une interface de programmation pour des documents HTML ou XML qui repr\u00e9sente le document (la page web actuelle) sous une forme qui permet aux langages de script comme le JavaScript d'y acc\u00e9der et d'en manipuler le contenu et les styles. Le DOM est ainsi une repr\u00e9sentation structur\u00e9e du document sous forme \u00ab d'arbre \u00bb cr\u00e9e automatiquement par le navigateur Pratiquement,le DOM est cr\u00e9\u00e9 \u00e0 partir du code HTML, et chaque style CSS est attach\u00e9 \u00e0 un noeud du DOM : Pour atteindre en CSS un noeud du DOM, ou pour interagir avec lui, il faut utiliser le bon s\u00e9lecteur . Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles. S\u00e9lecteur de type : Cible toutes les balises d'un certain nom. Par exemple : body { background-color : black ; } p { color : green ; } S\u00e9lecteur de classe : Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut class . Toutes les balises poss\u00e9dant le m\u00eame attribut class peuvent \u00eatre alors cibl\u00e9es en ajoutant un point . pr\u00e9c\u00e9dant le nom de la classe. Par exemples : cibler toutes les balises poss\u00e9dant l'attribut class=\"definition\" . definition { color : red ; border-width : 2 px ; border-style : dashed ; } cible les titres de rang h2 et poss\u00e9dant l'attribut class=\"chapitre\" (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es) h2 . chapitre { text-decoration : underline ; } S\u00e9lecteur d'identifiant : Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut id . Par exemple, pour cibler la balise poss\u00e9dant l'attribut id=\"titresite\" , on utilise le symbole # : # titresite { text-align : center ; } S\u00e9lecteur d'enfants : Cible toutes les balises descendantes directes d'un autre \u00e9l\u00e9ment. Par exemple : body > p { background-color : red ; } Ici on s\u00e9lectionne les balises p qui sont directement h\u00e9rit\u00e9es de body (c'est-\u00e0-dire directement encadr\u00e9es par les balises <body> et </body> ). S\u00e9lecteur de descendants : Cible toutes les balises qui descendent d'un autre \u00e9l\u00e9ment Par exemple : body p { background-color : red ; } Ici on s\u00e9lectionne toutes les balises p qui sont \u00e0 l'int\u00e9rieur de <body>...</body> . S\u00e9lecteurs de pseudo-classes Lors de la construction de l'arbre du DOM, certaines pseudo-classes sont ajout\u00e9es automatiquement \u00e0 certains noeuds. Il est possible d'int\u00e9ragir avec ces pseudo-classes : :first-child : Cible un \u00e9l\u00e9ment quand il est le premier enfant d'un autre \u00e9l\u00e9ment. li : first-child { background-color : yellow ; } Existe aussi en version :last-child , :nth-child , je vous laisse rechercher les possibilit\u00e9s en ligne. :hover : Cible un \u00e9l\u00e9ment quand il poss\u00e8de la souris le survole. h1 : hover { font-size : 5 em ; } :link : Cible un lien qui n'a pas \u00e9t\u00e9 visit\u00e9. a : link { text-color : red ; } :visited : Cible un lien qui a \u00e9t\u00e9 visit\u00e9. a : link { text-color : orange ; } Il existe bien d'autres pseudo-classes. Comme toujours Mozilla a fait un travail remarquable de documentation . Ordre d'application des s\u00e9lecteurs Priorit\u00e9 des s\u00e9lecteurs Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 conna\u00eetre pour \u00e9viter les comportement erratiques du CSS : La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte ( id est plus pr\u00e9cis que class qui est plus pr\u00e9cis que le nom de la balise). Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal. Les bo\u00eetes CSS... Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla . Une bo\u00eete... Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres. Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on : padding : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme padding \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme) border : la ligne qui est juste autour du padding (en fran\u00e7ais cela correspond \u00e0 la bordure). margin : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge). Des boites ! Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement : \u00e9l\u00e9ment block : un \u00e9l\u00e9ment block occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments block s'enchainent, ils sont les uns au dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <h1>,<h2>,...,<h6> , <p> et surtout <div> (balise g\u00e9n\u00e9rique de type block ) sont des \u00e9l\u00e9ments de type block . \u00e9l\u00e9ment inline : un \u00e9l\u00e9ment inline s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s.Par d\u00e9faut les \u00e9l\u00e9ments <a>,<img>,<strong>,... sont des \u00e9l\u00e9ments de type inline . Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments inline et block , qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous poyurriez vous poser. Modifier le type d'un \u00e9l\u00e9ment : display Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page html. Pour cela on utilise la propri\u00e9t\u00e9 display et ses diff\u00e9rentes valeurs : none : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles. block : rend l'\u00e9l\u00e9ment de type block ; inline : rend l'\u00e9l\u00e9ment de type inline ; grid : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ; flex : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite. Les dimensions et unit\u00e9s de mesures les plus utiles En CSS, il est souvent imp\u00e9ratif de donner des longueurs, ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types : valeur en pourcentage : font-size : 120\\%; d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %. hauteur em : cadratin, ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re M . font-size : 1.5em; \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de 1em . valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple width : 50px; mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. A proscrire sauf cas particuliers. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vw; permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vh; permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre. Adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes, et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage. Afin d'afficher correctement un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css , diff\u00e9rentes version du site. Pour cela on utilise des media-queries - soit requ\u00eates de media . Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site. Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes : max-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; min-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; Exemple L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen. /* version par d\u00e9faut: sur grand \u00e9cran */ . menu { width : 30 em ; /* etc. */ } /* \u00e9cran plus petit: on passe le menu en horizontal */ @ media ( max-width : 100em ) { . menu { width : 100 % ; } . menu li { display : inline-block ; } /* etc. */ } /* \u00e9cran encore plus petit: on cache le menu */ @ media ( max-width : 50em ) { . menu { display : none ; } }","title":"CSS"},{"location":"NSI/Premiere/C03/CSS/#mettre-en-forme-le-css","text":"","title":"Mettre en forme : le CSS"},{"location":"NSI/Premiere/C03/CSS/#separer-le-fond-et-la-forme-un-exemple-avec-un-traitement-de-texte","text":"Activit\u00e9 avec un traitement de texte T\u00e9l\u00e9chargez puis ouvrez le fichier StylesModeles.odt avec Libre Office . Allez \u00e0 la page 5 du document. Ouvrez la fen\u00eatre de style en appuyant sur F11 . D\u00e9ployez le menu Style par d\u00e9faut en appuyant sur + . D\u00e9ployez de m\u00eame le menu Titre , puis cliquez droit sur Titre 1 , puis modifier . Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? Y-a-t-il eu des changements sur d'autres pages ? Qu'ont en commun toutes les zones chang\u00e9es ? Dans la fen\u00eatre de style, modifiez Liste Puce 1 en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de tpe Radial . Observez les modifications du document. Allez \u00e0 la page 31, partie 5.2.c, s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en Liste Puce 1 , en Liste Puce 2 . le texte at-il \u00e9t\u00e9 chang\u00e9 ? S\u00e9parer le fond de la forme Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res : sur un \u00e9cran couleur ; par un logiciel de synth\u00e8se vocale ; sur un \u00e9cran monochrome ( ou dans la console) ; sur un \u00e9cran de smartphone ; par une impression sur un papier A4, ou A3, ou autres formats ; ... Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style , regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes...","title":"S\u00e9parer le fond et la forme : un exemple avec un traitement de texte"},{"location":"NSI/Premiere/C03/CSS/#cascading-style-sheets","text":"","title":"Cascading Style Sheets"},{"location":"NSI/Premiere/C03/CSS/#definition","text":"CSS CSS est l'acronyme de Cascading Style Sheets , soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier CSS est appel\u00e9 par une ou plusieurs pages HTML (entre autre), et associe \u00e0 certaines balises et/ou attributs html certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises. Pour utiliser une feuille de style nomm\u00e9e toto.css dans une page html , il faut inclure entre les balises <head> et </head> la ligne suivante : < link href = \"toto.css\" rel = \"stylesheet\" type = \"text/css\" /> Exemple Dans l'exemple ci-dessous, le fichier style.css est utilis\u00e9 par les diff\u00e9rentes pages html :","title":"D\u00e9finition"},{"location":"NSI/Premiere/C03/CSS/#declaration-dune-regle-css-vocabulaire-associe-et-premiers-exemples","text":"Vocabulaire Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles , qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple : le s\u00e9l\u00e9cteur p signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <p> et </p> . Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl + Alt + ` ou AltGr + ` donne { et Ctrl + Alt + = ou AltGr + = donne } ). la propri\u00e9t\u00e9 color indique que la r\u00e8gle concerne la couleur de police ; la valeur associ\u00e9e red indique que la couleur de police sera rouge ; la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points. Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable : h1 { color : magenta ; background-color : lightblue ; font-style : italic ; font-size : 3 em ; font-variant : small-caps ; } Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles . Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools . Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale . L'inspecteur d'objet Il est possible dans Firefox , comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans Firefox , vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl + Shift + I , ou bien par Menu > Outils suppl\u00e9mentaires > Outils de d\u00e9veloppement web . L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!) Exercice : Modifier une page web existante Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/ . Ouvrez l'inspecteur d'objets . Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page Mettre en forme : le CSS . Vous devez voir appar\u00e2itre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur .md-typeset h1 la d\u00e9claration background-color : pink . Enjoy","title":"D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples"},{"location":"NSI/Premiere/C03/CSS/#les-selecteurs-en-css","text":"","title":"Les s\u00e9lecteurs en CSS"},{"location":"NSI/Premiere/C03/CSS/#le-dom-ou-comment-ca-marche-en-vrai","text":"le DOM Le DOM , ou Document Object Model est une interface de programmation pour des documents HTML ou XML qui repr\u00e9sente le document (la page web actuelle) sous une forme qui permet aux langages de script comme le JavaScript d'y acc\u00e9der et d'en manipuler le contenu et les styles. Le DOM est ainsi une repr\u00e9sentation structur\u00e9e du document sous forme \u00ab d'arbre \u00bb cr\u00e9e automatiquement par le navigateur Pratiquement,le DOM est cr\u00e9\u00e9 \u00e0 partir du code HTML, et chaque style CSS est attach\u00e9 \u00e0 un noeud du DOM : Pour atteindre en CSS un noeud du DOM, ou pour interagir avec lui, il faut utiliser le bon s\u00e9lecteur . Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles.","title":"Le DOM, ou comment \u00e7a marche en vrai !"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-type","text":"Cible toutes les balises d'un certain nom. Par exemple : body { background-color : black ; } p { color : green ; }","title":"S\u00e9lecteur de type :"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-classe","text":"Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut class . Toutes les balises poss\u00e9dant le m\u00eame attribut class peuvent \u00eatre alors cibl\u00e9es en ajoutant un point . pr\u00e9c\u00e9dant le nom de la classe. Par exemples : cibler toutes les balises poss\u00e9dant l'attribut class=\"definition\" . definition { color : red ; border-width : 2 px ; border-style : dashed ; } cible les titres de rang h2 et poss\u00e9dant l'attribut class=\"chapitre\" (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es) h2 . chapitre { text-decoration : underline ; }","title":"S\u00e9lecteur de classe :"},{"location":"NSI/Premiere/C03/CSS/#selecteur-didentifiant","text":"Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut id . Par exemple, pour cibler la balise poss\u00e9dant l'attribut id=\"titresite\" , on utilise le symbole # : # titresite { text-align : center ; }","title":"S\u00e9lecteur d'identifiant :"},{"location":"NSI/Premiere/C03/CSS/#selecteur-denfants","text":"Cible toutes les balises descendantes directes d'un autre \u00e9l\u00e9ment. Par exemple : body > p { background-color : red ; } Ici on s\u00e9lectionne les balises p qui sont directement h\u00e9rit\u00e9es de body (c'est-\u00e0-dire directement encadr\u00e9es par les balises <body> et </body> ).","title":"S\u00e9lecteur d'enfants :"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-descendants","text":"Cible toutes les balises qui descendent d'un autre \u00e9l\u00e9ment Par exemple : body p { background-color : red ; } Ici on s\u00e9lectionne toutes les balises p qui sont \u00e0 l'int\u00e9rieur de <body>...</body> .","title":"S\u00e9lecteur de descendants :"},{"location":"NSI/Premiere/C03/CSS/#selecteurs-de-pseudo-classes","text":"Lors de la construction de l'arbre du DOM, certaines pseudo-classes sont ajout\u00e9es automatiquement \u00e0 certains noeuds. Il est possible d'int\u00e9ragir avec ces pseudo-classes : :first-child : Cible un \u00e9l\u00e9ment quand il est le premier enfant d'un autre \u00e9l\u00e9ment. li : first-child { background-color : yellow ; } Existe aussi en version :last-child , :nth-child , je vous laisse rechercher les possibilit\u00e9s en ligne. :hover : Cible un \u00e9l\u00e9ment quand il poss\u00e8de la souris le survole. h1 : hover { font-size : 5 em ; } :link : Cible un lien qui n'a pas \u00e9t\u00e9 visit\u00e9. a : link { text-color : red ; } :visited : Cible un lien qui a \u00e9t\u00e9 visit\u00e9. a : link { text-color : orange ; } Il existe bien d'autres pseudo-classes. Comme toujours Mozilla a fait un travail remarquable de documentation .","title":"S\u00e9lecteurs de pseudo-classes"},{"location":"NSI/Premiere/C03/CSS/#ordre-dapplication-des-selecteurs","text":"Priorit\u00e9 des s\u00e9lecteurs Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 conna\u00eetre pour \u00e9viter les comportement erratiques du CSS : La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte ( id est plus pr\u00e9cis que class qui est plus pr\u00e9cis que le nom de la balise). Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal.","title":"Ordre d'application des s\u00e9lecteurs"},{"location":"NSI/Premiere/C03/CSS/#les-boites-css","text":"Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla .","title":"Les bo\u00eetes CSS..."},{"location":"NSI/Premiere/C03/CSS/#une-boite","text":"Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres. Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on : padding : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme padding \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme) border : la ligne qui est juste autour du padding (en fran\u00e7ais cela correspond \u00e0 la bordure). margin : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge).","title":"Une bo\u00eete..."},{"location":"NSI/Premiere/C03/CSS/#des-boites","text":"Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement : \u00e9l\u00e9ment block : un \u00e9l\u00e9ment block occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments block s'enchainent, ils sont les uns au dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <h1>,<h2>,...,<h6> , <p> et surtout <div> (balise g\u00e9n\u00e9rique de type block ) sont des \u00e9l\u00e9ments de type block . \u00e9l\u00e9ment inline : un \u00e9l\u00e9ment inline s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s.Par d\u00e9faut les \u00e9l\u00e9ments <a>,<img>,<strong>,... sont des \u00e9l\u00e9ments de type inline . Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments inline et block , qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous poyurriez vous poser. Modifier le type d'un \u00e9l\u00e9ment : display Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page html. Pour cela on utilise la propri\u00e9t\u00e9 display et ses diff\u00e9rentes valeurs : none : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles. block : rend l'\u00e9l\u00e9ment de type block ; inline : rend l'\u00e9l\u00e9ment de type inline ; grid : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ; flex : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite.","title":"Des boites !"},{"location":"NSI/Premiere/C03/CSS/#les-dimensions-et-unites-de-mesures-les-plus-utiles","text":"En CSS, il est souvent imp\u00e9ratif de donner des longueurs, ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types : valeur en pourcentage : font-size : 120\\%; d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %. hauteur em : cadratin, ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re M . font-size : 1.5em; \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de 1em . valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple width : 50px; mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. A proscrire sauf cas particuliers. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vw; permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vh; permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre.","title":"Les dimensions et unit\u00e9s de mesures les plus utiles"},{"location":"NSI/Premiere/C03/CSS/#adaptation-aux-differents-ecransmedias-de-sortie","text":"Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes, et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage. Afin d'afficher correctement un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css , diff\u00e9rentes version du site. Pour cela on utilise des media-queries - soit requ\u00eates de media . Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site. Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes : max-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; min-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; Exemple L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen. /* version par d\u00e9faut: sur grand \u00e9cran */ . menu { width : 30 em ; /* etc. */ } /* \u00e9cran plus petit: on passe le menu en horizontal */ @ media ( max-width : 100em ) { . menu { width : 100 % ; } . menu li { display : inline-block ; } /* etc. */ } /* \u00e9cran encore plus petit: on cache le menu */ @ media ( max-width : 50em ) { . menu { display : none ; } }","title":"Adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie"},{"location":"NSI/Premiere/C03/HTML/","text":"Mettre du fond : HTML Ce document est une version rapide du cours de SNT de seconde, \u00e0 destination des \u00e9l\u00e8ves n'ayant que peu travaill\u00e9 sur HTML/CSS. C'est quoi une page Web Commen\u00e7ons par placer du vocabulaire ainsi qu'un bref apper\u00e7u de l'histoire du web. Donner une d\u00e9finition de World Wide Web : Done Le World Wide Web ( WWW ou 3W ) est un syst\u00e8me hypertexte fonctionnant sur Internet . Il a \u00e9t\u00e9 invent\u00e9 par Tim Berners-Lee et Robert Cailleau au CERN de Gen\u00e8ve, en 1989. Donner une d\u00e9finition d' Internet : Done Internet est le r\u00e9seau mondial d'ordinateurs accessibles au public. Nous verrons un historique rapide de la cr\u00e9ation d'Internet dans la partie R\u00e9seau du programme. Donner une d\u00e9finition de syst\u00e8me hypertexte : Done Un hypertexte est un document ou un ensemble de documents contenant des unit\u00e9s d'information li\u00e9es entre elles par des hyperliens . Ce syst\u00e8me permet \u00e0 l'utilisateur d'aller directement \u00e0 l'unit\u00e9 qui l'int\u00e9resse, \u00e0 son gr\u00e9, d'une fa\u00e7on non lin\u00e9aire. Le terme a \u00e9t\u00e9 cr\u00e9\u00e9 en 1965 par Ted Nelson , sociologue am\u00e9ricain. Donner une d\u00e9finition de Uniform Ressource Locator ( URL ) : Done Une URL (sigle de l\u2019anglais : Uniform Resource Locator , litt\u00e9ralement \u00ab localisateur uniforme de ressource \u00bb ), couramment appel\u00e9e adresse web, est une cha\u00eene de caract\u00e8res uniforme qui permet d'identifier une ressource du World Wide Web par son emplacement et de pr\u00e9ciser le protocole internet pour la r\u00e9cup\u00e9rer (par exemple http ou https). 1 Que signifie http et https ? Done http signifie HyperText Transfer Protocol , soit litt\u00e9ralement * \u00ab Protocole de transfert Hypertexte \u00bb. C'est un protocole de communication client-serveur d\u00e9velopp\u00e9 pour le World Wide Web. Il existe aussi en version s\u00e9curis\u00e9e (protocole https ). Expliquez ce qu'est Standard Generalized Markup Language : Done Standard Generalized Markup Language (\u00ab langage de balisage g\u00e9n\u00e9ralis\u00e9 normalis\u00e9 &raquo - SGML ) est un langage de description \u00e0 balises, de norme ISO (ISO 8879:1986). Ce langage, publi\u00e9 en 1986 par Charles Goldfarb, mais dont les pr\u00e9misses remontent \u00e0 1969, est un langage qui a eu pour vocation de s'affranchir des capacit\u00e9s techniques sp\u00e9cifiques des imprimantes pour d\u00e9crire un document texte. Ce standard, vite adopt\u00e9 par la communaut\u00e9 internationale, repose sur la s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations,...), qui est identifi\u00e9 par des balises ins\u00e9r\u00e9es dans le document lui-m\u00eame, de sa mise en page , qui d\u00e9pend du support de pr\u00e9sentation (livre, journal, pr\u00e9sentation, \u00e9cran, ...). HTML ( HyperText Markup Language ) est une application de SGML, cr\u00e9e par Tim Berners-Lee en 1989. Un langage de balise : HTML Une page web, dans sa partie logique, c'est un fichier contenant du texte , ce texte \u00e9tant enrichi par un syst\u00e8me de balises ouvrantes - par exemple <p> et fermantes - par exemple </p> , permettant de donner un sens particulier au texte encadr\u00e9 par ces balises ( titres, chapitres, paragraphes, illustrations... ). Le langage utilis\u00e9 qui contient le texte et les balises s'appelle HTML ( d'o\u00f9 le nom de l'extension de fichier .html ), qui est un acronyme pour Hyper Text Markup Language , soit langage de balisage hypertexte. Il est \u00e0 noter que HTML n'est pas un langage de programmation , mais simplement un langage de description du texte, privil\u00e9giant la mise en avant du sens avant la forme. Il existe de nombreux langages de balisages, permettant de donner une forme particuli\u00e8re \u00e0 du texte ou \u00e0 des chaines de caract\u00e8res. Par exemple, HTML pour le Web, \\(\\LaTeX\\) pour les documents scientifiques et les formules math\u00e9matiques, XML pour organiser des donn\u00e9es, ou m\u00eame Mardown , utilis\u00e9 dans les Notebooks et pour la conception de ce site. Un fichier html se pr\u00e9sente donc sous la forme suivante : <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Une simple page web &#129409; </ title > </ head > < body > < h1 > Ma premi\u00e8re page web </ h1 > < h2 > Le code html </ h2 > <!-- ceci est un commentairen comme en Python, il n'est pas interpr\u00e9t\u00e9 par le navigateur, et n'est l\u00e0 que pour les codeurs ou les curieux --> < p > Pour faire une page web, il faut taper du code < strong > HTML </ strong > . < p > Afin de faire fonctionner celui-ci, il faut placer des < strong > balises </ strong > qui encadrent des portions du texte : < ul > < li > Une balise ouvrante, utilisant les symboles &lt; et &gt; , qui encadrent un mot cl\u00e9 ; </ li > < li > Une balise fermante, identique \u00e0 la balise ouvrante, mais un slash / pr\u00e9c\u00e8de le mot cl\u00e9 ; </ li > < li > \u00e9ventuellement des < strong > attributs </ strong > viennent compl\u00e9ter le mot cl\u00e9, afin de pr\u00e9ciser un peu plus la balise, par exemple en donnant un identifiant particulier, ou l'url d'un lien. </ li > </ ul > </ p > < h2 > Les diff\u00e9rentes balises </ h2 > < p > Il existe de nombreuses balises en HTML. On peut trouver des explications sur leur fonctionnement en suivant < a href = \"https://developer.mozilla.org/fr/docs/Apprendre/HTML/Balises_HTML\" > ce lien </ a ></ p > </ body > </ html > Notepad++ Pour l'\u00e9dition de fichier de type .html , il ne faut surtout pas utiliser un traitement de texte classique, comme Word ou LibreOffice. En effet ceux-ci rajoutent de mani\u00e8re cach\u00e9e des informations dans le fichier en \u00e9dition, ce qui risque de pr\u00e9senter de s\u00e9rieux probl\u00e8mes lors de l'affichage de la page web par un navigateur. Dans la suite de ce chapitre, nous utiliserons majoritairement le logiciel Notepad++ , qui est un \u00e9diteur de texte orient\u00e9 codage, reconnaissant la plupart des langages informatiques. Ce logiciel est libre, disponible sur les ordinateurs du Lyc\u00e9e, et peut-\u00eatre t\u00e9l\u00e9charg\u00e9 en suivant ce lien . Notez qu'il existe aussi en version portable, et que vous pouvez donc l'installer sur une cl\u00e9 USB. une premi\u00e8re page web Ouvrez le logiciel Notepad++ Cr\u00e9ez un fichier vide nomm\u00e9 pagesimple.html dans un dossier NSI/Web . Copiez dans le corps de ce fichier le contenu HTML pr\u00e9sent\u00e9 au dessus. Enregistrez le fichier. Avec l'explorateur de fichier, allez dans le dossier NSI/Web et double-cliquez sur le fichier pagesimple.html . Que se passe-t-il ? Quel est le r\u00f4le des balises pr\u00e9sentes dans ce document ? Structure d'un document HTML et balises les plus utiles. Une balise HTML classique est de la forme suivante : < p class = \"Toto\" > ... </ p > o\u00f9 : p est l'identificateur de balise, ici celui d'un paragraphe ; class est un attribut de la balise <p> ; \"Toto\" est la valeur de l'attribut class . Une valeur est toujours entre guillemets . </p> est la balise fermante. Entre les deux balises se trouve le corps du paragraphe. Cas particulier : la balise <img /> La balise <img /> est la balise perm\u00e9tant d'ins\u00e9rer des images dans le document HTML. Elle poss\u00e8de une particularit\u00e9 : elle est auto-fermante (car elle n'encadre aucun \u00e9l\u00e9ment, elle contient la r\u00e9f\u00e9rence vers l'image). Elle poss\u00e8de entre-autres les attributs suivants : src : l'adresse de l'image, absolue ou relative, ou sous la forme d'une URL (Attention aux URL google image, qui ne sont que temporaires !) ; alt : le texte de remplacement si l'image est manquante (voir remarque ci-dessus) ; title : le texte de l'info-bulle de l'image width : la largeur de l'image, en pixels ou en pourcentage ; height : la hauteur de l'image, en pixels ou en pourcentage ; ... Les balises HTML sont des \u00e9l\u00e9ments pr\u00e9cisant la nature du texte qu'elles encadrent. En aucun cas elles ne donnent d'indications de placement, d'alignement, bref de mise en page. Il s'agit donc de pr\u00e9ciser un d\u00e9coupage logique de la page. Les balises Pour chacune des balises suivantes, donner leur r\u00f4le et leurs principaux attributs, en s'aidant de la page d\u00e9veloppeur Mozilla . <html> <head> <meta> <title> <body> <header> et <footer> <h1> , <h2> , ..., <h6> <ol> , <ul> et <li> <div> et <span> <a> A vous de jouer Cr\u00e9ez une page web sur le sujet que vous souhaitez, et qui respecte au moins les conditions suivantes : Un titre Deux parties de 3 paragraphes, avec au moins une liste Un lien interne \u00e0 la page Un lien externe \u00e0 la page Une image locale (sur l'ordinateur) une image distante (par URL) Une incrustation vid\u00e9o V\u00e9rifier son code : le v\u00e9rificateur du W3C Le W3C ( World Wide Web Consortium ) est l'organisme \u00e0 buts non lucratifs charg\u00e9 de standardiser et promouvoir les technologies du web. Sa gestion est assur\u00e9e conjointement par le MIT aux \u00c9tats-Unis, l'ERCIM en Europe (dont l'INRIA en France), l'universit\u00e9 Keio au Japon et l'universit\u00e9 Beihang en Chine. \u00c0 c\u00f4t\u00e9 d'industriels et d'\u00e9diteurs informatiques, en particulier les \u00e9diteurs des navigateurs (Mozilla Fondation, Microsoft, Apple, Opera ou Google), ses membres se composent aussi des centres de recherches (Inria, National Research Council Canada, etc.), des op\u00e9rateurs de r\u00e9seaux, ainsi que des entreprises investies dans le Web comme Braillenet, la Biblioth\u00e8que du Congr\u00e8s ou la BBC. Le W3C offre un service de validation des pages web , v\u00e9rifiant que leur structure est conforme aux normes en vigueur. On le trouve \u00e0 l'adresse https://validator.w3.org/ . https://fr.wikipedia.org/wiki/Uniform_Resource_Locator \u21a9","title":"HTML strict"},{"location":"NSI/Premiere/C03/HTML/#mettre-du-fond-html","text":"Ce document est une version rapide du cours de SNT de seconde, \u00e0 destination des \u00e9l\u00e8ves n'ayant que peu travaill\u00e9 sur HTML/CSS.","title":"Mettre du fond : HTML"},{"location":"NSI/Premiere/C03/HTML/#cest-quoi-une-page-web","text":"Commen\u00e7ons par placer du vocabulaire ainsi qu'un bref apper\u00e7u de l'histoire du web. Donner une d\u00e9finition de World Wide Web : Done Le World Wide Web ( WWW ou 3W ) est un syst\u00e8me hypertexte fonctionnant sur Internet . Il a \u00e9t\u00e9 invent\u00e9 par Tim Berners-Lee et Robert Cailleau au CERN de Gen\u00e8ve, en 1989. Donner une d\u00e9finition d' Internet : Done Internet est le r\u00e9seau mondial d'ordinateurs accessibles au public. Nous verrons un historique rapide de la cr\u00e9ation d'Internet dans la partie R\u00e9seau du programme. Donner une d\u00e9finition de syst\u00e8me hypertexte : Done Un hypertexte est un document ou un ensemble de documents contenant des unit\u00e9s d'information li\u00e9es entre elles par des hyperliens . Ce syst\u00e8me permet \u00e0 l'utilisateur d'aller directement \u00e0 l'unit\u00e9 qui l'int\u00e9resse, \u00e0 son gr\u00e9, d'une fa\u00e7on non lin\u00e9aire. Le terme a \u00e9t\u00e9 cr\u00e9\u00e9 en 1965 par Ted Nelson , sociologue am\u00e9ricain. Donner une d\u00e9finition de Uniform Ressource Locator ( URL ) : Done Une URL (sigle de l\u2019anglais : Uniform Resource Locator , litt\u00e9ralement \u00ab localisateur uniforme de ressource \u00bb ), couramment appel\u00e9e adresse web, est une cha\u00eene de caract\u00e8res uniforme qui permet d'identifier une ressource du World Wide Web par son emplacement et de pr\u00e9ciser le protocole internet pour la r\u00e9cup\u00e9rer (par exemple http ou https). 1 Que signifie http et https ? Done http signifie HyperText Transfer Protocol , soit litt\u00e9ralement * \u00ab Protocole de transfert Hypertexte \u00bb. C'est un protocole de communication client-serveur d\u00e9velopp\u00e9 pour le World Wide Web. Il existe aussi en version s\u00e9curis\u00e9e (protocole https ). Expliquez ce qu'est Standard Generalized Markup Language : Done Standard Generalized Markup Language (\u00ab langage de balisage g\u00e9n\u00e9ralis\u00e9 normalis\u00e9 &raquo - SGML ) est un langage de description \u00e0 balises, de norme ISO (ISO 8879:1986). Ce langage, publi\u00e9 en 1986 par Charles Goldfarb, mais dont les pr\u00e9misses remontent \u00e0 1969, est un langage qui a eu pour vocation de s'affranchir des capacit\u00e9s techniques sp\u00e9cifiques des imprimantes pour d\u00e9crire un document texte. Ce standard, vite adopt\u00e9 par la communaut\u00e9 internationale, repose sur la s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations,...), qui est identifi\u00e9 par des balises ins\u00e9r\u00e9es dans le document lui-m\u00eame, de sa mise en page , qui d\u00e9pend du support de pr\u00e9sentation (livre, journal, pr\u00e9sentation, \u00e9cran, ...). HTML ( HyperText Markup Language ) est une application de SGML, cr\u00e9e par Tim Berners-Lee en 1989.","title":"C'est quoi une page Web"},{"location":"NSI/Premiere/C03/HTML/#un-langage-de-balise-html","text":"Une page web, dans sa partie logique, c'est un fichier contenant du texte , ce texte \u00e9tant enrichi par un syst\u00e8me de balises ouvrantes - par exemple <p> et fermantes - par exemple </p> , permettant de donner un sens particulier au texte encadr\u00e9 par ces balises ( titres, chapitres, paragraphes, illustrations... ). Le langage utilis\u00e9 qui contient le texte et les balises s'appelle HTML ( d'o\u00f9 le nom de l'extension de fichier .html ), qui est un acronyme pour Hyper Text Markup Language , soit langage de balisage hypertexte. Il est \u00e0 noter que HTML n'est pas un langage de programmation , mais simplement un langage de description du texte, privil\u00e9giant la mise en avant du sens avant la forme. Il existe de nombreux langages de balisages, permettant de donner une forme particuli\u00e8re \u00e0 du texte ou \u00e0 des chaines de caract\u00e8res. Par exemple, HTML pour le Web, \\(\\LaTeX\\) pour les documents scientifiques et les formules math\u00e9matiques, XML pour organiser des donn\u00e9es, ou m\u00eame Mardown , utilis\u00e9 dans les Notebooks et pour la conception de ce site. Un fichier html se pr\u00e9sente donc sous la forme suivante : <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Une simple page web &#129409; </ title > </ head > < body > < h1 > Ma premi\u00e8re page web </ h1 > < h2 > Le code html </ h2 > <!-- ceci est un commentairen comme en Python, il n'est pas interpr\u00e9t\u00e9 par le navigateur, et n'est l\u00e0 que pour les codeurs ou les curieux --> < p > Pour faire une page web, il faut taper du code < strong > HTML </ strong > . < p > Afin de faire fonctionner celui-ci, il faut placer des < strong > balises </ strong > qui encadrent des portions du texte : < ul > < li > Une balise ouvrante, utilisant les symboles &lt; et &gt; , qui encadrent un mot cl\u00e9 ; </ li > < li > Une balise fermante, identique \u00e0 la balise ouvrante, mais un slash / pr\u00e9c\u00e8de le mot cl\u00e9 ; </ li > < li > \u00e9ventuellement des < strong > attributs </ strong > viennent compl\u00e9ter le mot cl\u00e9, afin de pr\u00e9ciser un peu plus la balise, par exemple en donnant un identifiant particulier, ou l'url d'un lien. </ li > </ ul > </ p > < h2 > Les diff\u00e9rentes balises </ h2 > < p > Il existe de nombreuses balises en HTML. On peut trouver des explications sur leur fonctionnement en suivant < a href = \"https://developer.mozilla.org/fr/docs/Apprendre/HTML/Balises_HTML\" > ce lien </ a ></ p > </ body > </ html > Notepad++ Pour l'\u00e9dition de fichier de type .html , il ne faut surtout pas utiliser un traitement de texte classique, comme Word ou LibreOffice. En effet ceux-ci rajoutent de mani\u00e8re cach\u00e9e des informations dans le fichier en \u00e9dition, ce qui risque de pr\u00e9senter de s\u00e9rieux probl\u00e8mes lors de l'affichage de la page web par un navigateur. Dans la suite de ce chapitre, nous utiliserons majoritairement le logiciel Notepad++ , qui est un \u00e9diteur de texte orient\u00e9 codage, reconnaissant la plupart des langages informatiques. Ce logiciel est libre, disponible sur les ordinateurs du Lyc\u00e9e, et peut-\u00eatre t\u00e9l\u00e9charg\u00e9 en suivant ce lien . Notez qu'il existe aussi en version portable, et que vous pouvez donc l'installer sur une cl\u00e9 USB. une premi\u00e8re page web Ouvrez le logiciel Notepad++ Cr\u00e9ez un fichier vide nomm\u00e9 pagesimple.html dans un dossier NSI/Web . Copiez dans le corps de ce fichier le contenu HTML pr\u00e9sent\u00e9 au dessus. Enregistrez le fichier. Avec l'explorateur de fichier, allez dans le dossier NSI/Web et double-cliquez sur le fichier pagesimple.html . Que se passe-t-il ? Quel est le r\u00f4le des balises pr\u00e9sentes dans ce document ?","title":"Un langage de balise : HTML"},{"location":"NSI/Premiere/C03/HTML/#structure-dun-document-html-et-balises-les-plus-utiles","text":"Une balise HTML classique est de la forme suivante : < p class = \"Toto\" > ... </ p > o\u00f9 : p est l'identificateur de balise, ici celui d'un paragraphe ; class est un attribut de la balise <p> ; \"Toto\" est la valeur de l'attribut class . Une valeur est toujours entre guillemets . </p> est la balise fermante. Entre les deux balises se trouve le corps du paragraphe. Cas particulier : la balise <img /> La balise <img /> est la balise perm\u00e9tant d'ins\u00e9rer des images dans le document HTML. Elle poss\u00e8de une particularit\u00e9 : elle est auto-fermante (car elle n'encadre aucun \u00e9l\u00e9ment, elle contient la r\u00e9f\u00e9rence vers l'image). Elle poss\u00e8de entre-autres les attributs suivants : src : l'adresse de l'image, absolue ou relative, ou sous la forme d'une URL (Attention aux URL google image, qui ne sont que temporaires !) ; alt : le texte de remplacement si l'image est manquante (voir remarque ci-dessus) ; title : le texte de l'info-bulle de l'image width : la largeur de l'image, en pixels ou en pourcentage ; height : la hauteur de l'image, en pixels ou en pourcentage ; ... Les balises HTML sont des \u00e9l\u00e9ments pr\u00e9cisant la nature du texte qu'elles encadrent. En aucun cas elles ne donnent d'indications de placement, d'alignement, bref de mise en page. Il s'agit donc de pr\u00e9ciser un d\u00e9coupage logique de la page. Les balises Pour chacune des balises suivantes, donner leur r\u00f4le et leurs principaux attributs, en s'aidant de la page d\u00e9veloppeur Mozilla . <html> <head> <meta> <title> <body> <header> et <footer> <h1> , <h2> , ..., <h6> <ol> , <ul> et <li> <div> et <span> <a> A vous de jouer Cr\u00e9ez une page web sur le sujet que vous souhaitez, et qui respecte au moins les conditions suivantes : Un titre Deux parties de 3 paragraphes, avec au moins une liste Un lien interne \u00e0 la page Un lien externe \u00e0 la page Une image locale (sur l'ordinateur) une image distante (par URL) Une incrustation vid\u00e9o","title":"Structure d'un document HTML et balises les plus utiles."},{"location":"NSI/Premiere/C03/HTML/#verifier-son-code-le-verificateur-du-w3c","text":"Le W3C ( World Wide Web Consortium ) est l'organisme \u00e0 buts non lucratifs charg\u00e9 de standardiser et promouvoir les technologies du web. Sa gestion est assur\u00e9e conjointement par le MIT aux \u00c9tats-Unis, l'ERCIM en Europe (dont l'INRIA en France), l'universit\u00e9 Keio au Japon et l'universit\u00e9 Beihang en Chine. \u00c0 c\u00f4t\u00e9 d'industriels et d'\u00e9diteurs informatiques, en particulier les \u00e9diteurs des navigateurs (Mozilla Fondation, Microsoft, Apple, Opera ou Google), ses membres se composent aussi des centres de recherches (Inria, National Research Council Canada, etc.), des op\u00e9rateurs de r\u00e9seaux, ainsi que des entreprises investies dans le Web comme Braillenet, la Biblioth\u00e8que du Congr\u00e8s ou la BBC. Le W3C offre un service de validation des pages web , v\u00e9rifiant que leur structure est conforme aux normes en vigueur. On le trouve \u00e0 l'adresse https://validator.w3.org/ . https://fr.wikipedia.org/wiki/Uniform_Resource_Locator \u21a9","title":"V\u00e9rifier son code : le v\u00e9rificateur du W3C"},{"location":"NSI/Premiere/C03/JS01/","text":"Ajouter de l'interactivit\u00e9 : Introduction \u00e0 JavaScript Premi\u00e8re approche Javascript ? Javascript , souvent raccourci en JS , est un langage de programmation interpr\u00e9t\u00e9, tout comme Python. Il est une des briques angulaire de HTML 5 , avec HTML et CSS . A chaque fois qu'une page fait plus que simplement afficher du texte et des images - un contenu statique , copmme par exemple affiocher des animations, des cartes interactives, des menus d\u00e9roulants, etc, il y a de bonnes chances pour que ce soit un script JavaScript qui en soit la raison. Comme souvent, un tutoriel complet sur Javascript est disponible sur MDN Web Docs . Vous y trouverez de nombreuses explications absentes de ce cours. Une premi\u00e8re approche : modifier le texte d'un paragraphe par un click. Tips Cette partie est int\u00e9gralement trait\u00e9e sous la forme d'une vid\u00e9o : Observons les codes de la page web (corrig\u00e9 pour la position de la balise <script> 1 ) : <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Un exemple de l'utilit\u00e9 de JS </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < p > Bonjour Inconnu ! </ p > < script > let texte = document . querySelector ( 'p' ); texte . addEventListener ( 'click' , changeNom ); function changeNom (){ let name = prompt ( \"Entrez votre nom :\" ); texte . textContent = \"Bonjour \" + name + \" !\" ; } </ script > </ body > </ html > p { text-align : center ; border : 2 px solid rgba ( 0 , 0 , 200 , 0.6 ); background : rgba ( 0 , 0 , 200 , 0.3 ); color : rgba ( 0 , 0 , 200 , 0.6 ); box-shadow : 1 px 1 px 2 px rgba ( 0 , 0 , 200 , 0.4 ); border-radius : 10 px ; padding : 3 px 10 px ; cursor : pointer ; } Ainsi que l'arbre du DOM correspondant : La construction d l'arbre du DOM se fait au fur et \u00e0 mesure de la lecture du fichier .html , et est pr\u00e9sent\u00e9e sur le sch\u00e9ma ci-dessus de gauche \u00e0 droite. La balise <script> \u00e9tant la derni\u00e8re balise pr\u00e9sente dans <body> , ell est lue en dernier. L'ex\u00e9cution du code JS est donc la suivante : Cr\u00e9ation d'une variable texte qui r\u00e9f\u00e9rence la premi\u00e8re balise <p> trouv\u00e9e dans le DOM (surlignage jaune ). Ajout \u00e0 l'\u00e9l\u00e9ment <p> s\u00e9lectionn\u00e9 d'un \u00e9couteur d'\u00e9v\u00e8nement qui attends une action clique-gauche (fl\u00e8che rouge ). Fin de la lecture du code, avec cr\u00e9ation d'une r\u00e9f\u00e9rence vers une fonction changeNom , qui n'est pas ex\u00e9cut\u00e9e. Une fois la construction du DOM termin\u00e9e, le gestionnaire d'\u00e9v\u00e8nement g\u00e9n\u00e9ral du navigateur \u00e9coute toutes les actions de l'utilisateur (mouvement souris, clique gauche ou clique droit, appuis sur le clavier, voire \u00e9coute micro si celui-ci a \u00e9t\u00e9 activ\u00e9....) Un clique-droit sur l'\u00e9l\u00e9ment <p> d\u00e9clenche l'ex\u00e9cution de la fonction changeNom (fl\u00e8che bleue , qui elle m\u00eame va modifier l'attribut textContent de l'\u00e9l\u00e9ment <p> (fl\u00e8che verte ). Bases de Javascript S\u00e9parer le code Pour conserver la coh\u00e9rence de HTML5, on a s\u00e9par\u00e9 le code HTML, d\u00e9finissant la nature des \u00e9lements de la page, du CSS, qui d\u00e9finit la forme que prendront ces \u00e9l\u00e9ments. Il faudra faire de m\u00eame avec le code javascript , en le s\u00e9parant du code html en renseigant dans la balise <script> l'attribut src avec l'adresse (absolue ou relative) du fichier contenant le code javascript. Ainsi si le fichier javascript s'appelle mon_fichier.js et est dans le m\u00eame dossier que le fichier html , il suffira d'\u00e9crire la balise suivante : < script src = \"mon_fichier.js\" > </ script > Un fichier javascript est donc simplement un fichier d'extension .js contenant du code javascript. L'exemple pr\u00e9c\u00e9dent peut donc \u00eatre class\u00e9 en trois fichiers : Fichier `pagesimple.html` <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Un exemple de l'utilit\u00e9 de JS </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < p > Bonjour Inconnu ! </ p > < script src = \"code.js\" ></ script > </ body > </ html > Fichier `style.css` p { text-align : center ; border : 2 px solid rgba ( 0 , 0 , 200 , 0.6 ); background : rgba ( 0 , 0 , 200 , 0.3 ); color : rgba ( 0 , 0 , 200 , 0.6 ); box-shadow : 1 px 1 px 2 px rgba ( 0 , 0 , 200 , 0.4 ); border-radius : 10 px ; padding : 3 px 10 px ; cursor : pointer ; } Fichier `code.js` let texte = document . querySelector ( 'p' ); texte . addEventListener ( 'click' , changeNom ); function changeNom (){ let name = prompt ( \"Entrez votre nom :\" ); texte . textContent = \"Bonjour \" + name + \" !\" ; } Utilisation de l'inspecteur d'objet L'inspecteur d'objet permet d'avoir acc\u00e8s \u00e0 une console javascript, fort utile pour aider au d\u00e9boggage de code. Celle-ci est disponible une fois l'inspecteur d'objet ouvert : prise en main de la console js Ouvrez la console javascript de votre navigateur, sur une page au choix. Tapez le code suivant : >>> function plop (){ console . log ( \"Plop !\" ); } Ex\u00e9cutez la fonction plop : >>> plop (); Que se passe-t-il ? Tapez maintenant le code suivant : >>> let cible = document . querySelector ( \"h1\" ); >>> cible . addEventListener ( 'click' , plop ); Cherchez la premi\u00e8re balise <h1> de la page et cliquez sur cet \u00e9l\u00e9ment. Que se passe-t-il ? Tapez le code suivant : >>> cible . addEventListener ( 'mouseover' , plop ); Comment faire pour d\u00e9clencher l'\u00e9criture dans la console \u00e0 partir de cet \u00e9v\u00e9nement ? Utilisation de console.log() Il est parfois difficile de voir comment s'ex\u00e9cute un code javscript. L'utilisation de console.log(message); dans votre code, avec comme message une cha\u00eene de caract\u00e8re explicative, est parfois un bon moyen de v\u00e9rifier qu'un bloc de code est ex\u00e9cut\u00e9 par javascript. D\u00e9claration des variables Javascript est un langage faiblement typ\u00e9. Cela signifie que lorsqu'on d\u00e9clare une variable, il n'est pas n\u00e9cessaire de d\u00e9clarer son type. Il suffit de d\u00e9clarer son nom , en ajoutant devant les mots-cl\u00e9s let ou var selon la situation 2 . On peut aussi d\u00e9clarer et initialiser une variable dans le m\u00eame temps : let x ; // x est d\u00e9clar\u00e9e, mais pas initialis\u00e9e let y = 10 ; // y est d\u00e9clar\u00e9e et initialis\u00e9e \u00e0 la valeur 10 var z = \"toto\" ; // z est d\u00e9clar\u00e9e et initialis\u00e9e avec la cha\u00eene \"toto\" Sachez seulement que : let d\u00e9finit des variables dont la port\u00e9e (=l'ensemble des lignes o\u00f9 la variable est connue et utilisable) est celle du bloc ; var d\u00e9finit des variables dont la port\u00e9e est celle de la fonction. Pour ceux int\u00e9ress\u00e9s les exemples ci-dessous sont parlants : Exemples de port\u00e9es 2 function varTest () { var x = 31 ; if ( true ) { var x = 71 ; // c'est la m\u00eame variable (m\u00eame fonction)! console . log ( x ); // 71 } console . log ( x ); // 71 } function letTest () { let x = 31 ; if ( true ) { let x = 71 ; // c'est une variable diff\u00e9rente (changement de bloc) console . log ( x ); // 71 } console . log ( x ); // 31 } Structures conditionnelles Boucles born\u00e9es Boucles non-born\u00e9es une vid\u00e9o d\u00e9taillant pourquoi la balise <script> doit \u00eatre plac\u00e9e dans la balise <body> est disponible ici . \u21a9 La question de l'utilisation de let ou var d\u00e9passe largement le cadre de ce cours. On trouvera ici un d\u00e9but d'explication. \u21a9 \u21a9","title":"Introduction \u00e0 Javascript"},{"location":"NSI/Premiere/C03/JS01/#ajouter-de-linteractivite-introduction-a-javascript","text":"","title":"Ajouter de l'interactivit\u00e9 : Introduction \u00e0 JavaScript"},{"location":"NSI/Premiere/C03/JS01/#premiere-approche","text":"","title":"Premi\u00e8re approche"},{"location":"NSI/Premiere/C03/JS01/#javascript","text":"Javascript , souvent raccourci en JS , est un langage de programmation interpr\u00e9t\u00e9, tout comme Python. Il est une des briques angulaire de HTML 5 , avec HTML et CSS . A chaque fois qu'une page fait plus que simplement afficher du texte et des images - un contenu statique , copmme par exemple affiocher des animations, des cartes interactives, des menus d\u00e9roulants, etc, il y a de bonnes chances pour que ce soit un script JavaScript qui en soit la raison. Comme souvent, un tutoriel complet sur Javascript est disponible sur MDN Web Docs . Vous y trouverez de nombreuses explications absentes de ce cours.","title":"Javascript ?"},{"location":"NSI/Premiere/C03/JS01/#une-premiere-approche-modifier-le-texte-dun-paragraphe-par-un-click","text":"Tips Cette partie est int\u00e9gralement trait\u00e9e sous la forme d'une vid\u00e9o : Observons les codes de la page web (corrig\u00e9 pour la position de la balise <script> 1 ) : <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Un exemple de l'utilit\u00e9 de JS </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < p > Bonjour Inconnu ! </ p > < script > let texte = document . querySelector ( 'p' ); texte . addEventListener ( 'click' , changeNom ); function changeNom (){ let name = prompt ( \"Entrez votre nom :\" ); texte . textContent = \"Bonjour \" + name + \" !\" ; } </ script > </ body > </ html > p { text-align : center ; border : 2 px solid rgba ( 0 , 0 , 200 , 0.6 ); background : rgba ( 0 , 0 , 200 , 0.3 ); color : rgba ( 0 , 0 , 200 , 0.6 ); box-shadow : 1 px 1 px 2 px rgba ( 0 , 0 , 200 , 0.4 ); border-radius : 10 px ; padding : 3 px 10 px ; cursor : pointer ; } Ainsi que l'arbre du DOM correspondant : La construction d l'arbre du DOM se fait au fur et \u00e0 mesure de la lecture du fichier .html , et est pr\u00e9sent\u00e9e sur le sch\u00e9ma ci-dessus de gauche \u00e0 droite. La balise <script> \u00e9tant la derni\u00e8re balise pr\u00e9sente dans <body> , ell est lue en dernier. L'ex\u00e9cution du code JS est donc la suivante : Cr\u00e9ation d'une variable texte qui r\u00e9f\u00e9rence la premi\u00e8re balise <p> trouv\u00e9e dans le DOM (surlignage jaune ). Ajout \u00e0 l'\u00e9l\u00e9ment <p> s\u00e9lectionn\u00e9 d'un \u00e9couteur d'\u00e9v\u00e8nement qui attends une action clique-gauche (fl\u00e8che rouge ). Fin de la lecture du code, avec cr\u00e9ation d'une r\u00e9f\u00e9rence vers une fonction changeNom , qui n'est pas ex\u00e9cut\u00e9e. Une fois la construction du DOM termin\u00e9e, le gestionnaire d'\u00e9v\u00e8nement g\u00e9n\u00e9ral du navigateur \u00e9coute toutes les actions de l'utilisateur (mouvement souris, clique gauche ou clique droit, appuis sur le clavier, voire \u00e9coute micro si celui-ci a \u00e9t\u00e9 activ\u00e9....) Un clique-droit sur l'\u00e9l\u00e9ment <p> d\u00e9clenche l'ex\u00e9cution de la fonction changeNom (fl\u00e8che bleue , qui elle m\u00eame va modifier l'attribut textContent de l'\u00e9l\u00e9ment <p> (fl\u00e8che verte ).","title":"Une premi\u00e8re approche : modifier le texte d'un paragraphe par un click."},{"location":"NSI/Premiere/C03/JS01/#bases-de-javascript","text":"","title":"Bases de Javascript"},{"location":"NSI/Premiere/C03/JS01/#separer-le-code","text":"Pour conserver la coh\u00e9rence de HTML5, on a s\u00e9par\u00e9 le code HTML, d\u00e9finissant la nature des \u00e9lements de la page, du CSS, qui d\u00e9finit la forme que prendront ces \u00e9l\u00e9ments. Il faudra faire de m\u00eame avec le code javascript , en le s\u00e9parant du code html en renseigant dans la balise <script> l'attribut src avec l'adresse (absolue ou relative) du fichier contenant le code javascript. Ainsi si le fichier javascript s'appelle mon_fichier.js et est dans le m\u00eame dossier que le fichier html , il suffira d'\u00e9crire la balise suivante : < script src = \"mon_fichier.js\" > </ script > Un fichier javascript est donc simplement un fichier d'extension .js contenant du code javascript. L'exemple pr\u00e9c\u00e9dent peut donc \u00eatre class\u00e9 en trois fichiers : Fichier `pagesimple.html` <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" /> < title > Un exemple de l'utilit\u00e9 de JS </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < p > Bonjour Inconnu ! </ p > < script src = \"code.js\" ></ script > </ body > </ html > Fichier `style.css` p { text-align : center ; border : 2 px solid rgba ( 0 , 0 , 200 , 0.6 ); background : rgba ( 0 , 0 , 200 , 0.3 ); color : rgba ( 0 , 0 , 200 , 0.6 ); box-shadow : 1 px 1 px 2 px rgba ( 0 , 0 , 200 , 0.4 ); border-radius : 10 px ; padding : 3 px 10 px ; cursor : pointer ; } Fichier `code.js` let texte = document . querySelector ( 'p' ); texte . addEventListener ( 'click' , changeNom ); function changeNom (){ let name = prompt ( \"Entrez votre nom :\" ); texte . textContent = \"Bonjour \" + name + \" !\" ; }","title":"S\u00e9parer le code"},{"location":"NSI/Premiere/C03/JS01/#utilisation-de-linspecteur-dobjet","text":"L'inspecteur d'objet permet d'avoir acc\u00e8s \u00e0 une console javascript, fort utile pour aider au d\u00e9boggage de code. Celle-ci est disponible une fois l'inspecteur d'objet ouvert : prise en main de la console js Ouvrez la console javascript de votre navigateur, sur une page au choix. Tapez le code suivant : >>> function plop (){ console . log ( \"Plop !\" ); } Ex\u00e9cutez la fonction plop : >>> plop (); Que se passe-t-il ? Tapez maintenant le code suivant : >>> let cible = document . querySelector ( \"h1\" ); >>> cible . addEventListener ( 'click' , plop ); Cherchez la premi\u00e8re balise <h1> de la page et cliquez sur cet \u00e9l\u00e9ment. Que se passe-t-il ? Tapez le code suivant : >>> cible . addEventListener ( 'mouseover' , plop ); Comment faire pour d\u00e9clencher l'\u00e9criture dans la console \u00e0 partir de cet \u00e9v\u00e9nement ? Utilisation de console.log() Il est parfois difficile de voir comment s'ex\u00e9cute un code javscript. L'utilisation de console.log(message); dans votre code, avec comme message une cha\u00eene de caract\u00e8re explicative, est parfois un bon moyen de v\u00e9rifier qu'un bloc de code est ex\u00e9cut\u00e9 par javascript.","title":"Utilisation de l'inspecteur d'objet"},{"location":"NSI/Premiere/C03/JS01/#declaration-des-variables","text":"Javascript est un langage faiblement typ\u00e9. Cela signifie que lorsqu'on d\u00e9clare une variable, il n'est pas n\u00e9cessaire de d\u00e9clarer son type. Il suffit de d\u00e9clarer son nom , en ajoutant devant les mots-cl\u00e9s let ou var selon la situation 2 . On peut aussi d\u00e9clarer et initialiser une variable dans le m\u00eame temps : let x ; // x est d\u00e9clar\u00e9e, mais pas initialis\u00e9e let y = 10 ; // y est d\u00e9clar\u00e9e et initialis\u00e9e \u00e0 la valeur 10 var z = \"toto\" ; // z est d\u00e9clar\u00e9e et initialis\u00e9e avec la cha\u00eene \"toto\" Sachez seulement que : let d\u00e9finit des variables dont la port\u00e9e (=l'ensemble des lignes o\u00f9 la variable est connue et utilisable) est celle du bloc ; var d\u00e9finit des variables dont la port\u00e9e est celle de la fonction. Pour ceux int\u00e9ress\u00e9s les exemples ci-dessous sont parlants : Exemples de port\u00e9es 2 function varTest () { var x = 31 ; if ( true ) { var x = 71 ; // c'est la m\u00eame variable (m\u00eame fonction)! console . log ( x ); // 71 } console . log ( x ); // 71 } function letTest () { let x = 31 ; if ( true ) { let x = 71 ; // c'est une variable diff\u00e9rente (changement de bloc) console . log ( x ); // 71 } console . log ( x ); // 31 }","title":"D\u00e9claration des variables"},{"location":"NSI/Premiere/C03/JS01/#structures-conditionnelles","text":"","title":"Structures conditionnelles"},{"location":"NSI/Premiere/C03/JS01/#boucles-bornees","text":"","title":"Boucles born\u00e9es"},{"location":"NSI/Premiere/C03/JS01/#boucles-non-bornees","text":"une vid\u00e9o d\u00e9taillant pourquoi la balise <script> doit \u00eatre plac\u00e9e dans la balise <body> est disponible ici . \u21a9 La question de l'utilisation de let ou var d\u00e9passe largement le cadre de ce cours. On trouvera ici un d\u00e9but d'explication. \u21a9 \u21a9","title":"Boucles non-born\u00e9es"},{"location":"NSI/Terminale/home/","text":"Le programme Documents officiels Le programme de Terminale NSI se trouve ici . Cependant certains ajustements ont \u00e9t\u00e9 effectu\u00e9s dans le BO du 29 juillet 2021 . Pr\u00e9vision de progression annuelle 2021-2022 Cette progression n'est valable que pour les \u00e9l\u00e8ves du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e... Th\u00e8me Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques Structures de donn\u00e9es Modularit\u00e9 et POO 2 semaine 02/09 -> 16/09 Langages et programmation R\u00e9cursivit\u00e9 2 semaines 16/09 -> 30/09 Les \u00e9preuves Epreuve \u00e9crite Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve \u00e9crite de NSI pour la session de Bac 2022. Nous pouvons cependant- supposer qu'elle aura lieu en Mars . Epreuve pratique Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve pratique de NSI pour la session de Bac 2022. Nous pouvons cependant- supposer qu'elle aura lieu en Mars .","title":"Pr\u00e9sentation"},{"location":"NSI/Terminale/home/#le-programme","text":"","title":"Le programme"},{"location":"NSI/Terminale/home/#documents-officiels","text":"Le programme de Terminale NSI se trouve ici . Cependant certains ajustements ont \u00e9t\u00e9 effectu\u00e9s dans le BO du 29 juillet 2021 .","title":"Documents officiels"},{"location":"NSI/Terminale/home/#prevision-de-progression-annuelle-2021-2022","text":"Cette progression n'est valable que pour les \u00e9l\u00e8ves du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e... Th\u00e8me Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques Structures de donn\u00e9es Modularit\u00e9 et POO 2 semaine 02/09 -> 16/09 Langages et programmation R\u00e9cursivit\u00e9 2 semaines 16/09 -> 30/09","title":"Pr\u00e9vision de progression annuelle 2021-2022"},{"location":"NSI/Terminale/home/#les-epreuves","text":"","title":"Les \u00e9preuves"},{"location":"NSI/Terminale/home/#epreuve-ecrite","text":"Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve \u00e9crite de NSI pour la session de Bac 2022. Nous pouvons cependant- supposer qu'elle aura lieu en Mars .","title":"Epreuve \u00e9crite"},{"location":"NSI/Terminale/home/#epreuve-pratique","text":"Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve pratique de NSI pour la session de Bac 2022. Nous pouvons cependant- supposer qu'elle aura lieu en Mars .","title":"Epreuve pratique"},{"location":"NSI/Terminale/C01/Exceptions/","text":"Gestion des exceptions Un exemple d'erreur \u00e0 ne pas commettre Utilisation malheureuse d'un module Reprenons le module secondDegre.py , mais en temps qu'utilisateur. Nous connaissons l'interface qui nous a \u00e9t\u00e9 fournie par l'auteur. Pour tester le module nous lan\u00e7ons le script suivant, nomm\u00e9 testModule.py , et situ\u00e9 dans le m\u00eame dossier que secondDegre.py : import secondDegre as sD p = input ( \"Donnez les coefficients du polynome s\u00e9par\u00e9s par des virgules :\" ) p = tuple ( map ( float , p . split ( \",\" ))) p = sD . polynome ( p ) print ( sD . tangente ( p , 3 )) Un probl\u00e8me ? Copiez-collez le code ci-dessus dans un fichier testModule.py , puis ex\u00e9cutez-le en saisissant : 3,4,5 ; \"trois\",4,5 3,4,5,6 0,3,4 Dans chacun des cas, qu'obtient-on en sortie ? Pourquoi ? Solution 3,4,5 La sortie est : `y = 22.0(x-3) + 44.0` qui est correcte. \"trois\",4,5 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le premier if , car un \u00e9l\u00e9ment du tuple n'est pas du bon type. 3,4,5,6 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le premier if , car le tuple donn\u00e9 n'est pas de la bonne taille. 0,3,4 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le deuxi\u00e8me if , car le tuple donn\u00e9 ne correspond pas \u00e0 un polyn\u00f4me de degr\u00e9 2. Lever les bonnes erreurs Dans l'exemple pr\u00e9c\u00e9dent, les trois erreurs, pourtant tr\u00e8s diff\u00e9rentes, sont signal\u00e9es par le m\u00eame message. L'utilisateur, qui lui ne conna\u00eet pas l'impl\u00e9mentation, ne peut donc pas savoir d'o\u00f9 provient son erreur** (ce qui peut donner des s\u00e9ances de d\u00e9buggage particuli\u00e8rement frustrantes). Il est donc n\u00e9cessaire de pr\u00e9ciser mieux les erreurs commises par l'utilisateur, pour qu'il n'ait pas \u00e0 ses pr\u00e9occuper des d\u00e9tails d'impl\u00e9mentation. Il est par exemple possible de rajouter un message lorsque l'erreur est lev\u00e9e, en la passant en param\u00e8tre directement dans l'instruction ValueError() : def polynome ( t ) : a , b , * c = t if len ( c ) > 1 : raise ValueError ( \"length of tuple argument greater than 3\" ) if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or not ( isinstance ( * c ,( int , float ))) : raise ValueError ( \"argment Error : argument must be a tuple integers or float\" ) if a == 0 : raise ValueError ( \"First element of tuple must not be 0\" ) return t Tyes d'exceptions Voici quelques exceptions courantes, et leurs utilisations Exception Contexte NameError acc\u00e8s \u00e0 une variable inexistante dans l'espace de nom courant IndexError acc\u00e8s \u00e0 un indice invalide d'une liste, d'un tuple, d'une chaine de caract\u00e8res... KeyError acc\u00e8s \u00e0 une cl\u00e9 inexistante d'un dictionnaire ZeroDivisionError division par z\u00e9ro TypeError op\u00e9ration appliqu\u00e9es \u00e0 un ou des objets incompatibles Lever des exceptions Une exception peut \u00eatre lev\u00e9e (c'est-\u00e0-dire volontairement d\u00e9clench\u00e9e) par l'interm\u00e9diaire de l'instruction raise . Dans ce cas le programme est interrompu , et la pile d'erreurs est renvoy\u00e9es dans le terminal \u00e0 l'utilisateur. Corriger le code\"\" Malgr\u00e9 nos corrections, il reste plusieurs possibilit\u00e9s d'erreurs dans l'utilisation de la fonction polynome(t) . Quelles sont-elles et comment les corriger pour lever une exception explicite ? Solution Ex\u00e9cution de polynome((2,3)) ou polynome((4)) Que se passe-t-il lorsqu'on utilise la fonction polynome avec un tuple de 1 ou 2 \u00e9l\u00e9ments ? Dans le cas d'un seul \u00e9l\u00e9ment, l'erreur ressortie est : a,b,*c = t TypeError: cannot unpack non-iterable int object Dans le cas de deux \u00e9l\u00e9ments, l'erreur lev\u00e9e est : ) or not(isinstance(*c,(int, float))) : TypeError: isinstance expected 2 arguments, got 1 Dans les deux cas, on voit appara\u00eetre les d\u00e9tails d'impl\u00e9mentation du code de la fonction, qui sont peu clairs en particulier pour le cas n\u00b02. Ex\u00e9cution de polynome(3,4,5) Une erreur possible, et que vous avez probablement commise, est celle de passer non pas un seul argument sous la forme d'un tuple (ou d'une liste) mais de multiples param\u00e8tres. Cette erreur d\u00e9clenche alors l'exception TypeError car les trois arguments pass\u00e9s ne sont pas du bon type. Une correction possible Le code suivant est une solution possible (certainement perfectible) \u00e0 la lev\u00e9e d'erreurs plus explicites : def polynome ( * t ) : try : if len ( t ) == 1 : # si on passe un tuple ou un tableau (1,2,3), # *t le convertit en [(1,2,3)] t = t [ 0 ] # d'o\u00f9 cette ligne a , b , * c = t #Puis on unpack, c \u00e9tant une liste \u00e9ventuellement vide except TypeError : raise TypeError ( \"Must pass three argument or a tuple of 3 element.\" ) if len ( c ) != 1 : # si c est vide ou contient au moins 2 \u00e9l\u00e9ments raise ValueError ( \"Bad Number of argument.\" ) if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or not ( isinstance ( * c ,( int , float ))) : raise TypeError ( \"argment Error : argument must be a tuple of integers or floats.\" ) if a == 0 : raise ValueError ( \"First element of tuple must not be 0.\" ) return t Intercepter des exceptions Vous avez constat\u00e9 dans la solution pr\u00e9c\u00e9dente un bloc que nous n'avons encore jamais utilis\u00e9 : try : if len ( t ) == 1 : t = t [ 0 ] a , b , * c = t except TypeError : raise TypeError ( \"Must pass three argument or a tuple of 3 element.\" ) On a ici l'utilisation d'une structure sp\u00e9ciale : l'interception d'ereurs. Interception des exceptions Il arrive souvent en programmation que l'on doive utiliser une instructions oui une s\u00e9rie d'instruction dont on sait \u00e0 l'avance qu'elle peuvent g\u00e9n\u00e9rer des erreurs. La structure suivante est l\u00e0 pour \u00e7a : try : # Bloc try except error : # Bloc except Le code du bloc try va \u00eatre ex\u00e9cut\u00e9, et si une erreur du type fournie en argument de l'instruction except est lev\u00e9e, alors le code du bloc except est ex\u00e9cut\u00e9. Exemple : En premi\u00e8re nous avons vu l'importance de rendre parfois un code dumbproof , et que cela g\u00e9n\u00e8rais parfois de nombreuses difficult\u00e9s. Le simple fait de coder une fonction demandant \u00e0 un utilisateur de saisir un nombre entier entre 1 et 10 inclus pouvaiet rapidement p\u00e9nible \u00e0 \u00e9crire. Les deux onglets ci-dessous donnent deux versions d'une fonction permettant de r\u00e9aliser cette fonction, la version utilis\u00e9e en premi\u00e8re, et celle levant des excpetions. Version avec des structures conditionnelles def askIntFrom1To10 () : while True : nb = input ( \"Entrez un entier entre 1 et 10 :\" ) if nb . isnumeric () and \".\" not in ( nb ) : nb = int ( nb ) if 1 <= nb and nb <= 10 : return nb else : print ( \"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\" ) else : print ( \"Ce n'est pas un entier, veuillez recommencer !\" ) Version avec interception d'erreurs def askIntFrom1To10 () : while True : try : nb = int ( input ( \"Entrez un entier entre 1 et 10 :\" )) if 1 <= nb and nb <= 10 : return nb else : print ( \"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\" ) except ValueError : print ( \"Ce n'est pas un entier, veuillez recommencer !\" ) Exercice Evidemment, la diff\u00e9rence ne saute pas vraiment aux yeux... Pourquoi faire tout un plat d'une seule ligne gagn\u00e9e ? Essayez donc, pour chacune des 2 fonctions pr\u00e9c\u00e9dentes, avec les chaines de caract\u00e8res suivantes : \u00bd 3\u00b2 R\u00e9ponse En fait le probl\u00e8me provient de la m\u00e9thode isnumeric() , dont on ne contr\u00f4le pas vraiment le fonctionnement. On sait que cette m\u00e9thode permet de v\u00e9rifier si une chaine de caract\u00e8res est bien constitu\u00e9e uniquement de caract\u00e8res num\u00e9riques. Mais sans lire r\u00e9ellement la documentation, qui peut se douter que les fractions d\u00e9finies dans la table utf8 , ainsi que les caract\u00e8res en exposant et en indice *, sont consid\u00e9r\u00e9s comme des valeurs num\u00e9riques. L'int\u00e9r\u00eat du bloc try est qu'il se d\u00e9clenchera d\u00e8s qu'il y aura une exception lev\u00e9e. Et cette exception a peu de chance de se produire dans le bloc if / else . La fonction devient dumbproof (mais si vous r\u00e9ussissez \u00e0 d\u00e9clencher une erreur bloquante, signalez-le moi !!). Enchainer les interceptions Il est aussi possible d'avoir plusieurs blocs except successifs, en utilisant : try : # Bloc try except error1 : # Bloc except1 except error2 : # Bloc except2 ... Etendre la gestion des exceptions Il existe de nombreuses autres possibilit\u00e9s utilisant la lev\u00e9e d'exceptions, mais elles d\u00e9passent largement le programme de Terminale. Les plus curieux parmi vous pourront toujours aller lire la doc Python \", qui reste la r\u00e9f\u00e9rence absolue...","title":"Exceptions"},{"location":"NSI/Terminale/C01/Exceptions/#gestion-des-exceptions","text":"","title":"Gestion des exceptions"},{"location":"NSI/Terminale/C01/Exceptions/#un-exemple-derreur-a-ne-pas-commettre","text":"Utilisation malheureuse d'un module Reprenons le module secondDegre.py , mais en temps qu'utilisateur. Nous connaissons l'interface qui nous a \u00e9t\u00e9 fournie par l'auteur. Pour tester le module nous lan\u00e7ons le script suivant, nomm\u00e9 testModule.py , et situ\u00e9 dans le m\u00eame dossier que secondDegre.py : import secondDegre as sD p = input ( \"Donnez les coefficients du polynome s\u00e9par\u00e9s par des virgules :\" ) p = tuple ( map ( float , p . split ( \",\" ))) p = sD . polynome ( p ) print ( sD . tangente ( p , 3 )) Un probl\u00e8me ? Copiez-collez le code ci-dessus dans un fichier testModule.py , puis ex\u00e9cutez-le en saisissant : 3,4,5 ; \"trois\",4,5 3,4,5,6 0,3,4 Dans chacun des cas, qu'obtient-on en sortie ? Pourquoi ? Solution 3,4,5 La sortie est : `y = 22.0(x-3) + 44.0` qui est correcte. \"trois\",4,5 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le premier if , car un \u00e9l\u00e9ment du tuple n'est pas du bon type. 3,4,5,6 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le premier if , car le tuple donn\u00e9 n'est pas de la bonne taille. 0,3,4 La sortie renvoie une erreur de type ValueError , mais c'est celle lev\u00e9e dans le deuxi\u00e8me if , car le tuple donn\u00e9 ne correspond pas \u00e0 un polyn\u00f4me de degr\u00e9 2. Lever les bonnes erreurs Dans l'exemple pr\u00e9c\u00e9dent, les trois erreurs, pourtant tr\u00e8s diff\u00e9rentes, sont signal\u00e9es par le m\u00eame message. L'utilisateur, qui lui ne conna\u00eet pas l'impl\u00e9mentation, ne peut donc pas savoir d'o\u00f9 provient son erreur** (ce qui peut donner des s\u00e9ances de d\u00e9buggage particuli\u00e8rement frustrantes). Il est donc n\u00e9cessaire de pr\u00e9ciser mieux les erreurs commises par l'utilisateur, pour qu'il n'ait pas \u00e0 ses pr\u00e9occuper des d\u00e9tails d'impl\u00e9mentation. Il est par exemple possible de rajouter un message lorsque l'erreur est lev\u00e9e, en la passant en param\u00e8tre directement dans l'instruction ValueError() : def polynome ( t ) : a , b , * c = t if len ( c ) > 1 : raise ValueError ( \"length of tuple argument greater than 3\" ) if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or not ( isinstance ( * c ,( int , float ))) : raise ValueError ( \"argment Error : argument must be a tuple integers or float\" ) if a == 0 : raise ValueError ( \"First element of tuple must not be 0\" ) return t","title":"Un exemple d'erreur \u00e0 ne pas commettre"},{"location":"NSI/Terminale/C01/Exceptions/#tyes-dexceptions","text":"Voici quelques exceptions courantes, et leurs utilisations Exception Contexte NameError acc\u00e8s \u00e0 une variable inexistante dans l'espace de nom courant IndexError acc\u00e8s \u00e0 un indice invalide d'une liste, d'un tuple, d'une chaine de caract\u00e8res... KeyError acc\u00e8s \u00e0 une cl\u00e9 inexistante d'un dictionnaire ZeroDivisionError division par z\u00e9ro TypeError op\u00e9ration appliqu\u00e9es \u00e0 un ou des objets incompatibles Lever des exceptions Une exception peut \u00eatre lev\u00e9e (c'est-\u00e0-dire volontairement d\u00e9clench\u00e9e) par l'interm\u00e9diaire de l'instruction raise . Dans ce cas le programme est interrompu , et la pile d'erreurs est renvoy\u00e9es dans le terminal \u00e0 l'utilisateur. Corriger le code\"\" Malgr\u00e9 nos corrections, il reste plusieurs possibilit\u00e9s d'erreurs dans l'utilisation de la fonction polynome(t) . Quelles sont-elles et comment les corriger pour lever une exception explicite ? Solution Ex\u00e9cution de polynome((2,3)) ou polynome((4)) Que se passe-t-il lorsqu'on utilise la fonction polynome avec un tuple de 1 ou 2 \u00e9l\u00e9ments ? Dans le cas d'un seul \u00e9l\u00e9ment, l'erreur ressortie est : a,b,*c = t TypeError: cannot unpack non-iterable int object Dans le cas de deux \u00e9l\u00e9ments, l'erreur lev\u00e9e est : ) or not(isinstance(*c,(int, float))) : TypeError: isinstance expected 2 arguments, got 1 Dans les deux cas, on voit appara\u00eetre les d\u00e9tails d'impl\u00e9mentation du code de la fonction, qui sont peu clairs en particulier pour le cas n\u00b02. Ex\u00e9cution de polynome(3,4,5) Une erreur possible, et que vous avez probablement commise, est celle de passer non pas un seul argument sous la forme d'un tuple (ou d'une liste) mais de multiples param\u00e8tres. Cette erreur d\u00e9clenche alors l'exception TypeError car les trois arguments pass\u00e9s ne sont pas du bon type. Une correction possible Le code suivant est une solution possible (certainement perfectible) \u00e0 la lev\u00e9e d'erreurs plus explicites : def polynome ( * t ) : try : if len ( t ) == 1 : # si on passe un tuple ou un tableau (1,2,3), # *t le convertit en [(1,2,3)] t = t [ 0 ] # d'o\u00f9 cette ligne a , b , * c = t #Puis on unpack, c \u00e9tant une liste \u00e9ventuellement vide except TypeError : raise TypeError ( \"Must pass three argument or a tuple of 3 element.\" ) if len ( c ) != 1 : # si c est vide ou contient au moins 2 \u00e9l\u00e9ments raise ValueError ( \"Bad Number of argument.\" ) if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or not ( isinstance ( * c ,( int , float ))) : raise TypeError ( \"argment Error : argument must be a tuple of integers or floats.\" ) if a == 0 : raise ValueError ( \"First element of tuple must not be 0.\" ) return t","title":"Tyes d'exceptions"},{"location":"NSI/Terminale/C01/Exceptions/#intercepter-des-exceptions","text":"Vous avez constat\u00e9 dans la solution pr\u00e9c\u00e9dente un bloc que nous n'avons encore jamais utilis\u00e9 : try : if len ( t ) == 1 : t = t [ 0 ] a , b , * c = t except TypeError : raise TypeError ( \"Must pass three argument or a tuple of 3 element.\" ) On a ici l'utilisation d'une structure sp\u00e9ciale : l'interception d'ereurs. Interception des exceptions Il arrive souvent en programmation que l'on doive utiliser une instructions oui une s\u00e9rie d'instruction dont on sait \u00e0 l'avance qu'elle peuvent g\u00e9n\u00e9rer des erreurs. La structure suivante est l\u00e0 pour \u00e7a : try : # Bloc try except error : # Bloc except Le code du bloc try va \u00eatre ex\u00e9cut\u00e9, et si une erreur du type fournie en argument de l'instruction except est lev\u00e9e, alors le code du bloc except est ex\u00e9cut\u00e9. Exemple : En premi\u00e8re nous avons vu l'importance de rendre parfois un code dumbproof , et que cela g\u00e9n\u00e8rais parfois de nombreuses difficult\u00e9s. Le simple fait de coder une fonction demandant \u00e0 un utilisateur de saisir un nombre entier entre 1 et 10 inclus pouvaiet rapidement p\u00e9nible \u00e0 \u00e9crire. Les deux onglets ci-dessous donnent deux versions d'une fonction permettant de r\u00e9aliser cette fonction, la version utilis\u00e9e en premi\u00e8re, et celle levant des excpetions. Version avec des structures conditionnelles def askIntFrom1To10 () : while True : nb = input ( \"Entrez un entier entre 1 et 10 :\" ) if nb . isnumeric () and \".\" not in ( nb ) : nb = int ( nb ) if 1 <= nb and nb <= 10 : return nb else : print ( \"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\" ) else : print ( \"Ce n'est pas un entier, veuillez recommencer !\" ) Version avec interception d'erreurs def askIntFrom1To10 () : while True : try : nb = int ( input ( \"Entrez un entier entre 1 et 10 :\" )) if 1 <= nb and nb <= 10 : return nb else : print ( \"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\" ) except ValueError : print ( \"Ce n'est pas un entier, veuillez recommencer !\" ) Exercice Evidemment, la diff\u00e9rence ne saute pas vraiment aux yeux... Pourquoi faire tout un plat d'une seule ligne gagn\u00e9e ? Essayez donc, pour chacune des 2 fonctions pr\u00e9c\u00e9dentes, avec les chaines de caract\u00e8res suivantes : \u00bd 3\u00b2 R\u00e9ponse En fait le probl\u00e8me provient de la m\u00e9thode isnumeric() , dont on ne contr\u00f4le pas vraiment le fonctionnement. On sait que cette m\u00e9thode permet de v\u00e9rifier si une chaine de caract\u00e8res est bien constitu\u00e9e uniquement de caract\u00e8res num\u00e9riques. Mais sans lire r\u00e9ellement la documentation, qui peut se douter que les fractions d\u00e9finies dans la table utf8 , ainsi que les caract\u00e8res en exposant et en indice *, sont consid\u00e9r\u00e9s comme des valeurs num\u00e9riques. L'int\u00e9r\u00eat du bloc try est qu'il se d\u00e9clenchera d\u00e8s qu'il y aura une exception lev\u00e9e. Et cette exception a peu de chance de se produire dans le bloc if / else . La fonction devient dumbproof (mais si vous r\u00e9ussissez \u00e0 d\u00e9clencher une erreur bloquante, signalez-le moi !!). Enchainer les interceptions Il est aussi possible d'avoir plusieurs blocs except successifs, en utilisant : try : # Bloc try except error1 : # Bloc except1 except error2 : # Bloc except2 ... Etendre la gestion des exceptions Il existe de nombreuses autres possibilit\u00e9s utilisant la lev\u00e9e d'exceptions, mais elles d\u00e9passent largement le programme de Terminale. Les plus curieux parmi vous pourront toujours aller lire la doc Python \", qui reste la r\u00e9f\u00e9rence absolue...","title":"Intercepter des exceptions"},{"location":"NSI/Terminale/C01/Intro/","text":"Modularit\u00e9 et initiation \u00e0 la Programmation Orient\u00e9e Objet Quand nous utilisons certaines fonctions o\u00f9 certains objets Python, qu'ils soient built-in ou bien import\u00e9s \u00e0 partir de modules , nous nous posons rarement la question de savoir quelle est leur impl\u00e9mentation , c'est-\u00e0-dire la mani\u00e8re dont-ils ont \u00e9t\u00e9 con\u00e7u et programm\u00e9. Nous faisons globalement confiance aux concepteurs du langage ou du module. Ce qui nous importe est plut\u00f4t l'interface de ces objets, c'est-\u00e0-dire la fa\u00e7on dont nous pouvons interagir avec ces objets : les cr\u00e9er, les affecter, les additionner, les supprimer,... Dans cette partie nous verrons comment cr\u00e9er un module, le documenter, et d\u00e9finir une interface claire. Nous verrons les pr\u00e9mices d'un nouveau paradigme de programmation : la Programmation Orient\u00e9e Objet( POO ). La suite de cette partie est grandement inspir\u00e9e de Num\u00e9riques et Sciences Informatique, 24 le\u00e7ons avec exercices corrig\u00e9, Ellipse Un premier probl\u00e8me Abstract Voici une propri\u00e9t\u00e9 probabiliste peu intuitive : il suffit d'avoir un groupe de 23 personnes pour que la probabilit\u00e9 que deux personnes aient la m\u00eame date d'anniversaire soit sup\u00e9rieure \u00e0 50%. Nous allons construire un programme Python qui permettra de v\u00e9rifier exp\u00e9rimentalement cette propri\u00e9t\u00e9. Pour mod\u00e9liser le probl\u00e8me : plut\u00f4t que d'utiliser des dates, nous allons utiliser des entiers de 1 \u00e0 365 ; nous allons cr\u00e9er une proc\u00e9dure ( une fonction sans param\u00e8tres ) genere_groupe() qui renvoie un tableau al\u00e9atoire de 23 entiers de 1 \u00e0 365 ; nous allons cr\u00e9er une fonction contient_doublon(t) qui renverra True si le tableau contient un doublon, et False sinon ; puis nous cr\u00e9erons une proc\u00e9dure teste_hypothese() qui testera sur un \u00e9chantillon de 100 groupes la pr\u00e9sence d'un doublon ou non, et renverra le nombre de groupes ayant eu des doublons. Exercice Cr\u00e9er un fichier recherchesDates.py et impl\u00e9menter les fonctions pr\u00e9c\u00e9dentes. Des solutions sont propos\u00e9es dans les parties ci-dessous, mais vous devez d'abord tester par vous-m\u00eames . Solutions genere_groupe() from random import randint def genere_groupe () : \"\"\"fonction renvoyant un tableau de 23 nombres al\u00e9atoires entre 1 et 365\"\"\" return [ randint ( 1 , 365 ) for _ in range ( 23 )] contient_doublon(t) def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [] # s est un tableau temporaire contenant les valeurs test\u00e9es for data in t : if data in s : # si data est d\u00e9j\u00e0 dans s, alors c'est un doublon return True else : # sinon on ajoute data \u00e0 la liste des valeurs test\u00e9es. s . append ( data ) return False teste_hypothese() def teste_hypothese () : \"\"\"fonction renvoyant le nombre de groupes contenant un doublon sur un \u00e9chantillon de 100 groupes\"\"\" nbDoublons = 0 for _ in range ( 100 ) : t = genere_groupe () if contient_doublon ( t ) : nbDoublons += 1 return nbDoublons Ex\u00e9cution dans Basthon Preuve math\u00e9matique Cette pruve est donn\u00e9e \u00e0 titre indicatif, et n'a ni \u00e0 \u00eatre connue, ni m\u00eame \u00e0 \u00eatre comprise. Consid\u00e9rons notre groupe de 23 personnes, et cherchons la probabilit\u00e9 que les 23 personnes n'aient pas la m\u00eame date anniversaire : la premi\u00e8re peut avoir n'importe quel date anniversaire, donc 365 possibilit\u00e9 sur 365 dates possibles. La deuxi\u00e8me ne peut pas avoir la m\u00eame date que les deux premiers, donc 364 possibilit\u00e9s sur 365. La troisi\u00e8me ne peut avoir la m\u00eame date que les deux premiers, donc 363 possibilit\u00e9s sur 365. ... La \\(n-i\u00e8me\\) ne peut avoir la m\u00eame date que les \\(n-1\\) pr\u00e9c\u00e9dents, donc \\(365-(n-1)\\) possibilit\u00e9s. ... La 23\u00e8me ne peut avoir la m\u00eame date que les 22 pr\u00e9c\u00e9dents, donc \\(365-22 = 343\\) possibilit\u00e9s. La probabilit\u00e9 cherch\u00e9e est donc \\(p = \\dfrac{365}{365} \\times \\dfrac{364}{365} \\times ... \\times \\dfrac{343}{365} = \\dfrac{365~!}{342~!.365^{23}}\\) o\u00f9 \\(365~!\\) est la factorielle de 365, soit la multiplication \\(365 \\times 364 \\times 363 \\times ... \\times 2 \\times 1\\) . Or l'\u00e9v\u00e9nement contraire de \"les 23 personnes n'ont pas la m\u00eame date anniversaire\" est l'\u00e9v\u00e9nement \"au moins 2 personnes parmi les 23 ont la m\u00eame date d'anniversaire\" . Donc sa probabilit\u00e9 est \\(p' = 1-p\\) soit en calculant environ \\(0,5073\\) , soit \\(50,73\\) \\%. Plus d'informations peuvent \u00eatre trouv\u00e9es sur l' article correspondant de wikipedia . Diff\u00e9rentes solutions ? Bien entendu, les solutions propos\u00e9es ci-dessus ne sont pas uniques. Elles sont m\u00eames non optimales (en tout cas pour la fonction contient_doublon(t) ). Il est tout \u00e0 fait possible de proposer d'autres impl\u00e9mentations du code, c'est-\u00e0-dire d'autres fa\u00e7ons de coder la fonctionnalit\u00e9 voulue. Ainsi on pourrait regarder les impl\u00e9mentations suivantes, et les comparer entre elles : Exercice : autres impl\u00e9mentations de contient_doublon(t) Tableau de bool\u00e9ens def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [ False ] * 365 # s est un tableau temporaire contenant false pour chaque date for data in t : if s [ data ] : # si s[data] est vrai (True), alors il y a doublon return True else : # sinon on bascule s[data] \u00e0 True s [ data ] = True return False C'est une solution simple. Mais que dire de ses avantages et de ses inconv\u00e9nients ? Tableau de bits def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = 0 for data in t : if s & ( 1 << data ) != 0 : return True else : s = s | ( 1 << data ) return False C'est une solution beaucoup plus complexe (et hors programme de Terminale dans sa conception). Quels sont ses avantages et ses inconv\u00e9nients ? Table de hachage def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [[] for _ in range ( 23 )] for data in t : if data in s [ data % 23 ] : return True else : s [ data % 23 ] . append ( data ) return False Solution Solution originale L'avantage est la simplicit\u00e9 du code, et c'est \u00e0 peu pr\u00e8s tout... Par contre les inconv\u00e9nients sont nombreux, en particulier le co\u00fbt en temps : en effet \u00e0 chaque tour de boucle for data in t , on ex\u00e9cute l'instruction data in s , qui parcoure tout le tableau s ... On a donc une complexit\u00e9 en temps en \\(\\mathscr{O}(n^2)\\) (au pire). Pour un tableau de 23 \u00e9l\u00e9ments, c'est acceptable, mais dans l'hypoth\u00e8se d'un tableau de plus grande taille, c'est absolument \u00e0 \u00e9viter ! Solution tableau de bool\u00e9ens Un des avantages est que la complexit\u00e9 en temps est bien meilleure que pour la premi\u00e8re solution. Il n'y a plus les deux boucles imbriqu\u00e9es, d'o\u00f9 un gain consid\u00e9rable. Cependant on peut avoir un probl\u00e8me de co\u00fbt en m\u00e9moire , car on utilise un tableau de taille 365 pour uniquement v\u00e9rifier 23 dates. Dans le cadre d'une comparaison sur un ensemble de valeurs possibles sup\u00e9rieures \u00e0 365, le co\u00fbt en m\u00e9moire peut vite devenir probl\u00e9matique. Solution tableau de bits La solution est tr\u00e8s complexe, mais elle a un grand m\u00e9rite : un bool\u00e9en, en python, est en fait un entier (0 ou 1), donc stock\u00e9 sur... 8 octets ! (source ici ) Or il n'est pas n\u00e9cessaire d'utilier 8 octets, soit 64 bits, pour stocker un bool\u00e9en... En fait il suffit d'un seul bit ! Cette solution divise donc par 64 la taille m\u00e9moire par rapport \u00e0 la solution pr\u00e9c\u00e9dente ! C'est globalement un bon avantage dans cette situation,; mais cela reste rapidement insuffisant si le nombre d'\u00e9l\u00e9ments auquel on s'int\u00e9rese est bien plus grand que 365. Il faut noter que le tableau de bits (ou bit set ou bit array ) est une structure compacte qui permet de repr\u00e9senter facilement des tableaux de bool\u00e9ens. Elle permet une meilleure utilisation des ressources m\u00e9moires dans les cas o\u00f9 celle-ci est limit\u00e9e, comme par exemple dans la m\u00e9moire cache du processeur. Solution table de hachage Comme nous l'avons vu en classede premi\u00e8re, la table de hachage est une solkution efficace et \u00e9l\u00e9gante qui permet de gangner \u00e0 la fois du co\u00fbt en temps (on ne parcoure pas un tableau, on atteint directement l'objet par sa cl\u00e9 , ou en tout on parcoure un sous-ensemble beaucoup plus petit), et du co\u00fbt en m\u00e9moire (le tableau des cl\u00e9s est de la taille strictement n\u00e9cessaire). Une m\u00eame interface Exercice Quand on observe les 4 propositions de codes pour la fonction contient_doublon(t) , on peut constater que ces 4 codes sont quasiment identiques. Quelles sont ces parties identiques ? Solution def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = ... for data in t : if ... : return True else : ... return False Les parties en pointill\u00e9 de la solution pr\u00e9c\u00e9dente v\u00e9rifient les conditions suivantes : s repr\u00e9sente un ensemble de date, et le premier trou correspond \u00e0 la cr\u00e9ation de cette structure. Le deuxi\u00e8me trou consiste \u00e0 v\u00e9rifier si data est contenu dans s . le troisi\u00e8me trou consiste \u00e0 ajouter data \u00e0 s Seules ces trois parties changent dans les 4 programmes. On pourrait alors isoler ces trois aspects dans trois fonctions diff\u00e9rentes et obtenir le code factoris\u00e9 suivant : Code factoris\u00e9 def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = cree () for data in t : if contient ( data , s ) : return True else : ajoute ( data , s ) return False On d\u00e9finit ainsi une fonction contient_doublon(t) compl\u00e8tement s\u00e9par\u00e9e de la repr\u00e9sentation de la structure s . Le programmeur qui souhaite simplement utiliser la structure de donn\u00e9e s n'a pas \u00e0 se pr\u00e9occuper de la fa\u00e7on dont elle a \u00e9t\u00e9 impl\u00e9ment\u00e9e . Il n'a besoin que de conna\u00eetre son interface : la fonction cree() sert \u00e0 construire une structure ; la fonction contient(data,s) sert \u00e0 regarder si data est contenu dans la structure s ; La fonction ajoute(data,s) ajoute l'\u00e9l\u00e9ment data \u00e0 la structure s . C'est exactement ce qui se passe quand on utilise des modules python : on ne cherche pas \u00e0 savoir comment sont programm\u00e9s les fonctions du modules(= l'impl\u00e9mentation du module ) - car on fait confiance aux programmeurs de ce module, mais juste \u00e0 savoir comment utiliser ces fonctions(= l'interface du module ). Encore mieux, le programmeur du module peut, si il ne change pas l' interface (= la mani\u00e8re d'utiliser les fonctions), am\u00e9liorer ces fonctions (en temps, en m\u00e9moire, etc...) sans m\u00eame que l'utilisateur n'ait \u00e0 changer quoi que ce soit \u00e0 son propre programme, qui continuera \u00e0 fonctionner (mieux, du moins on esp\u00e8re...).","title":"Introduction"},{"location":"NSI/Terminale/C01/Intro/#modularite-et-initiation-a-la-programmation-orientee-objet","text":"Quand nous utilisons certaines fonctions o\u00f9 certains objets Python, qu'ils soient built-in ou bien import\u00e9s \u00e0 partir de modules , nous nous posons rarement la question de savoir quelle est leur impl\u00e9mentation , c'est-\u00e0-dire la mani\u00e8re dont-ils ont \u00e9t\u00e9 con\u00e7u et programm\u00e9. Nous faisons globalement confiance aux concepteurs du langage ou du module. Ce qui nous importe est plut\u00f4t l'interface de ces objets, c'est-\u00e0-dire la fa\u00e7on dont nous pouvons interagir avec ces objets : les cr\u00e9er, les affecter, les additionner, les supprimer,... Dans cette partie nous verrons comment cr\u00e9er un module, le documenter, et d\u00e9finir une interface claire. Nous verrons les pr\u00e9mices d'un nouveau paradigme de programmation : la Programmation Orient\u00e9e Objet( POO ). La suite de cette partie est grandement inspir\u00e9e de Num\u00e9riques et Sciences Informatique, 24 le\u00e7ons avec exercices corrig\u00e9, Ellipse","title":"Modularit\u00e9 et initiation \u00e0 la Programmation Orient\u00e9e Objet"},{"location":"NSI/Terminale/C01/Intro/#un-premier-probleme","text":"Abstract Voici une propri\u00e9t\u00e9 probabiliste peu intuitive : il suffit d'avoir un groupe de 23 personnes pour que la probabilit\u00e9 que deux personnes aient la m\u00eame date d'anniversaire soit sup\u00e9rieure \u00e0 50%. Nous allons construire un programme Python qui permettra de v\u00e9rifier exp\u00e9rimentalement cette propri\u00e9t\u00e9. Pour mod\u00e9liser le probl\u00e8me : plut\u00f4t que d'utiliser des dates, nous allons utiliser des entiers de 1 \u00e0 365 ; nous allons cr\u00e9er une proc\u00e9dure ( une fonction sans param\u00e8tres ) genere_groupe() qui renvoie un tableau al\u00e9atoire de 23 entiers de 1 \u00e0 365 ; nous allons cr\u00e9er une fonction contient_doublon(t) qui renverra True si le tableau contient un doublon, et False sinon ; puis nous cr\u00e9erons une proc\u00e9dure teste_hypothese() qui testera sur un \u00e9chantillon de 100 groupes la pr\u00e9sence d'un doublon ou non, et renverra le nombre de groupes ayant eu des doublons. Exercice Cr\u00e9er un fichier recherchesDates.py et impl\u00e9menter les fonctions pr\u00e9c\u00e9dentes. Des solutions sont propos\u00e9es dans les parties ci-dessous, mais vous devez d'abord tester par vous-m\u00eames . Solutions genere_groupe() from random import randint def genere_groupe () : \"\"\"fonction renvoyant un tableau de 23 nombres al\u00e9atoires entre 1 et 365\"\"\" return [ randint ( 1 , 365 ) for _ in range ( 23 )] contient_doublon(t) def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [] # s est un tableau temporaire contenant les valeurs test\u00e9es for data in t : if data in s : # si data est d\u00e9j\u00e0 dans s, alors c'est un doublon return True else : # sinon on ajoute data \u00e0 la liste des valeurs test\u00e9es. s . append ( data ) return False teste_hypothese() def teste_hypothese () : \"\"\"fonction renvoyant le nombre de groupes contenant un doublon sur un \u00e9chantillon de 100 groupes\"\"\" nbDoublons = 0 for _ in range ( 100 ) : t = genere_groupe () if contient_doublon ( t ) : nbDoublons += 1 return nbDoublons Ex\u00e9cution dans Basthon Preuve math\u00e9matique Cette pruve est donn\u00e9e \u00e0 titre indicatif, et n'a ni \u00e0 \u00eatre connue, ni m\u00eame \u00e0 \u00eatre comprise. Consid\u00e9rons notre groupe de 23 personnes, et cherchons la probabilit\u00e9 que les 23 personnes n'aient pas la m\u00eame date anniversaire : la premi\u00e8re peut avoir n'importe quel date anniversaire, donc 365 possibilit\u00e9 sur 365 dates possibles. La deuxi\u00e8me ne peut pas avoir la m\u00eame date que les deux premiers, donc 364 possibilit\u00e9s sur 365. La troisi\u00e8me ne peut avoir la m\u00eame date que les deux premiers, donc 363 possibilit\u00e9s sur 365. ... La \\(n-i\u00e8me\\) ne peut avoir la m\u00eame date que les \\(n-1\\) pr\u00e9c\u00e9dents, donc \\(365-(n-1)\\) possibilit\u00e9s. ... La 23\u00e8me ne peut avoir la m\u00eame date que les 22 pr\u00e9c\u00e9dents, donc \\(365-22 = 343\\) possibilit\u00e9s. La probabilit\u00e9 cherch\u00e9e est donc \\(p = \\dfrac{365}{365} \\times \\dfrac{364}{365} \\times ... \\times \\dfrac{343}{365} = \\dfrac{365~!}{342~!.365^{23}}\\) o\u00f9 \\(365~!\\) est la factorielle de 365, soit la multiplication \\(365 \\times 364 \\times 363 \\times ... \\times 2 \\times 1\\) . Or l'\u00e9v\u00e9nement contraire de \"les 23 personnes n'ont pas la m\u00eame date anniversaire\" est l'\u00e9v\u00e9nement \"au moins 2 personnes parmi les 23 ont la m\u00eame date d'anniversaire\" . Donc sa probabilit\u00e9 est \\(p' = 1-p\\) soit en calculant environ \\(0,5073\\) , soit \\(50,73\\) \\%. Plus d'informations peuvent \u00eatre trouv\u00e9es sur l' article correspondant de wikipedia .","title":"Un premier probl\u00e8me"},{"location":"NSI/Terminale/C01/Intro/#differentes-solutions","text":"Bien entendu, les solutions propos\u00e9es ci-dessus ne sont pas uniques. Elles sont m\u00eames non optimales (en tout cas pour la fonction contient_doublon(t) ). Il est tout \u00e0 fait possible de proposer d'autres impl\u00e9mentations du code, c'est-\u00e0-dire d'autres fa\u00e7ons de coder la fonctionnalit\u00e9 voulue. Ainsi on pourrait regarder les impl\u00e9mentations suivantes, et les comparer entre elles : Exercice : autres impl\u00e9mentations de contient_doublon(t) Tableau de bool\u00e9ens def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [ False ] * 365 # s est un tableau temporaire contenant false pour chaque date for data in t : if s [ data ] : # si s[data] est vrai (True), alors il y a doublon return True else : # sinon on bascule s[data] \u00e0 True s [ data ] = True return False C'est une solution simple. Mais que dire de ses avantages et de ses inconv\u00e9nients ? Tableau de bits def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = 0 for data in t : if s & ( 1 << data ) != 0 : return True else : s = s | ( 1 << data ) return False C'est une solution beaucoup plus complexe (et hors programme de Terminale dans sa conception). Quels sont ses avantages et ses inconv\u00e9nients ? Table de hachage def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = [[] for _ in range ( 23 )] for data in t : if data in s [ data % 23 ] : return True else : s [ data % 23 ] . append ( data ) return False Solution Solution originale L'avantage est la simplicit\u00e9 du code, et c'est \u00e0 peu pr\u00e8s tout... Par contre les inconv\u00e9nients sont nombreux, en particulier le co\u00fbt en temps : en effet \u00e0 chaque tour de boucle for data in t , on ex\u00e9cute l'instruction data in s , qui parcoure tout le tableau s ... On a donc une complexit\u00e9 en temps en \\(\\mathscr{O}(n^2)\\) (au pire). Pour un tableau de 23 \u00e9l\u00e9ments, c'est acceptable, mais dans l'hypoth\u00e8se d'un tableau de plus grande taille, c'est absolument \u00e0 \u00e9viter ! Solution tableau de bool\u00e9ens Un des avantages est que la complexit\u00e9 en temps est bien meilleure que pour la premi\u00e8re solution. Il n'y a plus les deux boucles imbriqu\u00e9es, d'o\u00f9 un gain consid\u00e9rable. Cependant on peut avoir un probl\u00e8me de co\u00fbt en m\u00e9moire , car on utilise un tableau de taille 365 pour uniquement v\u00e9rifier 23 dates. Dans le cadre d'une comparaison sur un ensemble de valeurs possibles sup\u00e9rieures \u00e0 365, le co\u00fbt en m\u00e9moire peut vite devenir probl\u00e9matique. Solution tableau de bits La solution est tr\u00e8s complexe, mais elle a un grand m\u00e9rite : un bool\u00e9en, en python, est en fait un entier (0 ou 1), donc stock\u00e9 sur... 8 octets ! (source ici ) Or il n'est pas n\u00e9cessaire d'utilier 8 octets, soit 64 bits, pour stocker un bool\u00e9en... En fait il suffit d'un seul bit ! Cette solution divise donc par 64 la taille m\u00e9moire par rapport \u00e0 la solution pr\u00e9c\u00e9dente ! C'est globalement un bon avantage dans cette situation,; mais cela reste rapidement insuffisant si le nombre d'\u00e9l\u00e9ments auquel on s'int\u00e9rese est bien plus grand que 365. Il faut noter que le tableau de bits (ou bit set ou bit array ) est une structure compacte qui permet de repr\u00e9senter facilement des tableaux de bool\u00e9ens. Elle permet une meilleure utilisation des ressources m\u00e9moires dans les cas o\u00f9 celle-ci est limit\u00e9e, comme par exemple dans la m\u00e9moire cache du processeur. Solution table de hachage Comme nous l'avons vu en classede premi\u00e8re, la table de hachage est une solkution efficace et \u00e9l\u00e9gante qui permet de gangner \u00e0 la fois du co\u00fbt en temps (on ne parcoure pas un tableau, on atteint directement l'objet par sa cl\u00e9 , ou en tout on parcoure un sous-ensemble beaucoup plus petit), et du co\u00fbt en m\u00e9moire (le tableau des cl\u00e9s est de la taille strictement n\u00e9cessaire).","title":"Diff\u00e9rentes solutions ?"},{"location":"NSI/Terminale/C01/Intro/#une-meme-interface","text":"Exercice Quand on observe les 4 propositions de codes pour la fonction contient_doublon(t) , on peut constater que ces 4 codes sont quasiment identiques. Quelles sont ces parties identiques ? Solution def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = ... for data in t : if ... : return True else : ... return False Les parties en pointill\u00e9 de la solution pr\u00e9c\u00e9dente v\u00e9rifient les conditions suivantes : s repr\u00e9sente un ensemble de date, et le premier trou correspond \u00e0 la cr\u00e9ation de cette structure. Le deuxi\u00e8me trou consiste \u00e0 v\u00e9rifier si data est contenu dans s . le troisi\u00e8me trou consiste \u00e0 ajouter data \u00e0 s Seules ces trois parties changent dans les 4 programmes. On pourrait alors isoler ces trois aspects dans trois fonctions diff\u00e9rentes et obtenir le code factoris\u00e9 suivant : Code factoris\u00e9 def contient_doublon ( t ) : \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\" s = cree () for data in t : if contient ( data , s ) : return True else : ajoute ( data , s ) return False On d\u00e9finit ainsi une fonction contient_doublon(t) compl\u00e8tement s\u00e9par\u00e9e de la repr\u00e9sentation de la structure s . Le programmeur qui souhaite simplement utiliser la structure de donn\u00e9e s n'a pas \u00e0 se pr\u00e9occuper de la fa\u00e7on dont elle a \u00e9t\u00e9 impl\u00e9ment\u00e9e . Il n'a besoin que de conna\u00eetre son interface : la fonction cree() sert \u00e0 construire une structure ; la fonction contient(data,s) sert \u00e0 regarder si data est contenu dans la structure s ; La fonction ajoute(data,s) ajoute l'\u00e9l\u00e9ment data \u00e0 la structure s . C'est exactement ce qui se passe quand on utilise des modules python : on ne cherche pas \u00e0 savoir comment sont programm\u00e9s les fonctions du modules(= l'impl\u00e9mentation du module ) - car on fait confiance aux programmeurs de ce module, mais juste \u00e0 savoir comment utiliser ces fonctions(= l'interface du module ). Encore mieux, le programmeur du module peut, si il ne change pas l' interface (= la mani\u00e8re d'utiliser les fonctions), am\u00e9liorer ces fonctions (en temps, en m\u00e9moire, etc...) sans m\u00eame que l'utilisateur n'ait \u00e0 changer quoi que ce soit \u00e0 son propre programme, qui continuera \u00e0 fonctionner (mieux, du moins on esp\u00e8re...).","title":"Une m\u00eame interface"},{"location":"NSI/Terminale/C01/IntroPOO/","text":"Introduction \u00e0 la programmation orient\u00e9e objet Un premier exemple issu de Scratch Observons ce jeu assez minable en Scratch (non, mais vraiment, allez voir sur le site...). Le lien ici Ce jeu sommaire est construit autour de trois \u00e9l\u00e9ments : la chauve-souris ; l'\u00e9clair ; le chat. Chacun de ces trois \u00e9l\u00e9ments poss\u00e8de : sa propre zone de script; ses propres caract\u00e9ristiques (nom, taille, costumes, position de d\u00e9part, orientation...). Et ces trois \u00e9l\u00e9ments r\u00e9agissent en fonction d'\u00e9v\u00e9nements li\u00e9s soit \u00e0 l'action du joueur, soit \u00e0 leurs propres interactions. L'\u00e9clair et le chat ont la possibilit\u00e9 d'exister sous la forme de clones , chacun des clones ayant ses propres caract\u00e9ristiques bien que partageant le m\u00eame comportement . Aussi simpliste que Scratch paraisse, il n'en est n\u00e9anmoins pas un v\u00e9ritable langage de programmation , qui plus est multiparadigme : il est en effet con\u00e7u pour g\u00e9rer la programmation imp\u00e9rative , la programmation orient\u00e9e objet ainsi que la programmation \u00e9v\u00e9nementielle . Paradigmes de programmation Un paradigme est \"une repr\u00e9sentation du monde, une mani\u00e8re de voir les choses, un mod\u00e8le coh\u00e9rent du monde qui repose sur un fondement d\u00e9fini\" . Wkipedia . En programmation, plus pr\u00e9cis\u00e9ment, on parle de paradigmes de programmation pour exprimer la mani\u00e8re dont sont con\u00e7us et envisag\u00e9s les programmes. On distingue entre autres : le paradigme de la programmation imp\u00e9rative , qui est celui que nous avons utilis\u00e9 jusqu'ici : on d\u00e9crit les op\u00e9rations en s\u00e9quences d'instructions ex\u00e9cut\u00e9es par l'ordinateur dans un ordre pr\u00e9cis (que le langage soit compil\u00e9 ou interpr\u00e9t\u00e9). C'est le paradigme classique, celui auquel tout le monde pense quand on parle de programme informatique. le paradigme de la programmation orient\u00e9 objet , qui \"consiste en la d\u00e9finition et l'interaction de briques logicielles appel\u00e9es objets ; un objet repr\u00e9sente un concept, une id\u00e9e ou toute entit\u00e9 du monde physique, comme une voiture, une personne ou encore une page d'un livre. Il poss\u00e8de une structure interne et un comportement, et il sait interagir avec ses pairs. Il s'agit donc de repr\u00e9senter ces objets et leurs relation[...]\". Wikipedia . le paradigme de la programmation fonctionnelle , qui consid\u00e8re le calcul en tant qu'\u00e9valuation de fonctions math\u00e9matiques. le paradigme de la programmation \u00e9v\u00e9nementielle , qui est fond\u00e9 sur la notion d'\u00e9v\u00e9nements. Le programme sera principalement d\u00e9fini par ses r\u00e9actions aux diff\u00e9rents \u00e9v\u00e9nements qui peuvent se produire, c'est-\u00e0-dire des changements d'\u00e9tat de variable, par exemple l'incr\u00e9mentation d'une liste, un d\u00e9placement ou un click de souris, une saisie au clavier... et bien d'autres ... Les diff\u00e9rents langages de programmation peuvent \u00eatre plus ou moins sp\u00e9cialis\u00e9 selon un certain nombre de paradigmes. Quasiment tous respectent le paradigme originel imp\u00e9ratif . Certains langages ne d\u00e9passent pas ce paradigme (assembleur, Fortran, Algol, BASIC,... ). D'autres sont sp\u00e9cialis\u00e9s sur un paradigme sp\u00e9cifique ( comme Lisp, ML, OCaml en programmation fonctionnelle, Ada, Smalltalk, C++, Ruby, C# Swift... en POO). Mais en g\u00e9n\u00e9ral tous les langages cit\u00e9s poss\u00e8dent des composantes multiparadigmes . C'est le cas de Python, qui supporte la programmation : imp\u00e9rative ; fonctionnelle ; proc\u00e9durale ; orient\u00e9e objet ; et en partie \u00e9v\u00e9nementielle. Principes Le concept principal de la programmation orient\u00e9e objet (POO) est celui d' objet . Nous avons d\u00e9j\u00e0 rencontr\u00e9 un certain nombres d'objets pr\u00e9d\u00e9finis dans Python : la classe int , pour repr\u00e9senter les entiers relatifs ; la classe float , pour repr\u00e9senter les nombre \u00e0 virgule flottante (une partie des d\u00e9cimaux) ; la classe str pour repr\u00e9senter les cha\u00eenes de caract\u00e8res ; la classe list , pour repr\u00e9senter un ensemble ordonn\u00e9 et mutable de toute autre collection d'objets ; la classe tuple , pour repr\u00e9senter un ensemble ordonn\u00e9 et non-mutable de toute autre collection d'objets ; la classe set , pour repr\u00e9senter un ensemble non ordonn\u00e9 et sans doublons ; la classe dict , pour repr\u00e9senter une collection non ordonn\u00e9e index\u00e9e par des cl\u00e9s. Chacun de ces types pr\u00e9c\u00e9dents poss\u00e8de ses propres attributs et ses propres m\u00e9thodes : un objet de la classe str poss\u00e8de une longueur, donn\u00e9 par la fonction built-in len() , et plusieurs m\u00e9thodes associ\u00e9es comme lower() , upper() , etc... un objet de la classe list poss\u00e8de lui aussi une longueur, et ses propres m\u00e9thodes comme append() , pop() , etc... A lire quand vous avez fini la page !!! Je raconte n'importe quoi ci-dessus... Je voulais prendre l'exemple de la longueur comme \u00e9tant un attribut des types str et list . En fait la valeur renvoy\u00e9e par la fonction built-in len() correspond \u00e0 celle calcul\u00e9e par le DUNDERS __len__(self) . Il ne s'agit donc pas r\u00e9ellement d'un attribut, mais du r\u00e9sultat renvoy\u00e9 par une m\u00e9thode . Comme quoi m\u00eame apr\u00e8s 30 ans de programmation on en apprend encore... Classes et constructeurs d'objets En Programmation Orient\u00e9e Objet, on va construire de nouvelles classes d'objets plus ou moins complexes, poss\u00e9dant : des attributs , c'est-\u00e0-dire des variables sp\u00e9cifiques qui lui sont directement associ\u00e9es ; des m\u00e9thodes , c'est-\u00e0-dire des fonctions modifiant l'objet, ou interagissant avec l'environnement ext\u00e9rieur \u00e0 cet objet. Application \u00e0 un exemple Personnages de JDR/MMORPG Prenons un JDR ou MMORPG lambda, dont les personnages sont constitu\u00e9s ainsi : ils ont 4 caract\u00e9ristiques num\u00e9riques entre \\(1\\) et \\(40\\) , \u00e0 savoir force, endurance, rapidit\u00e9, intelligence ; ils ont un nombre de points de vie de d\u00e9part calcul\u00e9 \u00e0 partir des caract\u00e9ristiques endurance + force//2 ; ils poss\u00e8dent bien s\u00fbr un nom ; leur nombre de points d'exp\u00e9rience au d\u00e9part est de \\(0\\) , et leur niveau est de \\(1\\) ; Chaque personnage peut mener une attaque , qui consiste \u00e0 ajouter un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa force ; Chaque personnage peut se d\u00e9fendre d'une attaque qui lui est lanc\u00e9e en ajoutant un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 son endurance. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au niveau d'attaque, l'attaque a \u00e9chou\u00e9e, sinon le personnage perd un nombre de points de vie \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense. Pour construire un tel personnage, on va devoir renseigner son nom, et ses 4 caract\u00e9ristiques. Ses PV, Pex et son niveau sont automatiquement calcul\u00e9s. Tous sont cependant des attributs du personnage. Abstract On va donc d\u00e9crire un personnage par l'interm\u00e9diaire de l'interface suivante : Cr\u00e9ation de la classe et des attributs Info Nous d\u00e9taillerons beaucoup plus dans un chapitre sp\u00e9cifique le fonctionnement de la POO. Pour l'instant vous devrez vous contenter des explications ci-dessus. D\u00e9crire une classe en Python Le code suivant permet de d\u00e9finir une nouvelle classe d'objets de type Personnage : class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom self . force = force self . endurance = endurance self . rapidite = rapidite self . intelligence = intelligence self . pv = self . endurance + self . force // 2 self . pex = 0 self . niveau = 1 La d\u00e9finition d'une classe d'objet est effectu\u00e9e par le mot-cl\u00e9 class , suivi du nom de la classe (commen\u00e7ant par une majuscule par convention) et du symbole : . Comme toujours en Python le symbole : d\u00e9clenche l'attente d'un bloc indent\u00e9, qui correspondra \u00e0 la d\u00e9finition de l'objet. On trouve ensuite une docstring d\u00e9crivant la classe, puis la d\u00e9finition d'une m\u00e9thode de la classe, la m\u00e9thode __init__() , appel\u00e9e m\u00e9thode constructeur de la classe . Cette m\u00e9thode prend plusieurs param\u00e8tres : le param\u00e8tre self , obligatoire , qui repr\u00e9sente 'l'instance de l'objet cr\u00e9\u00e9. une s\u00e9rie de param\u00e8tres qui correspondent aux param\u00e8tres d\u00e9finis dans l'interface de l'objet Personnage . Puis dans cette m\u00e9thode, on affecte aux attributs de l'objet les valeurs pass\u00e9es en argument, puis on calcule l' attribut pv \u00e0 partir des valeurs d\u00e9j\u00e0 connues. Enfin on d\u00e9fini les deux attributs de valeurs fixes. Un oubli ? Attention ! Ici nous ne respectons pas vraiment l'interface, puisque nous ne v\u00e9rifions pas que les attributs pass\u00e9s en argument sont bien des entiers entre 1 et 40 ! Ce probl\u00e8me sera r\u00e9gl\u00e9 plus tard. Instanciation d'objets Pour cr\u00e9er des personnages, il suffit maintenant d'utiliser une expression de la forme : Personnage( nom, f, e, r, i) . Vous noterez que l'argument self n'est pas renseign\u00e9 ! On appelle cet argument un argument implicite . Ainsi pour cr\u00e9er un objet de type Personnage nomm\u00e9 Bob, et ayant les attributs 20 en force, 25 en endurance, 10 en rapidit\u00e9 et 30 en intelligence, on utilise l'instruction suivante : >>> Personnage(\"Bob\", 20, 25, 10, 30) <__main__.Personnage object at 0x7fb674844e48> On constate donc bien qu'un objet de type Personnage est cr\u00e9e. Bien s\u00fbr, l'objet n'\u00e9tant pas affect\u00e9 \u00e0 un nom, il est imm\u00e9diatement nettoy\u00e9 par le garbage collector . On cr\u00e9e donc une variable playerBob comme r\u00e9f\u00e9rence \u00e0 l'objet : >>> playerBob = Personnage(\"Bob\", 20, 25, 10, 30) Abstract On peut sch\u00e9matiser avec le dessin suivant : L'appel au nom de la classe Personnage fait en r\u00e9alit\u00e9 appel \u00e0 la m\u00e9thode constructeur , qui va permettre de cr\u00e9er un nouvel objet de type Personnage . On peut le v\u00e9rifier avec la ligne suivante : >>> type(playerBob) <class '__main__.Personnage'> Acc\u00e9der aux attributs et les modifier Pour acc\u00e9der \u00e0 l'attribut pv de l'objet playerBob , il suffit d'utiliser la notation >>> playerBob.pv 35 Il devient d\u00e8s lors possible de modifier la valeur d'un attribut comme lors de toute modification classique des variables : >>> playerBob.force = 18 >>> playerBob.force 18 >>> playerBob.rapidite = playerBob.rapidite + 2 >>> playerBob.rapidite 12 Deux objets Nous souhaitons maintenant cr\u00e9er un deuxi\u00e8me personnage du nom de Bill : >>> playerBill = Personnage('Bill', 34, 10, 20, 12) Abstract Cette seconde instance de type Personnage poss\u00e8de aussi ses propres attributs, comme montr\u00e9 dans le sch\u00e9ma suivant : Espace de nommage Chaque instance d'objet poss\u00e8de son propre espace de nommage. Ici m\u00eame si les deux objets de type Personnage ont le m\u00eame nom d'attribut force , ils ne repr\u00e9sentent pas le m\u00eame objet. D\u00e9finitions de m\u00e9thodes Afficher les personnage Essayons maintenant d'afficher une cha\u00eene de caract\u00e8res nous donne toutes les caract\u00e9ristiques d'un personnage. Test de print Essayons d'abord avec la fonction built-in print() : >>> print(playerBob) Sortie et commentaires La sortie sur la console Python est : <__main__.Personnage object at 0x7fb6748590f0> C'est peu parlant ! La fonction print ne renvoie que l'adresse m\u00e9moire et le type de l'objet que nous venons de lui passer. Nous allons donc devoir am\u00e9liorer cet affichage, en construisant notre propre m\u00e9thode , que nous nommerons affiche . Cette m\u00e9thode devra avoir le comportement suivant : >>> playerBob.affiche() \"Bonjour, je suis Bob, de niveau 1. J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 35 Points de Vie\" M\u00e9thodes et attributs Si les attributs d'une classe sont comme des variables sp\u00e9cifiques \u00e0 une classe, les m\u00e9thodes sont des fonctions : elles peuvent prendre ou non des arguments, et ont des valeurs de retour (qui peuvent \u00eatre parfois implicites : la m\u00e9thode __init__ renvoie le nouvel objet cr\u00e9\u00e9.) Pour cr\u00e9er cette m\u00e9thode, nous allons compl\u00e9ter la classe Personnage de la mani\u00e8re suivante : class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : print ( f \"Bonjour, je suis { self . nom } , de niveau { self . niveau } .\" f \"J'ai { self . force } en force, { self . endurance } en endurance, { self . rapidite } \" f \" en rapidit\u00e9 et { self . intelligence } en intelligence. J'ai { self . pv } Points de Vie\" ) Vous constatez que : Dans la construction de la m\u00e9thode affiche , appara\u00eet l' argument implicite self , qu'il est imp\u00e9ratif d'utiliser pour avoir acc\u00e8s aux attributs de l'objet. Dans l'appel de la m\u00e9thode aucun argument n'est pass\u00e9 . En rechargeant le module, puis en recr\u00e9ant les objets playerBill puis playerBob , on obtient alors les affichages suivants : >>> playerBob.affiche() Bonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie >>> playerBill.affiche() Bonjour, je suis Bill, de niveau 1.J'ai 34 en force, 10 en endurance, 20 en rapidit\u00e9 et 12 en intelligence. J'ai 27 Points de Vie Impl\u00e9menter la m\u00e9thode attaque Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode attaque() qui renvoie un entier \u00e9gal \u00e0 la valeur de force du personnage auquel on ajoute un nombre al\u00e9atoire entre 1 et 20. Comment impl\u00e9menter une telle m\u00e9thode ? Une impl\u00e9mentation possible from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : ... def attaque ( self ) : return self . force + randint ( 1 , 20 ) Cette m\u00e9thode peut alors \u00eatre utilis\u00e9e comme dans les exemples ci-dessous : >>> playerBob.attaque() 22 >>> playerBob.attaque() 27 >>> playerBill.attaque() 38 Impl\u00e9menter la m\u00e9thode defense(valeurAttaque) Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode defense(valeurAttaque) qui ajoute un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 l'endurance du personnage. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au niveau d'attaque, l'attaque a \u00e9chou\u00e9e et la m\u00e9thode renvoie True . Sinon le personnage perd un nombre de points de vie \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense, et la m\u00e9thode renvoie False . Comment impl\u00e9menter une telle m\u00e9thode ? Une impl\u00e9mentation possible from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : ... def attaque ( self ) : return self . force + randint ( 1 , 20 ) def defense ( self , valeurAttaque ) : valeurDefense = self . endurance + randint ( 1 , 20 ) if valeurAttaque > valeurDefense : self . pv -= valeurAttaque - valeurDefense return False return True cette m\u00e9thode peut alors \u00eatre utilis\u00e9e ainsi : >>> playerBill.defense(playerBob.attaque()) False >>> playerBill.pv 18 M\u00e9thodes sp\u00e9cifiques Info La liste de toutes les m\u00e9thodes d'une classe, y compris des DUNDERS , peut-\u00eatre obtenue par l'interm\u00e9diaire de la commande suivante : >>> dir(Personnage) ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'affiche', 'attaque', 'defense'] DUNDERS Il existe plusieurs m\u00e9thodes sp\u00e9cifiques d\u00e9finies automatiquement d\u00e8s qu'on cr\u00e9e une classe d'objets. Ces m\u00e9thodes sont toutes de la forme __truc__() (c'est-\u00e0-dire que le nom de la classe est pr\u00e9fix\u00e9 par un double tiret du bas, soit Double UNDERScore , ce qui a donn\u00e9 le nom de m\u00e9thodes DUNDERS ). Ce sont des m\u00e9thodes universelles que poss\u00e8dent toute classe en Python, et qui permettent de g\u00e9rer un certain nombre d'actions. Par exemple l'instruction Personnage('Bob', 18, 25, 12, 30) fait appel \u00e0 la m\u00e9thode DUNDERS __init__() que nous avons d\u00e9finie. Il est ainsi possible de red\u00e9finir un certain nombre de ces m\u00e9thodes selon nos utilisations. Le tableau ci-dessous vous pr\u00e9sente quelques-uns de ces DUNDERS, applicables \u00e0 des objets t et other instances de la classe : m\u00e9thode Appel Int\u00e9r\u00eat __str__(self) str(t) renvoie une cha\u00eene de caract\u00e8res d\u00e9crivant l'objet t __lt__(self,other) t < other permet de d\u00e9finir la relation plus petit que entre deux objets, renvoie True ou False selon la d\u00e9finition propos\u00e9e __len__(self) len(t) permet de d\u00e9finir la longueur de l'objet t __contains__(self,x) x in t permet de d\u00e9finir l'appartenance de x \u00e0 t __eq__(self, other) t == other permet de d\u00e9finir l'\u00e9galit\u00e9 entre deux objets t et other __add__(self, other) t + other d\u00e9finit l'addition de deux objets t et other __mul__(self, other) t * other d\u00e9finit la multiplication de deux objets t et other red\u00e9finition de la m\u00e9thode __str__(self) Il est assez facile de red\u00e9finir la m\u00e9thode __str__(self) , puisque nous avons d\u00e9j\u00e0 une cha\u00eene de caract\u00e8re qui nous convient : celle de la m\u00e9thode affiche(self) . Nous allons alors changer la m\u00e9thode affiche(self) qui renverra la cha\u00eene de caract\u00e8re g\u00e9n\u00e9r\u00e9e par la m\u00e9thode __str__(self) (pour des raisons pratiques, la cha\u00eene sera multi-ligne): from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def __str__ ( self ) : return f \"\"\"Bonjour, je suis { self . nom } , de niveau { self . niveau } . J'ai { self . force } en force, { self . endurance } en endurance, { self . rapidite } en rapidit\u00e9 et { self . intelligence } en intelligence. J'ai { self . pv } Points de Vie\"\"\" def affiche ( self ) : print ( str ( self )) ... On a alors la possibilit\u00e9 d'utiliser les commandes suivantes : >>> str(playerBob) \"Bonjour, je suis Bob, de niveau 1.\\n J'ai 18 en force, 25 en endurance, 12\\n en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie\" >>> playerBob.affiche() Bonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie D\u00e9finir l'\u00e9galit\u00e9 entre deux personnages On consid\u00e8re que deux personnages sont \u00e9gaux quand ils poss\u00e8dent les m\u00eames caract\u00e9ristiques num\u00e9riques de bases ( force , endurance , rapidite et intelligence ). Red\u00e9finir la m\u00e9thode DUNDERS __eq__(self, u) pour qu'elle corresponde \u00e0 cette d\u00e9finition. Solution from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def __eq__ ( self , other ) : return ( self . force == other . force ) and ( self . endurance == other . endurance ) and ( self . rapidite == other . rapidite ) and ( self . intelligence == other . intelligence ) ... On a alors l'utilisation : >>> playerBob == playerBill False >>> playerBob == Personnage('Marty', 18, 25, 12, 30) True Fight ! Un combat de ce MMORPG se d\u00e9roule selon le sch\u00e9ma suivant : Chaque personnage tire son initiative en ajoutant un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa valeur de rapidite. Le joueur ayant l'initiative la plus \u00e9lev\u00e9e effectue son attaque en premier, et le second se d\u00e9fend. En cas d'\u00e9galit\u00e9 d'initiative, le joeur d'attaque sera celui qui poss\u00e8de la rapidit\u00e9 la plus \u00e9lev\u00e9e. En cas d'\u00e9galit\u00e9 de rapidit\u00e9, le premier joueur sera d\u00e9termin\u00e9 al\u00e9atoirement. Si le deuxi\u00e8me joueur est toujours vivant (ses points de vie sont sup\u00e9rieurs \u00e0 0), il effectue son attaque, et le premier se d\u00e9fend. Si les deux joueurs sont toujours vivants, on recommence un nouveau tour en reprenant en 1. Sinon on affiche le vainqueur. Le vainqueur r\u00e9colte un nombre de points d'exp\u00e9rience \u00e9gal \u00e0 : nombre d'attaque r\u00e9ussie * 2 + nombre de defense r\u00e9ussie Vous devrez impl\u00e9menter un programme simulant un combat entre Bob et Bill , dont la sortie console sera sous la forme suivante : Round 1 Bob a l'initiative et attaque avec 28 Bill r\u00e9ussit sa d\u00e9fense Bill attaque avec 40 Bob rate sa d\u00e9fense et n'a plus que 25 points de vie Round 2 ... Round n Le vainqueur est ..., il lui reste ... points de vie. Il gagne ... points d'exp\u00e9riences. Pour r\u00e9aliser ce programme, vopus devrez : Compl\u00e9ter le fichier personnage.py contenant la classe Personnage de la mani\u00e8re suivante : La m\u00e9thode constructeur __init__() devra lever des exceptions de type TypeError explicites, si nom n'est pas de type str , ou bien si les 4 autres attributs de construction ne sont pas de type int . L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! La m\u00e9thode constructeur __init__() devra lever des exceptions de type ValueError explicites si les valeurs fournies pour les 4 attributs num\u00e9riques ne sont pas entre 1 et 40. L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! La m\u00e9thode constructeur __init__() devra lever des exceptions de type ValueError explicites si la cha\u00eene de caract\u00e8re nom est vide. L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! Vous devrez pour r\u00e9ussir construire une m\u00e9thode suppl\u00e9mentaire pour la classe Personnage : la m\u00e9thode initiative(self) qui renvoie un entier repr\u00e9sentant le score d'initiative du personnage. Le programme permettant le combat devra \u00eatre dans un fichier combat.py s\u00e9par\u00e9 de celui contenant la classe Personnage (la classe Personnage \u00e9tant import\u00e9e depuis le module personnage.py par la commande suivante : from personnage import Personnage Un fichier compress\u00e9 .zip ou .7z contenant les deux fichiers (celui du programme et le module contenant la classe Personnage ) sera rendu via le cahier de texte de pronote, dans la partie Travail \u00e0 rendre .","title":"Introduction \u00e0 la POO"},{"location":"NSI/Terminale/C01/IntroPOO/#introduction-a-la-programmation-orientee-objet","text":"","title":"Introduction \u00e0 la programmation orient\u00e9e objet"},{"location":"NSI/Terminale/C01/IntroPOO/#un-premier-exemple-issu-de-scratch","text":"Observons ce jeu assez minable en Scratch (non, mais vraiment, allez voir sur le site...). Le lien ici Ce jeu sommaire est construit autour de trois \u00e9l\u00e9ments : la chauve-souris ; l'\u00e9clair ; le chat. Chacun de ces trois \u00e9l\u00e9ments poss\u00e8de : sa propre zone de script; ses propres caract\u00e9ristiques (nom, taille, costumes, position de d\u00e9part, orientation...). Et ces trois \u00e9l\u00e9ments r\u00e9agissent en fonction d'\u00e9v\u00e9nements li\u00e9s soit \u00e0 l'action du joueur, soit \u00e0 leurs propres interactions. L'\u00e9clair et le chat ont la possibilit\u00e9 d'exister sous la forme de clones , chacun des clones ayant ses propres caract\u00e9ristiques bien que partageant le m\u00eame comportement . Aussi simpliste que Scratch paraisse, il n'en est n\u00e9anmoins pas un v\u00e9ritable langage de programmation , qui plus est multiparadigme : il est en effet con\u00e7u pour g\u00e9rer la programmation imp\u00e9rative , la programmation orient\u00e9e objet ainsi que la programmation \u00e9v\u00e9nementielle . Paradigmes de programmation Un paradigme est \"une repr\u00e9sentation du monde, une mani\u00e8re de voir les choses, un mod\u00e8le coh\u00e9rent du monde qui repose sur un fondement d\u00e9fini\" . Wkipedia . En programmation, plus pr\u00e9cis\u00e9ment, on parle de paradigmes de programmation pour exprimer la mani\u00e8re dont sont con\u00e7us et envisag\u00e9s les programmes. On distingue entre autres : le paradigme de la programmation imp\u00e9rative , qui est celui que nous avons utilis\u00e9 jusqu'ici : on d\u00e9crit les op\u00e9rations en s\u00e9quences d'instructions ex\u00e9cut\u00e9es par l'ordinateur dans un ordre pr\u00e9cis (que le langage soit compil\u00e9 ou interpr\u00e9t\u00e9). C'est le paradigme classique, celui auquel tout le monde pense quand on parle de programme informatique. le paradigme de la programmation orient\u00e9 objet , qui \"consiste en la d\u00e9finition et l'interaction de briques logicielles appel\u00e9es objets ; un objet repr\u00e9sente un concept, une id\u00e9e ou toute entit\u00e9 du monde physique, comme une voiture, une personne ou encore une page d'un livre. Il poss\u00e8de une structure interne et un comportement, et il sait interagir avec ses pairs. Il s'agit donc de repr\u00e9senter ces objets et leurs relation[...]\". Wikipedia . le paradigme de la programmation fonctionnelle , qui consid\u00e8re le calcul en tant qu'\u00e9valuation de fonctions math\u00e9matiques. le paradigme de la programmation \u00e9v\u00e9nementielle , qui est fond\u00e9 sur la notion d'\u00e9v\u00e9nements. Le programme sera principalement d\u00e9fini par ses r\u00e9actions aux diff\u00e9rents \u00e9v\u00e9nements qui peuvent se produire, c'est-\u00e0-dire des changements d'\u00e9tat de variable, par exemple l'incr\u00e9mentation d'une liste, un d\u00e9placement ou un click de souris, une saisie au clavier... et bien d'autres ... Les diff\u00e9rents langages de programmation peuvent \u00eatre plus ou moins sp\u00e9cialis\u00e9 selon un certain nombre de paradigmes. Quasiment tous respectent le paradigme originel imp\u00e9ratif . Certains langages ne d\u00e9passent pas ce paradigme (assembleur, Fortran, Algol, BASIC,... ). D'autres sont sp\u00e9cialis\u00e9s sur un paradigme sp\u00e9cifique ( comme Lisp, ML, OCaml en programmation fonctionnelle, Ada, Smalltalk, C++, Ruby, C# Swift... en POO). Mais en g\u00e9n\u00e9ral tous les langages cit\u00e9s poss\u00e8dent des composantes multiparadigmes . C'est le cas de Python, qui supporte la programmation : imp\u00e9rative ; fonctionnelle ; proc\u00e9durale ; orient\u00e9e objet ; et en partie \u00e9v\u00e9nementielle.","title":"Un premier exemple issu de Scratch"},{"location":"NSI/Terminale/C01/IntroPOO/#principes","text":"Le concept principal de la programmation orient\u00e9e objet (POO) est celui d' objet . Nous avons d\u00e9j\u00e0 rencontr\u00e9 un certain nombres d'objets pr\u00e9d\u00e9finis dans Python : la classe int , pour repr\u00e9senter les entiers relatifs ; la classe float , pour repr\u00e9senter les nombre \u00e0 virgule flottante (une partie des d\u00e9cimaux) ; la classe str pour repr\u00e9senter les cha\u00eenes de caract\u00e8res ; la classe list , pour repr\u00e9senter un ensemble ordonn\u00e9 et mutable de toute autre collection d'objets ; la classe tuple , pour repr\u00e9senter un ensemble ordonn\u00e9 et non-mutable de toute autre collection d'objets ; la classe set , pour repr\u00e9senter un ensemble non ordonn\u00e9 et sans doublons ; la classe dict , pour repr\u00e9senter une collection non ordonn\u00e9e index\u00e9e par des cl\u00e9s. Chacun de ces types pr\u00e9c\u00e9dents poss\u00e8de ses propres attributs et ses propres m\u00e9thodes : un objet de la classe str poss\u00e8de une longueur, donn\u00e9 par la fonction built-in len() , et plusieurs m\u00e9thodes associ\u00e9es comme lower() , upper() , etc... un objet de la classe list poss\u00e8de lui aussi une longueur, et ses propres m\u00e9thodes comme append() , pop() , etc... A lire quand vous avez fini la page !!! Je raconte n'importe quoi ci-dessus... Je voulais prendre l'exemple de la longueur comme \u00e9tant un attribut des types str et list . En fait la valeur renvoy\u00e9e par la fonction built-in len() correspond \u00e0 celle calcul\u00e9e par le DUNDERS __len__(self) . Il ne s'agit donc pas r\u00e9ellement d'un attribut, mais du r\u00e9sultat renvoy\u00e9 par une m\u00e9thode . Comme quoi m\u00eame apr\u00e8s 30 ans de programmation on en apprend encore... Classes et constructeurs d'objets En Programmation Orient\u00e9e Objet, on va construire de nouvelles classes d'objets plus ou moins complexes, poss\u00e9dant : des attributs , c'est-\u00e0-dire des variables sp\u00e9cifiques qui lui sont directement associ\u00e9es ; des m\u00e9thodes , c'est-\u00e0-dire des fonctions modifiant l'objet, ou interagissant avec l'environnement ext\u00e9rieur \u00e0 cet objet.","title":"Principes"},{"location":"NSI/Terminale/C01/IntroPOO/#application-a-un-exemple","text":"Personnages de JDR/MMORPG Prenons un JDR ou MMORPG lambda, dont les personnages sont constitu\u00e9s ainsi : ils ont 4 caract\u00e9ristiques num\u00e9riques entre \\(1\\) et \\(40\\) , \u00e0 savoir force, endurance, rapidit\u00e9, intelligence ; ils ont un nombre de points de vie de d\u00e9part calcul\u00e9 \u00e0 partir des caract\u00e9ristiques endurance + force//2 ; ils poss\u00e8dent bien s\u00fbr un nom ; leur nombre de points d'exp\u00e9rience au d\u00e9part est de \\(0\\) , et leur niveau est de \\(1\\) ; Chaque personnage peut mener une attaque , qui consiste \u00e0 ajouter un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa force ; Chaque personnage peut se d\u00e9fendre d'une attaque qui lui est lanc\u00e9e en ajoutant un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 son endurance. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au niveau d'attaque, l'attaque a \u00e9chou\u00e9e, sinon le personnage perd un nombre de points de vie \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense. Pour construire un tel personnage, on va devoir renseigner son nom, et ses 4 caract\u00e9ristiques. Ses PV, Pex et son niveau sont automatiquement calcul\u00e9s. Tous sont cependant des attributs du personnage. Abstract On va donc d\u00e9crire un personnage par l'interm\u00e9diaire de l'interface suivante :","title":"Application \u00e0 un exemple"},{"location":"NSI/Terminale/C01/IntroPOO/#creation-de-la-classe-et-des-attributs","text":"Info Nous d\u00e9taillerons beaucoup plus dans un chapitre sp\u00e9cifique le fonctionnement de la POO. Pour l'instant vous devrez vous contenter des explications ci-dessus. D\u00e9crire une classe en Python Le code suivant permet de d\u00e9finir une nouvelle classe d'objets de type Personnage : class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom self . force = force self . endurance = endurance self . rapidite = rapidite self . intelligence = intelligence self . pv = self . endurance + self . force // 2 self . pex = 0 self . niveau = 1 La d\u00e9finition d'une classe d'objet est effectu\u00e9e par le mot-cl\u00e9 class , suivi du nom de la classe (commen\u00e7ant par une majuscule par convention) et du symbole : . Comme toujours en Python le symbole : d\u00e9clenche l'attente d'un bloc indent\u00e9, qui correspondra \u00e0 la d\u00e9finition de l'objet. On trouve ensuite une docstring d\u00e9crivant la classe, puis la d\u00e9finition d'une m\u00e9thode de la classe, la m\u00e9thode __init__() , appel\u00e9e m\u00e9thode constructeur de la classe . Cette m\u00e9thode prend plusieurs param\u00e8tres : le param\u00e8tre self , obligatoire , qui repr\u00e9sente 'l'instance de l'objet cr\u00e9\u00e9. une s\u00e9rie de param\u00e8tres qui correspondent aux param\u00e8tres d\u00e9finis dans l'interface de l'objet Personnage . Puis dans cette m\u00e9thode, on affecte aux attributs de l'objet les valeurs pass\u00e9es en argument, puis on calcule l' attribut pv \u00e0 partir des valeurs d\u00e9j\u00e0 connues. Enfin on d\u00e9fini les deux attributs de valeurs fixes. Un oubli ? Attention ! Ici nous ne respectons pas vraiment l'interface, puisque nous ne v\u00e9rifions pas que les attributs pass\u00e9s en argument sont bien des entiers entre 1 et 40 ! Ce probl\u00e8me sera r\u00e9gl\u00e9 plus tard.","title":"Cr\u00e9ation de la classe et des attributs"},{"location":"NSI/Terminale/C01/IntroPOO/#instanciation-dobjets","text":"Pour cr\u00e9er des personnages, il suffit maintenant d'utiliser une expression de la forme : Personnage( nom, f, e, r, i) . Vous noterez que l'argument self n'est pas renseign\u00e9 ! On appelle cet argument un argument implicite . Ainsi pour cr\u00e9er un objet de type Personnage nomm\u00e9 Bob, et ayant les attributs 20 en force, 25 en endurance, 10 en rapidit\u00e9 et 30 en intelligence, on utilise l'instruction suivante : >>> Personnage(\"Bob\", 20, 25, 10, 30) <__main__.Personnage object at 0x7fb674844e48> On constate donc bien qu'un objet de type Personnage est cr\u00e9e. Bien s\u00fbr, l'objet n'\u00e9tant pas affect\u00e9 \u00e0 un nom, il est imm\u00e9diatement nettoy\u00e9 par le garbage collector . On cr\u00e9e donc une variable playerBob comme r\u00e9f\u00e9rence \u00e0 l'objet : >>> playerBob = Personnage(\"Bob\", 20, 25, 10, 30) Abstract On peut sch\u00e9matiser avec le dessin suivant : L'appel au nom de la classe Personnage fait en r\u00e9alit\u00e9 appel \u00e0 la m\u00e9thode constructeur , qui va permettre de cr\u00e9er un nouvel objet de type Personnage . On peut le v\u00e9rifier avec la ligne suivante : >>> type(playerBob) <class '__main__.Personnage'>","title":"Instanciation d'objets"},{"location":"NSI/Terminale/C01/IntroPOO/#acceder-aux-attributs-et-les-modifier","text":"Pour acc\u00e9der \u00e0 l'attribut pv de l'objet playerBob , il suffit d'utiliser la notation >>> playerBob.pv 35 Il devient d\u00e8s lors possible de modifier la valeur d'un attribut comme lors de toute modification classique des variables : >>> playerBob.force = 18 >>> playerBob.force 18 >>> playerBob.rapidite = playerBob.rapidite + 2 >>> playerBob.rapidite 12","title":"Acc\u00e9der aux attributs et les modifier"},{"location":"NSI/Terminale/C01/IntroPOO/#deux-objets","text":"Nous souhaitons maintenant cr\u00e9er un deuxi\u00e8me personnage du nom de Bill : >>> playerBill = Personnage('Bill', 34, 10, 20, 12) Abstract Cette seconde instance de type Personnage poss\u00e8de aussi ses propres attributs, comme montr\u00e9 dans le sch\u00e9ma suivant : Espace de nommage Chaque instance d'objet poss\u00e8de son propre espace de nommage. Ici m\u00eame si les deux objets de type Personnage ont le m\u00eame nom d'attribut force , ils ne repr\u00e9sentent pas le m\u00eame objet.","title":"Deux objets"},{"location":"NSI/Terminale/C01/IntroPOO/#definitions-de-methodes","text":"Afficher les personnage Essayons maintenant d'afficher une cha\u00eene de caract\u00e8res nous donne toutes les caract\u00e9ristiques d'un personnage. Test de print Essayons d'abord avec la fonction built-in print() : >>> print(playerBob) Sortie et commentaires La sortie sur la console Python est : <__main__.Personnage object at 0x7fb6748590f0> C'est peu parlant ! La fonction print ne renvoie que l'adresse m\u00e9moire et le type de l'objet que nous venons de lui passer. Nous allons donc devoir am\u00e9liorer cet affichage, en construisant notre propre m\u00e9thode , que nous nommerons affiche . Cette m\u00e9thode devra avoir le comportement suivant : >>> playerBob.affiche() \"Bonjour, je suis Bob, de niveau 1. J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 35 Points de Vie\" M\u00e9thodes et attributs Si les attributs d'une classe sont comme des variables sp\u00e9cifiques \u00e0 une classe, les m\u00e9thodes sont des fonctions : elles peuvent prendre ou non des arguments, et ont des valeurs de retour (qui peuvent \u00eatre parfois implicites : la m\u00e9thode __init__ renvoie le nouvel objet cr\u00e9\u00e9.) Pour cr\u00e9er cette m\u00e9thode, nous allons compl\u00e9ter la classe Personnage de la mani\u00e8re suivante : class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : print ( f \"Bonjour, je suis { self . nom } , de niveau { self . niveau } .\" f \"J'ai { self . force } en force, { self . endurance } en endurance, { self . rapidite } \" f \" en rapidit\u00e9 et { self . intelligence } en intelligence. J'ai { self . pv } Points de Vie\" ) Vous constatez que : Dans la construction de la m\u00e9thode affiche , appara\u00eet l' argument implicite self , qu'il est imp\u00e9ratif d'utiliser pour avoir acc\u00e8s aux attributs de l'objet. Dans l'appel de la m\u00e9thode aucun argument n'est pass\u00e9 . En rechargeant le module, puis en recr\u00e9ant les objets playerBill puis playerBob , on obtient alors les affichages suivants : >>> playerBob.affiche() Bonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie >>> playerBill.affiche() Bonjour, je suis Bill, de niveau 1.J'ai 34 en force, 10 en endurance, 20 en rapidit\u00e9 et 12 en intelligence. J'ai 27 Points de Vie Impl\u00e9menter la m\u00e9thode attaque Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode attaque() qui renvoie un entier \u00e9gal \u00e0 la valeur de force du personnage auquel on ajoute un nombre al\u00e9atoire entre 1 et 20. Comment impl\u00e9menter une telle m\u00e9thode ? Une impl\u00e9mentation possible from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : ... def attaque ( self ) : return self . force + randint ( 1 , 20 ) Cette m\u00e9thode peut alors \u00eatre utilis\u00e9e comme dans les exemples ci-dessous : >>> playerBob.attaque() 22 >>> playerBob.attaque() 27 >>> playerBill.attaque() 38 Impl\u00e9menter la m\u00e9thode defense(valeurAttaque) Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode defense(valeurAttaque) qui ajoute un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 l'endurance du personnage. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au niveau d'attaque, l'attaque a \u00e9chou\u00e9e et la m\u00e9thode renvoie True . Sinon le personnage perd un nombre de points de vie \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense, et la m\u00e9thode renvoie False . Comment impl\u00e9menter une telle m\u00e9thode ? Une impl\u00e9mentation possible from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def affiche ( self ) : ... def attaque ( self ) : return self . force + randint ( 1 , 20 ) def defense ( self , valeurAttaque ) : valeurDefense = self . endurance + randint ( 1 , 20 ) if valeurAttaque > valeurDefense : self . pv -= valeurAttaque - valeurDefense return False return True cette m\u00e9thode peut alors \u00eatre utilis\u00e9e ainsi : >>> playerBill.defense(playerBob.attaque()) False >>> playerBill.pv 18","title":"D\u00e9finitions de m\u00e9thodes"},{"location":"NSI/Terminale/C01/IntroPOO/#methodes-specifiques","text":"Info La liste de toutes les m\u00e9thodes d'une classe, y compris des DUNDERS , peut-\u00eatre obtenue par l'interm\u00e9diaire de la commande suivante : >>> dir(Personnage) ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'affiche', 'attaque', 'defense'] DUNDERS Il existe plusieurs m\u00e9thodes sp\u00e9cifiques d\u00e9finies automatiquement d\u00e8s qu'on cr\u00e9e une classe d'objets. Ces m\u00e9thodes sont toutes de la forme __truc__() (c'est-\u00e0-dire que le nom de la classe est pr\u00e9fix\u00e9 par un double tiret du bas, soit Double UNDERScore , ce qui a donn\u00e9 le nom de m\u00e9thodes DUNDERS ). Ce sont des m\u00e9thodes universelles que poss\u00e8dent toute classe en Python, et qui permettent de g\u00e9rer un certain nombre d'actions. Par exemple l'instruction Personnage('Bob', 18, 25, 12, 30) fait appel \u00e0 la m\u00e9thode DUNDERS __init__() que nous avons d\u00e9finie. Il est ainsi possible de red\u00e9finir un certain nombre de ces m\u00e9thodes selon nos utilisations. Le tableau ci-dessous vous pr\u00e9sente quelques-uns de ces DUNDERS, applicables \u00e0 des objets t et other instances de la classe : m\u00e9thode Appel Int\u00e9r\u00eat __str__(self) str(t) renvoie une cha\u00eene de caract\u00e8res d\u00e9crivant l'objet t __lt__(self,other) t < other permet de d\u00e9finir la relation plus petit que entre deux objets, renvoie True ou False selon la d\u00e9finition propos\u00e9e __len__(self) len(t) permet de d\u00e9finir la longueur de l'objet t __contains__(self,x) x in t permet de d\u00e9finir l'appartenance de x \u00e0 t __eq__(self, other) t == other permet de d\u00e9finir l'\u00e9galit\u00e9 entre deux objets t et other __add__(self, other) t + other d\u00e9finit l'addition de deux objets t et other __mul__(self, other) t * other d\u00e9finit la multiplication de deux objets t et other red\u00e9finition de la m\u00e9thode __str__(self) Il est assez facile de red\u00e9finir la m\u00e9thode __str__(self) , puisque nous avons d\u00e9j\u00e0 une cha\u00eene de caract\u00e8re qui nous convient : celle de la m\u00e9thode affiche(self) . Nous allons alors changer la m\u00e9thode affiche(self) qui renverra la cha\u00eene de caract\u00e8re g\u00e9n\u00e9r\u00e9e par la m\u00e9thode __str__(self) (pour des raisons pratiques, la cha\u00eene sera multi-ligne): from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def __str__ ( self ) : return f \"\"\"Bonjour, je suis { self . nom } , de niveau { self . niveau } . J'ai { self . force } en force, { self . endurance } en endurance, { self . rapidite } en rapidit\u00e9 et { self . intelligence } en intelligence. J'ai { self . pv } Points de Vie\"\"\" def affiche ( self ) : print ( str ( self )) ... On a alors la possibilit\u00e9 d'utiliser les commandes suivantes : >>> str(playerBob) \"Bonjour, je suis Bob, de niveau 1.\\n J'ai 18 en force, 25 en endurance, 12\\n en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie\" >>> playerBob.affiche() Bonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie D\u00e9finir l'\u00e9galit\u00e9 entre deux personnages On consid\u00e8re que deux personnages sont \u00e9gaux quand ils poss\u00e8dent les m\u00eames caract\u00e9ristiques num\u00e9riques de bases ( force , endurance , rapidite et intelligence ). Red\u00e9finir la m\u00e9thode DUNDERS __eq__(self, u) pour qu'elle corresponde \u00e0 cette d\u00e9finition. Solution from random import randint class Personnage : \"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\" def __init__ ( self , nom , force , endurance , rapidite , intelligence ) : self . nom = nom ... def __eq__ ( self , other ) : return ( self . force == other . force ) and ( self . endurance == other . endurance ) and ( self . rapidite == other . rapidite ) and ( self . intelligence == other . intelligence ) ... On a alors l'utilisation : >>> playerBob == playerBill False >>> playerBob == Personnage('Marty', 18, 25, 12, 30) True Fight ! Un combat de ce MMORPG se d\u00e9roule selon le sch\u00e9ma suivant : Chaque personnage tire son initiative en ajoutant un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa valeur de rapidite. Le joueur ayant l'initiative la plus \u00e9lev\u00e9e effectue son attaque en premier, et le second se d\u00e9fend. En cas d'\u00e9galit\u00e9 d'initiative, le joeur d'attaque sera celui qui poss\u00e8de la rapidit\u00e9 la plus \u00e9lev\u00e9e. En cas d'\u00e9galit\u00e9 de rapidit\u00e9, le premier joueur sera d\u00e9termin\u00e9 al\u00e9atoirement. Si le deuxi\u00e8me joueur est toujours vivant (ses points de vie sont sup\u00e9rieurs \u00e0 0), il effectue son attaque, et le premier se d\u00e9fend. Si les deux joueurs sont toujours vivants, on recommence un nouveau tour en reprenant en 1. Sinon on affiche le vainqueur. Le vainqueur r\u00e9colte un nombre de points d'exp\u00e9rience \u00e9gal \u00e0 : nombre d'attaque r\u00e9ussie * 2 + nombre de defense r\u00e9ussie Vous devrez impl\u00e9menter un programme simulant un combat entre Bob et Bill , dont la sortie console sera sous la forme suivante : Round 1 Bob a l'initiative et attaque avec 28 Bill r\u00e9ussit sa d\u00e9fense Bill attaque avec 40 Bob rate sa d\u00e9fense et n'a plus que 25 points de vie Round 2 ... Round n Le vainqueur est ..., il lui reste ... points de vie. Il gagne ... points d'exp\u00e9riences. Pour r\u00e9aliser ce programme, vopus devrez : Compl\u00e9ter le fichier personnage.py contenant la classe Personnage de la mani\u00e8re suivante : La m\u00e9thode constructeur __init__() devra lever des exceptions de type TypeError explicites, si nom n'est pas de type str , ou bien si les 4 autres attributs de construction ne sont pas de type int . L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! La m\u00e9thode constructeur __init__() devra lever des exceptions de type ValueError explicites si les valeurs fournies pour les 4 attributs num\u00e9riques ne sont pas entre 1 et 40. L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! La m\u00e9thode constructeur __init__() devra lever des exceptions de type ValueError explicites si la cha\u00eene de caract\u00e8re nom est vide. L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche ! Vous devrez pour r\u00e9ussir construire une m\u00e9thode suppl\u00e9mentaire pour la classe Personnage : la m\u00e9thode initiative(self) qui renvoie un entier repr\u00e9sentant le score d'initiative du personnage. Le programme permettant le combat devra \u00eatre dans un fichier combat.py s\u00e9par\u00e9 de celui contenant la classe Personnage (la classe Personnage \u00e9tant import\u00e9e depuis le module personnage.py par la commande suivante : from personnage import Personnage Un fichier compress\u00e9 .zip ou .7z contenant les deux fichiers (celui du programme et le module contenant la classe Personnage ) sera rendu via le cahier de texte de pronote, dans la partie Travail \u00e0 rendre .","title":"M\u00e9thodes sp\u00e9cifiques"},{"location":"NSI/Terminale/C01/Modularite/","text":"Modules, Interfaces et Encapsulation Retour sur les modules Un module python est un fichier python contenant des fonctions, des constantes (et des constructeurs d' objets , mais nous verrons \u00e7a un peu plus tard), regroup\u00e9es dans ce fichier car elles traitent de la m\u00eame structure de donn\u00e9es . Un exemple Par exemple, dans un jeu vid\u00e9o tel que Space Invaders , on aura : un module qui traitera du vaisseau du joueur ; un module pour construire et g\u00e9rer les vaisseaux ennemis ; un ou des modules pour construire et actualiser l'interface graphique ; un module contenant des constantes (points de vie de d\u00e9part du joueur, nombre d'ennemis, etc) ; et le programme principal qui importera les modules pr\u00e9c\u00e9dents et g\u00e9rera les \u00e9v\u00e9nements liant tous les objets du jeu. On dira que ce programme d\u00e9pend des autres modules. Importer un module Il existe plusieurs possibilit\u00e9s pour importer un module. Dans la suite des exemples, le module toto , contenant les fonctions bidule() et truc() est situ\u00e9 : soit dans le m\u00eame dossier que le fichier qui l'importe ; soit dans un dossier accessible par le syst\u00e8me ( dossier faisant partie de la variable PATH de windows par exemple). Import complet import toto toto . bidule () toto . truc () Toutes les fonctions du module toto sont import\u00e9es, et elles le sont dans un namespace (= espace de nommage\") sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant** par le nom du module ( toto. ). Import complet avec alias import toto as to to . bidule () to . truc () Comme pour l'import complet, toutes les fonctions du module toto sont import\u00e9es, et elles le sont dans un namespace (= espace de nommage\") sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant par l'alias** du module ( to1. ). Import partiel dans le namespace courant from toto import bidule bidule () Ici, seul la fonction bidule() est import\u00e9e, mais elle l'est directement dans le namespace principal (= main ) du fichier effectuant l'import. La fonction truc() n'est pas appelable (elle n'existe pas pour l'interpr\u00e9teur). Import complet dans le namespace courant from toto import * bidule () truc () Toutes les fonctions sont appel\u00e9es directement dans le namespace principal (= main ) du fichier effectuant l'import. \u26a0\ufe0f C'est une pratique p\u00e9rilleuse ! Si une fonction du module porte le m\u00eame nom qu'une fonction du fichier appelant, celle import\u00e9e \u00e9crasera celle du fichiert courant, et \u00e7a peut-\u00eatre facheux... Voir l'exemple ci-dessous... Fichier principal from mon_module import * print ( \"Pain \" ) Fichier mon_module.py def print ( truc ) : print ( truc * 3 + \"Tarte Tatin\" * 2 ) Sortie attendue Probablement, ce qui est attendu par la sortie du fichier principal est juste la cha\u00eene de caract\u00e8res \"Pain \" . Mais la fonction built-in print() a \u00e9t\u00e9 \u00e9cras\u00e9e par celle du module mon_module.py . Sortie r\u00e9elle \"Pain Pain Pain Tarte Tatin Tarte Tatin\u00a8 La v\u00e9ritable fonction appel\u00e9e est celle du module mon_module.py . (Pour ceux qui ont en t\u00eate la marche imp\u00e9riale, c'est normal...) Remarque Il est toutefois possible d'importer un fichier pr\u00e9sent dans un autre dossier : soit en utilisant une adresse absolue import 'C:\\Mes_Programmes\\Python\\toto.py' ; soit en utilisant une adresse relatice import '..\\toto.py' ( si toto.py est situ\u00e9 dans le dossier parent du fichier qui importe). Interfaces Conception logicielle Dans la conception de logiciels \u00e0 grande \u00e9chelle, ou \u00e0 pluseiurs programmeurs (et \u00e0 l'heure actuelle il est fr\u00e9quent d'avoir plusieurs milliers de programmeurs concevant un logiciel), il est important de pouvoir s\u00e9parer les diff\u00e9rents \u00e9l\u00e9ments du programme en sous-ensembles coh\u00e9rents et ayant le minimum d'interactions entre eux. En particuliers ils se doivent d'\u00eatre le plus \u00e9tanches possibles quant \u00e0 leur fonctionnement. On retrouve ici que la notion d' interface est essentielle. Pour chaque module, on peut donc distinguer : une interface , c'est-\u00e0-dire la description des diff\u00e9rentes fonctions du module et de leurs arguments (obligatoires ou facultatifs). Il s'agit donc d'une documentation la plus claire possible sur la mani\u00e8re d' utiliser le module. une impl\u00e9mentation , c'est-\u00e0-dire la mani\u00e8re dont sont cod\u00e9es ces fonctions (choix de structures, nom des variables interm\u00e9diaires, etc...). Un exemple d'interface Un module utilisable pour la fonction factoris\u00e9e contient_doublon(t) aura pour interface : fonction Description cree() cr\u00e9e et renvoie un ensemble de date vide contient(data,s) renvoie True si la structure s contient la donn\u00e9e data ajoute(data,s) ajoute la donn\u00e9e data \u00e0 la structure s Vous constaterez que dans cette description, il n'est nul part fait mention de la nature de la structure . Il pourrait s'agir aussi bien de liste, de tableau de bits, de tables de hachage... Exercice : r\u00e9alisation de modules Dans chacun des cas suivant, construire un module r\u00e9alisant l'interface ci-dessus, et le tester en l'important dans le fichier rechercheDates.py o\u00f9 vous aurez modifier la fonction contient_doublon(t) par la version factoris\u00e9e de celle-ci. un module dateTab , dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau. un module dateBool , dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau de bool\u00e9en. un module dateHash , dont la structure est impl\u00e9ment\u00e9e sous la forme d'une table de hachage. \ud83e\udde9 Il est bien entendu essentiel de s'inspirer des exemples donn\u00e9 dans la page d'introduction . Notions d'encapsulation Notion d'encapsulation Le contrat qu'une interface \u00e9tablit entre l'utilisateur et l'auteur d'un module ne porte pas sur les moyens, mais sur les r\u00e9sultats : l'auteur s'engage \u00e0 ce que les r\u00e9sultats produits par l'utilisation de ses fonctions soient bien ceux d\u00e9crits dans l'interface, mais il est libre de s'y prendre comme il le souhaite. En particulier il est libre d'introduire des fonctions, variables, constantes, ..., qui ne sont pas inclues dans l'interface . On parle alors de fonctions, variables, constantes encapsul\u00e9es dans le module. Le contrat explicite est que l'utilisateur ne doit en aucun cas utiliser ces donn\u00e9es encapsul\u00e9es. Dans le cas contraire, si l'auteur du module change son approche et modifie ces donn\u00e9es internes, le programme du client risque de devenir non fonctionnel. Norme en Python En Python, l'auteur d'un module peut indiquer que certains \u00e9l\u00e9ments sont priv\u00e9s (= encapsul\u00e9s) en faisant commencer leur nom par un cracat\u00e8re underscore _ Exemple Imaginons un module secondDegre.py dont l'interface est d\u00e9finie ainsi : fonction Description polynome(t) V\u00e9rifie que le tuple t sous la forme (a,b,c) repr\u00e9sente bien un polyn\u00f4me de degr\u00e9 2 valeursRacines(p) Renvoie les valeurs des racines, et None si il n'existe pas de recines r\u00e9elles convexite(p) Renvoie la convexit\u00e9 de la courbe repr\u00e9sentative du polyn\u00f4me sous la forme d'une cha\u00eene de caract\u00e8re en minuscule tangente(p,x) Renvoie l'\u00e9quation de la tangente \u00e0 la courbe du polyn\u00f4me p en x Dans l'interface de ce module, on consid\u00e8re que le calcul du discriminant est une op\u00e9ration priv\u00e9e. On aurait alors comme possibilit\u00e9 d'impl\u00e9mentation (non compl\u00e8te): from math import sqrt def polynome ( t ) : a , b , * c = t if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or len ( c ) > 1 or not ( isinstance ( * c ,( int , float ))) : raise ValueError () if a == 0 : raise ValueError () return t def _discriminant ( p ) : a , b , c = polynome ( p ) return b ** 2 - 4 * a * c def _nombreRacines ( p ) : ... def valeursracines ( p ) : ... def convexite ( p ) : ... def _calcule ( p , x ) : ... def _nombreDerive ( p , x ) : ... def tangente ( p , x ) : ... Dans ce module, les fonctions pr\u00e9fix\u00e9es par _ sont consid\u00e9r\u00e9es comme priv\u00e9es, et ne faisant pas partie de l'interface. Exercice Cr\u00e9er un module secondDegre.py contenant a minima la totalit\u00e9 des fonctions pr\u00e9c\u00e9dentes, et impl\u00e9menter toutes ces fonctions. Une solution possible from math import sqrt def polynome ( t ) : a , b , * c = t if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or len ( c ) > 1 or not ( isinstance ( * c ,( int , float ))) : raise ValueError () if a == 0 : raise ValueError () return t def _discriminant ( p ) : a , b , c = polynome ( p ) return b ** 2 - 4 * a * c def _nombreRacines ( p ) : d = _discriminant ( p ) if d < 0 : return 0 elif d == 0 : return 1 else : return 2 def valeursRacines ( p ) : nbR = _nombreRacines ( p ) if nbR == 0 : return None elif nbR == 1 : a , b , c = p return - b / ( 2 * a ) else : a , b , c = p d = _discriminant ( p ) return ( - b - sqrt ( d )) / ( 2 * a ), ( - b + sqrt ( d )) / ( 2 * a ) def convexite ( p ) : a , b , c = polynome ( p ) if a > 0 : return \"convexe\" else : return \"concave\" def _calcule ( p , x ) : a , b , c = polynome ( p ) if not ( isinstance ( x , ( float , int ))) : raise valueError () else : return a * x ** 2 + b * x + c def _nombreDerive ( p , x ) : a , b , c = polynome ( p ) if not ( isinstance ( x , ( float , int ))) : raise valueError () else : return 2 * a * x + b def tangente ( p , x ) : return f 'y = { _nombreDerive ( p , x ) } (x- { x } ) + { _calcule ( p , x ) } ' Encapsulation dans d'autres langages Il faut noter que la notion de fonction ou variable priv\u00e9e en Python n'est qu'une convention. Rien n'emp\u00eache r\u00e9ellement l'utilisateur du module d'utiliser ces fonctions priv\u00e9es . C'est loin d'\u00eatre le cas dans d'autres langages (comme C++ ou Java ), qui introduisent un contr\u00f4le strict de l'encapsulation en rendant l'acc\u00e8s aux \u00e9l\u00e9ments priv\u00e9s impossible.","title":"Modules, interfaces, encapsulation"},{"location":"NSI/Terminale/C01/Modularite/#modules-interfaces-et-encapsulation","text":"","title":"Modules, Interfaces et Encapsulation"},{"location":"NSI/Terminale/C01/Modularite/#retour-sur-les-modules","text":"Un module python est un fichier python contenant des fonctions, des constantes (et des constructeurs d' objets , mais nous verrons \u00e7a un peu plus tard), regroup\u00e9es dans ce fichier car elles traitent de la m\u00eame structure de donn\u00e9es . Un exemple Par exemple, dans un jeu vid\u00e9o tel que Space Invaders , on aura : un module qui traitera du vaisseau du joueur ; un module pour construire et g\u00e9rer les vaisseaux ennemis ; un ou des modules pour construire et actualiser l'interface graphique ; un module contenant des constantes (points de vie de d\u00e9part du joueur, nombre d'ennemis, etc) ; et le programme principal qui importera les modules pr\u00e9c\u00e9dents et g\u00e9rera les \u00e9v\u00e9nements liant tous les objets du jeu. On dira que ce programme d\u00e9pend des autres modules. Importer un module Il existe plusieurs possibilit\u00e9s pour importer un module. Dans la suite des exemples, le module toto , contenant les fonctions bidule() et truc() est situ\u00e9 : soit dans le m\u00eame dossier que le fichier qui l'importe ; soit dans un dossier accessible par le syst\u00e8me ( dossier faisant partie de la variable PATH de windows par exemple). Import complet import toto toto . bidule () toto . truc () Toutes les fonctions du module toto sont import\u00e9es, et elles le sont dans un namespace (= espace de nommage\") sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant** par le nom du module ( toto. ). Import complet avec alias import toto as to to . bidule () to . truc () Comme pour l'import complet, toutes les fonctions du module toto sont import\u00e9es, et elles le sont dans un namespace (= espace de nommage\") sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant par l'alias** du module ( to1. ). Import partiel dans le namespace courant from toto import bidule bidule () Ici, seul la fonction bidule() est import\u00e9e, mais elle l'est directement dans le namespace principal (= main ) du fichier effectuant l'import. La fonction truc() n'est pas appelable (elle n'existe pas pour l'interpr\u00e9teur). Import complet dans le namespace courant from toto import * bidule () truc () Toutes les fonctions sont appel\u00e9es directement dans le namespace principal (= main ) du fichier effectuant l'import. \u26a0\ufe0f C'est une pratique p\u00e9rilleuse ! Si une fonction du module porte le m\u00eame nom qu'une fonction du fichier appelant, celle import\u00e9e \u00e9crasera celle du fichiert courant, et \u00e7a peut-\u00eatre facheux... Voir l'exemple ci-dessous... Fichier principal from mon_module import * print ( \"Pain \" ) Fichier mon_module.py def print ( truc ) : print ( truc * 3 + \"Tarte Tatin\" * 2 ) Sortie attendue Probablement, ce qui est attendu par la sortie du fichier principal est juste la cha\u00eene de caract\u00e8res \"Pain \" . Mais la fonction built-in print() a \u00e9t\u00e9 \u00e9cras\u00e9e par celle du module mon_module.py . Sortie r\u00e9elle \"Pain Pain Pain Tarte Tatin Tarte Tatin\u00a8 La v\u00e9ritable fonction appel\u00e9e est celle du module mon_module.py . (Pour ceux qui ont en t\u00eate la marche imp\u00e9riale, c'est normal...) Remarque Il est toutefois possible d'importer un fichier pr\u00e9sent dans un autre dossier : soit en utilisant une adresse absolue import 'C:\\Mes_Programmes\\Python\\toto.py' ; soit en utilisant une adresse relatice import '..\\toto.py' ( si toto.py est situ\u00e9 dans le dossier parent du fichier qui importe).","title":"Retour sur les modules"},{"location":"NSI/Terminale/C01/Modularite/#interfaces","text":"Conception logicielle Dans la conception de logiciels \u00e0 grande \u00e9chelle, ou \u00e0 pluseiurs programmeurs (et \u00e0 l'heure actuelle il est fr\u00e9quent d'avoir plusieurs milliers de programmeurs concevant un logiciel), il est important de pouvoir s\u00e9parer les diff\u00e9rents \u00e9l\u00e9ments du programme en sous-ensembles coh\u00e9rents et ayant le minimum d'interactions entre eux. En particuliers ils se doivent d'\u00eatre le plus \u00e9tanches possibles quant \u00e0 leur fonctionnement. On retrouve ici que la notion d' interface est essentielle. Pour chaque module, on peut donc distinguer : une interface , c'est-\u00e0-dire la description des diff\u00e9rentes fonctions du module et de leurs arguments (obligatoires ou facultatifs). Il s'agit donc d'une documentation la plus claire possible sur la mani\u00e8re d' utiliser le module. une impl\u00e9mentation , c'est-\u00e0-dire la mani\u00e8re dont sont cod\u00e9es ces fonctions (choix de structures, nom des variables interm\u00e9diaires, etc...). Un exemple d'interface Un module utilisable pour la fonction factoris\u00e9e contient_doublon(t) aura pour interface : fonction Description cree() cr\u00e9e et renvoie un ensemble de date vide contient(data,s) renvoie True si la structure s contient la donn\u00e9e data ajoute(data,s) ajoute la donn\u00e9e data \u00e0 la structure s Vous constaterez que dans cette description, il n'est nul part fait mention de la nature de la structure . Il pourrait s'agir aussi bien de liste, de tableau de bits, de tables de hachage... Exercice : r\u00e9alisation de modules Dans chacun des cas suivant, construire un module r\u00e9alisant l'interface ci-dessus, et le tester en l'important dans le fichier rechercheDates.py o\u00f9 vous aurez modifier la fonction contient_doublon(t) par la version factoris\u00e9e de celle-ci. un module dateTab , dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau. un module dateBool , dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau de bool\u00e9en. un module dateHash , dont la structure est impl\u00e9ment\u00e9e sous la forme d'une table de hachage. \ud83e\udde9 Il est bien entendu essentiel de s'inspirer des exemples donn\u00e9 dans la page d'introduction .","title":"Interfaces"},{"location":"NSI/Terminale/C01/Modularite/#notions-dencapsulation","text":"Notion d'encapsulation Le contrat qu'une interface \u00e9tablit entre l'utilisateur et l'auteur d'un module ne porte pas sur les moyens, mais sur les r\u00e9sultats : l'auteur s'engage \u00e0 ce que les r\u00e9sultats produits par l'utilisation de ses fonctions soient bien ceux d\u00e9crits dans l'interface, mais il est libre de s'y prendre comme il le souhaite. En particulier il est libre d'introduire des fonctions, variables, constantes, ..., qui ne sont pas inclues dans l'interface . On parle alors de fonctions, variables, constantes encapsul\u00e9es dans le module. Le contrat explicite est que l'utilisateur ne doit en aucun cas utiliser ces donn\u00e9es encapsul\u00e9es. Dans le cas contraire, si l'auteur du module change son approche et modifie ces donn\u00e9es internes, le programme du client risque de devenir non fonctionnel. Norme en Python En Python, l'auteur d'un module peut indiquer que certains \u00e9l\u00e9ments sont priv\u00e9s (= encapsul\u00e9s) en faisant commencer leur nom par un cracat\u00e8re underscore _ Exemple Imaginons un module secondDegre.py dont l'interface est d\u00e9finie ainsi : fonction Description polynome(t) V\u00e9rifie que le tuple t sous la forme (a,b,c) repr\u00e9sente bien un polyn\u00f4me de degr\u00e9 2 valeursRacines(p) Renvoie les valeurs des racines, et None si il n'existe pas de recines r\u00e9elles convexite(p) Renvoie la convexit\u00e9 de la courbe repr\u00e9sentative du polyn\u00f4me sous la forme d'une cha\u00eene de caract\u00e8re en minuscule tangente(p,x) Renvoie l'\u00e9quation de la tangente \u00e0 la courbe du polyn\u00f4me p en x Dans l'interface de ce module, on consid\u00e8re que le calcul du discriminant est une op\u00e9ration priv\u00e9e. On aurait alors comme possibilit\u00e9 d'impl\u00e9mentation (non compl\u00e8te): from math import sqrt def polynome ( t ) : a , b , * c = t if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or len ( c ) > 1 or not ( isinstance ( * c ,( int , float ))) : raise ValueError () if a == 0 : raise ValueError () return t def _discriminant ( p ) : a , b , c = polynome ( p ) return b ** 2 - 4 * a * c def _nombreRacines ( p ) : ... def valeursracines ( p ) : ... def convexite ( p ) : ... def _calcule ( p , x ) : ... def _nombreDerive ( p , x ) : ... def tangente ( p , x ) : ... Dans ce module, les fonctions pr\u00e9fix\u00e9es par _ sont consid\u00e9r\u00e9es comme priv\u00e9es, et ne faisant pas partie de l'interface. Exercice Cr\u00e9er un module secondDegre.py contenant a minima la totalit\u00e9 des fonctions pr\u00e9c\u00e9dentes, et impl\u00e9menter toutes ces fonctions. Une solution possible from math import sqrt def polynome ( t ) : a , b , * c = t if not ( isinstance ( a ,( int , float )) ) or not ( isinstance ( b ,( int , float )) ) or len ( c ) > 1 or not ( isinstance ( * c ,( int , float ))) : raise ValueError () if a == 0 : raise ValueError () return t def _discriminant ( p ) : a , b , c = polynome ( p ) return b ** 2 - 4 * a * c def _nombreRacines ( p ) : d = _discriminant ( p ) if d < 0 : return 0 elif d == 0 : return 1 else : return 2 def valeursRacines ( p ) : nbR = _nombreRacines ( p ) if nbR == 0 : return None elif nbR == 1 : a , b , c = p return - b / ( 2 * a ) else : a , b , c = p d = _discriminant ( p ) return ( - b - sqrt ( d )) / ( 2 * a ), ( - b + sqrt ( d )) / ( 2 * a ) def convexite ( p ) : a , b , c = polynome ( p ) if a > 0 : return \"convexe\" else : return \"concave\" def _calcule ( p , x ) : a , b , c = polynome ( p ) if not ( isinstance ( x , ( float , int ))) : raise valueError () else : return a * x ** 2 + b * x + c def _nombreDerive ( p , x ) : a , b , c = polynome ( p ) if not ( isinstance ( x , ( float , int ))) : raise valueError () else : return 2 * a * x + b def tangente ( p , x ) : return f 'y = { _nombreDerive ( p , x ) } (x- { x } ) + { _calcule ( p , x ) } ' Encapsulation dans d'autres langages Il faut noter que la notion de fonction ou variable priv\u00e9e en Python n'est qu'une convention. Rien n'emp\u00eache r\u00e9ellement l'utilisateur du module d'utiliser ces fonctions priv\u00e9es . C'est loin d'\u00eatre le cas dans d'autres langages (comme C++ ou Java ), qui introduisent un contr\u00f4le strict de l'encapsulation en rendant l'acc\u00e8s aux \u00e9l\u00e9ments priv\u00e9s impossible.","title":"Notions d'encapsulation"},{"location":"NSI/Terminale/C02/Recursivite/","text":"Notion de fonctions r\u00e9cursive Activit\u00e9 d'introduction : de l'it\u00e9ratif au r\u00e9cursif Un peu de maths : les suites arithm\u00e9tiques On rappelle qu'une suite \\((u_n)\\) , de premier terme \\(u_0\\) est dite arithm\u00e9tique si et seulement si \\[ u_{n+1} = u_n +r \\] o\u00f9 \\(r \\in \\mathbb{R}\\) . La d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence , c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\) . Cette suite peut-\u00eatre d\u00e9finie par une formule explicite : \\[ u_n = u_0 + n \\times r \\] Exercice Enonc\u00e9 Construire une fonction suiteArithmetique(n) qui calcule le \\(n\\) -i\u00e8me terme de la suite arithm\u00e9tique de premier terme 3 et de raison 7 . Quelle formule avez-vous utilis\u00e9e ? Une solution Au vu de l'\u00e9nonc\u00e9, je prends le pari que la majorit\u00e9 d'entre vous avez utilis\u00e9 la formule explicite avec un code de la forme suivante : def maSuiteArithmetique ( n ) : return 3 + n * 7 C'est \u00e9videmment la solution la plus simple. Dans ce cas, tout comme pour les suites g\u00e9om\u00e9trique , il est inutile de compliquer le code, nous obtenons directement la solution par un simple calcul alg\u00e9brique. Encore des maths : les suites arithm\u00e9tico-g\u00e9om\u00e9triques Une suite \\((u_n)\\) , de premier terme \\(u_0\\) est dite arithm\u00e9tico-g\u00e9om\u00e9trique si et seulement si \\[ u_{n+1} = a\\times u_n +b \\] o\u00f9 \\(a,b \\in \\mathbb{R}\\) . Encore une fois, la d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence , c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\) . Exercice Enonc\u00e9 Construire une fonction maSuiteAG(n) qui calcule le \\(n\\) -i\u00e8me terme de la suite arithm\u00e9tico-g\u00e9om\u00e9triqueq de premier terme 7 et d\u00e9finie par : \\[ u_{n+1} = -2\\times u_n +5 \\] Quelle formule avez-vous utilis\u00e9e ? Une solution probable Ici nous n'avons qu'une formule - sauf pour les petits malins qui seront all\u00e9 voir sur wikipedia - donc on doit utiliser un processus de r\u00e9p\u00e9tition des op\u00e9rations \u00e0 partir de 7 . On peut bien s\u00fbr appliquer une boucle pour dans notre fonction : def maSuiteAG ( n ) : u = 7 for i in range ( 1 , n + 1 ) : # j'utilise ce range plut\u00f4t que range(n) car le i utilis\u00e9 correspond au terme du rang calcul\u00e9. u = - 2 * u + 5 return u Deux remarques : dans ce code, je ne v\u00e9rifie pas que \\(n \\in \\mathbb{N}\\) , et il faudrait... ; dans le cas o\u00f9 \\(n=0\\) , la boucle for n'est pas effectu\u00e9e. Une telle fonction est dite it\u00e9rative , car elle utilise une boucle de r\u00e9p\u00e9titions pour parvenir au r\u00e9sultat souhait\u00e9. C'est vraiment dommage, dans le premier exercice, on utilise simplement la formule explicite , alors que dans le deuxi\u00e8me cas, on est oblig\u00e9 de r\u00e9fl\u00e9chir \u00e0 l'algorithme. Ce serait si simple de pouvoir utiliser directement la formule r\u00e9cursive , comme dans le code ci-dessous : def maSuiteAGR ( n ) : return - 2 * maSuiteAGR ( n - 1 ) + 5 Ca vaudrait peut-\u00eatre le coup de tester, en prenant \\(n=3\\) par exemple... K\u00e9sako ? Quand on teste la fonction maSuiteAGR(3) , python ... calcule... puis nous renvoie une erreur : RecursionError: maximum recursion depth exceeded Le mot important dans la phrase pr\u00e9c\u00e9dente, c'est que python CALCULE ! Donc il doit a minima comprendre la fonction maSuiteAGR ! Principe de r\u00e9cursivit\u00e9 Fonction r\u00e9cursive Une fonction est dite r\u00e9cursive quand elle s'appelle elle-m\u00eame, une ou plusieurs fois. Des probl\u00e8mes D\u00e9composons l'instruction l'appel \u00e0 maSuiteAGR(3) : maSuiteAGR(3) doit calculer -2*maSuiteAGR(2) +5 , et donc doit calculer : maSuiteAGR(2) , qui doit calculer -2*maSuiteAGR(1) +5 , et donc doit calculer : maSuiteAGR(1) , qui doit calculer -2*maSuiteAGR(0) +5 , et donc doit calculer : maSuiteAGR(0) , qui doit calculer -2*maSuiteAGR(-1) +5 , et donc doit calculer : maSuiteAGR(-1) , qui doit calculer -2*maSuiteAGR(-2) +5 , et donc doit calculer : ... \"HELP ! Mais \u00e7a s'arr\u00eate quand !\" me direz-vous ! Et bien jamais, en th\u00e9orie. Mais en r\u00e9alit\u00e9 cette instruction s'arr\u00eatera quand python aura lev\u00e9 une erreur de type RecursionError , qui signifie qu'une limite aura \u00e9t\u00e9 atteinte (nous en parlerons plus tard pour lever toute ambiguit\u00e9). Supprimer le probl\u00e8me : le cas d'arr\u00eat Pour supprimer le probl\u00e8me pr\u00e9c\u00e9dent, revenons aux maths : dans une d\u00e9finition par r\u00e9currence de suite, on signale toujours la valeur du premier terme (qui peut \u00eatre \\(u_0\\) , ou \\(u_1\\) , ou m\u00eame \\(u_{42}\\) selon le probl\u00e8me et la d\u00e9finition de l'indice). Or dans notre fonction maSuiteAGR , jamais nous ne pr\u00e9cisons ce cas, c'est-\u00e0-dire que quand \\(n=0\\) , alors la suite vaut \\(7\\) . Rajoutons-donc cette condition dans la fonction : def maSuiteAGR ( n ) : if n == 0 : return 7 else : return - 2 * maSuiteAGR ( n - 1 ) + 5 Et testons de nouveau maSuiteAGR(3) : maSuiteAGR(3) doit calculer -2*maSuiteAGR(2) +5 , et donc doit calculer : maSuiteAGR(2) , qui doit calculer -2*maSuiteAGR(1) +5 , et donc doit calculer : maSuiteAGR(1) , qui doit calculer -2*maSuiteAGR(0) +5 , et donc doit calculer : maSuiteAGR(0) , qui maintenant renvoie 7 ! donc maSuiteAGR(1) renvoie -2*7+5 soit -9 ; donc maSuiteAGR(2) renvoie -2*(-9)+5 soit 23 ; donc maSuiteAGR(3) renvoie -2*23+5 soit -41 . Non seulement la fonction s'arr\u00eate, mais en plus elle renvoie la bonne valeur, c'est-\u00e0-dire \\(u_3 = -41\\) . R\u00e9capitulons Pour utiliser une fonction r\u00e9cursive correctement, il faudra distinguer : le ou les cas d'arr\u00eats (ou cas de base ), c'est-\u00e0-dire des cas particuliers pour lesquels la valeur (ou l'objet) renvoy\u00e9 par la fonction est connu ; le cas r\u00e9cursif , pour lequel la fonction s'appelle elle-m\u00eame, une ou plusieurs fois. Exemple comment\u00e9 La somme des \\(n\\) premiers entiers est la somme : \\[ 0+1+2+3+...+n \\] Comment faire pour construire une fonction r\u00e9cursive sommeR(n) qui effectue la somme des \\(n\\) premiers entiers, avec \\(n\\) pass\u00e9 en argument. Quel est le cas r\u00e9cursif ? On a \\(0+1+2+3+...+n = (0+1+2+3+ ...+ (n-1) ) + n\\) , donc le cas r\u00e9cursif est sommeR(n) = sommeR(n-1) + n Quel est le cas de base ? Il y a plusieurs possibilit\u00e9s, soit en partant de l'indice 0 car sommeR(0)=0 , soit en partant de l'indice 1, car sommeR(1) = 1 . Une impl\u00e9mentation r\u00e9cursive possible est alors : def sommeR ( n ) : if n == 0 : return 0 else : return sommeR ( n - 1 ) + n Applications directes Exercice : factorielle Enonc\u00e9 On rappelle que la factorielle d'un entier naturel \\(n\\) est donn\u00e9 par : \\[ \\left\\lbrace \\begin{array}{rcl} n! &=& n \\times (n-1) \\times ... \\times 3 \\times 2 \\times 1\\\\ 1! &=& 1\\\\ 0! &=& 1 \\end{array}\\right. \\] Ecrire une fonction it\u00e9rative factorielle(n) qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une ValueError si \\(n\\) n'est pas entier ou est n\u00e9gatif. Ecrire une fonction r\u00e9cursive factorielleR(n) qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une ValueError si \\(n\\) n'est pas entier ou est n\u00e9gatif. Solution It\u00e9rative 1 2 3 4 5 6 7 def factorielle ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) produit = 1 for i in range ( 1 , n + 1 ) : # On peut effectivemment partir de 2, et gagner un tour de boucle. produit = produit * i return produit Solution r\u00e9cursive 1 2 3 4 5 6 7 def factorielleR ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) if n == 0 or n == 1 : return 1 else : return factorielleR ( n - 1 ) * n Exercice : \u00e9toiles Enonc\u00e9 Impl\u00e9menter une fonction it\u00e9rative etoile(n) qui \u00e9crit dans le Shell Python un triangle form\u00e9 de caract\u00e8res * tels que dans l'exemple suivant : >>> etoileR ( 5 ) * ** *** **** ***** 2. Impl\u00e9menter une fonction r\u00e9cursive etoileR(n) qui effectue le m\u00eame travail. Solution It\u00e9rative 1 2 3 4 5 def etoile ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) for i in range ( 1 , n + 1 ) : print ( \"*\" * i ) Solution r\u00e9cursive 1 2 3 4 5 6 7 8 def etoileR ( n ) : if not ( isinstance ( n , int )) or n <= 0 : raise valueError ( \"n must be a non null positiv integer\" ) if n == 1 : print ( \"*\" ) else : etoileR ( n - 1 ) print ( \"*\" * n ) Coefficients binomiaux et triangle de Pascal Soient \\(a\\) et \\(b\\) deux r\u00e9els quelconques. D\u00e9veloppez les expressions suivantes : \\(A = (a+b)^0\\) \\(B = (a+b)^1\\) \\(C = (a+b)^2\\) \\(D = (a+b)^3\\) \\(E = (a+b)^4\\) Solution A venir Compl\u00e9tez deux lignes suppl\u00e9mentaires du tableau suivant, nomm\u00e9 Triangle de Pascal : \\[ \\begin{array}{|l|c|c|c|c|c|c|} \\hline p=>&0&1&2&3&4&5\\\\\\hline n=0&1&&&&&\\\\\\hline n=1&1&1&&&&\\\\\\hline n=2&1&2&1&&&\\\\\\hline n=3&1&3&3&1&&\\\\\\hline n=4&1&4&6&4&1&\\\\\\hline n=5&1&5&10&10&5&1\\\\\\hline \\end{array} \\] Solution Pour construire un nombre, il suffit d'utiliser la ligne pr\u00e9c\u00e9dente, en ajoutant le nombre situ\u00e9 juste au dessus de lui et celui situ\u00e9 \u00e0 la gauche de ce dernier. \\[ \\begin{array}{|l|c|c|c|c|c|c|c|c|} \\hline p=>&0&1&2&3&4&5&6&7\\\\\\hline n=0&1&&&&&&&\\\\\\hline n=1&1&1&&&&&&\\\\\\hline n=2&1&2&1&&&&&\\\\\\hline n=3&1&3&3&1&&&&\\\\\\hline n=4&1&4&6&4&1&&&\\\\\\hline n=5&1&5&10&10&5&1&&\\\\\\hline n=6&1&6&15&20&15&6&1&\\\\\\hline n=7&1&7&21&35&35&21&7&1\\\\\\hline \\end{array} \\] On appelle coefficient binomial de rang \\(p\\) et de degr\u00e9 \\(n\\) le nombre du Triangle de Pascal correspondant \u00e0 la \\(n\\) -i\u00e8me ligne et \u00e0 la \\(p\\) _i\u00e8me colonne. Ce nombre est not\u00e9 \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\) . Comment exprimer r\u00e9cursivemment ce coefficient ? Solution A venir Impl\u00e9menter une fonction binomeR(n, p) qui renvoie la valeur du coefficient binomial \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\) du triangle de Pascal. Solution A venir *Facultatif : * Impl\u00e9menter une fonction developpe(n) qui renvoie la cha\u00eene de caract\u00e8res correspondant au d\u00e9veloppement de \\((a+b)^n\\) . Solution A venir","title":"Notion de r\u00e9cursivit\u00e9"},{"location":"NSI/Terminale/C02/Recursivite/#notion-de-fonctions-recursive","text":"","title":"Notion de fonctions r\u00e9cursive"},{"location":"NSI/Terminale/C02/Recursivite/#activite-dintroduction-de-literatif-au-recursif","text":"Un peu de maths : les suites arithm\u00e9tiques On rappelle qu'une suite \\((u_n)\\) , de premier terme \\(u_0\\) est dite arithm\u00e9tique si et seulement si \\[ u_{n+1} = u_n +r \\] o\u00f9 \\(r \\in \\mathbb{R}\\) . La d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence , c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\) . Cette suite peut-\u00eatre d\u00e9finie par une formule explicite : \\[ u_n = u_0 + n \\times r \\] Exercice Enonc\u00e9 Construire une fonction suiteArithmetique(n) qui calcule le \\(n\\) -i\u00e8me terme de la suite arithm\u00e9tique de premier terme 3 et de raison 7 . Quelle formule avez-vous utilis\u00e9e ? Une solution Au vu de l'\u00e9nonc\u00e9, je prends le pari que la majorit\u00e9 d'entre vous avez utilis\u00e9 la formule explicite avec un code de la forme suivante : def maSuiteArithmetique ( n ) : return 3 + n * 7 C'est \u00e9videmment la solution la plus simple. Dans ce cas, tout comme pour les suites g\u00e9om\u00e9trique , il est inutile de compliquer le code, nous obtenons directement la solution par un simple calcul alg\u00e9brique. Encore des maths : les suites arithm\u00e9tico-g\u00e9om\u00e9triques Une suite \\((u_n)\\) , de premier terme \\(u_0\\) est dite arithm\u00e9tico-g\u00e9om\u00e9trique si et seulement si \\[ u_{n+1} = a\\times u_n +b \\] o\u00f9 \\(a,b \\in \\mathbb{R}\\) . Encore une fois, la d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence , c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\) . Exercice Enonc\u00e9 Construire une fonction maSuiteAG(n) qui calcule le \\(n\\) -i\u00e8me terme de la suite arithm\u00e9tico-g\u00e9om\u00e9triqueq de premier terme 7 et d\u00e9finie par : \\[ u_{n+1} = -2\\times u_n +5 \\] Quelle formule avez-vous utilis\u00e9e ? Une solution probable Ici nous n'avons qu'une formule - sauf pour les petits malins qui seront all\u00e9 voir sur wikipedia - donc on doit utiliser un processus de r\u00e9p\u00e9tition des op\u00e9rations \u00e0 partir de 7 . On peut bien s\u00fbr appliquer une boucle pour dans notre fonction : def maSuiteAG ( n ) : u = 7 for i in range ( 1 , n + 1 ) : # j'utilise ce range plut\u00f4t que range(n) car le i utilis\u00e9 correspond au terme du rang calcul\u00e9. u = - 2 * u + 5 return u Deux remarques : dans ce code, je ne v\u00e9rifie pas que \\(n \\in \\mathbb{N}\\) , et il faudrait... ; dans le cas o\u00f9 \\(n=0\\) , la boucle for n'est pas effectu\u00e9e. Une telle fonction est dite it\u00e9rative , car elle utilise une boucle de r\u00e9p\u00e9titions pour parvenir au r\u00e9sultat souhait\u00e9. C'est vraiment dommage, dans le premier exercice, on utilise simplement la formule explicite , alors que dans le deuxi\u00e8me cas, on est oblig\u00e9 de r\u00e9fl\u00e9chir \u00e0 l'algorithme. Ce serait si simple de pouvoir utiliser directement la formule r\u00e9cursive , comme dans le code ci-dessous : def maSuiteAGR ( n ) : return - 2 * maSuiteAGR ( n - 1 ) + 5 Ca vaudrait peut-\u00eatre le coup de tester, en prenant \\(n=3\\) par exemple... K\u00e9sako ? Quand on teste la fonction maSuiteAGR(3) , python ... calcule... puis nous renvoie une erreur : RecursionError: maximum recursion depth exceeded Le mot important dans la phrase pr\u00e9c\u00e9dente, c'est que python CALCULE ! Donc il doit a minima comprendre la fonction maSuiteAGR !","title":"Activit\u00e9 d'introduction : de l'it\u00e9ratif au r\u00e9cursif"},{"location":"NSI/Terminale/C02/Recursivite/#principe-de-recursivite","text":"Fonction r\u00e9cursive Une fonction est dite r\u00e9cursive quand elle s'appelle elle-m\u00eame, une ou plusieurs fois. Des probl\u00e8mes D\u00e9composons l'instruction l'appel \u00e0 maSuiteAGR(3) : maSuiteAGR(3) doit calculer -2*maSuiteAGR(2) +5 , et donc doit calculer : maSuiteAGR(2) , qui doit calculer -2*maSuiteAGR(1) +5 , et donc doit calculer : maSuiteAGR(1) , qui doit calculer -2*maSuiteAGR(0) +5 , et donc doit calculer : maSuiteAGR(0) , qui doit calculer -2*maSuiteAGR(-1) +5 , et donc doit calculer : maSuiteAGR(-1) , qui doit calculer -2*maSuiteAGR(-2) +5 , et donc doit calculer : ... \"HELP ! Mais \u00e7a s'arr\u00eate quand !\" me direz-vous ! Et bien jamais, en th\u00e9orie. Mais en r\u00e9alit\u00e9 cette instruction s'arr\u00eatera quand python aura lev\u00e9 une erreur de type RecursionError , qui signifie qu'une limite aura \u00e9t\u00e9 atteinte (nous en parlerons plus tard pour lever toute ambiguit\u00e9). Supprimer le probl\u00e8me : le cas d'arr\u00eat Pour supprimer le probl\u00e8me pr\u00e9c\u00e9dent, revenons aux maths : dans une d\u00e9finition par r\u00e9currence de suite, on signale toujours la valeur du premier terme (qui peut \u00eatre \\(u_0\\) , ou \\(u_1\\) , ou m\u00eame \\(u_{42}\\) selon le probl\u00e8me et la d\u00e9finition de l'indice). Or dans notre fonction maSuiteAGR , jamais nous ne pr\u00e9cisons ce cas, c'est-\u00e0-dire que quand \\(n=0\\) , alors la suite vaut \\(7\\) . Rajoutons-donc cette condition dans la fonction : def maSuiteAGR ( n ) : if n == 0 : return 7 else : return - 2 * maSuiteAGR ( n - 1 ) + 5 Et testons de nouveau maSuiteAGR(3) : maSuiteAGR(3) doit calculer -2*maSuiteAGR(2) +5 , et donc doit calculer : maSuiteAGR(2) , qui doit calculer -2*maSuiteAGR(1) +5 , et donc doit calculer : maSuiteAGR(1) , qui doit calculer -2*maSuiteAGR(0) +5 , et donc doit calculer : maSuiteAGR(0) , qui maintenant renvoie 7 ! donc maSuiteAGR(1) renvoie -2*7+5 soit -9 ; donc maSuiteAGR(2) renvoie -2*(-9)+5 soit 23 ; donc maSuiteAGR(3) renvoie -2*23+5 soit -41 . Non seulement la fonction s'arr\u00eate, mais en plus elle renvoie la bonne valeur, c'est-\u00e0-dire \\(u_3 = -41\\) . R\u00e9capitulons Pour utiliser une fonction r\u00e9cursive correctement, il faudra distinguer : le ou les cas d'arr\u00eats (ou cas de base ), c'est-\u00e0-dire des cas particuliers pour lesquels la valeur (ou l'objet) renvoy\u00e9 par la fonction est connu ; le cas r\u00e9cursif , pour lequel la fonction s'appelle elle-m\u00eame, une ou plusieurs fois. Exemple comment\u00e9 La somme des \\(n\\) premiers entiers est la somme : \\[ 0+1+2+3+...+n \\] Comment faire pour construire une fonction r\u00e9cursive sommeR(n) qui effectue la somme des \\(n\\) premiers entiers, avec \\(n\\) pass\u00e9 en argument. Quel est le cas r\u00e9cursif ? On a \\(0+1+2+3+...+n = (0+1+2+3+ ...+ (n-1) ) + n\\) , donc le cas r\u00e9cursif est sommeR(n) = sommeR(n-1) + n Quel est le cas de base ? Il y a plusieurs possibilit\u00e9s, soit en partant de l'indice 0 car sommeR(0)=0 , soit en partant de l'indice 1, car sommeR(1) = 1 . Une impl\u00e9mentation r\u00e9cursive possible est alors : def sommeR ( n ) : if n == 0 : return 0 else : return sommeR ( n - 1 ) + n","title":"Principe de r\u00e9cursivit\u00e9"},{"location":"NSI/Terminale/C02/Recursivite/#applications-directes","text":"Exercice : factorielle Enonc\u00e9 On rappelle que la factorielle d'un entier naturel \\(n\\) est donn\u00e9 par : \\[ \\left\\lbrace \\begin{array}{rcl} n! &=& n \\times (n-1) \\times ... \\times 3 \\times 2 \\times 1\\\\ 1! &=& 1\\\\ 0! &=& 1 \\end{array}\\right. \\] Ecrire une fonction it\u00e9rative factorielle(n) qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une ValueError si \\(n\\) n'est pas entier ou est n\u00e9gatif. Ecrire une fonction r\u00e9cursive factorielleR(n) qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une ValueError si \\(n\\) n'est pas entier ou est n\u00e9gatif. Solution It\u00e9rative 1 2 3 4 5 6 7 def factorielle ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) produit = 1 for i in range ( 1 , n + 1 ) : # On peut effectivemment partir de 2, et gagner un tour de boucle. produit = produit * i return produit Solution r\u00e9cursive 1 2 3 4 5 6 7 def factorielleR ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) if n == 0 or n == 1 : return 1 else : return factorielleR ( n - 1 ) * n Exercice : \u00e9toiles Enonc\u00e9 Impl\u00e9menter une fonction it\u00e9rative etoile(n) qui \u00e9crit dans le Shell Python un triangle form\u00e9 de caract\u00e8res * tels que dans l'exemple suivant : >>> etoileR ( 5 ) * ** *** **** ***** 2. Impl\u00e9menter une fonction r\u00e9cursive etoileR(n) qui effectue le m\u00eame travail. Solution It\u00e9rative 1 2 3 4 5 def etoile ( n ) : if not ( isinstance ( n , int )) or n < 0 : raise valueError ( \"n must be a positiv integer\" ) for i in range ( 1 , n + 1 ) : print ( \"*\" * i ) Solution r\u00e9cursive 1 2 3 4 5 6 7 8 def etoileR ( n ) : if not ( isinstance ( n , int )) or n <= 0 : raise valueError ( \"n must be a non null positiv integer\" ) if n == 1 : print ( \"*\" ) else : etoileR ( n - 1 ) print ( \"*\" * n ) Coefficients binomiaux et triangle de Pascal Soient \\(a\\) et \\(b\\) deux r\u00e9els quelconques. D\u00e9veloppez les expressions suivantes : \\(A = (a+b)^0\\) \\(B = (a+b)^1\\) \\(C = (a+b)^2\\) \\(D = (a+b)^3\\) \\(E = (a+b)^4\\) Solution A venir Compl\u00e9tez deux lignes suppl\u00e9mentaires du tableau suivant, nomm\u00e9 Triangle de Pascal : \\[ \\begin{array}{|l|c|c|c|c|c|c|} \\hline p=>&0&1&2&3&4&5\\\\\\hline n=0&1&&&&&\\\\\\hline n=1&1&1&&&&\\\\\\hline n=2&1&2&1&&&\\\\\\hline n=3&1&3&3&1&&\\\\\\hline n=4&1&4&6&4&1&\\\\\\hline n=5&1&5&10&10&5&1\\\\\\hline \\end{array} \\] Solution Pour construire un nombre, il suffit d'utiliser la ligne pr\u00e9c\u00e9dente, en ajoutant le nombre situ\u00e9 juste au dessus de lui et celui situ\u00e9 \u00e0 la gauche de ce dernier. \\[ \\begin{array}{|l|c|c|c|c|c|c|c|c|} \\hline p=>&0&1&2&3&4&5&6&7\\\\\\hline n=0&1&&&&&&&\\\\\\hline n=1&1&1&&&&&&\\\\\\hline n=2&1&2&1&&&&&\\\\\\hline n=3&1&3&3&1&&&&\\\\\\hline n=4&1&4&6&4&1&&&\\\\\\hline n=5&1&5&10&10&5&1&&\\\\\\hline n=6&1&6&15&20&15&6&1&\\\\\\hline n=7&1&7&21&35&35&21&7&1\\\\\\hline \\end{array} \\] On appelle coefficient binomial de rang \\(p\\) et de degr\u00e9 \\(n\\) le nombre du Triangle de Pascal correspondant \u00e0 la \\(n\\) -i\u00e8me ligne et \u00e0 la \\(p\\) _i\u00e8me colonne. Ce nombre est not\u00e9 \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\) . Comment exprimer r\u00e9cursivemment ce coefficient ? Solution A venir Impl\u00e9menter une fonction binomeR(n, p) qui renvoie la valeur du coefficient binomial \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\) du triangle de Pascal. Solution A venir *Facultatif : * Impl\u00e9menter une fonction developpe(n) qui renvoie la cha\u00eene de caract\u00e8res correspondant au d\u00e9veloppement de \\((a+b)^n\\) . Solution A venir","title":"Applications directes"},{"location":"NSI/Terminale/C02/RecursiviteFractales/","text":"Applications de la r\u00e9cursivit\u00e9 : Dessiner des fractales avec turtle Commen\u00e7ons par cr\u00e9er un fichier fractales.py qui nous servira pour la totalit\u00e9 des exercices. Pr\u00e9sentation de turtle Le module turtle Le module turtle est un module faisant partie de toute distribution python . Son int\u00e9r\u00eat repose sur la simplicit\u00e9 (relative) des commandes utilis\u00e9es pour dessiner. Un objet de classe Turtle =} se comporte comme un crayon de table tra\u00e7ante sur une feuille de papier munie d'un rep\u00e8re orthonorm\u00e9. Exemple : premi\u00e8re fen\u00eatre et premi\u00e8re tortue Consid\u00e9rons le code suivant , ainsi que le r\u00e9sultat de son ex\u00e9cution : 1 2 3 4 5 6 7 8 9 10 11 import turtle def testTurtle () : screen = turtle . Screen () screen . bgcolor ( 'lightgray' ) donatello = turtle . Turtle () if __name__ == \"__main__\" : testTurtle () en ligne 1 on importe le module turtle compl\u00e8tement ; en ligne 4, on cr\u00e9e un objet Screen() sur lequel la tortue dessinera, cet objet \u00e9tant affect\u00e9 au nom screen ; en ligne 5, on fait appel \u00e0 la m\u00e9thode bgcolor des objets Screen afin de basculer la couleur de fond sur lightgray ; en ligne 6, on cr\u00e9e un objet Turtle affect\u00e9 au nom donatello . Vous observerez que la tortue est repr\u00e9sent\u00e9e par une {== pointe de fl\u00e8che , pointant vers la droite. Par d\u00e9faut, la tortue appara\u00eet au centre du rep\u00e8re, c'est-\u00e0-dire au centre de la fen\u00eatre de dessin, donc aux coordonn\u00e9es \\((0; 0)\\) . Nous allons maintenant rajouter au code les instructions suivantes en lignes 7 \u00e0 11, puis ex\u00e9cuter le code : 7 8 9 10 11 donatello . forward ( 100 ) donatello . left ( 90 ) donatello . forward ( 50 ) donatello . right ( 45 ) donatello . backward ( 80 ) Avec ces lignes : la tortue avance de 100 pixels dans la direction o\u00f9 elle pointe ; elle tourne vers sa gauche de 90\u00b0 ; elle avance de 50 pixels dans la nouvelle direction ; elle tourne vers sa droite de 45\u00b0 ; et enfin elle recule de 80 pixels. M\u00e9thodes de la classe Turtle Comme toujours, la doc python est tr\u00e8s claire sur le module turtle , mais voici quelques m\u00e9thodes des objets de classe Turle : forward(d) : d\u00e9place l'objet Turtle de \\(d\\) pixels dans la direction o\u00f9 pointe la t\u00eate de la tortue. A mettre en parall\u00e8le avec la m\u00e9thode backward(d) . left(a) : tourne la t\u00eate de la tortue vers sa gauche de \\(a\\) \u00b0. A mettre en parall\u00e8le avec la m\u00e9thode right(a) . goto(x,y) ou setx(v) ou sety(v) : d\u00e9place la tortue vers une position donn\u00e9e dans le rep\u00e8re. setheading(a) : tourne la t\u00eate de la tortue \u00e0 un angle de \\(a\\) \u00b0 par rapport \u00e0 l'horizontale, dans le sens trigonom\u00e9trique. circle(r) : trace \u00e0 partir de la position courante un cercle de rayon \\(r\\) , le centre \u00e9tant situ\u00e9 sur la gauche de la t\u00eate de la tortue. speed(v) : change la vitesse de d\u00e9placement de la tortue. L'argument est un entier de 0 \u00e0 10 tel que : \u00ab le plus rapide \u00bb : 0 \u00ab rapide \u00bb : 10 \u00ab vitesse normale \u00bb : 6 \u00ab lent \u00bb : 3 \u00ab le plus lent \u00bb : 1 pendown() et penup() : respectivement baisse ou l\u00e8ve le crayon. Si le crayon est lev\u00e9, rien n'est trac\u00e9 \u00e0 l'\u00e9cran. pensize(t) : r\u00e8gle l'\u00e9paisseur de trac\u00e9 \u00e0 \\(t\\) pixels. pencolor(*args) : r\u00e8gle la couleur du stylo. L'argument peut-\u00eatre : une cha\u00eene de caract\u00e8res : red , gray , ou #33cc8c , etc... un triplet RGB : (255, 100, 50) ,... fillcolor(*args) : d\u00e9finit la couleur de remplissage. begin_fill() et end_fill() : d\u00e9but et fin de la d\u00e9finition d'une zone de remplissage. Je ne d\u00e9taillerai pas ici les m\u00e9thodes des objets Screen . Prise en main de turtle \u00c9nonc\u00e9 Cr\u00e9er une fonction triangleEquilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de longueur \\(c\\) \u00e0 partir de la position courante. Cr\u00e9er une fonction pentagramme(c, color=\"red\") qui trace un pentagramme (une \u00e9toile \u00e0 5 branches) et le remplit avec la couleur pass\u00e9e en argument. Cr\u00e9er une fonction hexagone(c, diag = False) qui trace un hexagone de c\u00f4t\u00e9 \\(c\\) et qui trace en outre ses diagonales si le param\u00e8tre optionnel diag est pass\u00e9 \u00e0 True . Solutions Toutes les solutions suivantes supposent qu'un \u00e9cran et qu'une tortue nomm\u00e9e t existent dans l'espace de nom g\u00e9n\u00e9ral. triangleEquilateral(c) def triangleEquilateral ( c ) : for _ in range ( 3 ): t . forward ( c ) t . left ( 120 ) pentagramme(c, color=\"red\") def pentagramme ( t , c , color = \"red\" ) : t . fillcolor ( color ) t . begin_fill () for _ in range ( 5 ): t . forward ( c ) t . right ( 144 ) t . end_fill () hexagone(c, diag = False) def hexagone ( t , c , diag = False ) : for _ in range ( 6 ): t . forward ( c ) t . right ( 60 ) if diag : for _ in range ( 3 ) : t . right ( 60 ) t . forward ( 2 * c ) t . right ( 120 ) t . forward ( c ) t . right ( 60 ) Flocon de Von Koch Le Flocon de Von Koch Le flocon de Von Koch, invent\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Helge von Koch, est une des premi\u00e8res courbes fractales d\u00e9crites, avant m\u00eame l'invention du terme fractale par Benoit Mandelbrot en 1967. Cette courbe est obtenue par la d\u00e9composition r\u00e9cursive d'un segment en une ligne bris\u00e9e : Construction du flocon Avant de passer \u00e0 une d\u00e9finition r\u00e9cursive de la construction, essayons de faire une \u00e9tape de cette construction. \u00c9nonc\u00e9 a. Cr\u00e9er une fonction segment(long) qui trace une it\u00e9ration de la construction du segment de Von Koch (c'est-\u00e0-dire tra\u00e7ant l'\u00e9tape 3 de l'image ci-dessus.). b. Tester cette fonction en pla\u00e7ant la tortue dans diff\u00e9rentes positions de d\u00e9part. Solution def segment ( long ) : t . forward ( long // 3 ) t . left ( 60 ) t . forward ( long // 3 ) t . right ( 120 ) t . forward ( long // 3 ) t . left ( 60 ) t . forward ( long // 3 ) Passons \u00e0 la construction r\u00e9cursive d'un segment : \u00c9nonc\u00e9 En se basant sur la fonction pr\u00e9c\u00e9dente, impl\u00e9menter une fonction segmentR(long, n) qui tracera le r\u00e9sultat de \\(n\\) it\u00e9rations de la m\u00e9thode sur un segment de longueur long . Pour \\(n=0\\) , on obtiendra Pour \\(n=1\\) , on obtiendra Pour \\(n=2\\) , on obtiendra Solution def segmentR ( long , n ) : if n == 0 : t . forward ( long ) else : segmentR ( long / 3 , n - 1 ) t . left ( 60 ) segmentR ( long / 3 , n - 1 ) t . right ( 120 ) segmentR ( long / 3 , n - 1 ) t . left ( 60 ) segmentR ( long / 3 , n - 1 ) Terminer la construction en tra\u00e7ant le flocon sur une base de triangle \u00e9quilat\u00e9ral. Solution Avec changement de couleurs : def floconVK ( long , n ) : t . pencolor ( random . choice ( couleurs )) t . begin_fill () for _ in range ( 3 ) : segmentR ( long , n ) t . right ( 120 ) t . end_fill () o\u00f9 couleurs = [ \"black\" , \"white\" , \"grey\" , \"red\" , \"orange\" , \"green\" , \"blue\" , \"navy\" , \"yellow\" , \"gold\" , \"tan\" , \"brown\" , \"sienna\" , \"wheat\" , \"cyan\" , \"pink\" , \"salmon\" , \"violet\" , \"purple\" ] Le triangle de Sierpinski Triangle de Sierpinski Le Triangle (ou napperon) de Sierpinski , aussi connu sous le nom de joint de culasse (nom donn\u00e9 par Mandelbrot), est une autre figure fractale d\u00e9crite au d\u00e9but du XX\u00e8me si\u00e8cle. Il peut s'obtenir \u00e0 partir d'un triangle \u00ab plein \u00bb, par une infinit\u00e9 de r\u00e9p\u00e9titions consistant \u00e0 diviser par deux la taille du triangle puis \u00e0 les accoler en trois exemplaires par leurs sommets pour former un nouveau triangle. \u00c0 chaque r\u00e9p\u00e9tition le triangle est donc de m\u00eame taille, mais \u00ab de moins en moins plein \u00bb. A coder En partant du principe de l'exercice sur le flocon de Von Koch, impl\u00e9menter une fonction Sierpinski(long, n) qui trace le r\u00e9sultat de \\(n\\) it\u00e9rations sur un triangle de c\u00f4t\u00e9 \\(n\\) . Solution A venir ! Remarque Le triangle de Sierpinski correspond \u00e0 une propri\u00e9t\u00e9 particuli\u00e8re du triangle de Pascal. En effet, le triangle de Sierpinski appara\u00eet dans le triangle de Pascal lorsque'on supprime tous les coefficients pairs. Vous pouvez en voir plus ici","title":"Applications : Fractales"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#applications-de-la-recursivite-dessiner-des-fractales-avec-turtle","text":"Commen\u00e7ons par cr\u00e9er un fichier fractales.py qui nous servira pour la totalit\u00e9 des exercices.","title":"Applications de la r\u00e9cursivit\u00e9 :  Dessiner des fractales avec turtle"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#presentation-de-turtle","text":"Le module turtle Le module turtle est un module faisant partie de toute distribution python . Son int\u00e9r\u00eat repose sur la simplicit\u00e9 (relative) des commandes utilis\u00e9es pour dessiner. Un objet de classe Turtle =} se comporte comme un crayon de table tra\u00e7ante sur une feuille de papier munie d'un rep\u00e8re orthonorm\u00e9. Exemple : premi\u00e8re fen\u00eatre et premi\u00e8re tortue Consid\u00e9rons le code suivant , ainsi que le r\u00e9sultat de son ex\u00e9cution : 1 2 3 4 5 6 7 8 9 10 11 import turtle def testTurtle () : screen = turtle . Screen () screen . bgcolor ( 'lightgray' ) donatello = turtle . Turtle () if __name__ == \"__main__\" : testTurtle () en ligne 1 on importe le module turtle compl\u00e8tement ; en ligne 4, on cr\u00e9e un objet Screen() sur lequel la tortue dessinera, cet objet \u00e9tant affect\u00e9 au nom screen ; en ligne 5, on fait appel \u00e0 la m\u00e9thode bgcolor des objets Screen afin de basculer la couleur de fond sur lightgray ; en ligne 6, on cr\u00e9e un objet Turtle affect\u00e9 au nom donatello . Vous observerez que la tortue est repr\u00e9sent\u00e9e par une {== pointe de fl\u00e8che , pointant vers la droite. Par d\u00e9faut, la tortue appara\u00eet au centre du rep\u00e8re, c'est-\u00e0-dire au centre de la fen\u00eatre de dessin, donc aux coordonn\u00e9es \\((0; 0)\\) . Nous allons maintenant rajouter au code les instructions suivantes en lignes 7 \u00e0 11, puis ex\u00e9cuter le code : 7 8 9 10 11 donatello . forward ( 100 ) donatello . left ( 90 ) donatello . forward ( 50 ) donatello . right ( 45 ) donatello . backward ( 80 ) Avec ces lignes : la tortue avance de 100 pixels dans la direction o\u00f9 elle pointe ; elle tourne vers sa gauche de 90\u00b0 ; elle avance de 50 pixels dans la nouvelle direction ; elle tourne vers sa droite de 45\u00b0 ; et enfin elle recule de 80 pixels. M\u00e9thodes de la classe Turtle Comme toujours, la doc python est tr\u00e8s claire sur le module turtle , mais voici quelques m\u00e9thodes des objets de classe Turle : forward(d) : d\u00e9place l'objet Turtle de \\(d\\) pixels dans la direction o\u00f9 pointe la t\u00eate de la tortue. A mettre en parall\u00e8le avec la m\u00e9thode backward(d) . left(a) : tourne la t\u00eate de la tortue vers sa gauche de \\(a\\) \u00b0. A mettre en parall\u00e8le avec la m\u00e9thode right(a) . goto(x,y) ou setx(v) ou sety(v) : d\u00e9place la tortue vers une position donn\u00e9e dans le rep\u00e8re. setheading(a) : tourne la t\u00eate de la tortue \u00e0 un angle de \\(a\\) \u00b0 par rapport \u00e0 l'horizontale, dans le sens trigonom\u00e9trique. circle(r) : trace \u00e0 partir de la position courante un cercle de rayon \\(r\\) , le centre \u00e9tant situ\u00e9 sur la gauche de la t\u00eate de la tortue. speed(v) : change la vitesse de d\u00e9placement de la tortue. L'argument est un entier de 0 \u00e0 10 tel que : \u00ab le plus rapide \u00bb : 0 \u00ab rapide \u00bb : 10 \u00ab vitesse normale \u00bb : 6 \u00ab lent \u00bb : 3 \u00ab le plus lent \u00bb : 1 pendown() et penup() : respectivement baisse ou l\u00e8ve le crayon. Si le crayon est lev\u00e9, rien n'est trac\u00e9 \u00e0 l'\u00e9cran. pensize(t) : r\u00e8gle l'\u00e9paisseur de trac\u00e9 \u00e0 \\(t\\) pixels. pencolor(*args) : r\u00e8gle la couleur du stylo. L'argument peut-\u00eatre : une cha\u00eene de caract\u00e8res : red , gray , ou #33cc8c , etc... un triplet RGB : (255, 100, 50) ,... fillcolor(*args) : d\u00e9finit la couleur de remplissage. begin_fill() et end_fill() : d\u00e9but et fin de la d\u00e9finition d'une zone de remplissage. Je ne d\u00e9taillerai pas ici les m\u00e9thodes des objets Screen . Prise en main de turtle \u00c9nonc\u00e9 Cr\u00e9er une fonction triangleEquilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de longueur \\(c\\) \u00e0 partir de la position courante. Cr\u00e9er une fonction pentagramme(c, color=\"red\") qui trace un pentagramme (une \u00e9toile \u00e0 5 branches) et le remplit avec la couleur pass\u00e9e en argument. Cr\u00e9er une fonction hexagone(c, diag = False) qui trace un hexagone de c\u00f4t\u00e9 \\(c\\) et qui trace en outre ses diagonales si le param\u00e8tre optionnel diag est pass\u00e9 \u00e0 True . Solutions Toutes les solutions suivantes supposent qu'un \u00e9cran et qu'une tortue nomm\u00e9e t existent dans l'espace de nom g\u00e9n\u00e9ral. triangleEquilateral(c) def triangleEquilateral ( c ) : for _ in range ( 3 ): t . forward ( c ) t . left ( 120 ) pentagramme(c, color=\"red\") def pentagramme ( t , c , color = \"red\" ) : t . fillcolor ( color ) t . begin_fill () for _ in range ( 5 ): t . forward ( c ) t . right ( 144 ) t . end_fill () hexagone(c, diag = False) def hexagone ( t , c , diag = False ) : for _ in range ( 6 ): t . forward ( c ) t . right ( 60 ) if diag : for _ in range ( 3 ) : t . right ( 60 ) t . forward ( 2 * c ) t . right ( 120 ) t . forward ( c ) t . right ( 60 )","title":"Pr\u00e9sentation de turtle"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#flocon-de-von-koch","text":"Le Flocon de Von Koch Le flocon de Von Koch, invent\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Helge von Koch, est une des premi\u00e8res courbes fractales d\u00e9crites, avant m\u00eame l'invention du terme fractale par Benoit Mandelbrot en 1967. Cette courbe est obtenue par la d\u00e9composition r\u00e9cursive d'un segment en une ligne bris\u00e9e : Construction du flocon Avant de passer \u00e0 une d\u00e9finition r\u00e9cursive de la construction, essayons de faire une \u00e9tape de cette construction. \u00c9nonc\u00e9 a. Cr\u00e9er une fonction segment(long) qui trace une it\u00e9ration de la construction du segment de Von Koch (c'est-\u00e0-dire tra\u00e7ant l'\u00e9tape 3 de l'image ci-dessus.). b. Tester cette fonction en pla\u00e7ant la tortue dans diff\u00e9rentes positions de d\u00e9part. Solution def segment ( long ) : t . forward ( long // 3 ) t . left ( 60 ) t . forward ( long // 3 ) t . right ( 120 ) t . forward ( long // 3 ) t . left ( 60 ) t . forward ( long // 3 ) Passons \u00e0 la construction r\u00e9cursive d'un segment : \u00c9nonc\u00e9 En se basant sur la fonction pr\u00e9c\u00e9dente, impl\u00e9menter une fonction segmentR(long, n) qui tracera le r\u00e9sultat de \\(n\\) it\u00e9rations de la m\u00e9thode sur un segment de longueur long . Pour \\(n=0\\) , on obtiendra Pour \\(n=1\\) , on obtiendra Pour \\(n=2\\) , on obtiendra Solution def segmentR ( long , n ) : if n == 0 : t . forward ( long ) else : segmentR ( long / 3 , n - 1 ) t . left ( 60 ) segmentR ( long / 3 , n - 1 ) t . right ( 120 ) segmentR ( long / 3 , n - 1 ) t . left ( 60 ) segmentR ( long / 3 , n - 1 ) Terminer la construction en tra\u00e7ant le flocon sur une base de triangle \u00e9quilat\u00e9ral. Solution Avec changement de couleurs : def floconVK ( long , n ) : t . pencolor ( random . choice ( couleurs )) t . begin_fill () for _ in range ( 3 ) : segmentR ( long , n ) t . right ( 120 ) t . end_fill () o\u00f9 couleurs = [ \"black\" , \"white\" , \"grey\" , \"red\" , \"orange\" , \"green\" , \"blue\" , \"navy\" , \"yellow\" , \"gold\" , \"tan\" , \"brown\" , \"sienna\" , \"wheat\" , \"cyan\" , \"pink\" , \"salmon\" , \"violet\" , \"purple\" ]","title":"Flocon de Von Koch"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#le-triangle-de-sierpinski","text":"Triangle de Sierpinski Le Triangle (ou napperon) de Sierpinski , aussi connu sous le nom de joint de culasse (nom donn\u00e9 par Mandelbrot), est une autre figure fractale d\u00e9crite au d\u00e9but du XX\u00e8me si\u00e8cle. Il peut s'obtenir \u00e0 partir d'un triangle \u00ab plein \u00bb, par une infinit\u00e9 de r\u00e9p\u00e9titions consistant \u00e0 diviser par deux la taille du triangle puis \u00e0 les accoler en trois exemplaires par leurs sommets pour former un nouveau triangle. \u00c0 chaque r\u00e9p\u00e9tition le triangle est donc de m\u00eame taille, mais \u00ab de moins en moins plein \u00bb. A coder En partant du principe de l'exercice sur le flocon de Von Koch, impl\u00e9menter une fonction Sierpinski(long, n) qui trace le r\u00e9sultat de \\(n\\) it\u00e9rations sur un triangle de c\u00f4t\u00e9 \\(n\\) . Solution A venir ! Remarque Le triangle de Sierpinski correspond \u00e0 une propri\u00e9t\u00e9 particuli\u00e8re du triangle de Pascal. En effet, le triangle de Sierpinski appara\u00eet dans le triangle de Pascal lorsque'on supprime tous les coefficients pairs. Vous pouvez en voir plus ici","title":"Le triangle de Sierpinski"},{"location":"NSI/Terminale/C02/RecursiviteTris/","text":"Applications de la r\u00e9cursivit\u00e9 : Tris de tableaux Rappels sur les algorithmes de tris vus en classe de premi\u00e8re Principe du tri par insertion Le principe du tri par insertion est le suivant : au moment o\u00f9 on consid\u00e8re un \u00e9l\u00e9ment du tableau \u00e0 trier, les \u00e9l\u00e9ments qui le pr\u00e9c\u00e8dent sont d\u00e9j\u00e0 tri\u00e9s, tandis que les \u00e9l\u00e9ments qui le suivent ne sont pas encore tri\u00e9s. On peut voir sur l'animation suivante extraite de wikipedia : La complexit\u00e9 du tri par insertion est \\(\\mathbb{O}(n^2)\\) dans le pire cas et en moyenne, et lin\u00e9aire dans le meilleur cas (tableau presque tri\u00e9). C'est donc un tri dont la vitesse d'ex\u00e9cution d\u00e9pendra fortement de la situation initiale. Le code en Python 1 2 3 4 5 6 7 8 9 def tri_insertion ( L ): N = len ( L ) for n in range ( 1 , N ): cle = L [ n ] j = n - 1 while j >= 0 and L [ j ] > cle : L [ j + 1 ] = L [ j ] # decalage j = j - 1 L [ j + 1 ] = cle Principe du tri par s\u00e9lection Sur un tableau de n \u00e9l\u00e9ments, le principe du tri par s\u00e9lection est le suivant : rechercher le plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 0 ; rechercher le second plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 1 ; continuer de cette fa\u00e7on jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9. On peut voir sur l'animation suivante extraite de wikipedia : Cet algorithme de tri, simple \u00e0 comprendre, est consid\u00e9r\u00e9 comme mauvais car sa complexit\u00e9 en temps est en \\(\\mathbb{O}(n^2)\\) , que ce soit dans le pire des cas ou bien le meilleur des cas (m\u00eame pour un tableau d\u00e9j\u00e0 tri\u00e9 il faudra faire toutes les comparaisons). Le code en Python def tri_selection ( tab ): for i in range ( len ( tab )): # Trouver le min min = i for j in range ( i + 1 , len ( tab )): if tab [ min ] > tab [ j ]: min = j tmp = tab [ i ] tab [ i ] = tab [ min ] tab [ min ] = tmp return tab Le tri fusion Principe du Tri Fusion (Merge Sort) Le principe du tri fusion , est de s\u00e9parer un tableau \u00e0 trier en deux sous-tableaux qu'on triera r\u00e9cursivemment (ou it\u00e9rativemment mais ce ne sera pas le cas dans ce cours) de nouveau par tri fusion. Une fois les sous-tableaux tri\u00e9s, il faudra fusionner ces deux sous-tableaux en une seule identit\u00e9. Cet algorithme est du type diviser pour r\u00e9gner ( Divide and Conquer ) : on s\u00e9pare la t\u00e2che \u00e0 priori difficile en deux t\u00e2ches plus simples (ici, il s'agit de diminuer la taille des tableaux). Il a \u00e9t\u00e9 invent\u00e9 par John Von Neumann en 1945 . Fonction de fusion Exercice La principale difficult\u00e9 dans cet algorithme est de cr\u00e9er une fonction fusionnant les deux tableaux tri\u00e9s. Avant commencer, regardez la vid\u00e9o suivante : De combien de variables compteurs avons nous besoins ? Quel type de boucle allons nous utiliser ? Que se passe-t-il dans la vid\u00e9o quand \\(j\\) atteint la valeur \\(3\\) ? R\u00e9diger en langage naturel l'algorithme fusionnant deux tableaux tri\u00e9s. Impl\u00e9menter une fonction fusion(t1, t2) qui prend en argument deux tableaux suppos\u00e9s tri\u00e9s (on ne v\u00e9rifiera pas), et qui renvoie le tableau tri\u00e9 contenant tous les \u00e9l\u00e9ments des deux tableaux t1 et t2 . On pourra utiliser les tests suivants pour v\u00e9rifier que la fonction est correcte : Les tests >>> fusion ([ 12 , 35 , 45 ],[ 4 , 42 , 63 ]) [ 4 , 12 , 35 , 42 , 45 , 63 ] >>> fusion ([ 12 , 35 ], [ 57 ]) [ 12 , 35 , 57 ] >>> fusion ([ 12 , 35 ], [ 42 , 57 ]) [ 12 , 35 , 42 , 57 ] >>> fusion ([ 12 , 35 ], []) [ 12 , 35 ] >>> fusion ([], [ 12 , 35 ]) [ 12 , 35 ] >>> fusion ([ 42 , 57 , 67 , 75 ], [ 12 , 35 ]) [ 12 , 35 , 42 , 57 , 67 , 75 ] >>> fusion ([], []) [] Solution C'est beau, c'est fait avec manim . En r\u00e9alit\u00e9 il n'y a que deux compteurs : \\(i\\) et \\(j\\) . En effet \\(k\\) est en permanence \u00e9gal \u00e0 \\(i+j\\) . On peut utiliser une boucle Pour , vu que le nombre d'it\u00e9rations est connu au d\u00e9part : il s'agit de la somme des longueurs des deux tableaux. Mais il est aussi tout \u00e0 fait possible d'utiliser une boucle Tant que , puisque l'algorithme se poursuit tant qu'un des deux compteurs n'a pas atteint sa position finale. Quand \\(j\\) atteint la position 3 (soit la longueur du deuxi\u00e8me tableau), il ne reste plus qu'\u00e0 compl\u00e9ter avec les valeurs restantes du premier tableau. Diff\u00e9rentes versions : Version Pour sans initialisation du tableau final fonction fusion(t1, t2) tf <- tableau vide i <- 0 j <- 0 n1 <- longueur de t1 n2 <- longueur de t2 Pour k allant de 0 \u00e0 n1+n2-1 Si i<n1 et j<n2 Tri Fusion R\u00e9cursif Exercice Une fois la fonction fusion cod\u00e9e, l'algorithme de tri par fusion est simple : Regardez la vid\u00e9o suivante : Quel est le cas de base ? Quel est le cas r\u00e9cursif ? Impl\u00e9menter une fonction triFusion(t) qui prend en argument un tableau et renvoie une copie tri\u00e9e de ce tableau. Solution A venir ! Complexi\u00e9 en temps Exercice Copiez-collez le code ci-dessous permettant d'utiliser le d\u00e9corateur @timeit : import time def timeit ( method ): def timed ( * args , ** kw ): ts = time . time () result = method ( * args , ** kw ) te = time . time () print ( f \" { method . __name__ } ( { args } , { kw } ) { te - ts } \" ) return result return timed D\u00e9corateur @timeit pour utiliser le d\u00e9corateur, on le place dans la ligne pr\u00e9c\u00e9dant la d\u00e9finition de la fonction qu'on veut d\u00e9corer. Par exemple : @timeit def tri_insertion ( tab ) : ... Chaque fois que la fonction tri_insertion sera appel\u00e9e, le d\u00e9corateur sera appliqu\u00e9 et ex\u00e9cuterala fonction timed , qui calcule le temps d'ex\u00e9cution de la fonction d\u00e9cor\u00e9e. Il faudra \u00eatre attentif \u00e0 son utilisation dans le cas des fonctions r\u00e9cursives ! (Je vous laisse constater par vous m\u00eame le probl\u00e8me rencontr\u00e9.) Cr\u00e9er une fonction genereTab(n) qui cr\u00e9e un tableau de taille \\(n\\) d'entiers al\u00e9atoires compris entre \\(0\\) et \\(n^2\\) . Cr\u00e9er \u00e0 l'aide de toutes les fonctions pr\u00e9c\u00e9dentes une fonction testeTemps(n) qui compare les temps d'ex\u00e9cution des diff\u00e9rents tris pour \\(n\\) valant \\(100\\) , \\(1~000\\) , \\(10~000\\) . Attention , il faudra effectuer \u00e0 chaque fois les tests sur le m\u00eame tableau, et donc cr\u00e9er des copies du tableau original avant de le trier (on peut utiliser la fonction deepcopy du module copy ) Que peut-on en conclure quand \u00e0 la complexit\u00e9 en temps du tri fusion ? Solution A venir ! Complexit\u00e9s du tri fusion La version la plus simple du tri fusion sur les tableaux a une efficacit\u00e9 comparable au tri rapide, mais elle n'op\u00e8re pas en place : une zone temporaire de donn\u00e9es suppl\u00e9mentaire de taille \u00e9gale \u00e0 celle de l'entr\u00e9e est n\u00e9cessaire (des versions plus complexes peuvent \u00eatre effectu\u00e9es sur place mais sont moins rapides). La complexit\u00e9 en temps est en \\(\\mathbb{O}(n log(n))\\) dans tous les cas, et la complexit\u00e9 en espace est en g\u00e9n\u00e9ral en \\(\\mathbb{O}(n)\\) . Plus vite ! QuickSort ! (Hors programme) Principe du QuickSort","title":"Applications : Tris"},{"location":"NSI/Terminale/C02/RecursiviteTris/#applications-de-la-recursivite-tris-de-tableaux","text":"","title":"Applications de la r\u00e9cursivit\u00e9 :  Tris de tableaux"},{"location":"NSI/Terminale/C02/RecursiviteTris/#rappels-sur-les-algorithmes-de-tris-vus-en-classe-de-premiere","text":"Principe du tri par insertion Le principe du tri par insertion est le suivant : au moment o\u00f9 on consid\u00e8re un \u00e9l\u00e9ment du tableau \u00e0 trier, les \u00e9l\u00e9ments qui le pr\u00e9c\u00e8dent sont d\u00e9j\u00e0 tri\u00e9s, tandis que les \u00e9l\u00e9ments qui le suivent ne sont pas encore tri\u00e9s. On peut voir sur l'animation suivante extraite de wikipedia : La complexit\u00e9 du tri par insertion est \\(\\mathbb{O}(n^2)\\) dans le pire cas et en moyenne, et lin\u00e9aire dans le meilleur cas (tableau presque tri\u00e9). C'est donc un tri dont la vitesse d'ex\u00e9cution d\u00e9pendra fortement de la situation initiale. Le code en Python 1 2 3 4 5 6 7 8 9 def tri_insertion ( L ): N = len ( L ) for n in range ( 1 , N ): cle = L [ n ] j = n - 1 while j >= 0 and L [ j ] > cle : L [ j + 1 ] = L [ j ] # decalage j = j - 1 L [ j + 1 ] = cle Principe du tri par s\u00e9lection Sur un tableau de n \u00e9l\u00e9ments, le principe du tri par s\u00e9lection est le suivant : rechercher le plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 0 ; rechercher le second plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 1 ; continuer de cette fa\u00e7on jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9. On peut voir sur l'animation suivante extraite de wikipedia : Cet algorithme de tri, simple \u00e0 comprendre, est consid\u00e9r\u00e9 comme mauvais car sa complexit\u00e9 en temps est en \\(\\mathbb{O}(n^2)\\) , que ce soit dans le pire des cas ou bien le meilleur des cas (m\u00eame pour un tableau d\u00e9j\u00e0 tri\u00e9 il faudra faire toutes les comparaisons). Le code en Python def tri_selection ( tab ): for i in range ( len ( tab )): # Trouver le min min = i for j in range ( i + 1 , len ( tab )): if tab [ min ] > tab [ j ]: min = j tmp = tab [ i ] tab [ i ] = tab [ min ] tab [ min ] = tmp return tab","title":"Rappels sur les algorithmes de tris vus en classe de premi\u00e8re"},{"location":"NSI/Terminale/C02/RecursiviteTris/#le-tri-fusion","text":"Principe du Tri Fusion (Merge Sort) Le principe du tri fusion , est de s\u00e9parer un tableau \u00e0 trier en deux sous-tableaux qu'on triera r\u00e9cursivemment (ou it\u00e9rativemment mais ce ne sera pas le cas dans ce cours) de nouveau par tri fusion. Une fois les sous-tableaux tri\u00e9s, il faudra fusionner ces deux sous-tableaux en une seule identit\u00e9. Cet algorithme est du type diviser pour r\u00e9gner ( Divide and Conquer ) : on s\u00e9pare la t\u00e2che \u00e0 priori difficile en deux t\u00e2ches plus simples (ici, il s'agit de diminuer la taille des tableaux). Il a \u00e9t\u00e9 invent\u00e9 par John Von Neumann en 1945 . Fonction de fusion Exercice La principale difficult\u00e9 dans cet algorithme est de cr\u00e9er une fonction fusionnant les deux tableaux tri\u00e9s. Avant commencer, regardez la vid\u00e9o suivante : De combien de variables compteurs avons nous besoins ? Quel type de boucle allons nous utiliser ? Que se passe-t-il dans la vid\u00e9o quand \\(j\\) atteint la valeur \\(3\\) ? R\u00e9diger en langage naturel l'algorithme fusionnant deux tableaux tri\u00e9s. Impl\u00e9menter une fonction fusion(t1, t2) qui prend en argument deux tableaux suppos\u00e9s tri\u00e9s (on ne v\u00e9rifiera pas), et qui renvoie le tableau tri\u00e9 contenant tous les \u00e9l\u00e9ments des deux tableaux t1 et t2 . On pourra utiliser les tests suivants pour v\u00e9rifier que la fonction est correcte : Les tests >>> fusion ([ 12 , 35 , 45 ],[ 4 , 42 , 63 ]) [ 4 , 12 , 35 , 42 , 45 , 63 ] >>> fusion ([ 12 , 35 ], [ 57 ]) [ 12 , 35 , 57 ] >>> fusion ([ 12 , 35 ], [ 42 , 57 ]) [ 12 , 35 , 42 , 57 ] >>> fusion ([ 12 , 35 ], []) [ 12 , 35 ] >>> fusion ([], [ 12 , 35 ]) [ 12 , 35 ] >>> fusion ([ 42 , 57 , 67 , 75 ], [ 12 , 35 ]) [ 12 , 35 , 42 , 57 , 67 , 75 ] >>> fusion ([], []) [] Solution C'est beau, c'est fait avec manim . En r\u00e9alit\u00e9 il n'y a que deux compteurs : \\(i\\) et \\(j\\) . En effet \\(k\\) est en permanence \u00e9gal \u00e0 \\(i+j\\) . On peut utiliser une boucle Pour , vu que le nombre d'it\u00e9rations est connu au d\u00e9part : il s'agit de la somme des longueurs des deux tableaux. Mais il est aussi tout \u00e0 fait possible d'utiliser une boucle Tant que , puisque l'algorithme se poursuit tant qu'un des deux compteurs n'a pas atteint sa position finale. Quand \\(j\\) atteint la position 3 (soit la longueur du deuxi\u00e8me tableau), il ne reste plus qu'\u00e0 compl\u00e9ter avec les valeurs restantes du premier tableau. Diff\u00e9rentes versions : Version Pour sans initialisation du tableau final fonction fusion(t1, t2) tf <- tableau vide i <- 0 j <- 0 n1 <- longueur de t1 n2 <- longueur de t2 Pour k allant de 0 \u00e0 n1+n2-1 Si i<n1 et j<n2 Tri Fusion R\u00e9cursif Exercice Une fois la fonction fusion cod\u00e9e, l'algorithme de tri par fusion est simple : Regardez la vid\u00e9o suivante : Quel est le cas de base ? Quel est le cas r\u00e9cursif ? Impl\u00e9menter une fonction triFusion(t) qui prend en argument un tableau et renvoie une copie tri\u00e9e de ce tableau. Solution A venir ! Complexi\u00e9 en temps Exercice Copiez-collez le code ci-dessous permettant d'utiliser le d\u00e9corateur @timeit : import time def timeit ( method ): def timed ( * args , ** kw ): ts = time . time () result = method ( * args , ** kw ) te = time . time () print ( f \" { method . __name__ } ( { args } , { kw } ) { te - ts } \" ) return result return timed D\u00e9corateur @timeit pour utiliser le d\u00e9corateur, on le place dans la ligne pr\u00e9c\u00e9dant la d\u00e9finition de la fonction qu'on veut d\u00e9corer. Par exemple : @timeit def tri_insertion ( tab ) : ... Chaque fois que la fonction tri_insertion sera appel\u00e9e, le d\u00e9corateur sera appliqu\u00e9 et ex\u00e9cuterala fonction timed , qui calcule le temps d'ex\u00e9cution de la fonction d\u00e9cor\u00e9e. Il faudra \u00eatre attentif \u00e0 son utilisation dans le cas des fonctions r\u00e9cursives ! (Je vous laisse constater par vous m\u00eame le probl\u00e8me rencontr\u00e9.) Cr\u00e9er une fonction genereTab(n) qui cr\u00e9e un tableau de taille \\(n\\) d'entiers al\u00e9atoires compris entre \\(0\\) et \\(n^2\\) . Cr\u00e9er \u00e0 l'aide de toutes les fonctions pr\u00e9c\u00e9dentes une fonction testeTemps(n) qui compare les temps d'ex\u00e9cution des diff\u00e9rents tris pour \\(n\\) valant \\(100\\) , \\(1~000\\) , \\(10~000\\) . Attention , il faudra effectuer \u00e0 chaque fois les tests sur le m\u00eame tableau, et donc cr\u00e9er des copies du tableau original avant de le trier (on peut utiliser la fonction deepcopy du module copy ) Que peut-on en conclure quand \u00e0 la complexit\u00e9 en temps du tri fusion ? Solution A venir ! Complexit\u00e9s du tri fusion La version la plus simple du tri fusion sur les tableaux a une efficacit\u00e9 comparable au tri rapide, mais elle n'op\u00e8re pas en place : une zone temporaire de donn\u00e9es suppl\u00e9mentaire de taille \u00e9gale \u00e0 celle de l'entr\u00e9e est n\u00e9cessaire (des versions plus complexes peuvent \u00eatre effectu\u00e9es sur place mais sont moins rapides). La complexit\u00e9 en temps est en \\(\\mathbb{O}(n log(n))\\) dans tous les cas, et la complexit\u00e9 en espace est en g\u00e9n\u00e9ral en \\(\\mathbb{O}(n)\\) .","title":"Le tri fusion"},{"location":"NSI/Terminale/C02/RecursiviteTris/#plus-vite-quicksort-hors-programme","text":"Principe du QuickSort","title":"Plus vite ! QuickSort ! (Hors programme)"},{"location":"NSI/Terminale/C03/ListesChainees/","text":"Listes Cha\u00een\u00e9es Le probl\u00e8me de la structure tableau La structure de type tableau permet de stocker des s\u00e9quences d'\u00e9l\u00e9ments dans des zones contig\u00fces de la m\u00e9moire, mais n'est pas forc\u00e9ment adapt\u00e9e \u00e0 toutes les op\u00e9rations possibles sur ces s\u00e9quences. Par exemple, la structure de tableau de Python permet gr\u00e2ce aux m\u00e9thodes append et pop d'ajouter et de supprimer relativement efficacement un \u00e9l\u00e9ment en derni\u00e8re position dans un tableau d\u00e9j\u00e0 existant (ce n'est pas le cas dans d'autres langages, o\u00f9 de telles m\u00e9thodes n'existent pas forc\u00e9ment ). Lorsqu'on veut ins\u00e9rer un \u00e9l\u00e9ment \u00e0 une autre position on peut, toujours en Python, utiliser a m\u00e9thode insert qui ins\u00e8re un \u00e9l\u00e9ment \u00e0 une position donn\u00e9e. Mais cette m\u00e9thode cache un certain nombre de probl\u00e8mes , dont le co\u00fbt en temps . Que fait insert lorsqu'on veut ajouter un \u00e9l\u00e9ment en position 0 Imaginons que nous avons un tableau tab , pour lequel nous voulons ins\u00e9rer la valeur \\(8\\) en premi\u00e8re position : Au total, nous avons r\u00e9alis\u00e9 un nombre d'op\u00e9rations qui est proportionnel \u00e0 la taille du tableau ! Sur un petit, tel que celui-ci, il n'y a pas trop de probl\u00e8mes, mais sur un tableau contenant plusieurs millions d'entr\u00e9es, le nombre d'op\u00e9rations devient bien trop important. Heureusement, il existe d'autres mani\u00e8res de stocker des informations, qui permettent une modification bien plus rapide des diff\u00e9rents \u00e9l\u00e9ments. Les listes cha\u00een\u00e9es Construction d'une liste cha\u00een\u00e9es Liste cha\u00een\u00e9e Une liste cha\u00een\u00e9e est une structure permettant d'impl\u00e9menter une liste, c'est-\u00e0-dire une s\u00e9quence finie de valeurs (de m\u00eame type ou non). Les \u00e9l\u00e9ments dont dits cha\u00een\u00e9s car chque \u00e9l\u00e9ment poss\u00e8de l'adresse m\u00e9moire de l'\u00e9l\u00e9ment suivant de la liste. Exemple On a repr\u00e9sent\u00e9 ici une liste cha\u00een\u00e9e de trois \u00e9l\u00e9ments : Le premier est \\(21\\) , et il pointe vers l'adresse m\u00e9moire du second ; Le deuxi\u00e8me \u00e9l\u00e9ment est \\(15\\) et il pointe vers l'adresse m\u00e9moire du troisi\u00e8me ; Le troisi\u00e8me \u00e9l\u00e9ment est \\(45\\) . Il ne pointe vers rien (l'adresse du suivant est None ). On a atteint la fin de la liste. Impl\u00e9mentation d'une liste cha\u00een\u00e9e en Python La m\u00e9thode classique pour impl\u00e9menter une liste cha\u00een\u00e9e est de construire une classe d'objets poss\u00e9dant deux attributs : un pour la valeur et un pour l'adresse du chainon suivant : 1 2 3 4 5 class Chainon : \"\"\"Chainon d'une liste chain\u00e9e\"\"\" def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant Une fois cette classe d\u00e9finie, la construction de la liste s'effectue de la mani\u00e8re suivante : chaine = Chainon ( 21 , Chainon ( 15 , Chainon ( 45 , None ))) Ici, on a cr\u00e9\u00e9 une liste nomm\u00e9e chaine \u00e0 partir de trois objets de classe Chainon qu'on peut visualiser ainsi : Remarque Cette construction est une construction r\u00e9cursive bas\u00e9e sur des objets. Il aurait \u00e9t\u00e9 possioble d'utiliser des tuples ou des listes python, mais l'utilisation serait moins pratique : ( 21 ,( 15 , ( 45 , ( None )))) Affichage d'un objet Chainon Afin de repr\u00e9senter \u00e0 l'\u00e9cran notre objet Chainon , on impl\u00e9mente la m\u00e9thode __str__ ainsi : 1 2 3 4 5 6 7 8 9 10 11 class Chainon : \"\"\"Chainon d'une liste chain\u00e9e\"\"\" def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant def __str__ ( self ): if self . suivant == None : return f \" { self . valeur } -> None\" else : return f \" { self . valeur } -> { str ( self . suivant ) } \" Ainsi l'instruction print(chaine) affichera 21 -> 15 -> 45 -> None . Op\u00e9rations sur les listes cha\u00een\u00e9es. Longueur d'une liste cha\u00een\u00e9e Nous allons cr\u00e9er maintenant une fonction longueur qui calcule la longueur d'une liste cha\u00een\u00e9e telle que nous l'avons impl\u00e9ment\u00e9e. Cette fonction devra : renvoyer 0 si la liste est vide ; renvoyer le nombre d'\u00e9l\u00e9ments de la cha\u00eene sinon. Le plus simple est d'utiliser la r\u00e9cursivit\u00e9 : def longueur ( chaine ) : if chaine == None : return 0 else : return 1 + longueur ( chaine . suivant ) La complexit\u00e9 de cette fonction est directement proportionnelle \u00e0 la longueur de la liste : pour une liste de \\(1~000\\) \u00e9l\u00e9ments, la fonction effectuera : \\(1~000\\) comparaisons ; \\(1~000\\) additions ; \\(1~000\\) appels r\u00e9cursifs. On en conclut que la complexit\u00e9 en temps de cette fonction est en \\(\\mathbb{O}(n)\\) . Et en it\u00e9ratif ? def longueur ( chaine ) : n = 0 chainon = chaine while chainon is not None : n += 1 chainon = chainon . suivant return n Exercice 1 : n-i\u00e8me \u00e9l\u00e9ment Enonc\u00e9 Cr\u00e9er une fonction niemeElement(chaine, i) qui renvoie la valeur du i-i\u00e8me \u00e9l\u00e9ment de la liste cha\u00een\u00e9e pass\u00e9e en argument. Solution r\u00e9cursive def niemeElement ( chaine , i ) : if chaine == None : raise IndexError ( \"Invalid index\" ) if i == 0 : return chaine . valeur else : return niemeElement ( chaine . suivant , i - 1 ) La question de la complexit\u00e9 est un peu plus subtile : dans un cas correct (l'indice i fourni corresond bien \u00e0 un \u00e9l\u00e9ment de la liste), le nombre d'op\u00e9rations est bien proportionnel \u00e0 i ; dans le cas o\u00f9 i est sup\u00e9rieur \u00e0 la longueur de la liste, par contre, on va parcourir la totalit\u00e9 de la liste avant de pouvoir signaler une erreur. Ce serait cependant une tr\u00e8s mauvaise id\u00e9e de calculer la longueur de la liste pour le comparer \u00e0 \\(i\\) , car le calcul de la longueur parcoure d\u00e9j\u00e0 toutes la liste. Faire ce calcul en appel r\u00e9cursif g\u00e9n\u00e9rerait donc une complexit\u00e9 quadratique . On pourrait cependant encapsuler la fonction r\u00e9cursive dans une fonction dont l'objectif serait de v\u00e9rifier la valeur de l'indice avant d'effectuer les appels r\u00e9cursifs. Pire, dans le cas o\u00f9 l'indice pass\u00e9 est n\u00e9gatif, la liste cha\u00een\u00e9e sera elle aussi parcourue int\u00e9gralement avant de renvoyer une erreur d'indice.On peut cependant corriger cel\u00e0 par la ligne : if chaine == None or i < 0 : ... Solution It\u00e9rative def niemeElementI ( chaine , i ) : if i < 0 : raise IndexError ( \"Invalid index\" ) ni = 0 chainon = chaine while chainon != None and ni != i : ni += 1 chainon = chainon . suivant if chainon != None : return chainon . valeur else : raise IndexError ( \"Invalid index\" ) On retrouve en terme de complexit\u00e9 les m\u00eames \u00e9l\u00e9ments que pour la fonction r\u00e9cursive. Cependant les erreurs ainsi que les conditions de sorties sont plus complexes \u00e0 prendre en compte. Exercice 2 : Concat\u00e9nation de deux listes Enonc\u00e9 Cr\u00e9er une fonction concatener(c1, c2) qui renvoie la liste cha\u00een\u00e9e obtenue par concat\u00e9nation de c1 et c2 . Solution r\u00e9cursive def concatener ( c1 , c2 ) : if c1 == None : return c2 else : return Chainon ( c1 . valeur , concatener ( c1 . suivant , c2 )) La complexit\u00e9 d\u00e9pend fortement de la longueur de la liste c1 . par contre elle ne d\u00e9pend pas de celle de c2 . Dans cette version, les chaines c1 et c2 ne sont pas modifi\u00e9e ! concatener renvoie une nouvelle liste cha\u00een\u00e9e qui a copi\u00e9 les valeurs de c1 avant de les lier \u00e0 celles de c2 . Solution It\u00e9rative def concatenerI ( c1 , c2 ) : chainon = c1 while chainon . suivant != None : chainon = chainon . suivant chainon . suivant = c2 return c1 Attention ! Dans cette solution, c1 est modifi\u00e9e ! ET C'EST UNE TRES MAUVAISE IDEE Imaginons qu'on ex\u00e9cute deux fois la concat\u00e9nation concatenerI(c1, c2) , puis qu'on demande un affichage de c1 . La premi\u00e8re concat\u00e9nation va donner le sch\u00e9ma ci-dessus, la ch\u00e2ine c1 ayant pour dernier cha\u00eenon le dernier cha\u00eenon de c2 . A l'ex\u00e9cution de la deuxi\u00e8me concat\u00e9nation, il n'y aura pas de cr\u00e9ation de nouvelle cha\u00eene, mais simplement la modification du dernier cha\u00eenon de l'actuel c1 vers le premier \u00e9l\u00e9ment de c2 , soit... une boucle menant du dernier \u00e9l\u00e9ment de c2 vers le premier de c2 : La cha\u00eene obtenue ne poss\u00e8de plus de fin (jamais elle ne pointe vers None ). La m\u00e9thode __str__ effectuant un appel r\u00e9cursif dont le cas de basecorrespond au fait de pointer vers None , on aura alors une erreur de type RecursionError: maximum recursion depth exceeded , puisqu'il est devenu impossible de passer par le cas de base. Un cas limite : renverser la liste Comment faire pour renverser une liste cha\u00een\u00e9e ? Sachant que nous avons vu des proc\u00e9d\u00e9s r\u00e9cursif pour les questions pr\u00e9c\u00e9dentes, nous sommes tenter d'en utiliser un aussi pour ce cas, par exemple en s\u00e9lectionnant le premier cha\u00eenon et en le concat\u00e9nant \u00e0 la liste renvers\u00e9e de la suite de la cha\u00eene, Le cas de base \u00e9tant celui d'une liste vide, auquel cas on renvoie cette liste : def renverser ( chaine ) : if chaine == None : return None else : return concatener ( renverser ( chaine . suivant ), Chainon ( chaine . valeur , None )) Cependant cette solution n'est pas efficace ! En effet, \u00e0 chaque appel de renverser , on fait aussi appel \u00e0 la fonction concatener qui parcoure la totalit\u00e9 de la chaine, \u00e0 part un \u00e9l\u00e9ment. La complexit\u00e9 devient alors quadratique ! La r\u00e9cursivit\u00e9 n'est pas toujours la meilleure solution ! (mais parfois elle l'est quand m\u00eame !) On va don passer en it\u00e9ratif, surtourt qu'il est facile d'attacher un chainon en t\u00eate d'une chaine d\u00e9j\u00e0 consrtitu\u00e9e : def renverser ( chaine ) : reverse = None c = chaine while c != None : reverse = Chainon ( c . valeur , reverse ) c = c . suivant return reverse La complexit\u00e9 est celle du parcours d'une cha\u00eene compl\u00e8te, donc en \\(\\mathbb{O}(n)\\) . Modification de listes cha\u00een\u00e9es Pourquoi se casser la t\u00eate ? Eliminons tout de suite une possibilit\u00e9 : bien entendu, en Python , il est possible de modifier directement un attribut, donc la modification d'une valeur d'une liste cha\u00een\u00e9e est assez \u00e9vidente. Par exemple, les lignes suivantes : chaine = Chainon ( 21 , Chainon ( 15 , Chainon ( 45 , None ))) chaine . suivant . valeur = 33 modifient la valeur du deuxi\u00e8me \u00e9l\u00e9ment de la chaine, qui devient 21 -> 33 -> 45 -> None . Cependant, cette possibilit\u00e9 n'est pas toujours possible dans tous les langages , et de toutes fa\u00e7ons cette mani\u00e8re de modifier ne correspond pas \u00e0 la logique de construction d'une liste cha\u00een\u00e9e. On va donc pr\u00e9f\u00e9rer passer \u00e0 des modifications directe des cha\u00eenons. Exercice 3 : Insertion d'un chainon Enonc\u00e9 Cr\u00e9er une fonction inserer(v, n, chaine) qui ins\u00e8re l'\u00e9l\u00e9ment v \u00e0 la position n dans la liste pass\u00e9e en argument. Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction : Solution def inserer ( v , n , chaine ) : if n < 0 : raise IndexError ( \"Invalid index\" ) if n == 0 or chaine == None : return Chainon ( v , chaine ) else : return Chainon ( chaine . valeur , inserer ( v , n - 1 , chaine . suivant )) Exercice 4 : Suppression d'un chainon Enonc\u00e9 Cr\u00e9er une fonction supprime(n, chaine) qui supprime l'\u00e9l\u00e9ment \u00e0 la position n dans la liste pass\u00e9e en argument. Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction : Solution def supprimer ( n , chaine ) : if chaine == None or n < 0 : raise IndexError ( \"Invalid index\" ) if n == 0 : return chaine . suivant else : return Chainon ( chaine . valeur , supprimer ( n - 1 , chaine . suivant )) Quelques exercices suppl\u00e9mentaires Nous voici avec une structure correcte, permettant de travailler correctement sur des listes chain\u00e9es. Nous allons maintenant augmenter notre potentiel d'action avec les listes cha\u00een\u00e9es : Exercice 5 : Cr\u00e9ation \u00e0 partir d'une liste Python Enonc\u00e9 Cr\u00e9er une fonction creeDepuisTab(tab) qui cr\u00e9e une liste cha\u00een\u00e9e depuis un tableau donn\u00e9 en argument. Par exemple : creeDepuisTab([12, 15, 17]) cr\u00e9e la liste cha\u00een\u00e9e 12 -> 15 -> 17 -> None ; creeDepuisTab([]) cr\u00e9e un objet None ; creeDepuisTab([42]) cr\u00e9e une liste cha\u00een\u00e9e 42 -> None . Solutions Il existe de nombreuses possibilit\u00e9s, et toutes ne sont pas \u00e9quivalentes en terme de complexit\u00e9 (la V4 ci-dessous est beaucoup moins efficace). It\u00e9rative Pythonesque avec reversed def creeDepuisTab ( tab ) : \"\"\"Version pythonesque avec reversed\"\"\" LC = None for e in reversed ( tab ) : LC = Chainon ( e , LC ) return LC It\u00e9rative avec indices def creeDepuisTab ( tab ) : \"\"\"Version avec calcul de l'indice\"\"\" LC = None l = len ( tab ) for i in range ( len ( tab )): LC = Chainon ( tab [ l - 1 - i ], LC ) return LC R\u00e9cursive avec slices def creeDepuisTab ( tab ) : \"\"\"Version r\u00e9cursive\"\"\" if tab == [] : return None else : return Chainon ( tab [ 0 ], creeDepuisTabV3 ( tab [ 1 :])) Exercice 6 : Chercher le nombre d'occurences Enonc\u00e9 Cr\u00e9er une fonction occurences(valeur, chaine) qui renvoie le nombre d'occurence de valeur dans la liste cha\u00een\u00e9e chaine . Par exemple : occurences(12, chaine) devra renvoyer 3 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; occurences(27,chaine) devra renvoyer 0 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; occurences(42,chaine) devra renvoyer 1 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None . Solution A venir ! Exercice 7 : Trouver la premi\u00e8re occurence Enonc\u00e9 Cr\u00e9er une fonction premiereOccurence(valeur, chaine) qui renvoie l'indice de la premi\u00e8re occurence de valeur dans la liste cha\u00een\u00e9e chaine . Si \\valeur n'est pas dans chaine , la fonction devra renvoyer -1`. Par exemple : premiereOccurences(12, chaine) devra renvoyer 0 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; premiereOccurences(27,chaine) devra renvoyer -1 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; premiereOccurences(42,chaine) devra renvoyer 3 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None . Solution A venir ! Exercice 8 : cha\u00eenes identiques Enonc\u00e9 Cr\u00e9er une fonction identique(c1, c2) qui renvoie True si les deux cha\u00eenes contiennent les m\u00eames valeurs dans le m\u00eame ordre, et False sinon. Solution A venir ! Encapsulation On va d\u00e9sormais encapsuler l'impl\u00e9mentation pr\u00e9c\u00e9dente dans une autre classe, nomm\u00e9e ListeC dont l'interface est la suivante : la construction d'un objet ListeC vide correspondre \u00e0 un objet None ; une m\u00e9thode is_empty doit renvoyer un bool\u00e9en correspondnat au statut vide ou non vide de la liste ; une m\u00e9thode push permet d'ajouter une valeur en t\u00eate de la liste ; la m\u00e9thode __str__ doit renvoyer une cha\u00eene correcte (telle que celle de la classe Chainon ) ; l'appel \u00e0 la fonction len doit renvoyer la longueur de la liste ; on doit pouvoir atteindre le i-\u00e8me \u00e9l\u00e9ment d'un objet lc par l'interm\u00e9diaire de lc[i] ; l'op\u00e9rateur + utilis\u00e9 entre deux objets de type ListeC doit renvoyer un nouvel objet cr\u00e9e par concat\u00e9nation. Ainsi, un utilisateur du module cr\u00e9e n'aura pas \u00e0 se pr\u00e9occuper des diff\u00e9rences d'impl\u00e9menations pr\u00e9sent\u00e9es dans la partie pr\u00e9c\u00e9dente : M\u00e9thode constructeur __init__ : Analyse Un objet ListeC ne contient qu'un seul attribut : la t\u00eate de la liste. Soit c'est un objet de type Chainon , soit c'est l'objet None . La m\u00e9thode __init__ ne doit donc qu'initialiser un attribut head \u00e0 la valeur None . Code 1 2 3 4 5 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None M\u00e9thode is_empty : Analyse si la t\u00eate est de type None , on renvoie True , sinon False Code 1 2 3 4 5 6 7 8 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None M\u00e9thode push : Analyse Comme on l'a vu plusieurs fois, une liste chain\u00e9e se construit par ajouts successifs d'\u00e9l\u00e9ments en t\u00eate de la liste. Code 1 2 3 4 5 6 7 8 9 10 11 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) M\u00e9thode __str__ : Analyse Rien de particulier, il suffit de renvoyer la cha\u00eene de caract\u00e8res correspondant \u00e0 la t\u00eate. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) M\u00e9thode __len__ : Analyse La fonction built-in len fait appel \u00e0 la m\u00e9thode __len__ de l'objet pass\u00e9 en argument. Il suffit donc de cr\u00e9er une telle m\u00e9thode, en r\u00e9utilisant la fonction longueur d\u00e9j\u00e0 cr\u00e9e. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) Acc\u00e8s direct au i-\u00e8me \u00e9l\u00e9ment : Analyse Lorsqu'on veut faire appel aux op\u00e9rateurs [i] pour acc\u00e9der au i-\u00e8me \u00e9l\u00e9ment d'un objet d\u00e9j\u00e0 construit, python regarde si une m\u00e9thode __getitem__ a \u00e9t\u00e9 d\u00e9finie pour ce type d'objet. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) def __getitem__ ( self , i ) : return niemeElement ( self . head , i ) Utilisation de + Analyse Pour utiliser l'op\u00e9rateur + , il faut impl\u00e9menter une m\u00e9thode __add__ . Cette m\u00e9thode doit renvoyer un nouvel objet, donc son impl\u00e9mentation est un peu plus complexe. Par ailleurs, il faut lever une erreur dans le cas o\u00f9 l'objet pass\u00e9 en argument n'est pas de type ListeC . Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) def __getitem__ ( self , i ) : return niemeElement ( self . head , i ) def __add__ ( self , other ) : if not isinstance ( other , ListeC ) : raise TypeError ( f \"Unable to add ListeC object with { type ( other ) } object\" ) result = ListeC () result . head = concatener ( self . head , other . head ) return result Une fois cette classe impl\u00e9ment\u00e9e, on peut l'utiliser aussi simplement qu'un objet de type list de python : >>> l1 = ListeC () >>> l1 < __main__ . ListeC object at 0x033A8690 > >>> l1 . push ( 12 ) >>> l1 . push ( 15 ) >>> l1 . push ( 42 ) >>> print ( l1 ) 42 -> 15 -> 12 -> None >>> len ( l1 ) 3 >>> l1 . is_empty () False >>> l2 = ListeC () >>> l2 . push ( 43 ) >>> l2 . push ( 27 ) >>> l2 . push ( - 5 ) >>> print ( l1 + l2 ) 42 -> 15 -> 12 ->- 5 -> 27 -> 43 -> None >>> print ( l2 + l1 ) - 5 -> 27 -> 43 -> 42 -> 15 -> 12 -> None >>> l1 [ 2 ] 12 >>> l2 [ 0 ] - 5 Prolonger le travail Enonc\u00e9 Ajouter \u00e0 la classe ListeC les m\u00e9thodes suivantes pop : qui supprime soit la t\u00eate de la liste si aucun argument n'est pass\u00e9 ( l1.pop() , soit l'\u00e9l\u00e9ment d'indice donn\u00e9 si un indice est pass\u00e9 en argument ( l1.pop(2) ) ; insert(v,i) qui ins\u00e8re dans la liste la valeur v \u00e0 la position i . Solution A venir !","title":"Listes chain\u00e9es"},{"location":"NSI/Terminale/C03/ListesChainees/#listes-chainees","text":"","title":"Listes Cha\u00een\u00e9es"},{"location":"NSI/Terminale/C03/ListesChainees/#le-probleme-de-la-structure-tableau","text":"La structure de type tableau permet de stocker des s\u00e9quences d'\u00e9l\u00e9ments dans des zones contig\u00fces de la m\u00e9moire, mais n'est pas forc\u00e9ment adapt\u00e9e \u00e0 toutes les op\u00e9rations possibles sur ces s\u00e9quences. Par exemple, la structure de tableau de Python permet gr\u00e2ce aux m\u00e9thodes append et pop d'ajouter et de supprimer relativement efficacement un \u00e9l\u00e9ment en derni\u00e8re position dans un tableau d\u00e9j\u00e0 existant (ce n'est pas le cas dans d'autres langages, o\u00f9 de telles m\u00e9thodes n'existent pas forc\u00e9ment ). Lorsqu'on veut ins\u00e9rer un \u00e9l\u00e9ment \u00e0 une autre position on peut, toujours en Python, utiliser a m\u00e9thode insert qui ins\u00e8re un \u00e9l\u00e9ment \u00e0 une position donn\u00e9e. Mais cette m\u00e9thode cache un certain nombre de probl\u00e8mes , dont le co\u00fbt en temps . Que fait insert lorsqu'on veut ajouter un \u00e9l\u00e9ment en position 0 Imaginons que nous avons un tableau tab , pour lequel nous voulons ins\u00e9rer la valeur \\(8\\) en premi\u00e8re position : Au total, nous avons r\u00e9alis\u00e9 un nombre d'op\u00e9rations qui est proportionnel \u00e0 la taille du tableau ! Sur un petit, tel que celui-ci, il n'y a pas trop de probl\u00e8mes, mais sur un tableau contenant plusieurs millions d'entr\u00e9es, le nombre d'op\u00e9rations devient bien trop important. Heureusement, il existe d'autres mani\u00e8res de stocker des informations, qui permettent une modification bien plus rapide des diff\u00e9rents \u00e9l\u00e9ments.","title":"Le probl\u00e8me de la structure tableau"},{"location":"NSI/Terminale/C03/ListesChainees/#les-listes-chainees","text":"","title":"Les listes cha\u00een\u00e9es"},{"location":"NSI/Terminale/C03/ListesChainees/#construction-dune-liste-chainees","text":"Liste cha\u00een\u00e9e Une liste cha\u00een\u00e9e est une structure permettant d'impl\u00e9menter une liste, c'est-\u00e0-dire une s\u00e9quence finie de valeurs (de m\u00eame type ou non). Les \u00e9l\u00e9ments dont dits cha\u00een\u00e9s car chque \u00e9l\u00e9ment poss\u00e8de l'adresse m\u00e9moire de l'\u00e9l\u00e9ment suivant de la liste. Exemple On a repr\u00e9sent\u00e9 ici une liste cha\u00een\u00e9e de trois \u00e9l\u00e9ments : Le premier est \\(21\\) , et il pointe vers l'adresse m\u00e9moire du second ; Le deuxi\u00e8me \u00e9l\u00e9ment est \\(15\\) et il pointe vers l'adresse m\u00e9moire du troisi\u00e8me ; Le troisi\u00e8me \u00e9l\u00e9ment est \\(45\\) . Il ne pointe vers rien (l'adresse du suivant est None ). On a atteint la fin de la liste. Impl\u00e9mentation d'une liste cha\u00een\u00e9e en Python La m\u00e9thode classique pour impl\u00e9menter une liste cha\u00een\u00e9e est de construire une classe d'objets poss\u00e9dant deux attributs : un pour la valeur et un pour l'adresse du chainon suivant : 1 2 3 4 5 class Chainon : \"\"\"Chainon d'une liste chain\u00e9e\"\"\" def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant Une fois cette classe d\u00e9finie, la construction de la liste s'effectue de la mani\u00e8re suivante : chaine = Chainon ( 21 , Chainon ( 15 , Chainon ( 45 , None ))) Ici, on a cr\u00e9\u00e9 une liste nomm\u00e9e chaine \u00e0 partir de trois objets de classe Chainon qu'on peut visualiser ainsi : Remarque Cette construction est une construction r\u00e9cursive bas\u00e9e sur des objets. Il aurait \u00e9t\u00e9 possioble d'utiliser des tuples ou des listes python, mais l'utilisation serait moins pratique : ( 21 ,( 15 , ( 45 , ( None )))) Affichage d'un objet Chainon Afin de repr\u00e9senter \u00e0 l'\u00e9cran notre objet Chainon , on impl\u00e9mente la m\u00e9thode __str__ ainsi : 1 2 3 4 5 6 7 8 9 10 11 class Chainon : \"\"\"Chainon d'une liste chain\u00e9e\"\"\" def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant def __str__ ( self ): if self . suivant == None : return f \" { self . valeur } -> None\" else : return f \" { self . valeur } -> { str ( self . suivant ) } \" Ainsi l'instruction print(chaine) affichera 21 -> 15 -> 45 -> None .","title":"Construction d'une liste cha\u00een\u00e9es"},{"location":"NSI/Terminale/C03/ListesChainees/#operations-sur-les-listes-chainees","text":"Longueur d'une liste cha\u00een\u00e9e Nous allons cr\u00e9er maintenant une fonction longueur qui calcule la longueur d'une liste cha\u00een\u00e9e telle que nous l'avons impl\u00e9ment\u00e9e. Cette fonction devra : renvoyer 0 si la liste est vide ; renvoyer le nombre d'\u00e9l\u00e9ments de la cha\u00eene sinon. Le plus simple est d'utiliser la r\u00e9cursivit\u00e9 : def longueur ( chaine ) : if chaine == None : return 0 else : return 1 + longueur ( chaine . suivant ) La complexit\u00e9 de cette fonction est directement proportionnelle \u00e0 la longueur de la liste : pour une liste de \\(1~000\\) \u00e9l\u00e9ments, la fonction effectuera : \\(1~000\\) comparaisons ; \\(1~000\\) additions ; \\(1~000\\) appels r\u00e9cursifs. On en conclut que la complexit\u00e9 en temps de cette fonction est en \\(\\mathbb{O}(n)\\) . Et en it\u00e9ratif ? def longueur ( chaine ) : n = 0 chainon = chaine while chainon is not None : n += 1 chainon = chainon . suivant return n Exercice 1 : n-i\u00e8me \u00e9l\u00e9ment Enonc\u00e9 Cr\u00e9er une fonction niemeElement(chaine, i) qui renvoie la valeur du i-i\u00e8me \u00e9l\u00e9ment de la liste cha\u00een\u00e9e pass\u00e9e en argument. Solution r\u00e9cursive def niemeElement ( chaine , i ) : if chaine == None : raise IndexError ( \"Invalid index\" ) if i == 0 : return chaine . valeur else : return niemeElement ( chaine . suivant , i - 1 ) La question de la complexit\u00e9 est un peu plus subtile : dans un cas correct (l'indice i fourni corresond bien \u00e0 un \u00e9l\u00e9ment de la liste), le nombre d'op\u00e9rations est bien proportionnel \u00e0 i ; dans le cas o\u00f9 i est sup\u00e9rieur \u00e0 la longueur de la liste, par contre, on va parcourir la totalit\u00e9 de la liste avant de pouvoir signaler une erreur. Ce serait cependant une tr\u00e8s mauvaise id\u00e9e de calculer la longueur de la liste pour le comparer \u00e0 \\(i\\) , car le calcul de la longueur parcoure d\u00e9j\u00e0 toutes la liste. Faire ce calcul en appel r\u00e9cursif g\u00e9n\u00e9rerait donc une complexit\u00e9 quadratique . On pourrait cependant encapsuler la fonction r\u00e9cursive dans une fonction dont l'objectif serait de v\u00e9rifier la valeur de l'indice avant d'effectuer les appels r\u00e9cursifs. Pire, dans le cas o\u00f9 l'indice pass\u00e9 est n\u00e9gatif, la liste cha\u00een\u00e9e sera elle aussi parcourue int\u00e9gralement avant de renvoyer une erreur d'indice.On peut cependant corriger cel\u00e0 par la ligne : if chaine == None or i < 0 : ... Solution It\u00e9rative def niemeElementI ( chaine , i ) : if i < 0 : raise IndexError ( \"Invalid index\" ) ni = 0 chainon = chaine while chainon != None and ni != i : ni += 1 chainon = chainon . suivant if chainon != None : return chainon . valeur else : raise IndexError ( \"Invalid index\" ) On retrouve en terme de complexit\u00e9 les m\u00eames \u00e9l\u00e9ments que pour la fonction r\u00e9cursive. Cependant les erreurs ainsi que les conditions de sorties sont plus complexes \u00e0 prendre en compte. Exercice 2 : Concat\u00e9nation de deux listes Enonc\u00e9 Cr\u00e9er une fonction concatener(c1, c2) qui renvoie la liste cha\u00een\u00e9e obtenue par concat\u00e9nation de c1 et c2 . Solution r\u00e9cursive def concatener ( c1 , c2 ) : if c1 == None : return c2 else : return Chainon ( c1 . valeur , concatener ( c1 . suivant , c2 )) La complexit\u00e9 d\u00e9pend fortement de la longueur de la liste c1 . par contre elle ne d\u00e9pend pas de celle de c2 . Dans cette version, les chaines c1 et c2 ne sont pas modifi\u00e9e ! concatener renvoie une nouvelle liste cha\u00een\u00e9e qui a copi\u00e9 les valeurs de c1 avant de les lier \u00e0 celles de c2 . Solution It\u00e9rative def concatenerI ( c1 , c2 ) : chainon = c1 while chainon . suivant != None : chainon = chainon . suivant chainon . suivant = c2 return c1 Attention ! Dans cette solution, c1 est modifi\u00e9e ! ET C'EST UNE TRES MAUVAISE IDEE Imaginons qu'on ex\u00e9cute deux fois la concat\u00e9nation concatenerI(c1, c2) , puis qu'on demande un affichage de c1 . La premi\u00e8re concat\u00e9nation va donner le sch\u00e9ma ci-dessus, la ch\u00e2ine c1 ayant pour dernier cha\u00eenon le dernier cha\u00eenon de c2 . A l'ex\u00e9cution de la deuxi\u00e8me concat\u00e9nation, il n'y aura pas de cr\u00e9ation de nouvelle cha\u00eene, mais simplement la modification du dernier cha\u00eenon de l'actuel c1 vers le premier \u00e9l\u00e9ment de c2 , soit... une boucle menant du dernier \u00e9l\u00e9ment de c2 vers le premier de c2 : La cha\u00eene obtenue ne poss\u00e8de plus de fin (jamais elle ne pointe vers None ). La m\u00e9thode __str__ effectuant un appel r\u00e9cursif dont le cas de basecorrespond au fait de pointer vers None , on aura alors une erreur de type RecursionError: maximum recursion depth exceeded , puisqu'il est devenu impossible de passer par le cas de base. Un cas limite : renverser la liste Comment faire pour renverser une liste cha\u00een\u00e9e ? Sachant que nous avons vu des proc\u00e9d\u00e9s r\u00e9cursif pour les questions pr\u00e9c\u00e9dentes, nous sommes tenter d'en utiliser un aussi pour ce cas, par exemple en s\u00e9lectionnant le premier cha\u00eenon et en le concat\u00e9nant \u00e0 la liste renvers\u00e9e de la suite de la cha\u00eene, Le cas de base \u00e9tant celui d'une liste vide, auquel cas on renvoie cette liste : def renverser ( chaine ) : if chaine == None : return None else : return concatener ( renverser ( chaine . suivant ), Chainon ( chaine . valeur , None )) Cependant cette solution n'est pas efficace ! En effet, \u00e0 chaque appel de renverser , on fait aussi appel \u00e0 la fonction concatener qui parcoure la totalit\u00e9 de la chaine, \u00e0 part un \u00e9l\u00e9ment. La complexit\u00e9 devient alors quadratique ! La r\u00e9cursivit\u00e9 n'est pas toujours la meilleure solution ! (mais parfois elle l'est quand m\u00eame !) On va don passer en it\u00e9ratif, surtourt qu'il est facile d'attacher un chainon en t\u00eate d'une chaine d\u00e9j\u00e0 consrtitu\u00e9e : def renverser ( chaine ) : reverse = None c = chaine while c != None : reverse = Chainon ( c . valeur , reverse ) c = c . suivant return reverse La complexit\u00e9 est celle du parcours d'une cha\u00eene compl\u00e8te, donc en \\(\\mathbb{O}(n)\\) .","title":"Op\u00e9rations sur les listes cha\u00een\u00e9es."},{"location":"NSI/Terminale/C03/ListesChainees/#modification-de-listes-chainees","text":"Pourquoi se casser la t\u00eate ? Eliminons tout de suite une possibilit\u00e9 : bien entendu, en Python , il est possible de modifier directement un attribut, donc la modification d'une valeur d'une liste cha\u00een\u00e9e est assez \u00e9vidente. Par exemple, les lignes suivantes : chaine = Chainon ( 21 , Chainon ( 15 , Chainon ( 45 , None ))) chaine . suivant . valeur = 33 modifient la valeur du deuxi\u00e8me \u00e9l\u00e9ment de la chaine, qui devient 21 -> 33 -> 45 -> None . Cependant, cette possibilit\u00e9 n'est pas toujours possible dans tous les langages , et de toutes fa\u00e7ons cette mani\u00e8re de modifier ne correspond pas \u00e0 la logique de construction d'une liste cha\u00een\u00e9e. On va donc pr\u00e9f\u00e9rer passer \u00e0 des modifications directe des cha\u00eenons. Exercice 3 : Insertion d'un chainon Enonc\u00e9 Cr\u00e9er une fonction inserer(v, n, chaine) qui ins\u00e8re l'\u00e9l\u00e9ment v \u00e0 la position n dans la liste pass\u00e9e en argument. Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction : Solution def inserer ( v , n , chaine ) : if n < 0 : raise IndexError ( \"Invalid index\" ) if n == 0 or chaine == None : return Chainon ( v , chaine ) else : return Chainon ( chaine . valeur , inserer ( v , n - 1 , chaine . suivant )) Exercice 4 : Suppression d'un chainon Enonc\u00e9 Cr\u00e9er une fonction supprime(n, chaine) qui supprime l'\u00e9l\u00e9ment \u00e0 la position n dans la liste pass\u00e9e en argument. Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction : Solution def supprimer ( n , chaine ) : if chaine == None or n < 0 : raise IndexError ( \"Invalid index\" ) if n == 0 : return chaine . suivant else : return Chainon ( chaine . valeur , supprimer ( n - 1 , chaine . suivant ))","title":"Modification de listes cha\u00een\u00e9es"},{"location":"NSI/Terminale/C03/ListesChainees/#quelques-exercices-supplementaires","text":"Nous voici avec une structure correcte, permettant de travailler correctement sur des listes chain\u00e9es. Nous allons maintenant augmenter notre potentiel d'action avec les listes cha\u00een\u00e9es : Exercice 5 : Cr\u00e9ation \u00e0 partir d'une liste Python Enonc\u00e9 Cr\u00e9er une fonction creeDepuisTab(tab) qui cr\u00e9e une liste cha\u00een\u00e9e depuis un tableau donn\u00e9 en argument. Par exemple : creeDepuisTab([12, 15, 17]) cr\u00e9e la liste cha\u00een\u00e9e 12 -> 15 -> 17 -> None ; creeDepuisTab([]) cr\u00e9e un objet None ; creeDepuisTab([42]) cr\u00e9e une liste cha\u00een\u00e9e 42 -> None . Solutions Il existe de nombreuses possibilit\u00e9s, et toutes ne sont pas \u00e9quivalentes en terme de complexit\u00e9 (la V4 ci-dessous est beaucoup moins efficace). It\u00e9rative Pythonesque avec reversed def creeDepuisTab ( tab ) : \"\"\"Version pythonesque avec reversed\"\"\" LC = None for e in reversed ( tab ) : LC = Chainon ( e , LC ) return LC It\u00e9rative avec indices def creeDepuisTab ( tab ) : \"\"\"Version avec calcul de l'indice\"\"\" LC = None l = len ( tab ) for i in range ( len ( tab )): LC = Chainon ( tab [ l - 1 - i ], LC ) return LC R\u00e9cursive avec slices def creeDepuisTab ( tab ) : \"\"\"Version r\u00e9cursive\"\"\" if tab == [] : return None else : return Chainon ( tab [ 0 ], creeDepuisTabV3 ( tab [ 1 :])) Exercice 6 : Chercher le nombre d'occurences Enonc\u00e9 Cr\u00e9er une fonction occurences(valeur, chaine) qui renvoie le nombre d'occurence de valeur dans la liste cha\u00een\u00e9e chaine . Par exemple : occurences(12, chaine) devra renvoyer 3 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; occurences(27,chaine) devra renvoyer 0 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; occurences(42,chaine) devra renvoyer 1 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None . Solution A venir ! Exercice 7 : Trouver la premi\u00e8re occurence Enonc\u00e9 Cr\u00e9er une fonction premiereOccurence(valeur, chaine) qui renvoie l'indice de la premi\u00e8re occurence de valeur dans la liste cha\u00een\u00e9e chaine . Si \\valeur n'est pas dans chaine , la fonction devra renvoyer -1`. Par exemple : premiereOccurences(12, chaine) devra renvoyer 0 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; premiereOccurences(27,chaine) devra renvoyer -1 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None ; premiereOccurences(42,chaine) devra renvoyer 3 si la cha\u00eene est 12 -> 35 -> 12 ->42 -> 12 ->35 -> None . Solution A venir ! Exercice 8 : cha\u00eenes identiques Enonc\u00e9 Cr\u00e9er une fonction identique(c1, c2) qui renvoie True si les deux cha\u00eenes contiennent les m\u00eames valeurs dans le m\u00eame ordre, et False sinon. Solution A venir !","title":"Quelques exercices suppl\u00e9mentaires"},{"location":"NSI/Terminale/C03/ListesChainees/#encapsulation","text":"On va d\u00e9sormais encapsuler l'impl\u00e9mentation pr\u00e9c\u00e9dente dans une autre classe, nomm\u00e9e ListeC dont l'interface est la suivante : la construction d'un objet ListeC vide correspondre \u00e0 un objet None ; une m\u00e9thode is_empty doit renvoyer un bool\u00e9en correspondnat au statut vide ou non vide de la liste ; une m\u00e9thode push permet d'ajouter une valeur en t\u00eate de la liste ; la m\u00e9thode __str__ doit renvoyer une cha\u00eene correcte (telle que celle de la classe Chainon ) ; l'appel \u00e0 la fonction len doit renvoyer la longueur de la liste ; on doit pouvoir atteindre le i-\u00e8me \u00e9l\u00e9ment d'un objet lc par l'interm\u00e9diaire de lc[i] ; l'op\u00e9rateur + utilis\u00e9 entre deux objets de type ListeC doit renvoyer un nouvel objet cr\u00e9e par concat\u00e9nation. Ainsi, un utilisateur du module cr\u00e9e n'aura pas \u00e0 se pr\u00e9occuper des diff\u00e9rences d'impl\u00e9menations pr\u00e9sent\u00e9es dans la partie pr\u00e9c\u00e9dente : M\u00e9thode constructeur __init__ : Analyse Un objet ListeC ne contient qu'un seul attribut : la t\u00eate de la liste. Soit c'est un objet de type Chainon , soit c'est l'objet None . La m\u00e9thode __init__ ne doit donc qu'initialiser un attribut head \u00e0 la valeur None . Code 1 2 3 4 5 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None M\u00e9thode is_empty : Analyse si la t\u00eate est de type None , on renvoie True , sinon False Code 1 2 3 4 5 6 7 8 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None M\u00e9thode push : Analyse Comme on l'a vu plusieurs fois, une liste chain\u00e9e se construit par ajouts successifs d'\u00e9l\u00e9ments en t\u00eate de la liste. Code 1 2 3 4 5 6 7 8 9 10 11 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) M\u00e9thode __str__ : Analyse Rien de particulier, il suffit de renvoyer la cha\u00eene de caract\u00e8res correspondant \u00e0 la t\u00eate. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) M\u00e9thode __len__ : Analyse La fonction built-in len fait appel \u00e0 la m\u00e9thode __len__ de l'objet pass\u00e9 en argument. Il suffit donc de cr\u00e9er une telle m\u00e9thode, en r\u00e9utilisant la fonction longueur d\u00e9j\u00e0 cr\u00e9e. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) Acc\u00e8s direct au i-\u00e8me \u00e9l\u00e9ment : Analyse Lorsqu'on veut faire appel aux op\u00e9rateurs [i] pour acc\u00e9der au i-\u00e8me \u00e9l\u00e9ment d'un objet d\u00e9j\u00e0 construit, python regarde si une m\u00e9thode __getitem__ a \u00e9t\u00e9 d\u00e9finie pour ce type d'objet. Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) def __getitem__ ( self , i ) : return niemeElement ( self . head , i ) Utilisation de + Analyse Pour utiliser l'op\u00e9rateur + , il faut impl\u00e9menter une m\u00e9thode __add__ . Cette m\u00e9thode doit renvoyer un nouvel objet, donc son impl\u00e9mentation est un peu plus complexe. Par ailleurs, il faut lever une erreur dans le cas o\u00f9 l'objet pass\u00e9 en argument n'est pas de type ListeC . Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class ListeC : \"\"\"A real docstring here\"\"\" def __init__ ( self ) : self . head = None def is_empty ( self ) : return self . head == None def push ( self , v ) : self . head = Chainon ( v , self . head ) def __str__ ( self ) : return str ( self . head ) def __len__ ( self ) : if self . head == None : return 0 else : return longueur ( self . head ) def __getitem__ ( self , i ) : return niemeElement ( self . head , i ) def __add__ ( self , other ) : if not isinstance ( other , ListeC ) : raise TypeError ( f \"Unable to add ListeC object with { type ( other ) } object\" ) result = ListeC () result . head = concatener ( self . head , other . head ) return result Une fois cette classe impl\u00e9ment\u00e9e, on peut l'utiliser aussi simplement qu'un objet de type list de python : >>> l1 = ListeC () >>> l1 < __main__ . ListeC object at 0x033A8690 > >>> l1 . push ( 12 ) >>> l1 . push ( 15 ) >>> l1 . push ( 42 ) >>> print ( l1 ) 42 -> 15 -> 12 -> None >>> len ( l1 ) 3 >>> l1 . is_empty () False >>> l2 = ListeC () >>> l2 . push ( 43 ) >>> l2 . push ( 27 ) >>> l2 . push ( - 5 ) >>> print ( l1 + l2 ) 42 -> 15 -> 12 ->- 5 -> 27 -> 43 -> None >>> print ( l2 + l1 ) - 5 -> 27 -> 43 -> 42 -> 15 -> 12 -> None >>> l1 [ 2 ] 12 >>> l2 [ 0 ] - 5 Prolonger le travail Enonc\u00e9 Ajouter \u00e0 la classe ListeC les m\u00e9thodes suivantes pop : qui supprime soit la t\u00eate de la liste si aucun argument n'est pass\u00e9 ( l1.pop() , soit l'\u00e9l\u00e9ment d'indice donn\u00e9 si un indice est pass\u00e9 en argument ( l1.pop(2) ) ; insert(v,i) qui ins\u00e8re dans la liste la valeur v \u00e0 la position i . Solution A venir !","title":"Encapsulation"},{"location":"NSI/Terminale/C03/Piles_et_files/","text":"Piles et files D\u00e9finitions et exemples Piles D\u00e9finition Une pile ( stack en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion : un objet est ajout\u00e9 toujours en haut de la pile ( empiler ); quand on supprime un objet, il s'agit toujours du dernier objet ajout\u00e9 ( d\u00e9piler ). On associe \u00e0 cette structure l'image d'une pile d'assiettes : Un tel type de structure est souvent appel\u00e9 : Dernier entr\u00e9, premier sorti ( DEPS ) en fran\u00e7ais ; Last in, first out ( LIFO ) en anglais. Interface Pour d\u00e9finir l'interface d'un objet de type pile , nous supposerons d'abord que les \u00e9l\u00e9ments de la pile sont tous du m\u00eame type (la pile est homog\u00e8ne ). Pour parler d'une pile d'\u00e9l\u00e9ments de type T , on utilisera la notation Pile[T] . L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une pile vide, empiler ( push en anglais), d\u00e9piler ( pop en anglais), et tester la vacuit\u00e9 d'une pile. fonction description creer_pile() -> Pile[T] cr\u00e9e une pile vide est_vide(p : Pile[T]) -> bool renvoie True si l'objet p de type Pile[T] est vide, False sinon. empiler(e : T, p : Pile[T]) -> None ajoute l'\u00e9l\u00e9ment e de type T au sommet de la pile p . d\u00e9piler(p : Pile[T]) -> e : T retire et renvoie l'\u00e9l\u00e9ment e de type T situ\u00e9 au sommet de la pile p . Situations utilisant des piles Bouton retour dans un navigateur Lors d'une navigation web, on utilise une pile pour stocker les diff\u00e9rentes pages visit\u00e9es les unes apr\u00e8s les autres. Le bouton de retour a pour fonction de d\u00e9piler la pile ainsi constitu\u00e9e. Par exemple : Pile d'appels d'une fonction r\u00e9cursive Une pile est cr\u00e9e lors des diff\u00e9rents appels r\u00e9cursifs d'une fonction, et cette pile est d\u00e9pil\u00e9e \u00e0 chaque retour de fonction. Par exemple, avec la fonction factorielle : Fonction \u00ab Annuler la frappe \u00bb d'un traitement de texte De la m\u00eame mani\u00e8re que pour le bouton retour d'une page web, les modifications apport\u00e9es dans un traitement de texte sont stock\u00e9es dans une pile. L'appui sur Ctrl + Z a pour effet de d\u00e9piler, et donc de r\u00e9tablir le texte \u00e0 la situation pr\u00e9c\u00e9dente sauvegard\u00e9e dans la pile. Files D\u00e9finition Une file ( queue en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion : un objet est ajout\u00e9 toujours au d\u00e9but de la file ( enfiler ); quand on supprime un objet, il s'agit toujours du dernier objet de la file ( d\u00e9filer ). On associe \u00e0 cette structure l'image d'une file de personnes faisant la queue : Une filer est particuli\u00e8rement adapt\u00e9e aux traitements s\u00e9quentiels . Un tel type de structure est souvent appel\u00e9 : Premier entr\u00e9, premier sorti ( PEPS ) en fran\u00e7ais ; First in, first out ( FIFO ) en anglais. Interface Pour d\u00e9finir l'interface d'un objet de type file , nous supposerons d'abord que les \u00e9l\u00e9ments de la file sont tous du m\u00eame type (la file est homog\u00e8ne ). Pour parler d'une file d'\u00e9l\u00e9ments de type T , on utilisera la notation File[T] . L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une file vide, enfiler ( enqueue en anglais), d\u00e9filer ( dequeue nen aglais), et tester la vacuit\u00e9 d'une file. fonction description creer_file() -> File[T] cr\u00e9e une pile vide est_vide(f : File[T]) -> bool renvoie True si l'objet f de type File[T] est vide, False sinon. enfiler(e : T, f : File[T]) -> None ajoute l'\u00e9l\u00e9ment e de type T \u00e0 la fin de la file f . defiler(f : File[T]) -> e : T retire et renvoie l'\u00e9l\u00e9ment e de type T situ\u00e9 au d\u00e9but de la file f . Situations utilisants une file Jeu de Bataille Dans un jeu de bataille, chaque joueur poss\u00e8de une file de carte. On d\u00e9file chaque paquet, compare les cartes, et le vainqueur enfile les cartes r\u00e9colt\u00e9es dans son paquet, jusqu'\u00e0 ce qu'un des joueurs ait une file vide. Serveurs d'impressions Les serveurs d'impression traitent les requ\u00eates dans l'ordre dans lequel elles arrivent, et les ins\u00e8rent dans une file d'attente (dite aussi queue ou spool), lorsque d'autres travaux sont en ex\u00e9cution. M\u00e9moire tampon ( buffers ) Une m\u00e9moire tampon , ou buffer , est une zone de m\u00e9moire vive qui va \u00eatre utilis\u00e9e pour stocker des donn\u00e9es circulant entre deux p\u00e9riph\u00e9riques ne fonctionnant p\u00e2s \u00e0 la m\u00eame vitesse, par exemple entre la connexion internet et le flux vid\u00e9o : si la vitesse de connexion est sup\u00e9rieure au d\u00e9bit vid\u00e9o, le buffer va se remplir des donn\u00e9es vid\u00e9o, et le lecteur vid\u00e9o les lira dans leur ordre d'arriv\u00e9e (PEPS) ; si le lecteur vid\u00e9o constate une chute du d\u00e9bit - il n'a plus de donn\u00e9es \u00e0 lire, il va attendre que la file du buffer atteigne une certaine taille afin de relancer une lecture vid\u00e9o plus fluide - c'est le buffering . Impl\u00e9mentations d'une Pile A partir d'une liste python Impl\u00e9mentation \u00e0 partir du type list Enonc\u00e9 Compl\u00e9ter le code suivant afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles, en utilisant le type list de python: class Pile : def __init__ ( self ) : ... def est_vide ( self ) : ... def empiler ( self , v ) : ... def depiler ( self ) : ... Une solution class Pile : def __init__ ( self ) : self . p = [] def est_vide ( self ) : return self . p == [] def empiler ( self , v ) : self . p . append ( v ) def depiler ( self ) : return self . p . pop () Un code simple et efficace ? Certes le codage effectu\u00e9 est simple, et ne pr\u00e9sente aucune difficult\u00e9. Cependant certains m\u00e9canismes du type list en python sont cach\u00e9s, comme par exemple l' allocation dynamique de m\u00e9moire . Cette allocation se fait \u00e0 la cr\u00e9ation, puis quand la lite d\u00e9passe certaines valeurs (d\u00e9finies sp\u00e9cifiquement dans la doc : 0, 4, 8, 16, 25, 35, 46, 58, 72, 88... voir ici ), la r\u00e9servation m\u00e9moire pour la liste est augment\u00e9e puis la liste originelle est copi\u00e9e dans le nouvel emplacement. Cela g\u00e9n\u00e8re bien entendu une complexit\u00e9 en temps comme en m\u00e9moire inutile dans la plupart des cas. A partir d'une liste cha\u00een\u00e9e Une des possibilit\u00e9s les plus simple pour impl\u00e9menter une pile est d'utiliser les liste cha\u00een\u00e9e. En effet, dans une liste cha\u00een\u00e9e nous pouvons ins\u00e9rer et supprimer facilement la t\u00eate de la liste, ce qui correspondra au sommet de la pile, et nous n'aurons plus le probl\u00e8me d'agrandissement g\u00e9n\u00e9r\u00e9 par le type list de python. Impl\u00e9mentation par les listes cha\u00een\u00e9es Enonc\u00e9 Compl\u00e9ter le code suivant afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles : class Chainon : def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant class Pile : \"\"\"interface de pile\"\"\" def __init__ ( self ) : ... def est_vide ( self ) : ... def empiler ( self , v ) : ... def depiler ( self ) : ... Une solution A venir ! Impl\u00e9mentations d'une File Impl\u00e9mentation par une liste cha\u00een\u00e9e mutable Impl\u00e9mentation par liste cha\u00een\u00e9e mutable Bien que nous ayons vu qu'utiliser des listes mutables puisse \u00eatre parfois une mauvaise id\u00e9e , il est cependant possible de les utiliser, du moins dans une version adapt\u00e9e, afin de construire un objet correspondant \u00e0 l'interface d\u00e9finie pour les files. Pour cela il faudra utiliser deux attributs tete et queue , qui repr\u00e9senteront respectivement le chainon de d\u00e9but et le chainon de fin de la file. D\u00e9filer consistera \u00e0 changer la t\u00eate en sortant la valeur : Enfiler consistera \u00e0 changer la queue : Enonc\u00e9 Compl\u00e9ter le code suivant pour qu'il respecte l'interface d\u00e9finie pour une file : class Chainon def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant class File : \"\"\"interface de file\"\"\" def __init__ ( self ) : self . tete = None self . queue = None def est_vide ( self ) : ... def enfiler ( self , v ) : ... def defiler ( self ) : ... Solution A venir ! Impl\u00e9mentation par deux piles Une autre impl\u00e9mentation : Utiliser deux piles Une impl\u00e9mentation totalement diff\u00e9rente de la premi\u00e8re est d'utiliser deux piles, une pile d'entr\u00e9es et une pile de sorties. Le principe est celui d'un jeu de carte dans lequel il y a une d\u00e9fausse : Le paquet de carte principal est le paquet de sortie : c'est la pile de sortie . On tire une carte \u00e0 partir de cette pile. La d\u00e9fausse est compos\u00e9e de cartes jou\u00e9es face ouverte, pos\u00e9es sur le sommet du paquet de d\u00e9fausse. C'est la pile d'entr\u00e9es. Quand le paquet principal est vide, on prend la d\u00e9fausse et sans la m\u00e9langer on la retourne et elle prend la place du paquet principal. Enonc\u00e9 Compl\u00e9ter le code suivant pour qu'il corresponde \u00e0 l'interface d'une file telle que nous l'avons d\u00e9fini plus haut : class File : def __init__ ( self ) : self . entrees = Pile () self . sorties = Pile () def est_vide ( self ) : ... def enfiler ( self , v ) : ... def defiler ( self ) : ... Solution A venir ! Exercices Ajouter des m\u00e9thodes Enonc\u00e9 Compl\u00e9ter le code de la classe Pile construite \u00e0 partir d'une liste cha\u00een\u00e9e avec les m\u00e9thodes suivantes : Une m\u00e9thode consulter permettant de conna\u00eetre l'\u00e9l\u00e9ment au sommet de la pile sans le d\u00e9piler . Une m\u00e9thode vider permettant de vider la pile de ses \u00e9l\u00e9ments Une m\u00e9thode taille renvoyant la taille de la pile. Quelle est la complexit\u00e9 utilis\u00e9e ? Solutions A venir ! Am\u00e9liorer le calcul de la taille Enonc\u00e9 Pour \u00e9viter le probl\u00e8me rencontr\u00e9 dans l'exercice pr\u00e9c\u00e9dent, nous allons modifier la structure de la classe Pile . Nous allons ajouter un attribut _taille \u00e0 la classe, qui contiendra en permanence la taille de la pile courante. Quelles m\u00e9thodes modifier ? Quelle est alors la complexit\u00e9 ? Solution A venir Calculatrice \u00e0 notation polonaise invers\u00e9e La notation polonaie invers\u00e9e (NPI ou RPN en anglais) permet d'\u00e9crire de fa\u00e7on non ambigu\u00eb les formules arithm\u00e9tiques sans utiliser de parenth\u00e8ses . Par exemple, le calcul \\(((1 + 2) \\times 4) + 3\\) est not\u00e9 en NPI : \\[ 1~2~+~4~\\times~3~+ \\] Le calcul \\(((1 + 2) \\times 4) + 3\\) peut se lire intuitivement : je mets 1, ( \\(1\\) ) ; j'ajoute 2, ( \\(2 +\\) ) ; je multiplie par 4, ( \\(4 \\times\\) ) ; j'ajoute 3. ( \\(3 +\\) ). Ce qui donne la notation pr\u00e9c\u00e9dente. On peut tester ce calcul et cette notation sur le simulateur omega de la calculatrice Numworks . La NPI est dites invers\u00e9e car elle d\u00e9rive de la notation polonaise pr\u00e9sent\u00e9e en 1924 par le math\u00e9maticien polonais Jan \u0141ukasiewicz, et elle s\u2019en diff\u00e9rencie par l\u2019ordre des termes, les op\u00e9randes y \u00e9tant pr\u00e9sent\u00e9s avant les op\u00e9rateurs. La structure de calcul en NPI est utilise une pile de la mani\u00e8re suivante : quand on rencontre un nombre, on l'enpile ; quand on rencontre un op\u00e9rateur ( \\(+,~\\times~,-~,...\\) ) on d\u00e9pile les deux nombres au sommet de la pile et on effectue l'op\u00e9ration, le r\u00e9sultat \u00e9tant de nouveau empil\u00e9. Si le calcul est correctement \u00e9crit, il y a toujours au moins deux nombres dans la pile quand on rencontre un op\u00e9rateur, et il reste un seul et unique nombre dans cette pile quand l'expresion a \u00e9t\u00e9 enti\u00e8rement lue. Enonc\u00e9 Cr\u00e9er une fonction NPI prenant en argument un calcul en NPI repr\u00e9sent\u00e9 sous la forme d'une cha\u00eene de caract\u00e8res dont les \u00e9lements (op\u00e9randes et op\u00e9rateurs) sont s\u00e9par\u00e9s d'un espace, et qui renvoie le r\u00e9sultat du calcul. Solution A venir !","title":"Piles et files"},{"location":"NSI/Terminale/C03/Piles_et_files/#piles-et-files","text":"","title":"Piles et files"},{"location":"NSI/Terminale/C03/Piles_et_files/#definitions-et-exemples","text":"","title":"D\u00e9finitions et exemples"},{"location":"NSI/Terminale/C03/Piles_et_files/#piles","text":"D\u00e9finition Une pile ( stack en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion : un objet est ajout\u00e9 toujours en haut de la pile ( empiler ); quand on supprime un objet, il s'agit toujours du dernier objet ajout\u00e9 ( d\u00e9piler ). On associe \u00e0 cette structure l'image d'une pile d'assiettes : Un tel type de structure est souvent appel\u00e9 : Dernier entr\u00e9, premier sorti ( DEPS ) en fran\u00e7ais ; Last in, first out ( LIFO ) en anglais. Interface Pour d\u00e9finir l'interface d'un objet de type pile , nous supposerons d'abord que les \u00e9l\u00e9ments de la pile sont tous du m\u00eame type (la pile est homog\u00e8ne ). Pour parler d'une pile d'\u00e9l\u00e9ments de type T , on utilisera la notation Pile[T] . L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une pile vide, empiler ( push en anglais), d\u00e9piler ( pop en anglais), et tester la vacuit\u00e9 d'une pile. fonction description creer_pile() -> Pile[T] cr\u00e9e une pile vide est_vide(p : Pile[T]) -> bool renvoie True si l'objet p de type Pile[T] est vide, False sinon. empiler(e : T, p : Pile[T]) -> None ajoute l'\u00e9l\u00e9ment e de type T au sommet de la pile p . d\u00e9piler(p : Pile[T]) -> e : T retire et renvoie l'\u00e9l\u00e9ment e de type T situ\u00e9 au sommet de la pile p . Situations utilisant des piles Bouton retour dans un navigateur Lors d'une navigation web, on utilise une pile pour stocker les diff\u00e9rentes pages visit\u00e9es les unes apr\u00e8s les autres. Le bouton de retour a pour fonction de d\u00e9piler la pile ainsi constitu\u00e9e. Par exemple : Pile d'appels d'une fonction r\u00e9cursive Une pile est cr\u00e9e lors des diff\u00e9rents appels r\u00e9cursifs d'une fonction, et cette pile est d\u00e9pil\u00e9e \u00e0 chaque retour de fonction. Par exemple, avec la fonction factorielle : Fonction \u00ab Annuler la frappe \u00bb d'un traitement de texte De la m\u00eame mani\u00e8re que pour le bouton retour d'une page web, les modifications apport\u00e9es dans un traitement de texte sont stock\u00e9es dans une pile. L'appui sur Ctrl + Z a pour effet de d\u00e9piler, et donc de r\u00e9tablir le texte \u00e0 la situation pr\u00e9c\u00e9dente sauvegard\u00e9e dans la pile.","title":"Piles"},{"location":"NSI/Terminale/C03/Piles_et_files/#files","text":"D\u00e9finition Une file ( queue en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion : un objet est ajout\u00e9 toujours au d\u00e9but de la file ( enfiler ); quand on supprime un objet, il s'agit toujours du dernier objet de la file ( d\u00e9filer ). On associe \u00e0 cette structure l'image d'une file de personnes faisant la queue : Une filer est particuli\u00e8rement adapt\u00e9e aux traitements s\u00e9quentiels . Un tel type de structure est souvent appel\u00e9 : Premier entr\u00e9, premier sorti ( PEPS ) en fran\u00e7ais ; First in, first out ( FIFO ) en anglais. Interface Pour d\u00e9finir l'interface d'un objet de type file , nous supposerons d'abord que les \u00e9l\u00e9ments de la file sont tous du m\u00eame type (la file est homog\u00e8ne ). Pour parler d'une file d'\u00e9l\u00e9ments de type T , on utilisera la notation File[T] . L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une file vide, enfiler ( enqueue en anglais), d\u00e9filer ( dequeue nen aglais), et tester la vacuit\u00e9 d'une file. fonction description creer_file() -> File[T] cr\u00e9e une pile vide est_vide(f : File[T]) -> bool renvoie True si l'objet f de type File[T] est vide, False sinon. enfiler(e : T, f : File[T]) -> None ajoute l'\u00e9l\u00e9ment e de type T \u00e0 la fin de la file f . defiler(f : File[T]) -> e : T retire et renvoie l'\u00e9l\u00e9ment e de type T situ\u00e9 au d\u00e9but de la file f . Situations utilisants une file Jeu de Bataille Dans un jeu de bataille, chaque joueur poss\u00e8de une file de carte. On d\u00e9file chaque paquet, compare les cartes, et le vainqueur enfile les cartes r\u00e9colt\u00e9es dans son paquet, jusqu'\u00e0 ce qu'un des joueurs ait une file vide. Serveurs d'impressions Les serveurs d'impression traitent les requ\u00eates dans l'ordre dans lequel elles arrivent, et les ins\u00e8rent dans une file d'attente (dite aussi queue ou spool), lorsque d'autres travaux sont en ex\u00e9cution. M\u00e9moire tampon ( buffers ) Une m\u00e9moire tampon , ou buffer , est une zone de m\u00e9moire vive qui va \u00eatre utilis\u00e9e pour stocker des donn\u00e9es circulant entre deux p\u00e9riph\u00e9riques ne fonctionnant p\u00e2s \u00e0 la m\u00eame vitesse, par exemple entre la connexion internet et le flux vid\u00e9o : si la vitesse de connexion est sup\u00e9rieure au d\u00e9bit vid\u00e9o, le buffer va se remplir des donn\u00e9es vid\u00e9o, et le lecteur vid\u00e9o les lira dans leur ordre d'arriv\u00e9e (PEPS) ; si le lecteur vid\u00e9o constate une chute du d\u00e9bit - il n'a plus de donn\u00e9es \u00e0 lire, il va attendre que la file du buffer atteigne une certaine taille afin de relancer une lecture vid\u00e9o plus fluide - c'est le buffering .","title":"Files"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementations-dune-pile","text":"","title":"Impl\u00e9mentations d'une Pile"},{"location":"NSI/Terminale/C03/Piles_et_files/#a-partir-dune-liste-python","text":"Impl\u00e9mentation \u00e0 partir du type list Enonc\u00e9 Compl\u00e9ter le code suivant afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles, en utilisant le type list de python: class Pile : def __init__ ( self ) : ... def est_vide ( self ) : ... def empiler ( self , v ) : ... def depiler ( self ) : ... Une solution class Pile : def __init__ ( self ) : self . p = [] def est_vide ( self ) : return self . p == [] def empiler ( self , v ) : self . p . append ( v ) def depiler ( self ) : return self . p . pop () Un code simple et efficace ? Certes le codage effectu\u00e9 est simple, et ne pr\u00e9sente aucune difficult\u00e9. Cependant certains m\u00e9canismes du type list en python sont cach\u00e9s, comme par exemple l' allocation dynamique de m\u00e9moire . Cette allocation se fait \u00e0 la cr\u00e9ation, puis quand la lite d\u00e9passe certaines valeurs (d\u00e9finies sp\u00e9cifiquement dans la doc : 0, 4, 8, 16, 25, 35, 46, 58, 72, 88... voir ici ), la r\u00e9servation m\u00e9moire pour la liste est augment\u00e9e puis la liste originelle est copi\u00e9e dans le nouvel emplacement. Cela g\u00e9n\u00e8re bien entendu une complexit\u00e9 en temps comme en m\u00e9moire inutile dans la plupart des cas.","title":"A partir d'une liste python"},{"location":"NSI/Terminale/C03/Piles_et_files/#a-partir-dune-liste-chainee","text":"Une des possibilit\u00e9s les plus simple pour impl\u00e9menter une pile est d'utiliser les liste cha\u00een\u00e9e. En effet, dans une liste cha\u00een\u00e9e nous pouvons ins\u00e9rer et supprimer facilement la t\u00eate de la liste, ce qui correspondra au sommet de la pile, et nous n'aurons plus le probl\u00e8me d'agrandissement g\u00e9n\u00e9r\u00e9 par le type list de python. Impl\u00e9mentation par les listes cha\u00een\u00e9es Enonc\u00e9 Compl\u00e9ter le code suivant afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles : class Chainon : def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant class Pile : \"\"\"interface de pile\"\"\" def __init__ ( self ) : ... def est_vide ( self ) : ... def empiler ( self , v ) : ... def depiler ( self ) : ... Une solution A venir !","title":"A partir d'une liste cha\u00een\u00e9e"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementations-dune-file","text":"","title":"Impl\u00e9mentations d'une File"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementation-par-une-liste-chainee-mutable","text":"Impl\u00e9mentation par liste cha\u00een\u00e9e mutable Bien que nous ayons vu qu'utiliser des listes mutables puisse \u00eatre parfois une mauvaise id\u00e9e , il est cependant possible de les utiliser, du moins dans une version adapt\u00e9e, afin de construire un objet correspondant \u00e0 l'interface d\u00e9finie pour les files. Pour cela il faudra utiliser deux attributs tete et queue , qui repr\u00e9senteront respectivement le chainon de d\u00e9but et le chainon de fin de la file. D\u00e9filer consistera \u00e0 changer la t\u00eate en sortant la valeur : Enfiler consistera \u00e0 changer la queue : Enonc\u00e9 Compl\u00e9ter le code suivant pour qu'il respecte l'interface d\u00e9finie pour une file : class Chainon def __init__ ( self , valeur , suivant ) : self . valeur = valeur self . suivant = suivant class File : \"\"\"interface de file\"\"\" def __init__ ( self ) : self . tete = None self . queue = None def est_vide ( self ) : ... def enfiler ( self , v ) : ... def defiler ( self ) : ... Solution A venir !","title":"Impl\u00e9mentation par une liste cha\u00een\u00e9e mutable"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementation-par-deux-piles","text":"Une autre impl\u00e9mentation : Utiliser deux piles Une impl\u00e9mentation totalement diff\u00e9rente de la premi\u00e8re est d'utiliser deux piles, une pile d'entr\u00e9es et une pile de sorties. Le principe est celui d'un jeu de carte dans lequel il y a une d\u00e9fausse : Le paquet de carte principal est le paquet de sortie : c'est la pile de sortie . On tire une carte \u00e0 partir de cette pile. La d\u00e9fausse est compos\u00e9e de cartes jou\u00e9es face ouverte, pos\u00e9es sur le sommet du paquet de d\u00e9fausse. C'est la pile d'entr\u00e9es. Quand le paquet principal est vide, on prend la d\u00e9fausse et sans la m\u00e9langer on la retourne et elle prend la place du paquet principal. Enonc\u00e9 Compl\u00e9ter le code suivant pour qu'il corresponde \u00e0 l'interface d'une file telle que nous l'avons d\u00e9fini plus haut : class File : def __init__ ( self ) : self . entrees = Pile () self . sorties = Pile () def est_vide ( self ) : ... def enfiler ( self , v ) : ... def defiler ( self ) : ... Solution A venir !","title":"Impl\u00e9mentation par deux piles"},{"location":"NSI/Terminale/C03/Piles_et_files/#exercices","text":"Ajouter des m\u00e9thodes Enonc\u00e9 Compl\u00e9ter le code de la classe Pile construite \u00e0 partir d'une liste cha\u00een\u00e9e avec les m\u00e9thodes suivantes : Une m\u00e9thode consulter permettant de conna\u00eetre l'\u00e9l\u00e9ment au sommet de la pile sans le d\u00e9piler . Une m\u00e9thode vider permettant de vider la pile de ses \u00e9l\u00e9ments Une m\u00e9thode taille renvoyant la taille de la pile. Quelle est la complexit\u00e9 utilis\u00e9e ? Solutions A venir ! Am\u00e9liorer le calcul de la taille Enonc\u00e9 Pour \u00e9viter le probl\u00e8me rencontr\u00e9 dans l'exercice pr\u00e9c\u00e9dent, nous allons modifier la structure de la classe Pile . Nous allons ajouter un attribut _taille \u00e0 la classe, qui contiendra en permanence la taille de la pile courante. Quelles m\u00e9thodes modifier ? Quelle est alors la complexit\u00e9 ? Solution A venir Calculatrice \u00e0 notation polonaise invers\u00e9e La notation polonaie invers\u00e9e (NPI ou RPN en anglais) permet d'\u00e9crire de fa\u00e7on non ambigu\u00eb les formules arithm\u00e9tiques sans utiliser de parenth\u00e8ses . Par exemple, le calcul \\(((1 + 2) \\times 4) + 3\\) est not\u00e9 en NPI : \\[ 1~2~+~4~\\times~3~+ \\] Le calcul \\(((1 + 2) \\times 4) + 3\\) peut se lire intuitivement : je mets 1, ( \\(1\\) ) ; j'ajoute 2, ( \\(2 +\\) ) ; je multiplie par 4, ( \\(4 \\times\\) ) ; j'ajoute 3. ( \\(3 +\\) ). Ce qui donne la notation pr\u00e9c\u00e9dente. On peut tester ce calcul et cette notation sur le simulateur omega de la calculatrice Numworks . La NPI est dites invers\u00e9e car elle d\u00e9rive de la notation polonaise pr\u00e9sent\u00e9e en 1924 par le math\u00e9maticien polonais Jan \u0141ukasiewicz, et elle s\u2019en diff\u00e9rencie par l\u2019ordre des termes, les op\u00e9randes y \u00e9tant pr\u00e9sent\u00e9s avant les op\u00e9rateurs. La structure de calcul en NPI est utilise une pile de la mani\u00e8re suivante : quand on rencontre un nombre, on l'enpile ; quand on rencontre un op\u00e9rateur ( \\(+,~\\times~,-~,...\\) ) on d\u00e9pile les deux nombres au sommet de la pile et on effectue l'op\u00e9ration, le r\u00e9sultat \u00e9tant de nouveau empil\u00e9. Si le calcul est correctement \u00e9crit, il y a toujours au moins deux nombres dans la pile quand on rencontre un op\u00e9rateur, et il reste un seul et unique nombre dans cette pile quand l'expresion a \u00e9t\u00e9 enti\u00e8rement lue. Enonc\u00e9 Cr\u00e9er une fonction NPI prenant en argument un calcul en NPI repr\u00e9sent\u00e9 sous la forme d'une cha\u00eene de caract\u00e8res dont les \u00e9lements (op\u00e9randes et op\u00e9rateurs) sont s\u00e9par\u00e9s d'un espace, et qui renvoie le r\u00e9sultat du calcul. Solution A venir !","title":"Exercices"},{"location":"NSI/Terminale/C03/ToursHanoi/","text":"","title":"TP : Tours de Hano\u00ef"},{"location":"NSI/Terminale/C04/BasesSQL1/","text":"Commandes de base en SQL : cr\u00e9ations de tables et types de donn\u00e9es Une utilisation efficace des bases de donn\u00e9es relationnelles n'est r\u00e9alisable qu'avec un SGBDR (Syst\u00e8me de Gestion de Bases d Donn\u00e9es Relationnelles), c'esst-\u00e0-dire un logiciel offrant : la d\u00e9finition des donn\u00e9es sous forme de relations ; la manipulation des donn\u00e9es par un langage d\u00e9claratif ; l\u2019administration des donn\u00e9es. Dans ce chapitre, nous nous contenterons d'utiliser de mani\u00e8re sommaire des fonctionnalit\u00e9s de SGBDR offertes : soit par les notebooks Capytale ; soit par le logiciel portable DB Browser for SQLite ; soit par l'interm\u00e9diaire de modules python. Nous verrons dans un chapitre post-\u00e9preuve les SGBDR un peu plus en d\u00e9tail. Pour l'instant nous nous contenterons des fonctionnalit\u00e9s de base du langage SQL Du mod\u00e8le relationnel \u00e0 la base de donn\u00e9e : une premi\u00e8re approche SQL ( Structured Query Language ) est directement inspir\u00e9 du mod\u00e8le relationnel d\u00e9fini dans la partie pr\u00e9c\u00e9dente . Ce langage est standardis\u00e9 par la norme ISO/IEC 9075 , dont la derni\u00e8re version date de 2016 . La syntaxe du SQL est volontairement verbeuse et proche de l'anglais standard. Nous allons montrer dans les exemples suivants la cr\u00e9ation d'une table, l'insertion d'\u00e9l\u00e9ments, et quelques requ\u00eates simples sur cette base de donn\u00e9e. Exemple : Cr\u00e9ation de la table usager Les lignes de code SQL suivantes permettent la cr\u00e9ation d'une table usager , qui correspond globalement \u00e0 la relation usager telle que d\u00e9finie par le sch\u00e9ma : usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) CREATE TABLE usager ( nom VARCHAR ( 90 ), prenom VARCHAR ( 90 ), email VARCHAR ( 60 ), cp VARCHAR ( 5 ), adresse VARCHAR ( 90 ), inscription DATE , code_barre CHAR ( 15 ) PRIMARY KEY ); On envoie ici au SGBD un ordre SQL de cr\u00e9ation de table, par l'interm\u00e9diare de la commande CREATE TABLE . Le nom de la table sera usager . Cette table contiendra des colonnes (ou champs qui correspondent aux attributs de la relation. La premi\u00e8re colonne nom est d\u00e9finie comme \u00e9tant du type VARCHAR , c'est-\u00e0-dire cha\u00eene de caract\u00e8re, avec une contrainte de longueur maximale de 90 caract\u00e8res. Il en est de m\u00eame pour les 5 premi\u00e8res colonnes, avec diff\u00e9rentes contraintes de longueur. La colonne inscription est d\u00e9finie comme \u00e9tant du type DATE . La derni\u00e8re colonne code_barre est d\u00e9finie comme \u00e9tant du type VARCHAR de longueur maximale 15, auquel on adjoint la contrainte PRIMARY KEY , qui indique simplement qu'il s'agit bien de la cl\u00e9 primaire de la relation. L'ordre se termine par un ; . SQL et case des caract\u00e8res SQL est insensible \u00e0 la casse . Il aurait \u00e9t\u00e9 tout aussi efficace d'\u00e9crire create table ou CrEaTE tABlE . De fait certaines r\u00e8gles de bonnes pratiques sont \u00e0 suivre : les mots r\u00e9serv\u00e9s de SQL sont \u00e9crits en majuscule ; les attributs sont \u00e9crits en minuscules , ainsi que les noms de tables 1 ; les noms d'attributs et de tables ne pouvant contenir d'espaces, ceux-ci sont remplac\u00e9s par le caract\u00e8re _ ( underscore ). les noms de table sont \u00e9crits au singulier. Exemple : insertions de lignes Les lignes SQL suivantes permettent l'insertion de trois lignes dans la table usager , qui correspondent \u00e0 trois entit\u00e9s de la relation Usager . INSERT INTO usager VALUES ( 'Pavie' , 'Auguste' , 'auguste.pavie@ggp.fr' , '22200' , '13 rue Anatole Le Braz, Guingamp' , '2021-11-09' , '012345678910111' ), ( 'Prevert' , 'Jacques' , 'jacques.prevert@ggp.fr' , '22200' , '58 Rue de la Trinit\u00e9, Guingamp' , '2021-11-10' , '012345678910112' ), ( 'Camus' , 'Albert' , 'albert.camus@grace' , '22205' , '2 Rue de Kerpaour, Gr\u00e2ces' , '2021-10-09' , '012345678910113' ) ; Chacune des lignes est un tuple, chaque composante correspondant \u00e0 la colonne d\u00e9finie dans l'ordre de cr\u00e9ation de table, dans l'ordre de d\u00e9finition (il existe un moyen d'\u00eatre plus explicite et de s'affranchir de l'ordre, que nous verrons plus tard). Vous pouvez constater que dans la troisi\u00e8me ligne, l'email n'est pas correctement \u00e9crit. Nous n'avons pour l'instant pas mis de contraintes suppl\u00e9mentaires sur le champ email , donc le SGBD acceptera cette entr\u00e9e comme correcte. Exemple : Premi\u00e8re requ\u00eate Nous allons maintenant interroger cette table par l'interm\u00e9diaire d'une requ\u00eate ( query en anglais) : SELECT nom , prenom FROM usager ; Cette requ\u00eate renvoie le r\u00e9sultat suivant : nom prenom Pavie Auguste Prevert Jacques Camus Albert c'est-\u00e0-dire une table avec les attributs nom et prenom . Diff\u00e9rences entre mod\u00e8le relationnel et SQL Formellement, SQL n'est pas aussi strict que le mod\u00e8le relationnel. En effet une table ne doit pas obligatoirement poss\u00e9der une cl\u00e9 primaire . La cons\u00e9quence directe de ce choix est une violation de la contrainte de relation, et il est tout \u00e0 fait possible d'avoir des doublons dans une table, ce qui sera tol\u00e9r\u00e9 par SQL. Mais c'est une mauvaise pratique ! Manipuler SQL Rendez-vous dans le bac-\u00e0-sable SQL sur Capytale. Ex\u00e9cutez les 4 premi\u00e8res cellules. Ex\u00e9cutez la cinqui\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ? Ex\u00e9cutez la sixi\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ? Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante : ('Brochen', 'Charles', 'charles.brochen@pontrieux.fr', '22260', '13 Rue de Pen Fantan, Pontrieux', '2021-10-11', '012345678910113') Que se passe-t-il ? Pourquoi ? Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante : ('Pavie', 'Auguste', 'auguste.pavie@ggp.fr', '22200', '13 rue Anatole Le Braz, Guingamp', '2021-11-09', '012345678910110') Que se passe-t-il ? Pourquoi ? Ex\u00e9cutez maintenant une requ\u00eate afin de r\u00e9cup\u00e9rer une table contenant les emails et code postaux des usagers dont la date d'inscription est le 10 Novembre 2021. Types de donn\u00e9es en SQL Selon le SGBD utilis\u00e9, certaines libert\u00e9s sont prises par rapport aux standards \u00e9dict\u00e9s par l'ISO. On peut n\u00e9anmoins d\u00e9gager des constantes dans les diff\u00e9rents types utilis\u00e9s Types num\u00e9riques Types num\u00e9riques De mani\u00e8re g\u00e9n\u00e9rale, le standard SQL d\u00e9finit des types num\u00e9riques repr\u00e9sentants de mani\u00e8re exacte ou approch\u00e9e . nom du type exact/approch\u00e9 description SMALLINT exact Entiers sign\u00e9s sur 16 bits ( \\(-32~768\\) \u00e0 \\(32~768\\) ) INT ou INTEGER exact Entiers sign\u00e9s sur 32 bits ( \\(-2~147~483~647\\) \u00e0 \\(2~147~483~647\\) ) BIGINT exact Entiers sign\u00e9s sur 64 bits ( \\(\\simeq -9\\times 10^{18}\\) \u00e0 $\\simeq 9\\times 10^{18}) DECIMAL(t,f) exact D\u00e9cimal sign\u00e9 de \\(t\\) chiffres dont \\(f\\) apr\u00e8s la virgule REAL approch\u00e9 Flottant sur 32 bits ( \\(-3,40\\times 10^{38}\\) \u00e0 \\(3,40\\times 10^{38}\\) ) DOUBLE PRECISION approch\u00e9 Flottant sur 64 bits ( \\(-1,79\\times 10^{308}\\) \u00e0 \\(1,79\\times 10^{308}\\) ) On peut noter le cas particulier du type DECIMAL(t,f) , qui permet du calcul en valeur exacte, par exemple sur des sommes d'argent. Par exemple, l'utilisation du type DECIMAL(5,2 permettra de travailler avec des sommes de \\(-999,99\\) \u20ac \u00e0 \\(999,99\\) \u20ac. Types textes Types textes En SQL, les cha\u00eenes de carcat\u00e8res sont d\u00e9limit\u00e9es par des guillemets simples ' . Il est possible d' \u00e9chapper un guillemet simple en le doublant, comme par exemple dans 'n''oubliez pas d''\u00e9chapper' . Il est possible d'ins\u00e9rer un caract\u00e8re retour chariot dans une cha\u00eene pour avoir des cha\u00eenes multilignes. nom du type description CHAR(n) Cha\u00eene d'exactement \\(n\\) caract\u00e8res VARCHAR(n) Cha\u00eene d'au plus \\(n\\) caract\u00e8res TEXT Cha\u00eene de taille quelconque La taille maximale d\u00e9pend du SGBD, mais tous supportent au moins \\(8~000\\) caract\u00e8res. La valeur minimale pour \\(n\\) est 1. Pour le type CHAR(n) , si la cha\u00eene stock\u00e9e est de longueur inf\u00e9rieure \u00e0 \\(n\\) , on compl\u00e8te la cha\u00eene \u00e0 droite par le nombre d'espaces n\u00e9cesaires. Le type TEXT est en fait un type VARCHAR de la dimension maximale support\u00e9e par le SGBD. Types bool\u00e9ens Type Bool\u00e9en Selon les SGBD, le type bool\u00e9en est in,\u00e9galement support\u00e9. Dans notre cas cette ann\u00e9e, on supposera qu'il l'est correctement (mais il existe de nombreuses possibilit\u00e9s pour le simuler, par exemple avec un type SMALLINT o\u00f9 \\(0\\) repr\u00e9sente False et le reste True ). Types temporels Types temporels Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie pr\u00e9c\u00e9dente, les types temporels repr\u00e9sentent parfois un cauchemar pour les programmeurs... Nous nous contenterons ici d'aborder de mani\u00e8re tr\u00e8s superficielle ces types : nom du type description DATE Une date au format 'AAAA-MM-JJ' TIME Une heure au format 'hh:mm:ss' TIMESTAMP Un instant au format 'AAAA-MM-JJ hh:mm:ss' Une propri\u00e9t\u00e9 int\u00e9ressante du type DATE est qu'il supporte l'addition correctement. si d est du type DATE , d+7 produira une date corerspondante \u00e0 7 jours apr\u00e8s d , en changeant jours, mois et ann\u00e9es correctement. Type NULL Une valeur NULL existe en SQL, et correspond \u00e0 l'absence de donn\u00e9e. Elle s'utilise comme la valeur None en Python. Elle est juste interdite pour les cl\u00e9s primaires . Il est possible de tester si une valeur est nulle ou non gr\u00e2ce aux commandes IS NULL ou IS NOT NULL . Cr\u00e9ations et suppressions de tables Cr\u00e9ation de tables Cr\u00e9ation de tables La cr\u00e9ation d'une table se fait par l'interm\u00e9diaire de la commande suivante : CREATE TABLE nom_table ( attribut_1 domaine_1 contrainte_1_1 contrainte_1_2 ..., attribut_2 domaine_2 contrainte_2_1 contrainte_2_2 ..., ..., attribut_n domaine_n contrainte_n_1 ..., contrainte_globale_1 , ..., contrainte_globale_n ); Une d\u00e9finition d'attributs consiste en : la donn\u00e9e d'un nom d'attribut (obigatoire) ; la donn\u00e9e d'un domaine (obligatoire) ; la donn\u00e9e de contraintes sur cet attribut (optionnel). Une contrainte qui porterait sur plusieurs attributs (par exemple une d\u00e9finition de cl\u00e9 primaire sur plusieurs attributs) est report\u00e9e en fin de d\u00e9inition, avant la parenth\u00e8se fermante. Exemple avec cl\u00e9 primaire simple La relation Livre suivante peut \u00eatre cr\u00e9e en SQL par la commande suivante : CREATE TABLE Livre ( titre VARCHAR ( 200 ), editeur VARCHAR ( 50 ), annee SMALLINT , ISBN CHAR ( 14 ) PRIMARY KEY ); On remarque l'utilisation de 14 caract\u00e8res exactement pour l'ISBN. Ex\u00e9cution de code Dans le bac \u00e0 sable SQL, cr\u00e9er la table Livre . Exemple avec cl\u00e9 primaire et cl\u00e9s \u00e9trang\u00e8res Maintenant que nous avopns cr\u00e9e les tables Usager et Livre , nous pouvons cr\u00e9er la table Emprunt telle que d\u00e9finie dans le sch\u00e9ma CREATE TABLE Emprunt ( code_barre CHAR ( 15 ) REFERENCES usager ( code_barre ), ISBN CHAR ( 14 ) PRIMARY KEY REFERENCES Livre ( ISBN ), retour DATE ); Cr\u00e9ation de code Cr\u00e9er le code SQL n\u00e9cessaire pour obtenir la table Auteur correspondant \u00e0 la relation Exemple de cr\u00e9ation de cl\u00e9 primaire avec de multiples attributs Pour la table Auteur_de d\u00e9finie par , on peut utiliser le code suivant : CREATE TABLE Auteur_de ( idA INT REFERENCES Auteur ( idA ), ISBN REFERENCES Livre ( ISBN ), PRIMARY KEY ( ida , ISBN )); Suppressions de tables Suprression de tables Pour supprimer une table, il suffit d'utiliser : DROP TABLE nom_de_la_table ; Attention toutefois, il n'est pas possible de supprimer une table si elle sert de r\u00e9f\u00e9rence pour une cl\u00e9 \u00e9trang\u00e8re ! Cela violerait une contrainte de r\u00e9f\u00e9rence . Nouvelles Contraintes d'int\u00e9grit\u00e9s Nous avons vu l'utilisation de PRIMARY KEY et REFERENCES , qui permettent de d\u00e9finir les contraintes de relation et de r\u00e9f\u00e9rences. Il est possible de rajouter en SQL d'autres types de contraintes. Contraintes d'unicit\u00e9 et de non-nullit\u00e9 Entre autres : il est possible de pr\u00e9ciser qu'un attribut (une colonne en langage SQL) ne peut \u00eatre vbide, en ajoutant la contrainte NOT NULL ; de m\u00eame il est possible de pr\u00e9ciser qu'un attribut ne peut exister en doublon, en ajoutant la contrainte UNIQUE . Ainsi, la table Usager peut \u00eatre red\u00e9finie par : CREATE TABLE usager ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , email VARCHAR ( 60 ) NOT NULL UNIQUE , cp VARCHAR ( 5 ) NOT NULL , adresse VARCHAR ( 90 ), inscription DATE NOT NULL , code_barre CHAR ( 15 ) PRIMARY KEY ); Ainsi red\u00e9finie, tous les attributs sauf l'adresse doivent \u00eatre renseign\u00e9s (la cl\u00e9 primaire ne devant p\u00e2s \u00eatre vide par nature). De plus l'email ne peut \u00eatre qu'unique (ce qui risque de poser des probl\u00e8mes pour certains couples ou pour des inscriptions d'enfants avec le email de leur parent). Auto-incr\u00e9ment Pour les cl\u00e9 primaires num\u00e9riques , il est possible d'ajouter la contrainte d' auto-incr\u00e9mentation de cet identifiant. Ainsi, \u00e0 chaque ajout d'une ligne (donc d'une entit\u00e9 ) dans la table, une nouvelle valeur de cl\u00e9 sera automatiquement fournie. Par exemple pour la table Auteur : CREATE TABLE Auteur ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , idA INT PRIMARY KEY AUTO_INCREMENT ); Par d\u00e9faut l'incr\u00e9mentation commence \u00e0 1. Contraintes sp\u00e9cifiques Il est aussi possible de placer certaines contraintes sp\u00e9cifiques lors de la cr\u00e9ation d'une table, gr\u00e2ce au mot cl\u00e9 CHECK suivi d'une formule bool\u00e9enne. Par exemple, si on souhaite introduire les ann\u00e9es de naissance et de d\u00e9c\u00e8s des auteurs, il est possible d'utiliser l'instruction suivante : CREATE TABLE Auteur ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , idA INT PRIMARY KEY AUTO_INCREMENT , naissance SMALLINT , deces SMALLINT , CHECK ( naissance IS NULL OR deces IS NULL OR naissance < deces ) ); Ainsi, on v\u00e9rifie qu'il n'y a pas d'erreurs sur une date de naissance post\u00e9rieure \u00e0 une date de d\u00e9c\u00e8s. On notera que cette contrainte s'\u00e9crit directement apr\u00e8s la derni\u00e8re d\u00e9finition d'attributs et que l'expression bool\u00e9enne est entre parenth\u00e8ses. Mise \u00e0 jour des tables Dans le bac \u00e0 sable, mettre \u00e0 jour les tables afin qu'elles correspondent aux derni\u00e8res instructions donn\u00e9es. Insertions de donn\u00e9es dans une table existante. Insertion de donn\u00e9es Pour ins\u00e9rer des donn\u00e9es dans une table existante, on utilise l'instruction \u00ccNSERT INTO . Il existe deux possibilit\u00e9s pour ins\u00e9rer des donn\u00e9es : En ins\u00e9rant les valeurs sans pr\u00e9ciser le nom des colonnes : `SQL INSERT INTO nom_table VALUES (valeur1, valeur2, ..., valeurn); les valeurs seront ins\u00e9r\u00e9es dans l'ordre d\u00e9fini lors de la cr\u00e9ation de la table. En ins\u00e9rant les valeurs en pr\u00e9cisant les colonnes concern\u00e9es : INSERT INTO nom_table ( attribut1 , attribut3 ) VALUES ( valeur1 , valeur3 ); Ici les valeurs ne seront ins\u00e9r\u00e9es que dans les colonnes qui correspondent au nom donn\u00e9. Exemple d'insertions Insertion compl\u00e8te : INSERT INTO Livre VALUES ( \"Dune\" , \"Pocket\" , 2021 , \"978-2266320542\" ); Les informations fournies seront ins\u00e9r\u00e9es dans l'ordre titre , \u00e9diteur , ann\u00e9e et \u00ccSBN . Insertion selon les colonnes : INSERT INTO Livre ( ISBN , titre ) VALUES ( \"978-2070319015\" , \"H2G2, tome 1 : Le Guide du voyageur galactique \" ); Seules les colonnes ISBN et titre sont renseign\u00e9es. les autres seront mises \u00e0 une valeur NULL . Warning Il est \u00e0 noter que les contraintes d'int\u00e9grit\u00e9s sont v\u00e9rifi\u00e9es lors de l'insertion. Une instruction du type : INSERT INTO Auteur ( nom , prenom , naissance , deces ) VALUES ( \"ADAMS\" , \"Douglas\" , 2001 , 1952 ); donnera une erreur par violation d'int\u00e9grit\u00e9 2 , la date de naissance \u00e9tant sup\u00e9rieure \u00e0 la date de d\u00e9c\u00e8s. Exercices Exercice 1 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 1 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er la table correspondante. Solution A venir ! Exercice 2 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 2 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes. Solution A venir ! Exercice 2 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 3 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes. Solution A venir ! tout le monde n'est pas forc\u00e9ment d'accord sur ce point. Certains mettent une majuscule \u00e0 la premi\u00e8re lettre du nom de la table... \u21a9 Pauvre Marvin ... \u21a9","title":"Bases de SQL 1"},{"location":"NSI/Terminale/C04/BasesSQL1/#commandes-de-base-en-sql-creations-de-tables-et-types-de-donnees","text":"Une utilisation efficace des bases de donn\u00e9es relationnelles n'est r\u00e9alisable qu'avec un SGBDR (Syst\u00e8me de Gestion de Bases d Donn\u00e9es Relationnelles), c'esst-\u00e0-dire un logiciel offrant : la d\u00e9finition des donn\u00e9es sous forme de relations ; la manipulation des donn\u00e9es par un langage d\u00e9claratif ; l\u2019administration des donn\u00e9es. Dans ce chapitre, nous nous contenterons d'utiliser de mani\u00e8re sommaire des fonctionnalit\u00e9s de SGBDR offertes : soit par les notebooks Capytale ; soit par le logiciel portable DB Browser for SQLite ; soit par l'interm\u00e9diaire de modules python. Nous verrons dans un chapitre post-\u00e9preuve les SGBDR un peu plus en d\u00e9tail. Pour l'instant nous nous contenterons des fonctionnalit\u00e9s de base du langage SQL","title":"Commandes de base en SQL : cr\u00e9ations de tables et types de donn\u00e9es"},{"location":"NSI/Terminale/C04/BasesSQL1/#du-modele-relationnel-a-la-base-de-donnee-une-premiere-approche","text":"SQL ( Structured Query Language ) est directement inspir\u00e9 du mod\u00e8le relationnel d\u00e9fini dans la partie pr\u00e9c\u00e9dente . Ce langage est standardis\u00e9 par la norme ISO/IEC 9075 , dont la derni\u00e8re version date de 2016 . La syntaxe du SQL est volontairement verbeuse et proche de l'anglais standard. Nous allons montrer dans les exemples suivants la cr\u00e9ation d'une table, l'insertion d'\u00e9l\u00e9ments, et quelques requ\u00eates simples sur cette base de donn\u00e9e. Exemple : Cr\u00e9ation de la table usager Les lignes de code SQL suivantes permettent la cr\u00e9ation d'une table usager , qui correspond globalement \u00e0 la relation usager telle que d\u00e9finie par le sch\u00e9ma : usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) CREATE TABLE usager ( nom VARCHAR ( 90 ), prenom VARCHAR ( 90 ), email VARCHAR ( 60 ), cp VARCHAR ( 5 ), adresse VARCHAR ( 90 ), inscription DATE , code_barre CHAR ( 15 ) PRIMARY KEY ); On envoie ici au SGBD un ordre SQL de cr\u00e9ation de table, par l'interm\u00e9diare de la commande CREATE TABLE . Le nom de la table sera usager . Cette table contiendra des colonnes (ou champs qui correspondent aux attributs de la relation. La premi\u00e8re colonne nom est d\u00e9finie comme \u00e9tant du type VARCHAR , c'est-\u00e0-dire cha\u00eene de caract\u00e8re, avec une contrainte de longueur maximale de 90 caract\u00e8res. Il en est de m\u00eame pour les 5 premi\u00e8res colonnes, avec diff\u00e9rentes contraintes de longueur. La colonne inscription est d\u00e9finie comme \u00e9tant du type DATE . La derni\u00e8re colonne code_barre est d\u00e9finie comme \u00e9tant du type VARCHAR de longueur maximale 15, auquel on adjoint la contrainte PRIMARY KEY , qui indique simplement qu'il s'agit bien de la cl\u00e9 primaire de la relation. L'ordre se termine par un ; . SQL et case des caract\u00e8res SQL est insensible \u00e0 la casse . Il aurait \u00e9t\u00e9 tout aussi efficace d'\u00e9crire create table ou CrEaTE tABlE . De fait certaines r\u00e8gles de bonnes pratiques sont \u00e0 suivre : les mots r\u00e9serv\u00e9s de SQL sont \u00e9crits en majuscule ; les attributs sont \u00e9crits en minuscules , ainsi que les noms de tables 1 ; les noms d'attributs et de tables ne pouvant contenir d'espaces, ceux-ci sont remplac\u00e9s par le caract\u00e8re _ ( underscore ). les noms de table sont \u00e9crits au singulier. Exemple : insertions de lignes Les lignes SQL suivantes permettent l'insertion de trois lignes dans la table usager , qui correspondent \u00e0 trois entit\u00e9s de la relation Usager . INSERT INTO usager VALUES ( 'Pavie' , 'Auguste' , 'auguste.pavie@ggp.fr' , '22200' , '13 rue Anatole Le Braz, Guingamp' , '2021-11-09' , '012345678910111' ), ( 'Prevert' , 'Jacques' , 'jacques.prevert@ggp.fr' , '22200' , '58 Rue de la Trinit\u00e9, Guingamp' , '2021-11-10' , '012345678910112' ), ( 'Camus' , 'Albert' , 'albert.camus@grace' , '22205' , '2 Rue de Kerpaour, Gr\u00e2ces' , '2021-10-09' , '012345678910113' ) ; Chacune des lignes est un tuple, chaque composante correspondant \u00e0 la colonne d\u00e9finie dans l'ordre de cr\u00e9ation de table, dans l'ordre de d\u00e9finition (il existe un moyen d'\u00eatre plus explicite et de s'affranchir de l'ordre, que nous verrons plus tard). Vous pouvez constater que dans la troisi\u00e8me ligne, l'email n'est pas correctement \u00e9crit. Nous n'avons pour l'instant pas mis de contraintes suppl\u00e9mentaires sur le champ email , donc le SGBD acceptera cette entr\u00e9e comme correcte. Exemple : Premi\u00e8re requ\u00eate Nous allons maintenant interroger cette table par l'interm\u00e9diaire d'une requ\u00eate ( query en anglais) : SELECT nom , prenom FROM usager ; Cette requ\u00eate renvoie le r\u00e9sultat suivant : nom prenom Pavie Auguste Prevert Jacques Camus Albert c'est-\u00e0-dire une table avec les attributs nom et prenom . Diff\u00e9rences entre mod\u00e8le relationnel et SQL Formellement, SQL n'est pas aussi strict que le mod\u00e8le relationnel. En effet une table ne doit pas obligatoirement poss\u00e9der une cl\u00e9 primaire . La cons\u00e9quence directe de ce choix est une violation de la contrainte de relation, et il est tout \u00e0 fait possible d'avoir des doublons dans une table, ce qui sera tol\u00e9r\u00e9 par SQL. Mais c'est une mauvaise pratique ! Manipuler SQL Rendez-vous dans le bac-\u00e0-sable SQL sur Capytale. Ex\u00e9cutez les 4 premi\u00e8res cellules. Ex\u00e9cutez la cinqui\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ? Ex\u00e9cutez la sixi\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ? Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante : ('Brochen', 'Charles', 'charles.brochen@pontrieux.fr', '22260', '13 Rue de Pen Fantan, Pontrieux', '2021-10-11', '012345678910113') Que se passe-t-il ? Pourquoi ? Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante : ('Pavie', 'Auguste', 'auguste.pavie@ggp.fr', '22200', '13 rue Anatole Le Braz, Guingamp', '2021-11-09', '012345678910110') Que se passe-t-il ? Pourquoi ? Ex\u00e9cutez maintenant une requ\u00eate afin de r\u00e9cup\u00e9rer une table contenant les emails et code postaux des usagers dont la date d'inscription est le 10 Novembre 2021.","title":"Du mod\u00e8le relationnel \u00e0 la base de donn\u00e9e : une premi\u00e8re approche"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-de-donnees-en-sql","text":"Selon le SGBD utilis\u00e9, certaines libert\u00e9s sont prises par rapport aux standards \u00e9dict\u00e9s par l'ISO. On peut n\u00e9anmoins d\u00e9gager des constantes dans les diff\u00e9rents types utilis\u00e9s","title":"Types de donn\u00e9es en SQL"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-numeriques","text":"Types num\u00e9riques De mani\u00e8re g\u00e9n\u00e9rale, le standard SQL d\u00e9finit des types num\u00e9riques repr\u00e9sentants de mani\u00e8re exacte ou approch\u00e9e . nom du type exact/approch\u00e9 description SMALLINT exact Entiers sign\u00e9s sur 16 bits ( \\(-32~768\\) \u00e0 \\(32~768\\) ) INT ou INTEGER exact Entiers sign\u00e9s sur 32 bits ( \\(-2~147~483~647\\) \u00e0 \\(2~147~483~647\\) ) BIGINT exact Entiers sign\u00e9s sur 64 bits ( \\(\\simeq -9\\times 10^{18}\\) \u00e0 $\\simeq 9\\times 10^{18}) DECIMAL(t,f) exact D\u00e9cimal sign\u00e9 de \\(t\\) chiffres dont \\(f\\) apr\u00e8s la virgule REAL approch\u00e9 Flottant sur 32 bits ( \\(-3,40\\times 10^{38}\\) \u00e0 \\(3,40\\times 10^{38}\\) ) DOUBLE PRECISION approch\u00e9 Flottant sur 64 bits ( \\(-1,79\\times 10^{308}\\) \u00e0 \\(1,79\\times 10^{308}\\) ) On peut noter le cas particulier du type DECIMAL(t,f) , qui permet du calcul en valeur exacte, par exemple sur des sommes d'argent. Par exemple, l'utilisation du type DECIMAL(5,2 permettra de travailler avec des sommes de \\(-999,99\\) \u20ac \u00e0 \\(999,99\\) \u20ac.","title":"Types num\u00e9riques"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-textes","text":"Types textes En SQL, les cha\u00eenes de carcat\u00e8res sont d\u00e9limit\u00e9es par des guillemets simples ' . Il est possible d' \u00e9chapper un guillemet simple en le doublant, comme par exemple dans 'n''oubliez pas d''\u00e9chapper' . Il est possible d'ins\u00e9rer un caract\u00e8re retour chariot dans une cha\u00eene pour avoir des cha\u00eenes multilignes. nom du type description CHAR(n) Cha\u00eene d'exactement \\(n\\) caract\u00e8res VARCHAR(n) Cha\u00eene d'au plus \\(n\\) caract\u00e8res TEXT Cha\u00eene de taille quelconque La taille maximale d\u00e9pend du SGBD, mais tous supportent au moins \\(8~000\\) caract\u00e8res. La valeur minimale pour \\(n\\) est 1. Pour le type CHAR(n) , si la cha\u00eene stock\u00e9e est de longueur inf\u00e9rieure \u00e0 \\(n\\) , on compl\u00e8te la cha\u00eene \u00e0 droite par le nombre d'espaces n\u00e9cesaires. Le type TEXT est en fait un type VARCHAR de la dimension maximale support\u00e9e par le SGBD.","title":"Types textes"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-booleens","text":"Type Bool\u00e9en Selon les SGBD, le type bool\u00e9en est in,\u00e9galement support\u00e9. Dans notre cas cette ann\u00e9e, on supposera qu'il l'est correctement (mais il existe de nombreuses possibilit\u00e9s pour le simuler, par exemple avec un type SMALLINT o\u00f9 \\(0\\) repr\u00e9sente False et le reste True ).","title":"Types bool\u00e9ens"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-temporels","text":"Types temporels Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie pr\u00e9c\u00e9dente, les types temporels repr\u00e9sentent parfois un cauchemar pour les programmeurs... Nous nous contenterons ici d'aborder de mani\u00e8re tr\u00e8s superficielle ces types : nom du type description DATE Une date au format 'AAAA-MM-JJ' TIME Une heure au format 'hh:mm:ss' TIMESTAMP Un instant au format 'AAAA-MM-JJ hh:mm:ss' Une propri\u00e9t\u00e9 int\u00e9ressante du type DATE est qu'il supporte l'addition correctement. si d est du type DATE , d+7 produira une date corerspondante \u00e0 7 jours apr\u00e8s d , en changeant jours, mois et ann\u00e9es correctement.","title":"Types temporels"},{"location":"NSI/Terminale/C04/BasesSQL1/#type-null","text":"Une valeur NULL existe en SQL, et correspond \u00e0 l'absence de donn\u00e9e. Elle s'utilise comme la valeur None en Python. Elle est juste interdite pour les cl\u00e9s primaires . Il est possible de tester si une valeur est nulle ou non gr\u00e2ce aux commandes IS NULL ou IS NOT NULL .","title":"Type NULL"},{"location":"NSI/Terminale/C04/BasesSQL1/#creations-et-suppressions-de-tables","text":"","title":"Cr\u00e9ations et suppressions de tables"},{"location":"NSI/Terminale/C04/BasesSQL1/#creation-de-tables","text":"Cr\u00e9ation de tables La cr\u00e9ation d'une table se fait par l'interm\u00e9diaire de la commande suivante : CREATE TABLE nom_table ( attribut_1 domaine_1 contrainte_1_1 contrainte_1_2 ..., attribut_2 domaine_2 contrainte_2_1 contrainte_2_2 ..., ..., attribut_n domaine_n contrainte_n_1 ..., contrainte_globale_1 , ..., contrainte_globale_n ); Une d\u00e9finition d'attributs consiste en : la donn\u00e9e d'un nom d'attribut (obigatoire) ; la donn\u00e9e d'un domaine (obligatoire) ; la donn\u00e9e de contraintes sur cet attribut (optionnel). Une contrainte qui porterait sur plusieurs attributs (par exemple une d\u00e9finition de cl\u00e9 primaire sur plusieurs attributs) est report\u00e9e en fin de d\u00e9inition, avant la parenth\u00e8se fermante. Exemple avec cl\u00e9 primaire simple La relation Livre suivante peut \u00eatre cr\u00e9e en SQL par la commande suivante : CREATE TABLE Livre ( titre VARCHAR ( 200 ), editeur VARCHAR ( 50 ), annee SMALLINT , ISBN CHAR ( 14 ) PRIMARY KEY ); On remarque l'utilisation de 14 caract\u00e8res exactement pour l'ISBN. Ex\u00e9cution de code Dans le bac \u00e0 sable SQL, cr\u00e9er la table Livre . Exemple avec cl\u00e9 primaire et cl\u00e9s \u00e9trang\u00e8res Maintenant que nous avopns cr\u00e9e les tables Usager et Livre , nous pouvons cr\u00e9er la table Emprunt telle que d\u00e9finie dans le sch\u00e9ma CREATE TABLE Emprunt ( code_barre CHAR ( 15 ) REFERENCES usager ( code_barre ), ISBN CHAR ( 14 ) PRIMARY KEY REFERENCES Livre ( ISBN ), retour DATE ); Cr\u00e9ation de code Cr\u00e9er le code SQL n\u00e9cessaire pour obtenir la table Auteur correspondant \u00e0 la relation Exemple de cr\u00e9ation de cl\u00e9 primaire avec de multiples attributs Pour la table Auteur_de d\u00e9finie par , on peut utiliser le code suivant : CREATE TABLE Auteur_de ( idA INT REFERENCES Auteur ( idA ), ISBN REFERENCES Livre ( ISBN ), PRIMARY KEY ( ida , ISBN ));","title":"Cr\u00e9ation de tables"},{"location":"NSI/Terminale/C04/BasesSQL1/#suppressions-de-tables","text":"Suprression de tables Pour supprimer une table, il suffit d'utiliser : DROP TABLE nom_de_la_table ; Attention toutefois, il n'est pas possible de supprimer une table si elle sert de r\u00e9f\u00e9rence pour une cl\u00e9 \u00e9trang\u00e8re ! Cela violerait une contrainte de r\u00e9f\u00e9rence .","title":"Suppressions de tables"},{"location":"NSI/Terminale/C04/BasesSQL1/#nouvelles-contraintes-dintegrites","text":"Nous avons vu l'utilisation de PRIMARY KEY et REFERENCES , qui permettent de d\u00e9finir les contraintes de relation et de r\u00e9f\u00e9rences. Il est possible de rajouter en SQL d'autres types de contraintes.","title":"Nouvelles Contraintes d'int\u00e9grit\u00e9s"},{"location":"NSI/Terminale/C04/BasesSQL1/#contraintes-dunicite-et-de-non-nullite","text":"Entre autres : il est possible de pr\u00e9ciser qu'un attribut (une colonne en langage SQL) ne peut \u00eatre vbide, en ajoutant la contrainte NOT NULL ; de m\u00eame il est possible de pr\u00e9ciser qu'un attribut ne peut exister en doublon, en ajoutant la contrainte UNIQUE . Ainsi, la table Usager peut \u00eatre red\u00e9finie par : CREATE TABLE usager ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , email VARCHAR ( 60 ) NOT NULL UNIQUE , cp VARCHAR ( 5 ) NOT NULL , adresse VARCHAR ( 90 ), inscription DATE NOT NULL , code_barre CHAR ( 15 ) PRIMARY KEY ); Ainsi red\u00e9finie, tous les attributs sauf l'adresse doivent \u00eatre renseign\u00e9s (la cl\u00e9 primaire ne devant p\u00e2s \u00eatre vide par nature). De plus l'email ne peut \u00eatre qu'unique (ce qui risque de poser des probl\u00e8mes pour certains couples ou pour des inscriptions d'enfants avec le email de leur parent).","title":"Contraintes d'unicit\u00e9 et de non-nullit\u00e9"},{"location":"NSI/Terminale/C04/BasesSQL1/#auto-increment","text":"Pour les cl\u00e9 primaires num\u00e9riques , il est possible d'ajouter la contrainte d' auto-incr\u00e9mentation de cet identifiant. Ainsi, \u00e0 chaque ajout d'une ligne (donc d'une entit\u00e9 ) dans la table, une nouvelle valeur de cl\u00e9 sera automatiquement fournie. Par exemple pour la table Auteur : CREATE TABLE Auteur ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , idA INT PRIMARY KEY AUTO_INCREMENT ); Par d\u00e9faut l'incr\u00e9mentation commence \u00e0 1.","title":"Auto-incr\u00e9ment"},{"location":"NSI/Terminale/C04/BasesSQL1/#contraintes-specifiques","text":"Il est aussi possible de placer certaines contraintes sp\u00e9cifiques lors de la cr\u00e9ation d'une table, gr\u00e2ce au mot cl\u00e9 CHECK suivi d'une formule bool\u00e9enne. Par exemple, si on souhaite introduire les ann\u00e9es de naissance et de d\u00e9c\u00e8s des auteurs, il est possible d'utiliser l'instruction suivante : CREATE TABLE Auteur ( nom VARCHAR ( 90 ) NOT NULL , prenom VARCHAR ( 90 ) NOT NULL , idA INT PRIMARY KEY AUTO_INCREMENT , naissance SMALLINT , deces SMALLINT , CHECK ( naissance IS NULL OR deces IS NULL OR naissance < deces ) ); Ainsi, on v\u00e9rifie qu'il n'y a pas d'erreurs sur une date de naissance post\u00e9rieure \u00e0 une date de d\u00e9c\u00e8s. On notera que cette contrainte s'\u00e9crit directement apr\u00e8s la derni\u00e8re d\u00e9finition d'attributs et que l'expression bool\u00e9enne est entre parenth\u00e8ses. Mise \u00e0 jour des tables Dans le bac \u00e0 sable, mettre \u00e0 jour les tables afin qu'elles correspondent aux derni\u00e8res instructions donn\u00e9es.","title":"Contraintes sp\u00e9cifiques"},{"location":"NSI/Terminale/C04/BasesSQL1/#insertions-de-donnees-dans-une-table-existante","text":"Insertion de donn\u00e9es Pour ins\u00e9rer des donn\u00e9es dans une table existante, on utilise l'instruction \u00ccNSERT INTO . Il existe deux possibilit\u00e9s pour ins\u00e9rer des donn\u00e9es : En ins\u00e9rant les valeurs sans pr\u00e9ciser le nom des colonnes : `SQL INSERT INTO nom_table VALUES (valeur1, valeur2, ..., valeurn); les valeurs seront ins\u00e9r\u00e9es dans l'ordre d\u00e9fini lors de la cr\u00e9ation de la table. En ins\u00e9rant les valeurs en pr\u00e9cisant les colonnes concern\u00e9es : INSERT INTO nom_table ( attribut1 , attribut3 ) VALUES ( valeur1 , valeur3 ); Ici les valeurs ne seront ins\u00e9r\u00e9es que dans les colonnes qui correspondent au nom donn\u00e9. Exemple d'insertions Insertion compl\u00e8te : INSERT INTO Livre VALUES ( \"Dune\" , \"Pocket\" , 2021 , \"978-2266320542\" ); Les informations fournies seront ins\u00e9r\u00e9es dans l'ordre titre , \u00e9diteur , ann\u00e9e et \u00ccSBN . Insertion selon les colonnes : INSERT INTO Livre ( ISBN , titre ) VALUES ( \"978-2070319015\" , \"H2G2, tome 1 : Le Guide du voyageur galactique \" ); Seules les colonnes ISBN et titre sont renseign\u00e9es. les autres seront mises \u00e0 une valeur NULL . Warning Il est \u00e0 noter que les contraintes d'int\u00e9grit\u00e9s sont v\u00e9rifi\u00e9es lors de l'insertion. Une instruction du type : INSERT INTO Auteur ( nom , prenom , naissance , deces ) VALUES ( \"ADAMS\" , \"Douglas\" , 2001 , 1952 ); donnera une erreur par violation d'int\u00e9grit\u00e9 2 , la date de naissance \u00e9tant sup\u00e9rieure \u00e0 la date de d\u00e9c\u00e8s.","title":"Insertions de donn\u00e9es dans une table existante."},{"location":"NSI/Terminale/C04/BasesSQL1/#exercices","text":"Exercice 1 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 1 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er la table correspondante. Solution A venir ! Exercice 2 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 2 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes. Solution A venir ! Exercice 2 Enonc\u00e9 Reprendre l'\u00e9noonc\u00e9 de l'exercice 3 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes. Solution A venir ! tout le monde n'est pas forc\u00e9ment d'accord sur ce point. Certains mettent une majuscule \u00e0 la premi\u00e8re lettre du nom de la table... \u21a9 Pauvre Marvin ... \u21a9","title":"Exercices"},{"location":"NSI/Terminale/C04/BasesSQL2/","text":"Requ\u00eates SQL Les exemples et exercices donn\u00e9s ci-dessous sont, sauf mention contraire, disponibles directement dans un notebook Capytale . Projections Projection L'op\u00e9ration de projection consite \u00e0 ne r\u00e9cup\u00e9rer que les champs (= les colonnes) d'une table donn\u00e9e. En SQL, on l'obtiens par l'instruction : SELECT colonne1 , colonne2 ,... FROM nom_table ; Exemple 1 : Projection Pour r\u00e9cup\u00e9rer les colonnes titre et isbn de la table livre : SELECT titre , isbn FROM livre ; Pour r\u00e9cup\u00e9rer l'int\u00e9gralit\u00e9 des colonnes, on peut utiliser l'op\u00e9rateur joker * : SELECT * FROM auteur ; Renommer les colonnes Il est possible dans une op\u00e9ration de projection de renommer les colonnes obtenues, gr\u00e2ce \u00e0 l'op\u00e9rateur AS : SELECT titre , isbn , annee AS annee_publication FROM livre ; S\u00e9lections S\u00e9lection (ou restriction) L'op\u00e9ration de s\u00e9lection consiste \u00e0 interroger une base de donn\u00e9es pour ne r\u00e9cup\u00e9rer que les lignes d'une table correspondant \u00e0 une ou des conditions sp\u00e9cifi\u00e9es. En SQL, on rajoute la clause WHERE suivie des conditions exprim\u00e9es sous la forme d'une expression bool\u00e9enne , utilisant les mots cl\u00e9s AND et OR par exemple : SELECT colonne1 , colonne2 ,... FROM nom_table WHERE conditions ; Exemple 2 : S\u00e9lection S\u00e9lection avec condition unique : SELECT titre FROM livre WHERE annee >= 2020 ; S\u00e9lection avec conditions multiples : SELECT titre FROM livre WHERE annee >= 1970 AND annee <= 2000 AND editeur = 'Dargaud' ; Requ\u00eate sur les cha\u00eenes de caract\u00e8res Si on veut chercher tous les livres dont le titre contient la cha\u00eene Ast\u00e9rix , il faudra utiliser une clause comme la suivante : SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; La cha\u00eene de caract\u00e8res '%Ast\u00e9rix%' s'appelle un motif . L'op\u00e9ration s LIKE m renverra True si la cha\u00eene de caract\u00e8res s correspond au motif m . Le caract\u00e8re % est un joker qui peut-\u00eatre substitu\u00e9 par n'importe quelle cha\u00eene . Il existe aussi l'op\u00e9rateur _ (underscore) qui lui repr\u00e9sente n'importe quel caract\u00e8re . Ainsi, pour chercher tous les auteurs dont le nom commence par F, se termine par R et fait 6 caract\u00e8res de long : SELECT nom , prenom FROM auteur WHERE nom LIKE 'F____R' ; Fonctions d'aggr\u00e9gations Il existe un certain nombre de fonctions permettant d'effectuer des op\u00e9rations sur des colonnes. Ces fonctions s'appellent fonctions d'aggr\u00e9gations , et renvoie un r\u00e9sultat sous al forme d'une table d'une ligne et d'une colonne. Voici les plus utiles : Fonction COUNT Compter des lignes La fonction SQL COUNT permet de compter le nombre de lignes que poss\u00e8de une table, \u00e9ventuellement apor\u00e8s s\u00e9lection. Sa syntaxe est : SELECT COUNT ( colonne ) FROM table WHERE conditions ; Exemples COmpter le nombre de lignes dans la table auteur : SELECT COUNT ( * ) FROM auteur ; Compter le nombre de titres contenant le cha\u00eene Ast\u00e9rix SELECT count ( titre ) FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; Un pi\u00e8ge L'ordre SQL suivant SELECT count ( titre ), isbn FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; renvoie une table avec une ligne et deux colonnes : L'isbn renvoy\u00e9 ne correspond qu'au premier titre trouv\u00e9 contenant la cha\u00eene Ast\u00e9rix : SELECT titre , isbn FROM livre WHERE isbn = '978-2864972662' ; Alias de colonne Avec la fonction COUNT , les titres des colonnes renvoy\u00e9s ne sont pas forc\u00e9m\u00f9ent parlant. Il est possible de les changer en leur fournisdsant un alias par l'interm\u00e9diaire de AS : SELECT count ( titre ) AS nombre_asterix FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; Fonctions num\u00e9riques Les fonctions suivantes ne peuvent s'appliquer que sur des colonnes dont le type est num\u00e9rique : SUM : effectue la somme de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant au conditions donn\u00e9es AVG ( average ) : effectue la moyenne de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant au conditions donn\u00e9es. SELECT SUM ( annee ) as somme FROM livre ; SELECT AVG ( annee ) as moyenne FROM livre ; Fonctions MIN et MAX Ces deux fonctions s'appliquent sur n'importe quel type, l'ordre sur les cha\u00eenes de caract\u00e8res \u00e9tant l'ordre lexicographique. : SELECT MIN ( nom ) FROM auteur ; SELECT MAX ( nom ) FROM auteur ; Tri et suppression des doublons Tri des colonnes Les r\u00e9sultats d'une requ\u00eate SQL sont en g\u00e9n\u00e9ral fournis dans l'ordre dans lequel ils sont trouv\u00e9s. Il est cependant possible d' ordonner les colonnes gr\u00e2ce \u00e0 la clause ORDER BY et les mots cl\u00e9s ASC ( ascending ) et DESC ( descending ): par ordre croissant : SELECT titre FROM livre WHERE annee >= 1990 ORDER BY titre ASC ; par ordre d\u00e9croissant : SELECT nom FROM auteur ORDER BY nom DESC ; Elimination des doublons Effectuons la requ\u00eate suivante : SELECT prenom FROM auteur WHERE prenom LIKE 'M%' ; Le r\u00e9sultat est la table suivante : Nous constatons la pr\u00e9sence de 3 pr\u00e9noms Michel dans la table r\u00e9sultat. Il est possible d'\u00e9liminer de tels doublons dans une table en utilisant la clause DISTINCT : SELECT DISTINCT prenom FROM auteur WHERE prenom LIKE 'M%' ; On r\u00e9cup\u00e8re alors en r\u00e9sultat la table suivante : Attention Attention toutefois ! Une requ\u00eate telle que la suivante n'\u00e9limineras pas les doublons de pr\u00e9nom : SELECT DISTINCT prenom , nom FROM auteur WHERE prenom LIKE 'M%' ; En effet la clause DISTINCT \u00e9limine les lignes exactement identiques. Ici les couples (prenom, nom) sont bien tous diff\u00e9rents. Application Exercice Effectuer la premi\u00e8re partie ainsi que les requ\u00eates sans jointures du notebokk jeux olympiques (merci M. Leleu).","title":"Bases de SQL 2"},{"location":"NSI/Terminale/C04/BasesSQL2/#requetes-sql","text":"Les exemples et exercices donn\u00e9s ci-dessous sont, sauf mention contraire, disponibles directement dans un notebook Capytale .","title":"Requ\u00eates SQL"},{"location":"NSI/Terminale/C04/BasesSQL2/#projections","text":"Projection L'op\u00e9ration de projection consite \u00e0 ne r\u00e9cup\u00e9rer que les champs (= les colonnes) d'une table donn\u00e9e. En SQL, on l'obtiens par l'instruction : SELECT colonne1 , colonne2 ,... FROM nom_table ; Exemple 1 : Projection Pour r\u00e9cup\u00e9rer les colonnes titre et isbn de la table livre : SELECT titre , isbn FROM livre ; Pour r\u00e9cup\u00e9rer l'int\u00e9gralit\u00e9 des colonnes, on peut utiliser l'op\u00e9rateur joker * : SELECT * FROM auteur ; Renommer les colonnes Il est possible dans une op\u00e9ration de projection de renommer les colonnes obtenues, gr\u00e2ce \u00e0 l'op\u00e9rateur AS : SELECT titre , isbn , annee AS annee_publication FROM livre ;","title":"Projections"},{"location":"NSI/Terminale/C04/BasesSQL2/#selections","text":"S\u00e9lection (ou restriction) L'op\u00e9ration de s\u00e9lection consiste \u00e0 interroger une base de donn\u00e9es pour ne r\u00e9cup\u00e9rer que les lignes d'une table correspondant \u00e0 une ou des conditions sp\u00e9cifi\u00e9es. En SQL, on rajoute la clause WHERE suivie des conditions exprim\u00e9es sous la forme d'une expression bool\u00e9enne , utilisant les mots cl\u00e9s AND et OR par exemple : SELECT colonne1 , colonne2 ,... FROM nom_table WHERE conditions ; Exemple 2 : S\u00e9lection S\u00e9lection avec condition unique : SELECT titre FROM livre WHERE annee >= 2020 ; S\u00e9lection avec conditions multiples : SELECT titre FROM livre WHERE annee >= 1970 AND annee <= 2000 AND editeur = 'Dargaud' ; Requ\u00eate sur les cha\u00eenes de caract\u00e8res Si on veut chercher tous les livres dont le titre contient la cha\u00eene Ast\u00e9rix , il faudra utiliser une clause comme la suivante : SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; La cha\u00eene de caract\u00e8res '%Ast\u00e9rix%' s'appelle un motif . L'op\u00e9ration s LIKE m renverra True si la cha\u00eene de caract\u00e8res s correspond au motif m . Le caract\u00e8re % est un joker qui peut-\u00eatre substitu\u00e9 par n'importe quelle cha\u00eene . Il existe aussi l'op\u00e9rateur _ (underscore) qui lui repr\u00e9sente n'importe quel caract\u00e8re . Ainsi, pour chercher tous les auteurs dont le nom commence par F, se termine par R et fait 6 caract\u00e8res de long : SELECT nom , prenom FROM auteur WHERE nom LIKE 'F____R' ;","title":"S\u00e9lections"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-daggregations","text":"Il existe un certain nombre de fonctions permettant d'effectuer des op\u00e9rations sur des colonnes. Ces fonctions s'appellent fonctions d'aggr\u00e9gations , et renvoie un r\u00e9sultat sous al forme d'une table d'une ligne et d'une colonne. Voici les plus utiles :","title":"Fonctions d'aggr\u00e9gations"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonction-count","text":"Compter des lignes La fonction SQL COUNT permet de compter le nombre de lignes que poss\u00e8de une table, \u00e9ventuellement apor\u00e8s s\u00e9lection. Sa syntaxe est : SELECT COUNT ( colonne ) FROM table WHERE conditions ; Exemples COmpter le nombre de lignes dans la table auteur : SELECT COUNT ( * ) FROM auteur ; Compter le nombre de titres contenant le cha\u00eene Ast\u00e9rix SELECT count ( titre ) FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; Un pi\u00e8ge L'ordre SQL suivant SELECT count ( titre ), isbn FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ; renvoie une table avec une ligne et deux colonnes : L'isbn renvoy\u00e9 ne correspond qu'au premier titre trouv\u00e9 contenant la cha\u00eene Ast\u00e9rix : SELECT titre , isbn FROM livre WHERE isbn = '978-2864972662' ; Alias de colonne Avec la fonction COUNT , les titres des colonnes renvoy\u00e9s ne sont pas forc\u00e9m\u00f9ent parlant. Il est possible de les changer en leur fournisdsant un alias par l'interm\u00e9diaire de AS : SELECT count ( titre ) AS nombre_asterix FROM livre WHERE titre LIKE '%Ast\u00e9rix%' ;","title":"Fonction COUNT"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-numeriques","text":"Les fonctions suivantes ne peuvent s'appliquer que sur des colonnes dont le type est num\u00e9rique : SUM : effectue la somme de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant au conditions donn\u00e9es AVG ( average ) : effectue la moyenne de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant au conditions donn\u00e9es. SELECT SUM ( annee ) as somme FROM livre ; SELECT AVG ( annee ) as moyenne FROM livre ;","title":"Fonctions num\u00e9riques"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-min-et-max","text":"Ces deux fonctions s'appliquent sur n'importe quel type, l'ordre sur les cha\u00eenes de caract\u00e8res \u00e9tant l'ordre lexicographique. : SELECT MIN ( nom ) FROM auteur ; SELECT MAX ( nom ) FROM auteur ;","title":"Fonctions MIN et MAX"},{"location":"NSI/Terminale/C04/BasesSQL2/#tri-et-suppression-des-doublons","text":"","title":"Tri et suppression des doublons"},{"location":"NSI/Terminale/C04/BasesSQL2/#tri-des-colonnes","text":"Les r\u00e9sultats d'une requ\u00eate SQL sont en g\u00e9n\u00e9ral fournis dans l'ordre dans lequel ils sont trouv\u00e9s. Il est cependant possible d' ordonner les colonnes gr\u00e2ce \u00e0 la clause ORDER BY et les mots cl\u00e9s ASC ( ascending ) et DESC ( descending ): par ordre croissant : SELECT titre FROM livre WHERE annee >= 1990 ORDER BY titre ASC ; par ordre d\u00e9croissant : SELECT nom FROM auteur ORDER BY nom DESC ;","title":"Tri des colonnes"},{"location":"NSI/Terminale/C04/BasesSQL2/#elimination-des-doublons","text":"Effectuons la requ\u00eate suivante : SELECT prenom FROM auteur WHERE prenom LIKE 'M%' ; Le r\u00e9sultat est la table suivante : Nous constatons la pr\u00e9sence de 3 pr\u00e9noms Michel dans la table r\u00e9sultat. Il est possible d'\u00e9liminer de tels doublons dans une table en utilisant la clause DISTINCT : SELECT DISTINCT prenom FROM auteur WHERE prenom LIKE 'M%' ; On r\u00e9cup\u00e8re alors en r\u00e9sultat la table suivante : Attention Attention toutefois ! Une requ\u00eate telle que la suivante n'\u00e9limineras pas les doublons de pr\u00e9nom : SELECT DISTINCT prenom , nom FROM auteur WHERE prenom LIKE 'M%' ; En effet la clause DISTINCT \u00e9limine les lignes exactement identiques. Ici les couples (prenom, nom) sont bien tous diff\u00e9rents.","title":"Elimination des doublons"},{"location":"NSI/Terminale/C04/BasesSQL2/#application","text":"Exercice Effectuer la premi\u00e8re partie ainsi que les requ\u00eates sans jointures du notebokk jeux olympiques (merci M. Leleu).","title":"Application"},{"location":"NSI/Terminale/C04/ModeleRelationnel/","text":"Bases de donn\u00e9es et mod\u00e8le relationnel L'ensemble du chapitre est fortement influenc\u00e9 par : Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s , Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses Bases de donn\u00e9es, de la mod\u00e9lisation au SQL , Laurent Audibert, \u00e9ditions Ellipses Introduction aux bases de donn\u00e9es, types de mod\u00e8les Les bases de donn\u00e9es Il est difficile de proposer une d\u00e9finition exacte des bases de donn\u00e9es. Laurent Audibert 2 propose : D\u00e9finition g\u00e9n\u00e9rale Un ensemble organis\u00e9 d'informations avec un objectif commun. La d\u00e9finition est vague, mais d\u00e8s lors que des informations sont rassembl\u00e9es et stock\u00e9es d'une mani\u00e8re organis\u00e9e , on peut parler de bases de donn\u00e9es , quel que soit le support utilis\u00e9 (tablettes d'argile, papiers, fichiers, etc...) Bien entendu l'informatique, c'est-\u00e0-dire la science du traitement automatique de l'information, permet le traitement de grandes quantit\u00e9s d'informations, et surtout leur exploitation (ajout, suppression, mise \u00e0 jour, recherches, ...). Dans le cadre informatique, Laurent Audibert 2 propose : Base de donn\u00e9es informatis\u00e9es Une base de donn\u00e9es ( BDD , en anglais DataBase soit DB ) informatis\u00e9e est un ensemble structur\u00e9 de donn\u00e9es enregistr\u00e9es sur des supports accessibles par l'ordinateur, repr\u00e9sentant des informations du monde r\u00e9el et pouvant \u00eatre interrog\u00e9es et mise \u00e0 jour par une communaut\u00e9 d'utilisateurs. Nous verrons que cette d\u00e9finition impose un certain nombre de contraintes \u00e0 la mise en place des BDD informatis\u00e9es. La premi\u00e8re est la question de la coh\u00e9rence des donn\u00e9es . Exemple : Bases de donn\u00e9es musicales 2 Prenons l'exemple d'une base de donn\u00e9es contenant des albums musicaux, et qui m\u00e9morise pour chaque album son genre, son titre, et le nom du groupe ainsi que le nom du chanteur principal. L'id\u00e9e de base est de pr\u00e9senter les donn\u00e9es sous la forme d'une table, comme dans l'extrait ci-dessous : Genre Titre Groupe Chanteur Stoner Era Vulgaris Queen Of The Stone Age Josh Homme Metal Master of Puppets Metallica Metal Them Crooked Vultures Them Crooked Vultures Josh Homme Metal L'Enfant sauvage GOJIRA Jo Duplantier Stoner Dying surfer meet his maker All Them Withches Charles Michael Parks Jr M\u00e9tal Fortitude Gojira Joseph Duplantier Stoner Rock Nothing as the ideal All Them Withches Charles Michael Parks Jr Metal Progressif Magma Gojira Joseph DUPLANTIER La condition sine qua none pour garantir la faisabilit\u00e9 et la pertinence d'une recherche de donn\u00e9es est la coh\u00e9rence de ces donn\u00e9es . Ici on constate plusieurs probl\u00e8mes de coh\u00e9rence : Le nom du groupe Gojira est orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. Une recherche utilisant la cha\u00eene de caract\u00e8res Gojira ne donnera que deux r\u00e9sultats, alors que trois peuvent \u00eatre attendus. Le genre Metal est aussi orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. On notera qu'une recherche stricte avec la cha\u00eene Metal , c'est-\u00e0-dire bas\u00e9e sur l'\u00e9galit\u00e9, ne donnera que deux r\u00e9sultats, alors qu'une recherche \u00e9tendue, c'est-\u00e0-dire bas\u00e9e sur l'appartenance de la sous-cha\u00eene Metal \u00e0 la cha\u00eene donnant le genre, renverra elle trois r\u00e9sultats. Le nom du chanteur de Gojira est \u00e9crit de trois mani\u00e8res diff\u00e9rentes. On peut aussi noter que le nom du chanteur de Metallica n'est pas renseign\u00e9, ce qui eput peut-\u00eatre poser un probl\u00e8me de coh\u00e9rence. Ces probl\u00e8mes de coh\u00e9rence sont li\u00e9s (en partie), \u00e0 un probl\u00e8me de redondance des donn\u00e9es : en effet dans la table telle qu'elle est pr\u00e9sent\u00e9e, on va devoir saisir plusieurs fois les cha\u00eenes telles que Metal et Gojira , alors qu'elles ne repr\u00e9sentent bien qu'une seule entit\u00e9 chacune. Pour r\u00e9gler la question de la coh\u00e9rence des donn\u00e9es , il faudra en premier lieu trouver un moyen d'\u00e9viter la redondance de certaines donn\u00e9es. Historique et probl\u00e9matiques des diff\u00e9rents mod\u00e8les Mod\u00e8les de donn\u00e9es et structures de donn\u00e9es Ces deux concepts se placent \u00e0 diff\u00e9rents niveaux d'abstraction. Les mod\u00e8les de donn\u00e9es indique quelles caract\u00e9ristiques d'une entit\u00e9 r\u00e9elle on souhaite manipuler dans un programme, ainsi que les relations qui lient ces entit\u00e9s entre elles. Par exemple un groupe de musique va produire plusieurs albums, et un chanteur peut chanter dans plusieurs groupes. Une structure de donn\u00e9e indique la mani\u00e8re dont on va organiser les donn\u00e9es en machine . Ainsi pour un m\u00eame mod\u00e8le il existe plusieurs structures pouvant repr\u00e9senter ce mod\u00e8le (tableau, listes cha\u00een\u00e9es, objets...) Le premier mod\u00e8le ayant souhait\u00e9 s'attaquer au probl\u00e8me de la redondance des donn\u00e9es est le mod\u00e8le hi\u00e9rarchique , d\u00e9velopp\u00e9 par IBM dans les ann\u00e9es 1960, dans le cadre du programme Apollo de la NASA. Ce mod\u00e8le, tr\u00e8s d\u00e9pendant de la mani\u00e8re dont fonctionnait les ordinateurs de cette \u00e9poque, enregistre les donn\u00e9es \u00e0 la mani\u00e8re de l'organisation d'un syst\u00e8me de fichier, sous la forme d'un arbre ( structure arborescente ), de fa\u00e7on \u00e0 ce qu'un enregistrement n'ait qu'un seul possesseur. On peut en donner un exemple ci-dessous : ce type de mod\u00e8le peut \u00eatre pratique, mais il ne r\u00e9pond pas \u00e0 toutes les probl\u00e9matiques . En effet, ici nous n'avons pas introduit dans la hi\u00e9rarchie les leads vocaux. Voici ce que donne le sch\u00e9ma lorsqu'on les introduits : On constate ici que le choix d'organisation de l'arbre ne permet pas de r\u00e9gler la redondance des donn\u00e9es, puisque non seulement un m\u00eame chanteur peut \u00eatre lead vocal sur plusieurs albums, mais il peut l'\u00eatre aussi sur plusieurs groupes (comme Josh Homme par exemple). La structure hi\u00e9rarchique n'est ici pas adapt\u00e9e. Une des solutions propos\u00e9e pour ce probl\u00e8me a \u00e9t\u00e9 le mod\u00e8le r\u00e9seau , propos\u00e9 par Charles William Bachman \u00e0 la fin des ann\u00e9es 1960 2 . C.W. Bachman re\u00e7u le Prix Turing en 1973 pour ses contributions sur les technologies des bases de donn\u00e9es. On lui doit aussi le mod\u00e8le OSI (voir le cours de premi\u00e8re...). Une repr\u00e9sentation de nos albums dans le mod\u00e8le r\u00e9seau est la suivante : Ainsi, la redondance des donn\u00e9es n'est plus un probl\u00e8me. Cependant, le mod\u00e8le r\u00e9seau n'est pas un mod\u00e8le toujours efficace, puisque pour retrouver une donn\u00e9e (un chanteur par exemple), il faut conna\u00eetre la structure de ce r\u00e9seau, c'est-\u00e0-dire les liaisons existantes, ce qui rend les programmeurs d\u00e9pendants de la structure de donn\u00e9e . Le mod\u00e8le relationnel Historique Chercheur au centre de recherche d'IBM, Edgar Frank Codd , insatisfait des mod\u00e8les existant, chercha un mod\u00e8le plus simple permettant de g\u00e9rer un grand nombre de donn\u00e9es. Math\u00e9maticien de formation, il se basa sur la th\u00e9orie des ensembles et la logique des pr\u00e9dicats ( logique de premier ordre ) pour publier en 1970 un article 3 o\u00f9 il proposait de stocker des donn\u00e9es h\u00e9t\u00e9rog\u00e8nes dans des tables , comme dans le sch\u00e9ma ci-dessous : Ce mod\u00e8le, qualifi\u00e9 de relationnel \u00e9tait \u00e0 l'\u00e9poque consid\u00e9r\u00e9 comme une curiosit\u00e9 intellectuelle, car les ordinateurs en ce temps n'\u00e9taient pas capables de g\u00e9rer de mani\u00e8re efficace des tables de donn\u00e9es, et il n'\u00e9tait pas \u00e9vident qu'ils le soient un jour. Ce scepticisme n'a pas emp\u00each\u00e9 Codd de poursuivre ses travaux, et de concevoir un premier prototype de Syt\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles ( SGBDR ). Depuis les ann\u00e9es 1980 cette technologie a m\u00fbri, pour \u00eatre finalement adopt\u00e9e par le monde de la recherche et des entreprises. En parall\u00e8le, Codd mis au point un langage de manipulation des donn\u00e9es non-proc\u00e9dural , o\u00f9 l'utilisateur d\u00e9finit le r\u00e9sultat qu'il attend plut\u00f4t que la mani\u00e8re de l'obtenir . Ce langage nomm\u00e9 dans un premier temps SEQUEL ( Structured English Query Language ), rebaptis\u00e9 par la suite SQL ( Structured Query Language ), fut adopt\u00e9 comme norme internationale par l'ISO en 1987. Principes, vocabulaires et d\u00e9finitons Imaginons la situation d'une m\u00e9diath\u00e8que municipale classique, pour lequel nous souhaitons mettre en place un syst\u00e8me d'information . Ce syst\u00e8me doit pouvoir g\u00e9rer l'emprunt et le retour de livres par un utilisateur inscrit. Ainsi, un utilisateur, Bob, va pouvoir s'inscrire \u00e0 la m\u00e9diath\u00e8que. On lui demandera : son nom ; son pr\u00e9nom ; son email ; son code postal (les tarifs d'abonnement sont diff\u00e9rents selon la commune de r\u00e9sidence); son adresse exacte. Le syst\u00e8me ne retiendra de lui que ces \u00e9l\u00e9ments, avec la date d'inscription. Sa taille, couleur des yeux ou cheveux, n'ont aucune importance dans le syst\u00e8me. Le syst\u00e8me ne retiens qu'une approximation de la r\u00e9alit\u00e9. Une fois inscrit, Bob se voit remettre une carte contenant un code-barre , c'est-\u00e0-dire un num\u00e9ro unique qui est attribu\u00e9 \u00e0 Bob. Bob peut alors emprunter le livre \u00ab Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s ! \u00bb de Gerard Swinnen, Eyrolles, 2012, ISBN 978-2212134346. Sur le livre est aussi plac\u00e9 un code-barre , qui identifie le livre de mani\u00e8re unique. En scannant ce code barre et sa carte de biblioth\u00e8que sur une des bornes disponible, le syst\u00e8me devra retenir que Bob a emprunt\u00e9 ce livre \u00e0 la date du jour. De la m\u00eame mani\u00e8re, lorqu'il reviens quelques semaines plus trad, il doit pouvoir rendre ce livre en scannant sa carte et le livre, et le syst\u00e8me doit retenir que le livre est \u00e0 nouveau disponible et que Bob a de nouveau le droit d'emprunter d'autres livres. Bien entendu, d'autres utilisateurs doivent pouvoir faire des emprunts et des restitutions au m\u00eame moment sur d'autres bornes de la m\u00e9diath\u00e8que, ce qui signifie que les donn\u00e9es doivent pouvoire \u00eatre accessibles depuis un r\u00e9seau a minima local . De plus les documentalistes doivent pouvoir ajouter de nouveaux ouvrages, en supprimer certains trop anciens ou abim\u00e9s, et mettre \u00e0 jour l'ensemble des utilisateurs. Ces derni\u00e8re op\u00e9rations ne devant pas \u00eatre accessibles aux usagers, il faudra mettre en place un syst\u00e8me de droits d'acc\u00e8s . Entit\u00e9s Dans le mod\u00e8le relationnel, un objet mod\u00e9lis\u00e9 est appel\u00e9 entit\u00e9 . Il est repr\u00e9sent\u00e9 par un n-uplet de valeurs. Exemple Le livre emprunt\u00e9 par Bob peut-\u00eatre repr\u00e9sent\u00e9 par le quintuplet : ('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346') Dans ce quintuplet, 4 composantes sont des cha\u00eenes de caract\u00e8res, et une seule est sous la forme d'un entier. Relation Une collection d'entit\u00e9s est appel\u00e9e une relation . Exemple La relation Livre de la m\u00e9diath\u00e8que peut \u00eatre repr\u00e9sent\u00e9e par : Livre = { ('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346'), ('Bases de donn\u00e9es, de la mod\u00e9lisation au SQL', 'Laurent Audibert', 'Ellipses' , 2009, '978-2729851200'), ... } Sch\u00e9ma relationnel, attributs Chaque relation se conforme \u00e0 un sch\u00e9ma . Ce dernier est une description, qui indique pour chaque composante des n-uplets de la relation leur nom et leur domaine , c'est-\u00e0-dire le type de valeurs que peuvent prendre les composantes. Chaque composante s'appelle un attribut . Exemple La relation Livre contient 5 attributs : titre : le titre du livre, qui est une cha\u00eene de caract\u00e8res ; auteur : le ou les auteurs du livre, sous la forme d'une cha\u00eene de caract\u00e8res ; \u00e9diteur : l'\u00e9diteur, sous la forme d'une cha\u00eene de caract\u00e8res ; ann\u00e9e : l'ann\u00e9e d'\u00e9dition, sous la forme d'un entier ; ISBN : l'identifiant du livre, sous la forme d'une cha\u00eene de caract\u00e8res. On peut aussi noter un sch\u00e9ma de relation de la mani\u00e8re suivante: Livre( titre String , auteur String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) ou par un tableau : Base de donn\u00e9es Dans le mod\u00e8le relationnel, une base de donn\u00e9es est un ensemble de relations. Par extension, le sch\u00e9ma d'une base de donn\u00e9e est l'ensemble des sch\u00e9mas relationnels repr\u00e9sentant la base. Exemple Dans notre exemple de m\u00e9diath\u00e8que, on pourra consid\u00e9r\u00e9r la base de donn\u00e9es contenant les relations : Livre Usager Emprunt Nous d\u00e9taillerons dans la suite les attributs des relations Usager et Emprunt . Mod\u00e9lisation relationnelle des donn\u00e9es La th\u00e9orie et la pratique des bases de donn\u00e9es relationnelles est un domaine de recherche fortement actif et qui s'est largement complexifi\u00e9 depuis ses d\u00e9buts. Il ne s'agit pas dans ce cours d'\u00e9tudier cette th\u00e9orie, qui d\u00e9passe largement le niveau de terminale, aussi bien d'un point de vue math\u00e9matique que informatique, mais d'en comprendre quelques principes. principes g\u00e9n\u00e9raux La mod\u00e9lisation des donn\u00e9es se d\u00e9compose en plusieurs \u00e9tapes : d\u00e9terminer les entit\u00e9s qu'on souhaite manipuler ; mod\u00e9liser les collections d'entit\u00e9s en relations , en donnant leur sch\u00e9ma relationnel , et en veillant \u00e0 choisir le bon domaine pour les attributs . d\u00e9finir les contraintes de la base de donn\u00e9es, c'est-\u00e0-dire l'ensemble des propri\u00e9t\u00e9s logiques que les donn\u00e9es doivent v\u00e9rifier \u00e0 tout moment. En particulier on veillera aux contraintes d'int\u00e9grit\u00e9 d\u00e9crites ci-dessous qui garantissent la coh\u00e9rence des donn\u00e9es . Contraintes de domaines Essayons de pr\u00e9ciser davantage la relation Usager . Dans la description que nous en avons donn\u00e9, nous pouvons d\u00e9finir quelques attributs : nom : le nom de la personne, une cha\u00eene de caract\u00e8res ; pr\u00e9nom : le pr\u00e9nom de la personne, une cha\u00eene de caract\u00e8res ; email : l'email de la personne, une cha\u00eene de caract\u00e8res ; cp : le code postal de la commune de r\u00e9sidence, une chaine de caract\u00e8res . On peut s'\u00e9tonner de stocker le code postal sous la forme d'une cha\u00eene de caract\u00e8re, et pas d'un entier. Mais il faut prendre en compte certaines particularit\u00e9s : un code postal est un code de 5 chiffres. Celui de Guingamp est 22 200, et celui de Bourg-en-Bresse est 01 000. Or les z\u00e9ros pr\u00e9c\u00e9dants le nombres sont \u00e9limin\u00e9s si on stocke le nombre sous la forme d'un entier! On est alors oblig\u00e9 d'utiliser une cha\u00eene de caract\u00e8res de taille 5. Types de donn\u00e9es Nous verrons dans la partie SQL quelques types de donn\u00e9es sp\u00e9cifiques, mais nous pouvons donner quelques types g\u00e9n\u00e9riques souvent utilis\u00e9s dans les BDD : Type Utilisation String cha\u00eenes de caract\u00e8res Int les entiers sign\u00e9s (d'une taille arbitraire) Boolean les bool\u00e9ens True et False Float les flottants Date les dates (sous le format JJ/MM/AAAA ) 4 Time les instants heure : minutes : secondes Contraintes de domaines Les contraintes de domaines sont toutes les propri\u00e9t\u00e9s que le domaine d'un attribut va permettre de garantir. Elles sont souvent plus pr\u00e9cises que le simple choix d'un type de donn\u00e9es. Par exemple, une contrainte de domaine sur l'\u00e2ge d'une personne ne peut se contenter d'utiliser le type Int . Il faudra en plus \u00e9liminer les valeurs n\u00e9gatives ainsi que les valeurs sup\u00e9rieures \u00e0 120 (en \u00e9tant large...) On termine la mod\u00e9lisation de la relation Usager en ajoutant les attrtibuts : adresse : l'adresse de l'usager, de format String ; inscription : la date d'inscription, au format Date ; code_barre : le code-barre de la carte qui lui a \u00e9t\u00e9 attribu\u00e9e, au format String (pour les m\u00eame raisons que l'attribut cp ) On obtient alors le sch\u00e9ma relationnel suivant : Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) ou bien le tableau : Contraintes de relations Imaginons que nous n'ayons utilis\u00e9 dans la relation Usager comme attributs que le nom et le pr\u00e9nom. Si deux personnes nomm\u00e9es Jean Dupont veulent s'inscrire \u00e0 la m\u00e9diath\u00e8que, il y aura dans la relation deux entit\u00e9s identiques, ce qui risque de causer des probl\u00e8mes. Ce serait une violation de la contrainte de relation . Contrainte de relation Lors de la mod\u00e9lisation d'une relation, il faut s'assurer que, pour chaque entit\u00e9 , un attribut ou un ensemble d'attributs permet d'identifier cette entit\u00e9 de mani\u00e8re unique . Un tel attribut ou ensemble d'attributs s'appelle une cl\u00e9 primaire de la relation, et est signal\u00e9 par un soulignement en traits pleins dans le sch\u00e9ma relationnel. Exemple Dans le cas de notre relation Usager : les attributs nom , pr\u00e9nom , cp , inscription , adresse , pris seuls, ne peuvebnt en aucun cas assurer le respect de la contrainte de relation. Ils ne peuvent donc pas \u00eatre choisis comme cl\u00e9 primaire; l'attribut email pourrait \u00eatre pertinent, mais ce choix emp\u00e8cherait un parent de fournir son email pour l'inscription de son enfant. reste l'attribut code_barre , qui a priori, si le syst\u00e8me est correctement configur\u00e9, est bien unique pour chaque usager. Il peut donc \u00eatre choisi comme cl\u00e9 primaire, ce qu_i donne le sch\u00e9ma relationnel suivant : Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) ou bien : Relation Livre Quel choix raisonnable pouvons nous faire pour la cl\u00e9 primaire de la relation Livre ? Un choix Le choix de l'attribut ISBN comme cl\u00e9 primaire semble \u00eatre une bonne id\u00e9e, tant que la m\u00e9diath\u00e8que ne commande pas plusieurs ouvrages identiques. Dans ce cas, il faudra rajouter \u00e0 la relation un code-barre sp\u00e9cifique \u00e0 la m\u00e9diath\u00e8que. Mais nous consid\u00e9rerons que tel n'est pas le cas, et la relation sera donc : Livre( titre String , auteur String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) ou bien : Contraintes de r\u00e9f\u00e9rences Prnons la relation Emprunt , que nous n'avons pas encore d\u00e9finie. Quel r\u00f4le doit-elle jouer ? Elle doit servir de lien entre une entit\u00e9 de la relation Usager , une entit\u00e9 de la relation Livre , et fournir une date de retour pr\u00e9vue pour le livre emprunt\u00e9. Une version na\u00efve serait d'utiliser pour une entit\u00e9 de la relation Emprunt un n-uplet de la forme : ('Dupont', 'Jean', 'Apprendre \u00e0 programmer avec Python 3', 20/12/2021 ) Cependant ce type de n-uplet ne permet pas d'identifier de mani\u00e8re unique l'usager, comme nous l'avons vu dans les contraintes de relations . Il pourrait-y-avoir plusieurs Jean Dupont, alors que la relation Emprunt doit permettre d'identifier de mani\u00e8re unique une entit\u00e9 d' Usager ainsi qu'une de Livre . Il serait ainsi largement pr\u00e9f\u00e9rable d'utiliser les cl\u00e9s primaires ddes relations Usager et Livre dans la relation Emprunt , de la mani\u00e8re suivante : Emprunt(code_barre String , ISBN String , retour Date ) code_barre \u00e9tant la cl\u00e9 primaire de la relation Usager , elle doit par contrainte de relations identifier de mani\u00e8re unique une entit\u00e9 de cette relation. Il en est de m\u00eame pour ISBN , qui est la cl\u00e9 primaire de Livre . Cl\u00e9 \u00e9trang\u00e8re On appelle cl\u00e9 \u00e9trang\u00e8re d'une relation un attribut faisant r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation. Une cl\u00e9 \u00e9trang\u00e8re est signal\u00e9e dans un sch\u00e9ma relationnel par un soulignement en traits pointill\u00e9s . Dans notre exemple de la relation Emprunt : Emprunt( code_barre String , ISBN String , retour Date ) Le fait d'utiliser des cl\u00e9s \u00e9trang\u00e8res nous permet de garantir ici un certain nombre de points : un emprunteur sera forc\u00e9ment un usager inscrit. Il ne sera pas possible de saisir une valeur fictive pour l'attribut code_barre ; de la m\u00eame mani\u00e8re, on a une contrainte de r\u00e9f\u00e9rence sur l'attribut ISBN , qui doit forc\u00e9ment \u00eatre la r\u00e9f\u00e9rence \u00e0 une entit\u00e9 de la relation Livre . de mani\u00e8re encore plus importante, l'utilisation d'une cl\u00e9 \u00e9trang\u00e8re interdira de supprimer une entit\u00e9 Usager si elle est r\u00e9f\u00e9renc\u00e9e dans la relation Emprunt . On aurait une violation de la contrainte de r\u00e9f\u00e9rence . Cependant notre travail n'est pas termin\u00e9 pour la mod\u00e9lisation de la relation Emprunt . En effet, nous n'avons pas d\u00e9fini de cl\u00e9 primaire de cette relation : il serait peu judicieux d'utiliser l'attribut code_barre comme cl\u00e9 primaire, puisque celle-ci devant \u00eatre unique, un usager ne pourrait emprunter qu'un unique livre ; plusiurs emprunts pouvant avoir la m\u00eame date de retour, il est impossible d'utiliser l'attribut retour ; il est par contre possible d'utiliser comme cl\u00e9 primaire l'attribut isbn , celui-ci ne pouvant \u00eatre qu'unique, il granati le fait qu'un livre ne puisse \u00eatre emprunt\u00e9 que par un usager \u00e0 la fois. On obtient ainsi le sch\u00e9ma relationnel suivant : Emprunt( code_barre String , ISBN String , retour Date ) ou bien : Une erreur de mod\u00e9lisation ? Dans la mod\u00e9lisation actuelle de la relation Livre , nous avons toujours un probl\u00e8me de coh\u00e9rence et de redondance des donn\u00e9es. En effet, nous avons \u00e9crit la liste des auteurs comme une cha\u00eene de caract\u00e8res. Si cette mod\u00e9lisation fonctionne, elle ne permet pas d'exprimer certaines contraintes sur les donn\u00e9es, par exemple qu'un m\u00eame auteur n'appara\u00eet pas deux fois dans le m\u00eame livre. On va donc simplifier la relation Livre de la mani\u00e8re suivante : Livre(titre : String, \u00e9diteur : String, ann\u00e9e : Int, ISBN : String ) Enonc\u00e9 Cr\u00e9er une relation Auteur qui devra retenir les informations importantes sur un auteur. Cr\u00e9er une relation Auteur_de permettant de lier un auteur \u00e0 un livre. Pr\u00e9senter le sch\u00e9ma global de la base de donn\u00e9es Solution Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) Livre(titre String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) Emprunt( code_barre String , ISBN String , retour Date ) Auteur( idA Int , nom String , prenom String ) Auteur_de( idA Int , ISBN String Ou le sch\u00e9ma complet : Vous remarquerez qu'on a choisi comme cl\u00e9 primaire pour la relation Auteur_de le 2-uplet (idA, ISBN) . En effet : on ne peut pas choisir simplement idA , car un auteur peut-\u00eatre l'auteur de plusieurs livres ; on ne peut pas choisir simplement ISBN , car un livre peut avoir plusieurs auteurs. Par contre le 2-uplet (idA, ISBN) garanti bien la pr\u00e9servation des diff\u00e9rentes contraintes. Exercices Exercice 1 Enonc\u00e9 On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple, dans lequel chaque personne (identifi\u00e9e par son nom et son pr\u00e9nom) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. Proposer une mod\u00e9lisation relationnelle de cet annuaire. Solution A venir Exercice 2 Enonc\u00e9 Donner la mod\u00e9lisation d'un bulletin scolaire. Cette derni\u00e8re doit permettre de mentionner : des \u00e9l\u00e8ves, chacun poss\u00e9dant un identifiant alphanum\u00e9rique unique ; un ensemble de mati\u00e8res fix\u00e9es, mais qui ne sont pas donn\u00e9es ; au plus une note sur 20 par mati\u00e8re et par \u00e9l\u00e8ve. Solution A venir Exercice 3 Enonc\u00e9 Proposer une mod\u00e9lisation pour le r\u00e9seau de m\u00e9tro et bus de la ville de Rennes (dont le plan est disponible ici ). Cette derni\u00e8re doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus, une fiche donnant les horaires de passage de toutes les lignes qui d\u00e9servent l'arr\u00eat. La mod\u00e9lisation de ce r\u00e9seau n\u00e9cessite une r\u00e9flexion au pr\u00e9alable sur la pertinence des informations \u00e0 mod\u00e9liser ! Solution A venir Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s , Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses \u21a9 Bases de donn\u00e9es, de la mod\u00e9lisation au SQL , Laurent Audibert, \u00e9ditions Ellipses \u21a9 \u21a9 \u21a9 \u21a9 https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.86.9277 \u21a9 les formats choisis pour les dates dans les bases de donn\u00e9es sont des sujets \u00e9pineux. Pour nous fran\u00e7ais, il est \u00e9vident d'utiliser JJ/MM/AAAA ou JJ/MM/AA. Pour un Etats-Unien, ce sera MM/JJ/AAAA. Pour d'autres ce sera AAAA/MM/JJ... Un grand nombre de m\u00e8mes de la communaut\u00e9 des programmeurs jouent sur la probl\u00e9matique des formats de dates et d'heures... \u21a9","title":"Mod\u00e8le relationnel"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#bases-de-donnees-et-modele-relationnel","text":"L'ensemble du chapitre est fortement influenc\u00e9 par : Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s , Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses Bases de donn\u00e9es, de la mod\u00e9lisation au SQL , Laurent Audibert, \u00e9ditions Ellipses","title":"Bases de donn\u00e9es et mod\u00e8le relationnel"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#introduction-aux-bases-de-donnees-types-de-modeles","text":"","title":"Introduction aux bases de donn\u00e9es, types de mod\u00e8les"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#les-bases-de-donnees","text":"Il est difficile de proposer une d\u00e9finition exacte des bases de donn\u00e9es. Laurent Audibert 2 propose : D\u00e9finition g\u00e9n\u00e9rale Un ensemble organis\u00e9 d'informations avec un objectif commun. La d\u00e9finition est vague, mais d\u00e8s lors que des informations sont rassembl\u00e9es et stock\u00e9es d'une mani\u00e8re organis\u00e9e , on peut parler de bases de donn\u00e9es , quel que soit le support utilis\u00e9 (tablettes d'argile, papiers, fichiers, etc...) Bien entendu l'informatique, c'est-\u00e0-dire la science du traitement automatique de l'information, permet le traitement de grandes quantit\u00e9s d'informations, et surtout leur exploitation (ajout, suppression, mise \u00e0 jour, recherches, ...). Dans le cadre informatique, Laurent Audibert 2 propose : Base de donn\u00e9es informatis\u00e9es Une base de donn\u00e9es ( BDD , en anglais DataBase soit DB ) informatis\u00e9e est un ensemble structur\u00e9 de donn\u00e9es enregistr\u00e9es sur des supports accessibles par l'ordinateur, repr\u00e9sentant des informations du monde r\u00e9el et pouvant \u00eatre interrog\u00e9es et mise \u00e0 jour par une communaut\u00e9 d'utilisateurs. Nous verrons que cette d\u00e9finition impose un certain nombre de contraintes \u00e0 la mise en place des BDD informatis\u00e9es. La premi\u00e8re est la question de la coh\u00e9rence des donn\u00e9es . Exemple : Bases de donn\u00e9es musicales 2 Prenons l'exemple d'une base de donn\u00e9es contenant des albums musicaux, et qui m\u00e9morise pour chaque album son genre, son titre, et le nom du groupe ainsi que le nom du chanteur principal. L'id\u00e9e de base est de pr\u00e9senter les donn\u00e9es sous la forme d'une table, comme dans l'extrait ci-dessous : Genre Titre Groupe Chanteur Stoner Era Vulgaris Queen Of The Stone Age Josh Homme Metal Master of Puppets Metallica Metal Them Crooked Vultures Them Crooked Vultures Josh Homme Metal L'Enfant sauvage GOJIRA Jo Duplantier Stoner Dying surfer meet his maker All Them Withches Charles Michael Parks Jr M\u00e9tal Fortitude Gojira Joseph Duplantier Stoner Rock Nothing as the ideal All Them Withches Charles Michael Parks Jr Metal Progressif Magma Gojira Joseph DUPLANTIER La condition sine qua none pour garantir la faisabilit\u00e9 et la pertinence d'une recherche de donn\u00e9es est la coh\u00e9rence de ces donn\u00e9es . Ici on constate plusieurs probl\u00e8mes de coh\u00e9rence : Le nom du groupe Gojira est orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. Une recherche utilisant la cha\u00eene de caract\u00e8res Gojira ne donnera que deux r\u00e9sultats, alors que trois peuvent \u00eatre attendus. Le genre Metal est aussi orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. On notera qu'une recherche stricte avec la cha\u00eene Metal , c'est-\u00e0-dire bas\u00e9e sur l'\u00e9galit\u00e9, ne donnera que deux r\u00e9sultats, alors qu'une recherche \u00e9tendue, c'est-\u00e0-dire bas\u00e9e sur l'appartenance de la sous-cha\u00eene Metal \u00e0 la cha\u00eene donnant le genre, renverra elle trois r\u00e9sultats. Le nom du chanteur de Gojira est \u00e9crit de trois mani\u00e8res diff\u00e9rentes. On peut aussi noter que le nom du chanteur de Metallica n'est pas renseign\u00e9, ce qui eput peut-\u00eatre poser un probl\u00e8me de coh\u00e9rence. Ces probl\u00e8mes de coh\u00e9rence sont li\u00e9s (en partie), \u00e0 un probl\u00e8me de redondance des donn\u00e9es : en effet dans la table telle qu'elle est pr\u00e9sent\u00e9e, on va devoir saisir plusieurs fois les cha\u00eenes telles que Metal et Gojira , alors qu'elles ne repr\u00e9sentent bien qu'une seule entit\u00e9 chacune. Pour r\u00e9gler la question de la coh\u00e9rence des donn\u00e9es , il faudra en premier lieu trouver un moyen d'\u00e9viter la redondance de certaines donn\u00e9es.","title":"Les bases de donn\u00e9es"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#historique-et-problematiques-des-differents-modeles","text":"Mod\u00e8les de donn\u00e9es et structures de donn\u00e9es Ces deux concepts se placent \u00e0 diff\u00e9rents niveaux d'abstraction. Les mod\u00e8les de donn\u00e9es indique quelles caract\u00e9ristiques d'une entit\u00e9 r\u00e9elle on souhaite manipuler dans un programme, ainsi que les relations qui lient ces entit\u00e9s entre elles. Par exemple un groupe de musique va produire plusieurs albums, et un chanteur peut chanter dans plusieurs groupes. Une structure de donn\u00e9e indique la mani\u00e8re dont on va organiser les donn\u00e9es en machine . Ainsi pour un m\u00eame mod\u00e8le il existe plusieurs structures pouvant repr\u00e9senter ce mod\u00e8le (tableau, listes cha\u00een\u00e9es, objets...) Le premier mod\u00e8le ayant souhait\u00e9 s'attaquer au probl\u00e8me de la redondance des donn\u00e9es est le mod\u00e8le hi\u00e9rarchique , d\u00e9velopp\u00e9 par IBM dans les ann\u00e9es 1960, dans le cadre du programme Apollo de la NASA. Ce mod\u00e8le, tr\u00e8s d\u00e9pendant de la mani\u00e8re dont fonctionnait les ordinateurs de cette \u00e9poque, enregistre les donn\u00e9es \u00e0 la mani\u00e8re de l'organisation d'un syst\u00e8me de fichier, sous la forme d'un arbre ( structure arborescente ), de fa\u00e7on \u00e0 ce qu'un enregistrement n'ait qu'un seul possesseur. On peut en donner un exemple ci-dessous : ce type de mod\u00e8le peut \u00eatre pratique, mais il ne r\u00e9pond pas \u00e0 toutes les probl\u00e9matiques . En effet, ici nous n'avons pas introduit dans la hi\u00e9rarchie les leads vocaux. Voici ce que donne le sch\u00e9ma lorsqu'on les introduits : On constate ici que le choix d'organisation de l'arbre ne permet pas de r\u00e9gler la redondance des donn\u00e9es, puisque non seulement un m\u00eame chanteur peut \u00eatre lead vocal sur plusieurs albums, mais il peut l'\u00eatre aussi sur plusieurs groupes (comme Josh Homme par exemple). La structure hi\u00e9rarchique n'est ici pas adapt\u00e9e. Une des solutions propos\u00e9e pour ce probl\u00e8me a \u00e9t\u00e9 le mod\u00e8le r\u00e9seau , propos\u00e9 par Charles William Bachman \u00e0 la fin des ann\u00e9es 1960 2 . C.W. Bachman re\u00e7u le Prix Turing en 1973 pour ses contributions sur les technologies des bases de donn\u00e9es. On lui doit aussi le mod\u00e8le OSI (voir le cours de premi\u00e8re...). Une repr\u00e9sentation de nos albums dans le mod\u00e8le r\u00e9seau est la suivante : Ainsi, la redondance des donn\u00e9es n'est plus un probl\u00e8me. Cependant, le mod\u00e8le r\u00e9seau n'est pas un mod\u00e8le toujours efficace, puisque pour retrouver une donn\u00e9e (un chanteur par exemple), il faut conna\u00eetre la structure de ce r\u00e9seau, c'est-\u00e0-dire les liaisons existantes, ce qui rend les programmeurs d\u00e9pendants de la structure de donn\u00e9e .","title":"Historique et probl\u00e9matiques des diff\u00e9rents mod\u00e8les"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#le-modele-relationnel","text":"","title":"Le mod\u00e8le relationnel"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#historique","text":"Chercheur au centre de recherche d'IBM, Edgar Frank Codd , insatisfait des mod\u00e8les existant, chercha un mod\u00e8le plus simple permettant de g\u00e9rer un grand nombre de donn\u00e9es. Math\u00e9maticien de formation, il se basa sur la th\u00e9orie des ensembles et la logique des pr\u00e9dicats ( logique de premier ordre ) pour publier en 1970 un article 3 o\u00f9 il proposait de stocker des donn\u00e9es h\u00e9t\u00e9rog\u00e8nes dans des tables , comme dans le sch\u00e9ma ci-dessous : Ce mod\u00e8le, qualifi\u00e9 de relationnel \u00e9tait \u00e0 l'\u00e9poque consid\u00e9r\u00e9 comme une curiosit\u00e9 intellectuelle, car les ordinateurs en ce temps n'\u00e9taient pas capables de g\u00e9rer de mani\u00e8re efficace des tables de donn\u00e9es, et il n'\u00e9tait pas \u00e9vident qu'ils le soient un jour. Ce scepticisme n'a pas emp\u00each\u00e9 Codd de poursuivre ses travaux, et de concevoir un premier prototype de Syt\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles ( SGBDR ). Depuis les ann\u00e9es 1980 cette technologie a m\u00fbri, pour \u00eatre finalement adopt\u00e9e par le monde de la recherche et des entreprises. En parall\u00e8le, Codd mis au point un langage de manipulation des donn\u00e9es non-proc\u00e9dural , o\u00f9 l'utilisateur d\u00e9finit le r\u00e9sultat qu'il attend plut\u00f4t que la mani\u00e8re de l'obtenir . Ce langage nomm\u00e9 dans un premier temps SEQUEL ( Structured English Query Language ), rebaptis\u00e9 par la suite SQL ( Structured Query Language ), fut adopt\u00e9 comme norme internationale par l'ISO en 1987.","title":"Historique"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#principes-vocabulaires-et-definitons","text":"Imaginons la situation d'une m\u00e9diath\u00e8que municipale classique, pour lequel nous souhaitons mettre en place un syst\u00e8me d'information . Ce syst\u00e8me doit pouvoir g\u00e9rer l'emprunt et le retour de livres par un utilisateur inscrit. Ainsi, un utilisateur, Bob, va pouvoir s'inscrire \u00e0 la m\u00e9diath\u00e8que. On lui demandera : son nom ; son pr\u00e9nom ; son email ; son code postal (les tarifs d'abonnement sont diff\u00e9rents selon la commune de r\u00e9sidence); son adresse exacte. Le syst\u00e8me ne retiendra de lui que ces \u00e9l\u00e9ments, avec la date d'inscription. Sa taille, couleur des yeux ou cheveux, n'ont aucune importance dans le syst\u00e8me. Le syst\u00e8me ne retiens qu'une approximation de la r\u00e9alit\u00e9. Une fois inscrit, Bob se voit remettre une carte contenant un code-barre , c'est-\u00e0-dire un num\u00e9ro unique qui est attribu\u00e9 \u00e0 Bob. Bob peut alors emprunter le livre \u00ab Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s ! \u00bb de Gerard Swinnen, Eyrolles, 2012, ISBN 978-2212134346. Sur le livre est aussi plac\u00e9 un code-barre , qui identifie le livre de mani\u00e8re unique. En scannant ce code barre et sa carte de biblioth\u00e8que sur une des bornes disponible, le syst\u00e8me devra retenir que Bob a emprunt\u00e9 ce livre \u00e0 la date du jour. De la m\u00eame mani\u00e8re, lorqu'il reviens quelques semaines plus trad, il doit pouvoir rendre ce livre en scannant sa carte et le livre, et le syst\u00e8me doit retenir que le livre est \u00e0 nouveau disponible et que Bob a de nouveau le droit d'emprunter d'autres livres. Bien entendu, d'autres utilisateurs doivent pouvoir faire des emprunts et des restitutions au m\u00eame moment sur d'autres bornes de la m\u00e9diath\u00e8que, ce qui signifie que les donn\u00e9es doivent pouvoire \u00eatre accessibles depuis un r\u00e9seau a minima local . De plus les documentalistes doivent pouvoir ajouter de nouveaux ouvrages, en supprimer certains trop anciens ou abim\u00e9s, et mettre \u00e0 jour l'ensemble des utilisateurs. Ces derni\u00e8re op\u00e9rations ne devant pas \u00eatre accessibles aux usagers, il faudra mettre en place un syst\u00e8me de droits d'acc\u00e8s . Entit\u00e9s Dans le mod\u00e8le relationnel, un objet mod\u00e9lis\u00e9 est appel\u00e9 entit\u00e9 . Il est repr\u00e9sent\u00e9 par un n-uplet de valeurs. Exemple Le livre emprunt\u00e9 par Bob peut-\u00eatre repr\u00e9sent\u00e9 par le quintuplet : ('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346') Dans ce quintuplet, 4 composantes sont des cha\u00eenes de caract\u00e8res, et une seule est sous la forme d'un entier. Relation Une collection d'entit\u00e9s est appel\u00e9e une relation . Exemple La relation Livre de la m\u00e9diath\u00e8que peut \u00eatre repr\u00e9sent\u00e9e par : Livre = { ('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346'), ('Bases de donn\u00e9es, de la mod\u00e9lisation au SQL', 'Laurent Audibert', 'Ellipses' , 2009, '978-2729851200'), ... } Sch\u00e9ma relationnel, attributs Chaque relation se conforme \u00e0 un sch\u00e9ma . Ce dernier est une description, qui indique pour chaque composante des n-uplets de la relation leur nom et leur domaine , c'est-\u00e0-dire le type de valeurs que peuvent prendre les composantes. Chaque composante s'appelle un attribut . Exemple La relation Livre contient 5 attributs : titre : le titre du livre, qui est une cha\u00eene de caract\u00e8res ; auteur : le ou les auteurs du livre, sous la forme d'une cha\u00eene de caract\u00e8res ; \u00e9diteur : l'\u00e9diteur, sous la forme d'une cha\u00eene de caract\u00e8res ; ann\u00e9e : l'ann\u00e9e d'\u00e9dition, sous la forme d'un entier ; ISBN : l'identifiant du livre, sous la forme d'une cha\u00eene de caract\u00e8res. On peut aussi noter un sch\u00e9ma de relation de la mani\u00e8re suivante: Livre( titre String , auteur String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) ou par un tableau : Base de donn\u00e9es Dans le mod\u00e8le relationnel, une base de donn\u00e9es est un ensemble de relations. Par extension, le sch\u00e9ma d'une base de donn\u00e9e est l'ensemble des sch\u00e9mas relationnels repr\u00e9sentant la base. Exemple Dans notre exemple de m\u00e9diath\u00e8que, on pourra consid\u00e9r\u00e9r la base de donn\u00e9es contenant les relations : Livre Usager Emprunt Nous d\u00e9taillerons dans la suite les attributs des relations Usager et Emprunt .","title":"Principes, vocabulaires et d\u00e9finitons"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#modelisation-relationnelle-des-donnees","text":"La th\u00e9orie et la pratique des bases de donn\u00e9es relationnelles est un domaine de recherche fortement actif et qui s'est largement complexifi\u00e9 depuis ses d\u00e9buts. Il ne s'agit pas dans ce cours d'\u00e9tudier cette th\u00e9orie, qui d\u00e9passe largement le niveau de terminale, aussi bien d'un point de vue math\u00e9matique que informatique, mais d'en comprendre quelques principes. principes g\u00e9n\u00e9raux La mod\u00e9lisation des donn\u00e9es se d\u00e9compose en plusieurs \u00e9tapes : d\u00e9terminer les entit\u00e9s qu'on souhaite manipuler ; mod\u00e9liser les collections d'entit\u00e9s en relations , en donnant leur sch\u00e9ma relationnel , et en veillant \u00e0 choisir le bon domaine pour les attributs . d\u00e9finir les contraintes de la base de donn\u00e9es, c'est-\u00e0-dire l'ensemble des propri\u00e9t\u00e9s logiques que les donn\u00e9es doivent v\u00e9rifier \u00e0 tout moment. En particulier on veillera aux contraintes d'int\u00e9grit\u00e9 d\u00e9crites ci-dessous qui garantissent la coh\u00e9rence des donn\u00e9es .","title":"Mod\u00e9lisation relationnelle des donn\u00e9es"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-domaines","text":"Essayons de pr\u00e9ciser davantage la relation Usager . Dans la description que nous en avons donn\u00e9, nous pouvons d\u00e9finir quelques attributs : nom : le nom de la personne, une cha\u00eene de caract\u00e8res ; pr\u00e9nom : le pr\u00e9nom de la personne, une cha\u00eene de caract\u00e8res ; email : l'email de la personne, une cha\u00eene de caract\u00e8res ; cp : le code postal de la commune de r\u00e9sidence, une chaine de caract\u00e8res . On peut s'\u00e9tonner de stocker le code postal sous la forme d'une cha\u00eene de caract\u00e8re, et pas d'un entier. Mais il faut prendre en compte certaines particularit\u00e9s : un code postal est un code de 5 chiffres. Celui de Guingamp est 22 200, et celui de Bourg-en-Bresse est 01 000. Or les z\u00e9ros pr\u00e9c\u00e9dants le nombres sont \u00e9limin\u00e9s si on stocke le nombre sous la forme d'un entier! On est alors oblig\u00e9 d'utiliser une cha\u00eene de caract\u00e8res de taille 5. Types de donn\u00e9es Nous verrons dans la partie SQL quelques types de donn\u00e9es sp\u00e9cifiques, mais nous pouvons donner quelques types g\u00e9n\u00e9riques souvent utilis\u00e9s dans les BDD : Type Utilisation String cha\u00eenes de caract\u00e8res Int les entiers sign\u00e9s (d'une taille arbitraire) Boolean les bool\u00e9ens True et False Float les flottants Date les dates (sous le format JJ/MM/AAAA ) 4 Time les instants heure : minutes : secondes Contraintes de domaines Les contraintes de domaines sont toutes les propri\u00e9t\u00e9s que le domaine d'un attribut va permettre de garantir. Elles sont souvent plus pr\u00e9cises que le simple choix d'un type de donn\u00e9es. Par exemple, une contrainte de domaine sur l'\u00e2ge d'une personne ne peut se contenter d'utiliser le type Int . Il faudra en plus \u00e9liminer les valeurs n\u00e9gatives ainsi que les valeurs sup\u00e9rieures \u00e0 120 (en \u00e9tant large...) On termine la mod\u00e9lisation de la relation Usager en ajoutant les attrtibuts : adresse : l'adresse de l'usager, de format String ; inscription : la date d'inscription, au format Date ; code_barre : le code-barre de la carte qui lui a \u00e9t\u00e9 attribu\u00e9e, au format String (pour les m\u00eame raisons que l'attribut cp ) On obtient alors le sch\u00e9ma relationnel suivant : Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) ou bien le tableau :","title":"Contraintes de domaines"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-relations","text":"Imaginons que nous n'ayons utilis\u00e9 dans la relation Usager comme attributs que le nom et le pr\u00e9nom. Si deux personnes nomm\u00e9es Jean Dupont veulent s'inscrire \u00e0 la m\u00e9diath\u00e8que, il y aura dans la relation deux entit\u00e9s identiques, ce qui risque de causer des probl\u00e8mes. Ce serait une violation de la contrainte de relation . Contrainte de relation Lors de la mod\u00e9lisation d'une relation, il faut s'assurer que, pour chaque entit\u00e9 , un attribut ou un ensemble d'attributs permet d'identifier cette entit\u00e9 de mani\u00e8re unique . Un tel attribut ou ensemble d'attributs s'appelle une cl\u00e9 primaire de la relation, et est signal\u00e9 par un soulignement en traits pleins dans le sch\u00e9ma relationnel. Exemple Dans le cas de notre relation Usager : les attributs nom , pr\u00e9nom , cp , inscription , adresse , pris seuls, ne peuvebnt en aucun cas assurer le respect de la contrainte de relation. Ils ne peuvent donc pas \u00eatre choisis comme cl\u00e9 primaire; l'attribut email pourrait \u00eatre pertinent, mais ce choix emp\u00e8cherait un parent de fournir son email pour l'inscription de son enfant. reste l'attribut code_barre , qui a priori, si le syst\u00e8me est correctement configur\u00e9, est bien unique pour chaque usager. Il peut donc \u00eatre choisi comme cl\u00e9 primaire, ce qu_i donne le sch\u00e9ma relationnel suivant : Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) ou bien : Relation Livre Quel choix raisonnable pouvons nous faire pour la cl\u00e9 primaire de la relation Livre ? Un choix Le choix de l'attribut ISBN comme cl\u00e9 primaire semble \u00eatre une bonne id\u00e9e, tant que la m\u00e9diath\u00e8que ne commande pas plusieurs ouvrages identiques. Dans ce cas, il faudra rajouter \u00e0 la relation un code-barre sp\u00e9cifique \u00e0 la m\u00e9diath\u00e8que. Mais nous consid\u00e9rerons que tel n'est pas le cas, et la relation sera donc : Livre( titre String , auteur String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) ou bien :","title":"Contraintes de relations"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-references","text":"Prnons la relation Emprunt , que nous n'avons pas encore d\u00e9finie. Quel r\u00f4le doit-elle jouer ? Elle doit servir de lien entre une entit\u00e9 de la relation Usager , une entit\u00e9 de la relation Livre , et fournir une date de retour pr\u00e9vue pour le livre emprunt\u00e9. Une version na\u00efve serait d'utiliser pour une entit\u00e9 de la relation Emprunt un n-uplet de la forme : ('Dupont', 'Jean', 'Apprendre \u00e0 programmer avec Python 3', 20/12/2021 ) Cependant ce type de n-uplet ne permet pas d'identifier de mani\u00e8re unique l'usager, comme nous l'avons vu dans les contraintes de relations . Il pourrait-y-avoir plusieurs Jean Dupont, alors que la relation Emprunt doit permettre d'identifier de mani\u00e8re unique une entit\u00e9 d' Usager ainsi qu'une de Livre . Il serait ainsi largement pr\u00e9f\u00e9rable d'utiliser les cl\u00e9s primaires ddes relations Usager et Livre dans la relation Emprunt , de la mani\u00e8re suivante : Emprunt(code_barre String , ISBN String , retour Date ) code_barre \u00e9tant la cl\u00e9 primaire de la relation Usager , elle doit par contrainte de relations identifier de mani\u00e8re unique une entit\u00e9 de cette relation. Il en est de m\u00eame pour ISBN , qui est la cl\u00e9 primaire de Livre . Cl\u00e9 \u00e9trang\u00e8re On appelle cl\u00e9 \u00e9trang\u00e8re d'une relation un attribut faisant r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation. Une cl\u00e9 \u00e9trang\u00e8re est signal\u00e9e dans un sch\u00e9ma relationnel par un soulignement en traits pointill\u00e9s . Dans notre exemple de la relation Emprunt : Emprunt( code_barre String , ISBN String , retour Date ) Le fait d'utiliser des cl\u00e9s \u00e9trang\u00e8res nous permet de garantir ici un certain nombre de points : un emprunteur sera forc\u00e9ment un usager inscrit. Il ne sera pas possible de saisir une valeur fictive pour l'attribut code_barre ; de la m\u00eame mani\u00e8re, on a une contrainte de r\u00e9f\u00e9rence sur l'attribut ISBN , qui doit forc\u00e9ment \u00eatre la r\u00e9f\u00e9rence \u00e0 une entit\u00e9 de la relation Livre . de mani\u00e8re encore plus importante, l'utilisation d'une cl\u00e9 \u00e9trang\u00e8re interdira de supprimer une entit\u00e9 Usager si elle est r\u00e9f\u00e9renc\u00e9e dans la relation Emprunt . On aurait une violation de la contrainte de r\u00e9f\u00e9rence . Cependant notre travail n'est pas termin\u00e9 pour la mod\u00e9lisation de la relation Emprunt . En effet, nous n'avons pas d\u00e9fini de cl\u00e9 primaire de cette relation : il serait peu judicieux d'utiliser l'attribut code_barre comme cl\u00e9 primaire, puisque celle-ci devant \u00eatre unique, un usager ne pourrait emprunter qu'un unique livre ; plusiurs emprunts pouvant avoir la m\u00eame date de retour, il est impossible d'utiliser l'attribut retour ; il est par contre possible d'utiliser comme cl\u00e9 primaire l'attribut isbn , celui-ci ne pouvant \u00eatre qu'unique, il granati le fait qu'un livre ne puisse \u00eatre emprunt\u00e9 que par un usager \u00e0 la fois. On obtient ainsi le sch\u00e9ma relationnel suivant : Emprunt( code_barre String , ISBN String , retour Date ) ou bien : Une erreur de mod\u00e9lisation ? Dans la mod\u00e9lisation actuelle de la relation Livre , nous avons toujours un probl\u00e8me de coh\u00e9rence et de redondance des donn\u00e9es. En effet, nous avons \u00e9crit la liste des auteurs comme une cha\u00eene de caract\u00e8res. Si cette mod\u00e9lisation fonctionne, elle ne permet pas d'exprimer certaines contraintes sur les donn\u00e9es, par exemple qu'un m\u00eame auteur n'appara\u00eet pas deux fois dans le m\u00eame livre. On va donc simplifier la relation Livre de la mani\u00e8re suivante : Livre(titre : String, \u00e9diteur : String, ann\u00e9e : Int, ISBN : String ) Enonc\u00e9 Cr\u00e9er une relation Auteur qui devra retenir les informations importantes sur un auteur. Cr\u00e9er une relation Auteur_de permettant de lier un auteur \u00e0 un livre. Pr\u00e9senter le sch\u00e9ma global de la base de donn\u00e9es Solution Usager(nom String , pr\u00e9nom String , email String , cp String , adresse String , inscription Date , code_barre String ) Livre(titre String , \u00e9diteur String , ann\u00e9e Int , ISBN String ) Emprunt( code_barre String , ISBN String , retour Date ) Auteur( idA Int , nom String , prenom String ) Auteur_de( idA Int , ISBN String Ou le sch\u00e9ma complet : Vous remarquerez qu'on a choisi comme cl\u00e9 primaire pour la relation Auteur_de le 2-uplet (idA, ISBN) . En effet : on ne peut pas choisir simplement idA , car un auteur peut-\u00eatre l'auteur de plusieurs livres ; on ne peut pas choisir simplement ISBN , car un livre peut avoir plusieurs auteurs. Par contre le 2-uplet (idA, ISBN) garanti bien la pr\u00e9servation des diff\u00e9rentes contraintes.","title":"Contraintes de r\u00e9f\u00e9rences"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#exercices","text":"Exercice 1 Enonc\u00e9 On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple, dans lequel chaque personne (identifi\u00e9e par son nom et son pr\u00e9nom) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. Proposer une mod\u00e9lisation relationnelle de cet annuaire. Solution A venir Exercice 2 Enonc\u00e9 Donner la mod\u00e9lisation d'un bulletin scolaire. Cette derni\u00e8re doit permettre de mentionner : des \u00e9l\u00e8ves, chacun poss\u00e9dant un identifiant alphanum\u00e9rique unique ; un ensemble de mati\u00e8res fix\u00e9es, mais qui ne sont pas donn\u00e9es ; au plus une note sur 20 par mati\u00e8re et par \u00e9l\u00e8ve. Solution A venir Exercice 3 Enonc\u00e9 Proposer une mod\u00e9lisation pour le r\u00e9seau de m\u00e9tro et bus de la ville de Rennes (dont le plan est disponible ici ). Cette derni\u00e8re doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus, une fiche donnant les horaires de passage de toutes les lignes qui d\u00e9servent l'arr\u00eat. La mod\u00e9lisation de ce r\u00e9seau n\u00e9cessite une r\u00e9flexion au pr\u00e9alable sur la pertinence des informations \u00e0 mod\u00e9liser ! Solution A venir Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s , Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses \u21a9 Bases de donn\u00e9es, de la mod\u00e9lisation au SQL , Laurent Audibert, \u00e9ditions Ellipses \u21a9 \u21a9 \u21a9 \u21a9 https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.86.9277 \u21a9 les formats choisis pour les dates dans les bases de donn\u00e9es sont des sujets \u00e9pineux. Pour nous fran\u00e7ais, il est \u00e9vident d'utiliser JJ/MM/AAAA ou JJ/MM/AA. Pour un Etats-Unien, ce sera MM/JJ/AAAA. Pour d'autres ce sera AAAA/MM/JJ... Un grand nombre de m\u00e8mes de la communaut\u00e9 des programmeurs jouent sur la probl\u00e9matique des formats de dates et d'heures... \u21a9","title":"Exercices"},{"location":"SNT/Web/CSS/","text":"Mettre en forme : le CSS S\u00e9parer le fond et la forme : un exemple avec un traitement de texte Activit\u00e9 avec un traitement de texte T\u00e9l\u00e9chargez puis ouvrez le fichier StylesModeles.odt avec Libre Office . Allez \u00e0 la page 5 du document. Ouvrez la fen\u00eatre de style en appuyant sur F11 . D\u00e9ployez le menu Style par d\u00e9faut en appuyant sur + . D\u00e9ployez de m\u00eame le menu Titre , puis cliquez droit sur Titre 1 , puis modifier . Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? Y-a-t-il eu des changements sur d'autres pages ? Qu'ont en commun toutes les zones chang\u00e9es ? Dans la fen\u00eatre de style, modifiez Liste Puce 1 en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de tpe Radial . Observez les modifications du document. Allez \u00e0 la page 31, partie 5.2.c, s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en Liste Puce 1 , en Liste Puce 2 . le texte at-il \u00e9t\u00e9 chang\u00e9 ? S\u00e9parer le fond de la forme Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res : sur un \u00e9cran couleur ; par un logiciel de synth\u00e8se vocale ; sur un \u00e9cran monochrome ( ou dans la console) ; sur un \u00e9cran de smartphone ; par une impression sur un papier A4, ou A3, ou autres formats ; ... Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style , regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes... Cascading Style Sheets D\u00e9finition CSS CSS est l'acronyme de Cascading Style Sheets , soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier CSS est appel\u00e9 par une ou plusieurs pages HTML (entre autre), et associe \u00e0 certaines balises et/ou attributs html certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises. Pour utiliser une feuille de style nomm\u00e9e toto.css dans une page html , il faut inclure entre les balises <head> et </head> la ligne suivante : < link href = \"toto.css\" rel = \"stylesheet\" type = \"text/css\" /> Exemple Dans l'exemple ci-dessous, le fichier style.css est utilis\u00e9 par les diff\u00e9rentes pages html : D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples Vocabulaire Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles , qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple : le s\u00e9l\u00e9cteur p signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <p> et </p> . Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl + Alt + ` ou AltGr + ` donne { et Ctrl + Alt + = ou AltGr + = donne } ). la propri\u00e9t\u00e9 color indique que la r\u00e8gle concerne la couleur de police ; la valeur associ\u00e9e red indique que la couleur de police sera rouge ; la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points. Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable : h1 { color : magenta ; background-color : lightblue ; font-style : italic ; font-size : 3 em ; font-variant : small-caps ; } Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles . Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools . Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale . L'inspecteur d'objet Il est possible dans Firefox , comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans Firefox , vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl + Shift + I , ou bien par Menu > Outils suppl\u00e9mentaires > Outils de d\u00e9veloppement web . L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!) Exercice : Modifier une page web existante Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/ . Ouvrez l'inspecteur d'objets . Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page Mettre en forme : le CSS . Vous devez voir appar\u00e2itre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur .md-typeset h1 la d\u00e9claration background-color : pink . Enjoy Les s\u00e9lecteurs en CSS Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles. S\u00e9lecteur de type : Cible toutes les balises d'un certain nom. Par exemple : body { background-color : black ; } p { color : green ; } S\u00e9lecteur de classe : Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut class . Toutes les balises poss\u00e9dant le m\u00eame attribut class peuvent \u00eatre alors cibl\u00e9es en ajoutant un point . pr\u00e9c\u00e9dant le nom de la classe. Par exemples : cibler toutes les balises poss\u00e9dant l'attribut class=\"definition\" . definition { color : red ; border-width : 2 px ; border-style : dashed ; } cible les titres de rang h2 et poss\u00e9dant l'attribut class=\"chapitre\" (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es) h2 . chapitre { text-decoration : underline ; } S\u00e9lecteur d'identifiant : Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut id . Par exemple, pour cibler la balise poss\u00e9dant l'attribut id=\"titresite\" , on utilise le symbole # : # titresite { text-align : center ; } Ordre d'application des s\u00e9lecteurs Priorit\u00e9 des s\u00e9lecteurs Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 conna\u00eetre pour \u00e9viter les comportement erratiques du CSS : La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte ( id est plus pr\u00e9cis que class qui est plus pr\u00e9cis que le nom de la balise). Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal. Les bo\u00eetes CSS... Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla . Une bo\u00eete... Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres. Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on : padding : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme padding \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme) border : la ligne qui est juste autour du padding (en fran\u00e7ais cela correspond \u00e0 la bordure). margin : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge). Des boites ! Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement : \u00e9l\u00e9ment block : un \u00e9l\u00e9ment block occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments block s'enchainent, ils sont les uns au dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <h1>,<h2>,...,<h6> , <p> et surtout <div> (balise g\u00e9n\u00e9rique de type block ) sont des \u00e9l\u00e9ments de type block . \u00e9l\u00e9ment inline : un \u00e9l\u00e9ment inline s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s.Par d\u00e9faut les \u00e9l\u00e9ments <a>,<img>,<strong>,... sont des \u00e9l\u00e9ments de type inline . Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments inline et block , qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous poyurriez vous poser. Modifier le type d'un \u00e9l\u00e9ment : display Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page html. Pour cela on utilise la propri\u00e9t\u00e9 display et ses diff\u00e9rentes valeurs : none : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles. block : rend l'\u00e9l\u00e9ment de type block ; inline : rend l'\u00e9l\u00e9ment de type inline ; grid : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ; flex : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite. Les dimensions et unit\u00e9s de mesures les plus utiles En CSS, il est souvent imp\u00e9ratif de donner des longueurs, ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types : valeur en pourcentage : font-size : 120\\%; d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %. hauteur em : cadratin, ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re M . font-size : 1.5em; \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de 1em . valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple width : 50px; mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. A proscrire sauf cas particuliers. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vw; permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vh; permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre. Adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes, et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage. Afin d'afficher correctement un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css , diff\u00e9rentes version du site. Pour cela on utilise des media-queries - soit requ\u00eates de media . Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site. Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes : max-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; min-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; Exemple L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen. /* version par d\u00e9faut: sur grand \u00e9cran */ . menu { width : 30 em ; /* etc. */ } /* \u00e9cran plus petit: on passe le menu en horizontal */ @ media ( max-width : 100em ) { . menu { width : 100 % ; } . menu li { display : inline-block ; } /* etc. */ } /* \u00e9cran encore plus petit: on cache le menu */ @ media ( max-width : 50em ) { . menu { display : none ; } } A faire Maintenant que vous connaissez quelques secrets du CSS, vous allez pouvoir l'utiliser pour effectuer une mise en page plus agr\u00e9able de votre page html !","title":"CSS"},{"location":"SNT/Web/CSS/#mettre-en-forme-le-css","text":"","title":"Mettre en forme : le CSS"},{"location":"SNT/Web/CSS/#separer-le-fond-et-la-forme-un-exemple-avec-un-traitement-de-texte","text":"Activit\u00e9 avec un traitement de texte T\u00e9l\u00e9chargez puis ouvrez le fichier StylesModeles.odt avec Libre Office . Allez \u00e0 la page 5 du document. Ouvrez la fen\u00eatre de style en appuyant sur F11 . D\u00e9ployez le menu Style par d\u00e9faut en appuyant sur + . D\u00e9ployez de m\u00eame le menu Titre , puis cliquez droit sur Titre 1 , puis modifier . Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? Y-a-t-il eu des changements sur d'autres pages ? Qu'ont en commun toutes les zones chang\u00e9es ? Dans la fen\u00eatre de style, modifiez Liste Puce 1 en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de tpe Radial . Observez les modifications du document. Allez \u00e0 la page 31, partie 5.2.c, s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en Liste Puce 1 , en Liste Puce 2 . le texte at-il \u00e9t\u00e9 chang\u00e9 ? S\u00e9parer le fond de la forme Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res : sur un \u00e9cran couleur ; par un logiciel de synth\u00e8se vocale ; sur un \u00e9cran monochrome ( ou dans la console) ; sur un \u00e9cran de smartphone ; par une impression sur un papier A4, ou A3, ou autres formats ; ... Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style , regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes...","title":"S\u00e9parer le fond et la forme : un exemple avec un traitement de texte"},{"location":"SNT/Web/CSS/#cascading-style-sheets","text":"","title":"Cascading Style Sheets"},{"location":"SNT/Web/CSS/#definition","text":"CSS CSS est l'acronyme de Cascading Style Sheets , soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier CSS est appel\u00e9 par une ou plusieurs pages HTML (entre autre), et associe \u00e0 certaines balises et/ou attributs html certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises. Pour utiliser une feuille de style nomm\u00e9e toto.css dans une page html , il faut inclure entre les balises <head> et </head> la ligne suivante : < link href = \"toto.css\" rel = \"stylesheet\" type = \"text/css\" /> Exemple Dans l'exemple ci-dessous, le fichier style.css est utilis\u00e9 par les diff\u00e9rentes pages html :","title":"D\u00e9finition"},{"location":"SNT/Web/CSS/#declaration-dune-regle-css-vocabulaire-associe-et-premiers-exemples","text":"Vocabulaire Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles , qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple : le s\u00e9l\u00e9cteur p signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <p> et </p> . Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl + Alt + ` ou AltGr + ` donne { et Ctrl + Alt + = ou AltGr + = donne } ). la propri\u00e9t\u00e9 color indique que la r\u00e8gle concerne la couleur de police ; la valeur associ\u00e9e red indique que la couleur de police sera rouge ; la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points. Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable : h1 { color : magenta ; background-color : lightblue ; font-style : italic ; font-size : 3 em ; font-variant : small-caps ; } Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles . Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools . Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale . L'inspecteur d'objet Il est possible dans Firefox , comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans Firefox , vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl + Shift + I , ou bien par Menu > Outils suppl\u00e9mentaires > Outils de d\u00e9veloppement web . L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!) Exercice : Modifier une page web existante Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/ . Ouvrez l'inspecteur d'objets . Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page Mettre en forme : le CSS . Vous devez voir appar\u00e2itre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur .md-typeset h1 la d\u00e9claration background-color : pink . Enjoy","title":"D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples"},{"location":"SNT/Web/CSS/#les-selecteurs-en-css","text":"Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles.","title":"Les s\u00e9lecteurs en CSS"},{"location":"SNT/Web/CSS/#selecteur-de-type","text":"Cible toutes les balises d'un certain nom. Par exemple : body { background-color : black ; } p { color : green ; }","title":"S\u00e9lecteur de type :"},{"location":"SNT/Web/CSS/#selecteur-de-classe","text":"Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut class . Toutes les balises poss\u00e9dant le m\u00eame attribut class peuvent \u00eatre alors cibl\u00e9es en ajoutant un point . pr\u00e9c\u00e9dant le nom de la classe. Par exemples : cibler toutes les balises poss\u00e9dant l'attribut class=\"definition\" . definition { color : red ; border-width : 2 px ; border-style : dashed ; } cible les titres de rang h2 et poss\u00e9dant l'attribut class=\"chapitre\" (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es) h2 . chapitre { text-decoration : underline ; }","title":"S\u00e9lecteur de classe :"},{"location":"SNT/Web/CSS/#selecteur-didentifiant","text":"Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut id . Par exemple, pour cibler la balise poss\u00e9dant l'attribut id=\"titresite\" , on utilise le symbole # : # titresite { text-align : center ; }","title":"S\u00e9lecteur d'identifiant :"},{"location":"SNT/Web/CSS/#ordre-dapplication-des-selecteurs","text":"Priorit\u00e9 des s\u00e9lecteurs Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 conna\u00eetre pour \u00e9viter les comportement erratiques du CSS : La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte ( id est plus pr\u00e9cis que class qui est plus pr\u00e9cis que le nom de la balise). Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal.","title":"Ordre d'application des s\u00e9lecteurs"},{"location":"SNT/Web/CSS/#les-boites-css","text":"Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla .","title":"Les bo\u00eetes CSS..."},{"location":"SNT/Web/CSS/#une-boite","text":"Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres. Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on : padding : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme padding \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme) border : la ligne qui est juste autour du padding (en fran\u00e7ais cela correspond \u00e0 la bordure). margin : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge).","title":"Une bo\u00eete..."},{"location":"SNT/Web/CSS/#des-boites","text":"Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement : \u00e9l\u00e9ment block : un \u00e9l\u00e9ment block occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments block s'enchainent, ils sont les uns au dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <h1>,<h2>,...,<h6> , <p> et surtout <div> (balise g\u00e9n\u00e9rique de type block ) sont des \u00e9l\u00e9ments de type block . \u00e9l\u00e9ment inline : un \u00e9l\u00e9ment inline s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s.Par d\u00e9faut les \u00e9l\u00e9ments <a>,<img>,<strong>,... sont des \u00e9l\u00e9ments de type inline . Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments inline et block , qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous poyurriez vous poser. Modifier le type d'un \u00e9l\u00e9ment : display Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page html. Pour cela on utilise la propri\u00e9t\u00e9 display et ses diff\u00e9rentes valeurs : none : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles. block : rend l'\u00e9l\u00e9ment de type block ; inline : rend l'\u00e9l\u00e9ment de type inline ; grid : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ; flex : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite.","title":"Des boites !"},{"location":"SNT/Web/CSS/#les-dimensions-et-unites-de-mesures-les-plus-utiles","text":"En CSS, il est souvent imp\u00e9ratif de donner des longueurs, ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types : valeur en pourcentage : font-size : 120\\%; d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %. hauteur em : cadratin, ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re M . font-size : 1.5em; \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de 1em . valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple width : 50px; mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. A proscrire sauf cas particuliers. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vw; permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre. valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : margin-left : 50vh; permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre.","title":"Les dimensions et unit\u00e9s de mesures les plus utiles"},{"location":"SNT/Web/CSS/#adaptation-aux-differents-ecransmedias-de-sortie","text":"Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes, et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage. Afin d'afficher correctement un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css , diff\u00e9rentes version du site. Pour cela on utilise des media-queries - soit requ\u00eates de media . Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site. Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes : max-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; min-width : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ; Exemple L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen. /* version par d\u00e9faut: sur grand \u00e9cran */ . menu { width : 30 em ; /* etc. */ } /* \u00e9cran plus petit: on passe le menu en horizontal */ @ media ( max-width : 100em ) { . menu { width : 100 % ; } . menu li { display : inline-block ; } /* etc. */ } /* \u00e9cran encore plus petit: on cache le menu */ @ media ( max-width : 50em ) { . menu { display : none ; } } A faire Maintenant que vous connaissez quelques secrets du CSS, vous allez pouvoir l'utiliser pour effectuer une mise en page plus agr\u00e9able de votre page html !","title":"Adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie"}]}