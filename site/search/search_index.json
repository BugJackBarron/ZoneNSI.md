{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#mathssntnsi-dans-un-petit-lycee-breton","title":"Maths/SNT/NSI dans un petit Lyc\u00e9e Breton","text":"###Lancerbenchmark=[bksl-nl    'concatenate(\"Zone\", \"NSI\") == \"ZoneNSI\"',bksl-nl    'concatenate(\"Zone\", \" NSI\") == \"Zone NSI\"',bksl-nl    'concatenate(\"Zone\", \"\") == \"Zone\"',bksl-nl    'concatenate(\"\", \"NSI\") == \"NSI\"'bksl-nl    ]bksl-nl Valider                3/3                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>mot1 = \"Zone\"bksl-nlmot2 = \"NSI\"bksl-nlbksl-nldef concatenate(mot1, mot2) :bksl-nl    return ...bksl-nlmot1 = \"Zone\"bksl-nlmot2 = \"NSI\"bksl-nlbksl-nldef concatenate(mot1, mot2) :bksl-nl    return mot1+mot2bksl-nl</p> <p>L'ancien site peut-\u00eatre trouv\u00e9 ici.</p>"},{"location":"WorkInProgress/","title":"Flask","text":""},{"location":"ES/stockage/","title":"Stockage des donn\u00e9es","text":""},{"location":"ES/stockage/#stockage-et-transferts-de-donnees","title":"Stockage et transferts de donn\u00e9es","text":"<p>Science informatique</p> <p>La science informatique est d\u00e9finie comme la \u00abscience du traitement automatis\u00e9 de l'information\u00bb.</p> <p>Avant de traiter des informations, encore faut-il les organiser et les stocker de mani\u00e8re efficace. Nous verrons dans ce TP comment sont structur\u00e9es et stock\u00e9es des donn\u00e9es de tous types.</p>"},{"location":"ES/stockage/#unites-dinformations","title":"Unit\u00e9s d'informations","text":""},{"location":"ES/stockage/#la-notation-binaire-pour-les-entiers","title":"La notation binaire pour les entiers","text":"<p>Historiquement, on trouve des utilisations de symboles binaires depuis les antiquit\u00e9s chinoises et indiennes : on trouve des utilisations dans les hexagrammes du Yi Jing en Chine (-750), et le math\u00e9maticien indien Pingala pr\u00e9sente une table repr\u00e9sentant les nombres 0 \u00e0 7 en binaire (troisi\u00e8me ou deuxi\u00e8me si\u00e8cle av J.C.). Mais c'est \u00e0 Leibniz au XVIII\u00e8me s., qui montre la compatibilit\u00e9 du syst\u00e8me binaire avec les quatre op\u00e9rations, et surtout au math\u00e9maticien George Boole, qui publie en 1847 une alg\u00e8bre binaire dite depuis bool\u00e9enne, qu'on doit la th\u00e9orie li\u00e9e \u00e0 l'utilisation de la notation binaire avec uniquement des <code>0</code> et des <code>1</code>.</p> <p>Les chiffres binaires (binary digits)</p> <p>Un nombre \u00e9crit en binaire est \u00e9crit comme une suite de <code>0</code> et de <code>1</code>, chaque chiffre binaire (en anglais binary digit, ou bit), ayant la valeur d'une puissance de 2 selon sa position dans le nombre, tout comme on d\u00e9compose un nombre selon les puissances de 10 en notation d\u00e9cimale :</p> \\[ \\begin{align} (10~0101)_2 &amp;= 1 \\times 2^5 + 0\\times 2^4 + 0 \\times 2^3 + 1\\times 2^2 + 0 \\times 2^0 + 1\\times 2^0\\\\ &amp;=1 \\times 32 +0 \\times 16 + 0\\times 8 + 1 \\times 4 + 0\\times 2 +1\\times 1\\\\ &amp;= 32 + 4 + 1\\\\ &amp;= 37\\\\ \\end{align} \\] <p>Questions I</p> <ol> <li>\u00c9crire les 10 premiers entiers (de 0 \u00e0 9) sous forme binaire.</li> <li>D\u00e9terminer l'\u00e9criture d\u00e9cimale de \\((10~1010)_2\\).</li> <li>D\u00e9terminer l'\u00e9criture d\u00e9cimale de \\((1111~1111)_2\\).</li> <li>Comment faire pour trouver l'\u00e9criture binaire du nombre \\(164\\).</li> </ol> <p>Entiers n\u00e9gatifs et Nombres r\u00e9els</p> <p>Ici nous avons utilis\u00e9 le syst\u00e8me binaire pour repr\u00e9senter des entiers naturels, mais nous n'aborderons pas la repr\u00e9sentation des entiers relatifs et des nombres r\u00e9els.</p>"},{"location":"ES/stockage/#bits","title":"Bits","text":"<p>Bit</p> <p>Le bit est l'unit\u00e9 d'information la plus simple dans un syst\u00e8me de num\u00e9ration, ne pouvant prendre que deux valeurs, repr\u00e9sent\u00e9es par les chiffres 0 et 1. Un bit peut aussi bien repr\u00e9senter une alternative logique (Vrai et Faux), qu'un chiffre binaire, ou qu'une autre information ne pouvant prendre que deux \u00e9tats (par ex. Ouvert ou ferm\u00e9).</p> <p>En th\u00e9orie de l'information de Shannon, le bit est la quantit\u00e9 minimale d'information pouvant \u00eatre transmise par un message, et constitue \u00e0 ce titre l'unit\u00e9 de mesure de base de l'information en informatique.</p> <p>Un ensemble ordonn\u00e9 de bits permet donc de repr\u00e9senter des informations.</p> <p>Questions II</p> <ol> <li>Combien d'informations diff\u00e9rentes peuvent \u00eatre repr\u00e9sent\u00e9es par 2 bits ? 4 bits ? 8 bits ? 10 bits ?</li> <li>Quel est le nombre minimal de bits n\u00e9cessaire pour repr\u00e9senter l'alphabet latin en majuscule, sans accents et autres signes diacritiques ?</li> <li>Combien de bits sont n\u00e9cessaires pour repr\u00e9senter tous les caract\u00e8res de l'alphabet fran\u00e7ais, en y incluant les signes de ponctuations et les chiffres ?</li> <li>De mani\u00e8re g\u00e9n\u00e9rale, un nombre entier naturel \\(N\\) n\u00e9cessitera \\(n\\) bits, o\u00f9 \\(n\\) est l'entier naturel tel que \\(2^{n-1}\\leqslant N &lt; 2^n\\). <ol> <li>Combien de bits sont n\u00e9cessaire pour repr\u00e9senter en binaire le nombre \\(500\\) ?</li> <li>Combien de bits sont n\u00e9cessaires pour repr\u00e9senter en binaire le nombre \\(10~000\\) ?</li> <li>Quel est le plus grand nombre repr\u00e9sentable avec \\(24\\) bits ?</li> </ol> </li> <li>Il est possible d'utiliser la fonction \\(ln\\) (logarithme n\u00e9p\u00e9rien) pour obtenir le nombre \\(n\\) de bits n\u00e9cessaires pour repr\u00e9senter un nombre entier naturel donn\u00e9 \\(N\\), par la formule </li> </ol> \\[ n = E\\left(\\dfrac{\\ln(N)}{\\ln(2)}\\right) +1 \\] <p>o\u00f9 \\(E\\) est la fonction renvoyant la partie enti\u00e8re d'un nombre donn\u00e9.     1. Combien de bits sont n\u00e9cessaires pour repr\u00e9senter \\(10^6\\) ?     2. Combien de bits sont n\u00e9cessaires pour repr\u00e9senter \\(10^9\\) ?</p> <p>Octets</p> <p>Un octet est un mot binaire de 8 bits, et permet de repr\u00e9senter 256 informations diff\u00e9rentes. Il est devenu l'unit\u00e9 standard de m\u00e9morisation des m\u00e9moires informatiques. Son symbole dans le syst\u00e8me international est o, et ses multiples sont :</p> nom symbole valeur kilooctet ko \\(10^3\\) m\u00e9gaoctet Mo \\(10^6\\) gigaoctet Go \\(10^9\\) t\u00e9raoctet To \\(10^{12}\\) p\u00e9taoctet Po \\(10^{15}\\) exaoctet Eo \\(10^{18}\\)"},{"location":"ES/stockage/#premiers-stockages-les-cartes-perforees-punch-cards","title":"Premiers stockages : les cartes perfor\u00e9es (punch cards)","text":"<p>Comme nous l'avons vu dans la partie pr\u00e9c\u00e9dente, les informations num\u00e9riques peuvent \u00eatre repr\u00e9sent\u00e9es sous la forme binaire, mais elles ne sont pas les seules. Si une convention est adopt\u00e9e, il est tout \u00e0 fait possible de repr\u00e9senter d'autres informations, comme du texte, des images ou autres donn\u00e9es.</p> <p>Un des premiers syst\u00e8mes de stockage de masse utilis\u00e9 est la carte perfor\u00e9e. En 1884, Herman Hollerith d\u00e9pose un brevet pour une machine \u00e9lectrom\u00e9canique utilisant des cartes perfor\u00e9es, permettant d'acc\u00e9l\u00e9rer le recensement des \u00e9tats du gouvernement am\u00e9ricain. Il lance par la suite une soci\u00e9t\u00e9 qui deviendra IBM.</p> <p>Une carte perfor\u00e9e est un support d'informations exprim\u00e9es sous la forme binaire : une grille de \u00ab cases \u00bb est repr\u00e9sent\u00e9e, cases qui peuvent \u00eatre perfor\u00e9es (1) ou non (0).</p> <p>Par exemple la carte ci-dessous, mod\u00e8le standard d'IBM brevet\u00e9 en 1928, poss\u00e8de 80 colonnes et 12 lignes (les lignes num\u00e9rot\u00e9es de 0 \u00e0 9, plus deux lignes sup\u00e9rieures non num\u00e9rot\u00e9es) permettant techniquement d'encoder un mot de 12 bits (mais en pratique seulement 9 bits \u00e9taient utilis\u00e9s, les lignes num\u00e9rot\u00e9es 0 \u00e0 8, la ligne 9 servant de \u00ab bit de contr\u00f4le \u00bb, et les deux lignes sup\u00e9rieures indiquant des op\u00e9rations sp\u00e9ciales).</p> <p><sup>1</sup></p> <p>Ces cartes \u00e9taient stock\u00e9es par bo\u00eetes de 2 000, et le coin tronqu\u00e9 servait de rep\u00e8re pour les ins\u00e9rer dans le bon sens dans un chargeur de cartes ou pour les remettre \u00e0 l'endroit quand la bo\u00eete tombait par terre.</p> <p>Questions III</p> <p>La carte perfor\u00e9e ci-dessus encode l'expression <code>Z(1) = Y + W(1)</code>, dans le langage Fortran. Il est inutile de comprendre le sens de cette expression pour r\u00e9pondre aux questions suivantes :</p> <ol> <li>Quel est le code utilis\u00e9 pour la lettre <code>Z</code> ?</li> <li>Quel est le code utilis\u00e9 pour la lettre <code>Y</code> ?</li> <li>Quel est le code utilis\u00e9 pour la lettre <code>W</code> ?</li> <li>Quel pourrait alors \u00eatre le code pour <code>T</code>?</li> <li>Comment sont encod\u00e9s les espaces ?</li> <li>Comment sont encod\u00e9s les parenth\u00e8ses ouvrantes et fermantes ?</li> </ol> <p>Standardisation</p> <p>Si au d\u00e9part chaque constructeur de machines lectrices de cartes perfor\u00e9es utilisait ses propres cartes, il est devenu assez vite clair qu'une standardisation devait \u00eatre n\u00e9cessaire. Cette standardisation est entr\u00e9e en collision avec la standardisation des bus de donn\u00e9es, c'est-\u00e0-dire des tailles des mots accept\u00e9s par les processeurs (en anglais bytes). Au d\u00e9part les machines pouvaient accepter des bytes de 5, 6, 7, 8 ou m\u00eame 9 bits, mais le proc\u00e9d\u00e9 de standardisation a amen\u00e9 a une g\u00e9n\u00e9ralisation de l'octet comme unit\u00e9 de base.</p> <p>Sur les cartes perfor\u00e9es IBM, on utilisait alors les lignes num\u00e9rot\u00e9es de 0 \u00e0 7 pour repr\u00e9senter un octet, le num\u00e9ro de ligne donnant le poids de chaque bit. Par exemple l'octet <code>1100 0001</code> aurait consist\u00e9 en une colonne trou\u00e9e en ligne 0, 6 et 7.</p> <p>Norme ASCII</p> <p>L'American Standard Code for Information  Interchange est une norme d'encodage de caract\u00e8res, construite d'abord sur 7 bits puis \u00e9tendue par la suite sur 1 octet.</p> <p></p> <p>Dans cette table le caract\u00e8re <code>A</code> est repr\u00e9sent\u00e9 par l'octet <code>0100 0001</code>.</p> <p>Questions IV</p> <ol> <li>Combien d'octets sont alors possible sur une carte standard d'IBM ?</li> <li>Quelle quantit\u00e9 de donn\u00e9es, en octet, pouvait \u00eatre repr\u00e9sent\u00e9e dans un casier de 2000 cartes perfor\u00e9es ?</li> <li>Une carte mesurant 17/100 de mm d'\u00e9paisseur, quelle est l'\u00e9paisseur d'un casier ? </li> <li>Quelles lignes doivent \u00eatre perfor\u00e9es pour repr\u00e9senter le caract\u00e8re <code>d</code> ?</li> <li>Combien de cartes sont n\u00e9cessaires pour \u00e9crire un texte de 1 000 caract\u00e8res, ce qui revient \u00e0 une page A4 compl\u00e8te ?</li> <li>Combien de cartes sont n\u00e9cessaires pour encoder un programme de 72 ko, correspondant au programme ayant permis l\u2019alunissage d'Apollo 11 ?</li> </ol> <p>Les cartes perfor\u00e9es aujourd'hui</p> <p>Si les cartes perfor\u00e9es ne sont plus utilis\u00e9es aujourd'hui pour stocker des donn\u00e9es informatiques, elles ont cependant encore \u00e9t\u00e9 utilis\u00e9e il y a un, comme lors de l'\u00e9lection pr\u00e9sidentielle am\u00e9ricaine de 2002. Bien qu'elles aient repr\u00e9sent\u00e9 une \u00e9volution consid\u00e9rable dans la mani\u00e8re de stocker l'information, les nombreux d\u00e9fauts des cartes et leur sensibilit\u00e9 aux erreurs humaines ont amen\u00e9 \u00e0 leur abandon progressif au profit de m\u00e9moires \u00e9lectroniques plus fiables et permettant de stocker des quantit\u00e9s d'informations de plus en plus importantes.</p>"},{"location":"ES/stockage/#comparaisons-de-quantites-dinformations","title":"Comparaisons de quantit\u00e9s d'informations","text":""},{"location":"ES/stockage/#le-texte","title":"Le texte","text":"<p>L'Unicode</p> <p>Avec la d\u00e9mocratisation d'internet, de nombreux standard diff\u00e9rents sont apparus pour g\u00e9rer toutes les langues et tous les alphabets. Le probl\u00e8me : la m\u00eame s\u00e9quence de bits repr\u00e9sentait diff\u00e9rents caract\u00e8res selon les alphabets, les langues, etc.</p> <p>La norme Unicode a \u00e9t\u00e9 d\u00e9velopp\u00e9e pour r\u00e9pondre \u00e0 ce probl\u00e8me, et englober l'int\u00e9gralit\u00e9 des signes possibles.</p> <p>Le code <code>UTF-8</code> est l'impl\u00e9mentation de la norme Unicode aujourd'hui la plus utilis\u00e9e. En unicode, un caract\u00e8re est cod\u00e9 sur 1, 2, 3 ou 4 octets. \u00abLa principale caract\u00e9ristique d'<code>UTF-8</code> est qu'elle est r\u00e9tro-compatible avec le standard <code>ASCII</code>, c'est-\u00e0-dire que tout caract\u00e8re <code>ASCII</code> se code en <code>UTF-8</code> sous forme d'un unique octet, identique au code <code>ASCII</code>. Par exemple \u00ab A \u00bb (A majuscule) a pour code <code>ASCII</code> 65 (0x41) et se code en <code>UTF-8</code> par l'octet 65. Chaque caract\u00e8re dont le point de code est sup\u00e9rieur \u00e0 127 (0x7F) (caract\u00e8re non <code>ASCII</code>) se code sur 2 \u00e0 4 octets. Le caract\u00e8re \u00ab \u20ac \u00bb (euro) se code par exemple sur 3 octets : 226, 130, et 172 (0xE2, 0x82 et 0xAC).\u00bb<sup>2</sup></p> <p>Questions V</p> <p>En supposant que tous les caract\u00e8res utilis\u00e9s soient cod\u00e9s sur 1 octet :</p> <ol> <li>Quelle est la taille en ko d'une page de 1 000 caract\u00e8res ?</li> <li>Quelle est la taille en Mo d'un livre de 1 000 pages ?</li> <li>Quelle est la taille de Go d'une biblioth\u00e8que de 1000 livres ?</li> <li>Un volume de l'Encyclopedia Britannica contient 8 millions de caract\u00e8res. Quelle serait sa taille en octet (sans les images) ?</li> <li>A votre avis, quelle est la taille de Wikipedia en Anglais, sans les images ?<sup>3</sup></li> </ol>"},{"location":"ES/stockage/#les-images","title":"Les images","text":"<p>Codage des images matricielles sans compression</p> <p>Une image est d\u00e9finie par sa taille en pixel, puis par un certain nombre de facteurs :</p> <ul> <li>un pixel d'une image en noir et blanc pur (pas de niveau de gris) correspond \u00e0 1 bit (0 pour noir, 1 pour blanc) ;</li> <li>un pixel d'une image en nuance de gris correspond \u00e0 1 octet (valeurs de 0 (Noir) \u00e0 255 (Blanc)) ;</li> <li>un pixel d'une image en couleur RGB utilise trois octets (1 pour la nuance de rouge, un pour la nuance de vert, un pour la nuance de bleu) ;</li> <li>un pixel d'une image en couleur RGBA, c'est-\u00e0-dire avec transparence, utilise 4 octets.</li> </ul> <p>Questions VI</p> <ol> <li>Sur la console Vectrex<sup>4</sup>, sortie en 1982, l'\u00e9cran monochrome noir et blanc offrait une r\u00e9solution de 360x480 pixels. Quel \u00e9tait la taille en octets d'une image sur cet \u00e9cran ?</li> <li>Sur la console NES<sup>5</sup>, sortie en 1986, la r\u00e9solution \u00e9tait de 256x240 pixels, mais 52 couleurs \u00e9taient possibles, cod\u00e9es sur 1 octet (pour simplifier). Quelle \u00e9tait la taille en octet d'une image ?</li> <li>Combien de nuances de couleurs sont disponibles pour un appareil utilisant un codage RGB ?</li> <li>En 2007, le Nokia N95 poss\u00e8de une optique photo en 5 M\u00e9gapixels en mode RGB. Quelle \u00e9tait la taille en octets d'une photo ?</li> <li>La r\u00e9solution d'un \u00e9cran d'ordinateur actuel est souvent de 1920x1080 pixels (Full HD). Quel est le poids en octet d'un fond d'\u00e9cran en mode RGBA ? A combien de livres de la partie pr\u00e9c\u00e9dente cela revient-il ?</li> </ol>"},{"location":"ES/stockage/#la-video","title":"La vid\u00e9o","text":"<p>Une vid\u00e9o, ce n'est rien de plus que des images qui se succ\u00e8dent \u00e0 une certaine cadence, un nombre d'images par seconde, o\u00f9 FPS (Frame per second).</p> <p>Questions VII</p> <ol> <li>Quel est le poids d'une vid\u00e9o non-compress\u00e9e d'une minute en Full HD en mode RGB avec 25 images par secondes ?</li> <li>Un DVD contient au maximum 8.5 Go en double-couche. Quelle dur\u00e9e de film en Full HD/RGB peut-il supporter th\u00e9oriquement ?</li> <li>En 4K, la r\u00e9solution est de 3840x2160 pixels en RGB. Le film \u00able Hobbit : La bataille des cinq arm\u00e9es\u00bb dure 164 minutes en version longue. Quelle quantit\u00e9 th\u00e9orique d'information faut-il pour contenir ce film ?</li> <li>Quelle est la quantit\u00e9 d'octet serait th\u00e9oriquement n\u00e9cessaire pour jouer 30 minutes sur un jeu en 60 FPS avec une r\u00e9solution Full HD ?</li> <li>J'ai scroll\u00e9 1h30 aujourd'hui sur TikTok, en regardant des vid\u00e9os FullHD RGB en 25 images par secondes. Combien de livres aurais-je pu t\u00e9l\u00e9charger avec la m\u00eame consommation ?</li> </ol> <p>Compression de donn\u00e9es</p> <p>Bien entendu tout ceci est th\u00e9orique, puisque des algorithmes de compression de donn\u00e9es sont utilis\u00e9s en permanence pour ce qui est du texte, des images ou des vid\u00e9os.</p> <p>Par exemple, le format <code>png</code> est en fait issu d'un algorithme de compression de donn\u00e9es sans pertes (on peut retrouver toutes les informations de l'image originale). Le format <code>jpg</code> est un format de compression avec pertes, donc donnant un r\u00e9sultat utilisant moins de ressources, mais qui a le d\u00e9faut de ne pas permettre d\u2019obtenir toutes les  informations de l'image originale.</p> <p>Pour ce qui est de la vid\u00e9o, l'importance de la compression est ph\u00e9nom\u00e9nale \u00e0 l'heure actuelle, et des entreprises m\u00e8nent une guerre de brevet dans ce domaine (voir l'excellente vid\u00e9o de la chaine <code>_UNDERSCORE</code> avec J.B. Kempf de VLC ).</p> <ol> <li> <p>Image Wikipedia, cr\u00e9dit :\u00ab Par Arnold Reinhold \u2014 I took this picture of an artifact in my possession. The card was created in the late 1960s or early 1970s and has no copyright notice., CC BY-SA 2.5, https://commons.wikimedia.org/w/index.php?curid=775153 \u00bb\u00a0\u21a9</p> </li> <li> <p>D'apr\u00e8s Wikipedia page UTF8 \u21a9</p> </li> <li> <p>voir ici \u21a9</p> </li> <li> <p>voir ici \u21a9</p> </li> <li> <p>voir ici \u21a9</p> </li> </ol>"},{"location":"Maths/Seconde/home/","title":"Pr\u00e9sentation","text":""},{"location":"Maths/Seconde/home/#le-programme","title":"Le programme","text":""},{"location":"Maths/Seconde/home/#documents-officiels","title":"Documents officiels","text":"<p>Le programme de maths de seconde se trouve ici.</p>"},{"location":"Maths/Seconde/home/#prevision-de-progression-annuelle-2021-2022","title":"Pr\u00e9vision de progression annuelle 2021-2022","text":"<p>Cette progression n'est valable que pour les \u00e9l\u00e8ves de seconde I du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e...</p> N\u00b0 Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques 1 Ensembles et intervalles 2 Notions de vecteurs 3 G\u00e9n\u00e9ralit\u00e9s sur les fonctions 4 Configuration du plan et orthogonalit\u00e9 5 Calcul litt\u00e9ral 6 Fonctions de r\u00e9f\u00e9rences 1 (affines et carr\u00e9s) 7 G\u00e9om\u00e9trie rep\u00e9r\u00e9e 8 Arithm\u00e9tique 9 Pourcentages 10 Fonctions de r\u00e9f\u00e9rences 2 11 Probabilit\u00e9s 12 Equations cart\u00e9siennes et syst\u00e8mes 13 Statistiques 14 Echantillonage <p>A toutes ces notions, il faut rajouter les bases d'algorithmique et de programmation en Python :</p> <ul> <li>Types de variables ;</li> <li>Affectations de variables ;</li> <li>Structures conditionnelles :</li> <li>Boucles born\u00e9es et non-born\u00e9es.</li> </ul>"},{"location":"Maths/Seconde/home/#epreuves-communes","title":"Epreuves communes","text":"<p>Deux \u00e9preuves communes sont pr\u00e9vues pour l'ann\u00e9e 2021-2022 :</p> <ul> <li>la premi\u00e8re juste avant les vacances de la toussaint, sur les chapitres 1 \u00e0 3</li> <li>La deuxi\u00e8me avant les vacances de f\u00e9vrier, sur les chapitres 1 \u00e0 7.</li> </ul>"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/","title":"Algorithmes, affectations et types de variables","text":""},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#algorithmes-types-de-variables-et-affectations","title":"Algorithmes, types de variables et affectations","text":""},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#notion-dalgorithme","title":"Notion d'algorithme","text":"<p>D\u00e9finition : Algorithme</p> <p>Un algorithme est une suite finie d'instructions \u00e0 appliquer :</p> <ul> <li>dans un ordre d\u00e9termin\u00e9,</li> <li>\u00e0 un nombre fini de donn\u00e9es,</li> <li>en un nombre fini d'\u00e9tapes, </li> </ul> <p>pour arriver \u00e0 un certain r\u00e9sultat.</p> <p>Des algorithmes, il en existe beaucoup. Certains sont des algorithmes num\u00e9riques (ils travaillent sur des nombres), d'autres sont des algorithmes textuels (ils travaillent sur des textes), ou encore sur d'autres types de donn\u00e9es (musiques, images, ou donn\u00e9es plus abstraites). </p> <p>Mais souvent les algorithmes sont r\u00e9p\u00e9titifs, longs \u00e0 faire \u00e0 la main, et n\u00e9cessitent de fastidieux calculs. Ce qui est particuli\u00e8rement p\u00e9nible pour un \u00eatre humain...</p> <p>Appliquer une m\u00e9thode</p> Enonc\u00e9Solution pour \\(15\\)Solution pour \\(57\\)Solution pour \\(312\\) <p>Info</p> <p>On rappelle que la division euclidienne est la dicision classique des entiers, avec quotient et reste :</p> <p></p> <p>On consid\u00e8re l'algorithme suivant :</p> <ol> <li>Choisir un nombre entier naturel, qu'on appellera \\(x\\).</li> <li>Fixer un nombre \\(p\\) \u00e0 0.</li> <li> <p>Si le quotient de la division euclidienne de \\(x\\) par \\(2\\) est sup\u00e9rieur ou \u00e9gal \u00e0 \\(1\\) :</p> <ul> <li>Ajouter \\(1\\) \u00e0 \\(p\\) ;</li> <li>Remplacer la valeur de \\(x\\) par ce quotient.</li> <li>Recommencer l'\u00e9tape 3</li> </ul> </li> <li> <p>Si le quotient de \\(x\\) par \\(2\\) est inf\u00e9rieur \u00e0 \\(1\\), on arr\u00eate l'algorithme.</p> </li> </ol> <p>Appliquer cet algorithme sur les nombres \\(15\\), \\(57\\) puis 312$. Quelles sont les valeurs finales obtenus par \\(p\\) \u00e0 chaque fois ?</p> <p>On obtient \\(p = 3\\).</p> <p>On obtient \\(p = 5\\)</p> <p>On obtient \\(p = 8\\)</p> <p>Certains algorithmes peuvent \u00eatre v\u00e9ritablement fastidieux ! Mais les humains ont invent\u00e9 les ordinateurs, qui eux sont capables de faire des t\u00e2ches r\u00e9p\u00e9titives et des calculs tr\u00e8s tr\u00e8s rapidement - un ordinateur dont le processeur est cadenc\u00e9 \u00e0 3 GHz effectue 3 milliards d'op\u00e9rations \u00e9l\u00e9mentaires par seconde (les op\u00e9rations \u00e9l\u00e9mentaires sont g\u00e9n\u00e9ralement des additions sur des entiers pas trop grands).</p> <p>Donc, dans un ordinateur, les donn\u00e9es vont \u00eatre utilis\u00e9es et modifi\u00e9es par l'algorithme, afin de produire son r\u00e9sultat, qui sera lui-m\u00eame une donn\u00e9e.</p> <p>Pour manipuler les donn\u00e9es , l'ordinateur les stockera dans des cases m\u00e9moires, cases que l'on rep\u00e8rera par leur nom.</p> <p>Variables, types et affectations</p> <p>Une variable est une case m\u00e9moire poss\u00e9dant un nom, dans lequel on range une donn\u00e9e.</p> <p>Les donn\u00e9es informatiques de base peuvent \u00eatre class\u00e9es dans 4 types diff\u00e9rents :</p> <ul> <li>les entiers (nombre entier relatif) ;</li> <li>les flottants (en simplifiant, les nombres d\u00e9cimaux);</li> <li>les cha\u00eenes de caract\u00e8res (des suites de lettres, chiffres, symboles, encadr\u00e9es par des guillemets);</li> <li>les bool\u00e9ens (une valeur qui ne peut \u00eatre que dans deux \u00e9tats : Vrai et Faux).</li> </ul> <p>L'affectation est l'op\u00e9ration qui consiste \u00e0 \u00ab ranger \u00bb une donn\u00e9e dans une variable. En pseudo-code elle est symbolis\u00e9e par une fl\u00e8che pointant vers la gauche  : \\(\\leftarrow\\). On lira l'instruction :</p> \\[ X \\leftarrow 7 \\] <p>par \u00ab X prend la valeur 7 \u00bb, ce qui signifie que la valeur \\(7\\) a \u00e9t\u00e9 rang\u00e9e dans une case m\u00e9moire nomm\u00e9e \\(X\\).</p> <p>Exemple</p> <p>Consid\u00e9rons le programme de calcul suivant :</p> <pre><code>Choisir un nombre\nLe multiplier par 5\nAjouter 4 au r\u00e9sultat\n</code></pre> <p>Ce programme est bien un algorithme :</p> <ul> <li>il y a trois instructions ;</li> <li>on doit les appliquer dans l'ordre ;</li> <li>on a une seule donn\u00e9e de d\u00e9part ;</li> <li>il y aura deux \u00e9tapes de calcul.</li> </ul> <p>La seule donn\u00e9e utilis\u00e9e est le nombre de d\u00e9part. Si on applique cet algorithme :</p> <ul> <li>en nommant le nombre de d\u00e9part X</li> <li>en choisissant comme nombre de d\u00e9part 7</li> </ul> <p>On obtient alors l'algorithme suivant, \u00e9crit en pseudo-code  :</p> \\[ \\begin{array}{rcl} X &amp; \\leftarrow &amp; 7\\\\ X &amp; \\leftarrow &amp; 5\\times X\\\\ X &amp; \\leftarrow &amp; X + 4\\\\ \\end{array} \\] <p>On peut alors repr\u00e9senter le tableau d'\u00e9tat de la variable X, qui repr\u00e9sente l'\u00e9volution des valeurs dans les diff\u00e9rentes cases m\u00e9moires nomm\u00e9es lors de l'ex\u00e9cution de l'algorithme :</p> Etat de X Commentaire 7 C'est la ligne  \\(X~&lt;--~ 7\\) 35 C'est la ligne \\(X~&lt;--~ 5\\times X\\) , \\(X\\) prend 5 fois la valeur qu'il poss\u00e8de 39 C'est la ligne \\(X~&lt;--~ X+4\\), \\(X\\) prend la valeur qu'il poss\u00e8de plus 4 <p>A la fin de l'algorithme, la case m\u00e9moire contient \\(39\\), les autres valeurs ayant totalement disparues.</p> <p>Exemples de types de variables </p> <ul> <li>\\(a \\leftarrow 56\\) : la variable \\(a\\) prend la valeur enti\u00e8re \\(56\\);</li> <li>\\(b \\leftarrow 3,2\\) : la variable \\(b\\) prend la valeur flottante \\(3,2\\);</li> <li>\\(c \\leftarrow a+b\\) : la variable \\(c\\) prend la valeur de la somme des variables \\(a\\) et \\(b\\);</li> <li>\\(d \\leftarrow \\text{\"Hello world\"}\\) : la variable \\(d\\) re\u00e7oit la cha\u00eene de caract\u00e8res <code>\"Hello world\"</code>;</li> <li>\\(e \\leftarrow True\\) : la variable \\(e\\) re\u00e7oit la valeur bool\u00e9enne Vrai;</li> <li>\\(f \\leftarrow 4&lt;2\\) : la variable \\(f\\) re\u00e7oit la valeur bool\u00e9enne Faux.</li> </ul>"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#le-langage-python","title":"Le langage Python","text":"<p>Langage Python</p> <p>Python est un langage informatique cr\u00e9\u00e9 en 1991 par l'informaticien N\u00e9erlandais Guido vann Rossum.</p> <p></p><p> </p> <p>C'est un langage de haut niveau, ce qui signifie qu'il est assez \u00e9loign\u00e9 du code machine qui est tr\u00e8s difficile \u00e0 lire et \u00e0 comprendre pour un \u00eatre humain. En ce sens, Python est un langage informatique simple \u00e0 apprendre, et dont l'\u00e9criture est proche du langage naturel. Il est ainsi devenu le langage g\u00e9n\u00e9rant le plus de recherches sur le web en octobre 2021.</p> <p>Pour autant, l'ordinateur qui ex\u00e9cute un programme Python reste une machine sans intelligence, et la programmeuse ou le programmeur doit respecter une syntaxe tr\u00e8s stricte pour que l'ordinateur ex\u00e9cute la t\u00e2che qui lui est confi\u00e9e.</p> <p>Exemple</p> <p>Voici le code python correspondant \u00e0 l'algorithme que nous avons \u00e9crit pr\u00e9c\u00e9demment :</p> <pre><code>X = 7\nX = 5*X\nX = X+4\n</code></pre> <p>On peut voir son ex\u00e9cution pas \u00e0 pas depuis le site python tutor :</p> <p> </p> <p>On constate que :</p> <ul> <li>en python, l'instruction d'affectation est \u00e9crite avec un signe <code>=</code> ;</li> <li>la multiplication se fait par l'interm\u00e9diaire du signe ast\u00e9risque <code>*</code>.</li> </ul>"},{"location":"Maths/Seconde/AlgoBases/AffectationTypes/#premiers-exercices","title":"Premiers exercices","text":"<p>Exercice 1</p> <p>On consid\u00e8re l'algorithme en pseudo-code suivant  :</p> \\[ \\begin{array}{|l|} \\hline A \\leftarrow 3\\\\ B \\leftarrow A+2\\\\ A \\leftarrow A\\times B\\\\ B \\leftarrow A+B\\\\\\hline \\end{array} \\] <ol> <li> <p>Compl\u00e9ter le tableau d'\u00e9tat des variables suivants :</p> \\[ \\begin{array}{|c|c|} \\hline A &amp; B\\\\\\hline &amp; \\\\\\hline &amp; \\\\\\hline &amp; \\\\\\hline \\end{array} \\] </li> <li> <p>Quelles sont les valeurs contenues par les variables \\(A\\) et \\(B\\) apr\u00e8s l'ex\u00e9cution de l'algorithme ?</p> </li> <li> <p>V\u00e9rifier vos r\u00e9ponses pr\u00e9c\u00e9dentes ci-dessous :</p> <p> </p> </li> </ol> <p>Exercice 2</p> Enonc\u00e9Solution <p>On consid\u00e8re les deux algorithmes S1 et S2 suivants :</p> <ul> <li>S1 :</li> </ul> \\[ \\begin{array}{|rcl|} \\hline A &amp; \\leftarrow &amp; \\text{\"bonjour\"}\\\\ A &amp; \\leftarrow &amp; \\text{\"bonsoir\"}\\\\\\hline \\end{array} \\] <ul> <li>S2 :</li> </ul> \\[ \\begin{array}{|rcl|} \\hline A &amp; \\leftarrow &amp; \\text{\"bonsoir\"}\\\\ A &amp; \\leftarrow &amp; \\text{\"bonjour\"}\\\\\\hline \\end{array} \\] <ol> <li>Que contient A \u00e0 la fin de S1 ? de S2 ?</li> <li>L'ordre a-t-il une importance ?</li> </ol> <ol> <li>A la fin de S1, \\(A\\) contient <code>\"bonsoir\"</code>. A la fin de S2, \\(A\\) contient <code>\"bonjour\"</code>.</li> <li>Oui, l'orde \u00e0 une importance. Les instructions sont lues de mani\u00e8re s\u00e9quentielle, du haut vers le bas </li> </ol> <p>Exercice 3</p> Enonc\u00e9Solution <p>Soient deux variables \\(A\\) et \\(B\\), et l'algorithme suivant :</p> \\[ \\begin{array}{|rcl|} \\hline A &amp; \\leftarrow &amp; 1\\\\ B &amp; \\leftarrow &amp; 3\\\\ A &amp; \\leftarrow &amp; A+B\\\\ B &amp; \\leftarrow &amp; A\\times B\\\\\\hline \\end{array} \\] <ol> <li>Justifier qu'\u00e0 l'issue de l'algorithme ci-dessous, la valeur de la variable B est 12.</li> <li>A la fin de l'algorithme, on  ajoute l'instruction \\(C \\leftarrow (A=12)\\). Quel est le type de la donn\u00e9e contenue par C ? Quelle est sa valeur ?</li> <li>Ecrire ce code en Python (attention il y a un pi\u00e8ge sur la derni\u00e8re ligne !)</li> </ol> <p></p> <p>Le programme suivant doit \u00eatre plac\u00e9 dans Python Tutor, et permet de r\u00e9pondre \u00e0 toutes les questions :</p> <pre><code>A = 1\nB = 3\nA = A+B\nB = A*B\nC = (A == 12)\n</code></pre> <p>Le pi\u00e8ge est d'\u00e9crire <code>A=12</code>, car en python, le symbole <code>=</code> ne permet pas de tester une \u00e9galit\u00e9, vu qu'il est utilis\u00e9 pour l'affectation. Pour tester une \u00e9galit\u00e9, et donc r\u00e9cup\u00e9rer une valeur bool\u00e9enne, il faut utiliser un double-\u00e9gal : <code>A==12</code>.</p> <p>Exercice 4</p> Enonc\u00e9Solution <p>On consid\u00e8re l'algorithme suivant :</p> \\[ \\begin{array}{|rcl|} \\hline X &amp; \\leftarrow &amp; 4\\\\ X &amp; \\leftarrow &amp; 2 X\\\\ X &amp; \\leftarrow &amp; X+3\\\\ X &amp; \\leftarrow &amp; X\\times X\\\\\\hline \\end{array} \\] <ol> <li>Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\). Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ?</li> <li>On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\), o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Laquelle de ces trois propositions correspondent \u00e0 la valeur affect\u00e9 \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ?<ul> <li>\\(2a+3^2\\)</li> <li>\\((2a+3)^2\\)</li> <li>\\(2(a+3)^2\\)</li> </ul> </li> </ol> <p>A venir !</p> <p>Exercice 5</p> Enonc\u00e9Solution <p>On consid\u00e8re l'algorithme suivant :</p> \\[ \\begin{array}{|rcl|} \\hline X &amp; \\leftarrow &amp; 4\\\\ X &amp; \\leftarrow &amp; X+3\\\\ X &amp; \\leftarrow &amp; X\\times X\\\\ X &amp; \\leftarrow &amp; 2 X\\\\\\hline \\end{array} \\] <ol> <li>Compl\u00e9ter le tableau d'\u00e9tat de la variable \\(X\\). Quelle valeur est affect\u00e9 \u00e0 \\(X\\) \u00e0 la fin de l'algorithme ?</li> <li>On remplace la premi\u00e8re ligne par \\(X \\leftarrow a\\), o\u00f9 \\(a\\) est un r\u00e9el donn\u00e9. Quelle expression d\u00e9pendant de \\(a\\) est affect\u00e9e \u00e0 \\(X\\) apr\u00e8s ex\u00e9cution de l'algorithme ?</li> </ol> <p>A venir !</p>"},{"location":"Maths/Seconde/AlgoBases/Arithmetique/","title":"Arithm\u00e9tique","text":""},{"location":"Maths/Seconde/AlgoBases/Arithmetique/#arithmetique-avec-python","title":"Arithm\u00e9tique avec Python","text":""},{"location":"Maths/Seconde/AlgoBases/Arithmetique/#determiner-la-liste-des-diviseurs-dun-entier-donne","title":"D\u00e9terminer la liste des diviseurs d'un entier donn\u00e9","text":"<p>Trouver la d\u00e9composition d'un nombre en facteurs premiers est facile pour un \u00eatre humain, mais n\u00e9cessite la connaissance de structures avanc\u00e9es (les s\u00e9quences, et plus particuli\u00e8rement les dictionnaires) d\u00e8s qu'on veut les appliquer en Python.</p> <p>Cependant il est assez facile de demander \u00e0 Python de trouver la liste des diviseurs d'un nombre donn\u00e9. Il faut utiliser pour cela l'algorithme suivant :</p> <pre><code>fonction diviseurs(n :entier) \n    Cr\u00e9er une liste vide L\n    Pour chaque nombre i dans les entiers allant de 1 \u00e0 n \n        Si i est un diviseur de n \n            Ajouter i \u00e0 L\n    renvoyer L \n</code></pre> <p>Cet algorithme en lanage naturel peut \u00eatre quasiment traduit \u00e0 l'identique en Python gr\u00e2ce aux instructions suivantes :</p> <pre><code>def diviseurs(n) :\n    L = list()\n    for i in range(1, n+1) :\n        if n%i == 0 :\n            L.append(i)\n    return L\n</code></pre> <p>Excercice 1</p> Enonc\u00e9R\u00e9ponses <ol> <li>Ouvrir <code>Thonny</code>, puis cr\u00e9er un fichier dans votre espace personnel nomm\u00e9 <code>arithmetique.py</code>.</li> <li>Taper le code pr\u00e9c\u00e9dant dans l'\u00e9diteur.</li> <li>Dans la zone de script (le shell), taper la ligne suivante :     <pre><code>diviseurs(60)\n</code></pre>     Quel est le r\u00e9sultat obtenu ?</li> <li>Que faut-il \u00e9crire en Python pour obtenir les diviseurs de  \\(30\\) ? de \\(262\\) ?</li> <li>Combien y-a-t'il de diviseurs de  \\(413~525\\) ? (On pourra utiliser la ligne <code>len(diviseurs(413525))</code>)</li> <li>Combien y-a-t'il de diviseurs de  \\(2~745~897\\) ?</li> <li>Combien y-a-t'il de diviseurs de  \\(234~745~896\\) ? Que constate-t'on ? </li> <li>Combien y-a-t'il de diviseurs de  \\(234~745~897\\) ? Que constate-t'on ?  Comment s'appelle ce type de nombre entiers ?</li> </ol> <p>A venir !</p>"},{"location":"Maths/Seconde/AlgoBases/Arithmetique/#pgcd-et-ppcm","title":"PGCD et PPCM","text":""},{"location":"Maths/Seconde/AlgoBases/Arithmetique/#pgcd","title":"PGCD","text":"<p>Listes en Python</p> <p>L'objet renvoy\u00e9 par la fonction <code>diviseurs</code> est de type <code>list</code>. </p> <p>Il s'agit d'un type particulier, qu'on peut imaginer comme \u00e9tant une suite de cases num\u00e9rot\u00e9es en partant de 0</p> <p>Par exemple la liste Python <code>L = [ 12 , 32 , 44 , -5 , 7]</code> correspond au sch\u00e9ma suivant :</p> <p></p> <p>et il est possible d'acc\u00e9der aux m\u00e9thodes suivantes :</p> <ul> <li><code>L[2]</code> renverra le nombre \\(44\\) ;</li> <li><code>L[0] * L[2]</code> renverra le nombre \\(12\\times 44 = 528\\) ;</li> <li><code>L[-1]</code> renverra le dernier nombre de la liste donc ici \\(7\\).</li> </ul> <p>En ajoutant la fonction suivante :</p> <pre><code>def inter(l1, l2) :\n    return [e for e in l1 if e in l2]\n</code></pre> <p>on obtient la possibilit\u00e9 d'obtenir l'intersection de deux listes <code>l1</code> et <code>l2</code>, par exemple :</p> <pre><code>&gt;&gt;&gt; inter([1, 2, 4, 9, 16], [3, 4, 8, 9, 12])\n[4, 9]\n</code></pre> <p>Exercice 2</p> Enonc\u00e9R\u00e9ponses <ol> <li>Ajouter la fonction <code>\u00ecnter</code> au fichier <code>arithmetique.py</code>.</li> <li>Que faut-il \u00e9crire en Python pour obtenir la liste des diviseurs de \\(60\\) ?</li> <li>Que faut-il \u00e9crire en Python pour obtenir la liste des diviseurs de \\(132\\) ?</li> <li>Que faut-il \u00e9crire en Python pour obtenir les diviseurs communs \u00e0 \\(60\\) et \\(132\\) ?</li> <li>Comment faire pour obtenir le PGCD de \\(60\\) et \\(132\\) ?</li> <li>Faire de m\u00eame pour \\(372~522\\) et \\(195~624\\).</li> <li>Cr\u00e9er une fonction python <code>pgcd(a, b)</code> qui renvoie le pgcd des nombres entiers naturels <code>a</code> et <code>b</code> pass\u00e9s en argument.</li> </ol> <p>A venir !</p>"},{"location":"Maths/Seconde/AlgoBases/Arithmetique/#ppcm","title":"PPCM","text":"<p>relation etrte PGCD et PPCM</p> <p>Soient \\(a\\) et \\(b\\) deux entiers naturels. Alors :</p> \\[ a \\times b = PGCD(a;b) \\times PPCM(a;b) \\] <p>Cr\u00e9er une fonction <code>PPCM</code> qui renvoie le ppcm de deux entiers naturels <code>a</code> et <code>b</code>. Cr\u00e9er une fonction <code>PPCM</code> qui renvoie le ppcm de deux entiers naturels <code>a</code> et <code>b</code>.</p>"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/","title":"Programmation en Python et utilisation de Thonny","text":""},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#programmation-en-python-et-utilisation-de-thonny","title":"Programmation en Python et utilisation de Thonny","text":""},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#presentation-de-lediteur-thonny","title":"Pr\u00e9sentation de l'\u00e9diteur Thonny","text":"<p><code>Thonny</code> est un logiciel libre et gratuit permettant l'\u00e9criture et l'ex\u00e9cution de programmes \u00e9crits en Python. Il a \u00e9t\u00e9 cr\u00e9e \u00e0 destination des \u00e9l\u00e8ves et \u00e9tudiants d\u00e9couvrant la programmation par des professeurs de l'institut de Sciences Informatiques de l'universit\u00e9 de Tartu, en Estonie.</p> <p>Il est t\u00e9l\u00e9chargeable gratuitement ici, en version Windows, Mac ou Linux, et contient une version autonome de Python, qui ne perturbe en rien l'ordinateur sur lequel on installe le logiciel.</p> <p>Pr\u00e9sentation de l'interface graphique de Thonny</p> <p>Comme tout bon environnement de d\u00e9veloppement int\u00e9gr\u00e9 ou autrement dit <code>IDE</code>, Thonny propose plusieurs pour aider \u00e0 la programmation en Python. Nous ne pr\u00e9senterons ici que ceux n\u00e9cessaires \u00e0 une initiation \u00e0 Python.</p> <p></p><p> </p> <ul> <li>La zone d'ex\u00e9cution, aussi appel\u00e9e Shell ou console, est une zone interactive o\u00f9 une instruction Python est ex\u00e9cut\u00e9e directement apr\u00e8s avoir \u00e9t\u00e9 tap\u00e9e. Cette zone est souvent utilis\u00e9e pour tester une instruction ou s\u00e9rie d'instructions, mais est aussi l'endroit ou sera ex\u00e9cut\u00e9 un script Python. Attention, dans le Shell, il n'est pas possible de revenir en arri\u00e8re et de modifier ce qui a \u00e9t\u00e9 tap\u00e9. En cas d'erreur, il faudra recommencer ! </li> <li>La zone d'\u00e9dition ou zone de scripts, est une zone dans laquelle on peut taper des s\u00e9ries d'instructions Python, et les sauvegarder sous la forme d'un fichier d'extension <code>.py</code>. Ces instructions ne seront pas ex\u00e9cut\u00e9es tant que l'utilisateur n'aura pas demand\u00e9 explicitement cette ex\u00e9cution.</li> <li>Pour ex\u00e9cuter un script, il faudra appuyer, soit sur la fl\u00e8che verte de la barre de menu, soit sur la touche F5, soit par l'interm\u00e9diaire du menu <code>Run&gt;Run current script</code>. Le r\u00e9sultat de l'ex\u00e9cution du script sera affich\u00e9 dans le shell.</li> <li>Les zones situ\u00e9s \u00e0 droite de l'\u00e9diteur (fen\u00eatre des variables et assistant d'\u00e9dition), contiennent des informations qui peuvent \u00eatre utiles pour analyser un programme qui ne fonctionne pas.</li> </ul> <p>Mais c'est en anglais</p> <p>Oui, l'interface de Thonny est en anglais, oui il n'y a un possibilit\u00e9 pour la passer en fran\u00e7ais, non je ne la donnerai pas ici, car l'anglais utilis\u00e9 est tr\u00e8s simple, \u00e0 vous de vous d\u00e9brouiller !</p>"},{"location":"Maths/Seconde/AlgoBases/ProgrammationPythonThonny/#premiers-pas-avec-thonny","title":"Premiers pas avec Thonny","text":"<p>Exercice 1 : Prise en main</p> Enonc\u00e9Solution <ol> <li>Cr\u00e9er un dossier <code>Maths</code> dans votre dossier personnel.</li> <li>Cr\u00e9er un dossier <code>Algorithmique</code> dans le dossier <code>Maths</code>.</li> <li>Ouvrir le logiciel Thonny.</li> <li>Cr\u00e9er un script vide.</li> <li>Tapez le code suivant, en respectant scrupuleusement ce qui est \u00e9crit : <pre><code>nom = input(\"Quel est votre nom ?\")\nage = int(input(\"Quel est votre age ?\"))\nmajeur = age&gt;=18\nif majeur :\n    majorite = age - 18\n    message = f\"Bonjour {nom}, vous avez {age} ans et \u00eates majeur depuis {majorite} ans.\"\nelse :\n    majorite = 18 - age\n    message = f\"Bonjour {nom}, vous avez {age} ans et serez majeur dans {majorite} ans.\"\nprint(message)\n</code></pre></li> <li>Enregistrer ce fichier sous le nom <code>AP_Algo_1.py</code> dans le dossier <code>Algorithmique</code>.</li> <li>Ex\u00e9cutez le script et r\u00e9pondez aux questions pos\u00e9es dans le shell. Que se passe-t-il ? Recommencez plusieurs fois, en essayant diff\u00e9rentes r\u00e9ponses. Pour les questions suivantes, vous pouvez vous aider de la fen\u00eatre des variables. Si elle n'est pas pr\u00e9sente, vous pouvez l'afficher par le menu <code>View&gt;Variables</code>.</li> <li>A quoi sert l'instruction <code>input</code> en ligne 1 ? Quel est le type de la variable <code>nom</code>?</li> <li>Quel est le type de la variable <code>age</code> ? Pourquoi n'est-elle pas du m\u00eame type que <code>nom</code> ?</li> <li>Quel est le type de la variable <code>majeur</code> ? Que cela signifie-t-il ?</li> <li>Quel est le type de la variable <code>majorite</code> ? Est-ce toujours le cas ?</li> <li>Quel est le type de la variable <code>message</code> ? Qu'a-t-elle de sp\u00e9cial ?</li> </ol> <p>A venir</p> <p>Le calcul avec Python</p> <p>Python est capable de calculer avec des nombres entiers (tpe <code>int</code>) et des nombres flottants (type <code>float</code>). Les op\u00e9rations de bases sont g\u00e9r\u00e9es ainsi :</p> <ul> <li>les op\u00e9rations \\(+\\), \\(-\\), \\(\\times\\) et \\(\\div\\) s'\u00e9crivent respectivement <code>+</code>,<code>-</code>, <code>*</code>, <code>/</code> ;</li> <li>\\(x^n\\) s'\u00e9crit <code>x**n</code> ;</li> <li>Le reste de la division euclidienne de \\(a\\) par \\(b\\) s'obtient par <code>a%b</code> (lu \u00ab a modulo b \u00bb) ;</li> <li>le quotient de la division euclidienne de \\(a\\) par \\(b\\) s'obteint par <code>a//b</code>.</li> </ul> <p>Exercice 2 : Compl\u00e9ter un programme</p> Enonc\u00e9Solution <ol> <li>Cr\u00e9er un nouveau script, et enregistrez-le dans le dossier <code>Algorithmique</code> sous le nom <code>AP_Algo_2.py</code>.</li> <li>Tapez le code suivant dans le script : <pre><code>x = 2\ny = 3\nz = x+y+x*y\nz = z**2\ny = y/2\n</code></pre></li> <li>Ex\u00e9cutez-le. Qu'obtient-on ?</li> <li>Compl\u00e9ter ce programme afin qu'une variable bool\u00e9enne <code>t</code> teste si <code>z</code> est pair.</li> </ol> <p>A venir !</p> <p>Exercice 3 : Se m\u00e9fier !</p> Enonc\u00e9Solution <p>On consid\u00e8re l'algorithme suivant en pseudo-code, ainsi que le tableau d'\u00e9tat des variables correspondant:</p> <p></p> \\[ \\begin{array}{|rcl|} \\hline A &amp; \\leftarrow &amp; 12\\\\ B &amp; \\leftarrow &amp; 4\\\\ C &amp; \\leftarrow &amp; \\dfrac{A}{B}\\\\ D &amp; \\leftarrow &amp; \\dfrac{A\\times 7}{B\\times 7}\\\\ T &amp; \\leftarrow &amp; C=D\\\\\\hline \\end{array} \\] <p></p> A B C D T <p></p> <ol> <li>Compl\u00e9ter \u00e0 la main le tableau d'\u00e9tat des variables. Que dfoit contenir la variable <code>T</code> ?</li> <li>Cr\u00e9er un script vide et l'enregistrer dans le dossier <code>Algorithmique</code> sous le nom <code>AP_Algo_3.py</code>.</li> <li>Coder l'algorithme en Python.</li> <li>Ex\u00e9cutez-le. Le r\u00e9sultat est-il conforme \u00e0 vos attentes ? Corriger si besoin le code.</li> <li>Quel est le type des variables <code>C</code> et <code>D</code> ? Comment l'expliquer ?</li> </ol> <p>A venir !</p>"},{"location":"Maths/Seconde/AlgoBases/Scratch_a_Python/","title":"De Scratch \u00e0 Python","text":""},{"location":"Maths/Seconde/AlgoBases/Scratch_a_Python/#de-scratch-a-python","title":"De Scratch \u00e0 Python","text":""},{"location":"Maths/Seconde/AlgoBases/Scratch_a_Python/#brevet-metropole-2023","title":"Brevet M\u00e9tropole 2023","text":"<p>Truc truc</p>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/","title":"Stuctures conditionnelles","text":""},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#structures-conditionnelles","title":"Structures Conditionnelles","text":"<p>D'apr\u00e8s un notebook de Thomas FOIRIEN.</p>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#les-conditions","title":"Les conditions","text":""},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#premiere-approche","title":"Premi\u00e8re approche","text":"<p>Structure conditionnelle de base : <code>si ... alors ... sinon ..</code></p> <p></p> <p>Cela correspond au pseudo-code suivant :</p> <p></p><pre><code>Bloc d'instructions A\nSi condition vraie faire :\n    Bloc d'instructions B\nSinon\n    Bloc d'instructions C\nBloc d'instructions D\n</code></pre> En Scratch, ceci correspond au bloc :  <p></p> <p>En Python, les mot-cl\u00e9s sont <code>if</code> (si) et <code>else</code> (sinon) :</p> <pre><code>A\nif condition :\n    B\nelse:\n    C\nD\n</code></pre> <p>Avec <code>condition</code> qui est une expression \u00e9valu\u00e9e comme un bool\u00e9en (voir plus loin).</p> <p>Le programme ci-dessous adapte son comportement \u00e0 la r\u00e9ponse fournie par l'utilisateur :</p> <pre><code>age = int(input(\"Veuillez entrer votre \u00e2ge ! \"))\nif (age &gt;= 18):\n    print(\"Vous \u00eates majeur!\")\nelse:\n    print(\"Vous \u00eates mineur!\")\nprint(\"Au revoir!\")\n</code></pre> <p>Exercice 1</p> <p>Il faut mesurer au moins 1m30 pour pouvoir entrer dans un parc d'attractions.</p> <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur sa taille en cm, et qui lui indique s'il peut ou non rentrer dans le parc.   </p> <p>Exercice 2</p> <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur de saisir deux nombres, puis qui affiche le plus grand de ces deux nombres.</p> <p>Exercice 3</p> <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur de saisir un nombre (positif ou n\u00e9gatif), puis qui affiche la valeur absolue de ce nombre.</p>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#les-tests","title":"Les tests","text":"<p>Voici les diff\u00e9rents tests possibles pouvant servir \u00e0 \u00e9crire des conditions :</p> Symbole en Python Signification == \u00e9gal \u00e0 != diff\u00e9rent de &lt; strictement sup\u00e9rieur \u00e0 &gt; strictement inf\u00e9rieur \u00e0 &lt;= inf\u00e9rieur ou \u00e9gal \u00e0 &gt;= sup\u00e9rieur ou \u00e9gal \u00e0 <p>Attention : diff\u00e9rence entre <code>=</code> et <code>==</code></p> <ul> <li> <p>Le symbole <code>=</code> est r\u00e9serv\u00e9 pour l'affectation de variables :</p> <p></p><pre><code>    &gt;&gt;&gt; a = 5\n</code></pre> Ici le nom de variable <code>a</code> est associ\u00e9 \u00e0 la valeur 5 (ou autrement dit, le contenu de la variable <code>a</code> est le nombre entier <code>5</code>). </li> <li> <p>Le symbole <code>==</code> sert \u00e0 comparer deux valeurs, plus pr\u00e9cis\u00e9ment \u00e0 savoir si deux valeurs sont \u00e9gales.</p> <pre><code>    &gt;&gt;&gt; a == 5\n    True\n    &gt;&gt;&gt; a == 'toto'\n    False\n</code></pre> <p>Ici, python regarde si la valeur contenue dans la variable <code>a</code> est <code>5</code>, et \u00e9value l'expression en <code>True</code> si c'est le cas, ou <code>False</code> sinon.</p> </li> </ul> <p>Cette confusion est une importante source de bug chez les d\u00e9butants en programmation.</p> <p>Exercice 4</p> <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur de saisir le mot de passe qui permet de se connecter au serveur du Lyc\u00e9e, et qui lui indique si l'acc\u00e8s est autoris\u00e9 ou pas. Le mot de passe est \"Pavie\".</p>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#structure-conditionnelle-incomplete-si-alors","title":"Structure conditionnelle incompl\u00e8te : <code>si ... alors ...</code>","text":"<p>La clause <code>else</code> est facultative. On obtient alors la structure suivante :</p> <pre><code>    Bloc A\n    Si condition vraie faire :\n        Bloc B\n    Bloc C\n</code></pre> <p>Ainsi, si la condition est vraie, on effectuera les blocs <code>A-B-C</code>.</p> <p>Si la condition n'est pas vraie, on effectuera les blocs <code>A-C</code></p> <p>Exercice 5</p> <p>R\u00e9\u00e9crire le programme qui affiche la plus grande des deux valeurs saisies par l'utilisateur, mais cette fois sans utiliser la clause <code>else</code></p>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#les-booleens","title":"Les bool\u00e9ens","text":"<p>Une variable bool\u00e9enne ne peut prendre que deux valeurs : <code>True</code>et <code>False</code></p> <p>Par exemple les lignes de code suivantes sont \u00e9valu\u00e9es comme des bool\u00e9ens :</p> <pre><code>&gt;&gt;&gt; 7 &gt; 4\nTrue\n&gt;&gt;&gt; 8 &lt; 2\nFalse\n&gt;&gt;&gt; a = 7 &gt; 4 \n&gt;&gt;&gt; print(a)\nTrue\n&gt;&gt;&gt; print(type(a))\n&lt;class 'bool'&gt;\n</code></pre> <p>Le mot \"bool\u00e9en\" provient de George Boole (1815-1864), un math\u00e9maticien et logicien anglais qui a cr\u00e9\u00e9 l'alg\u00e8bre binaire, aujourd'hui appel\u00e9e alg\u00e8bre bool\u00e9enne. Cette alg\u00e8bre bool\u00e9enne permet de traduire des raisonnements logiques par des calculs alg\u00e9briques.</p> <p>Exercice 6</p> <p>D\u00e9terminer pour chaque ligne le type et la valeur de chacune des variables ou expressions ci-dessous. On suppose que les lignes sont ex\u00e9cut\u00e9es l'une apr\u00e8s l'autre.</p> <pre><code>x = 18\nx &gt; 7\nx == 6\nx &gt; 7\nx = 6\nx &gt; 7\nx == 6\n</code></pre> <p>Exercice 7</p> <p>Qu'affiche le code suivant ? </p> <pre><code>b = 5\na = (b == 3)\nprint(a)\n</code></pre> <p>Les bool\u00e9ens (ou variables bool\u00e9ennes) sont utilis\u00e9s dans les conditions. En fait, l'expression qui suit le mot cl\u00e9 <code>if</code> doit toujours \u00eatre une valeur ou une variable de type bool\u00e9en :</p> <pre><code>majeur = True    # ou False\nif majeur == True:\n    print(\"Vous \u00eates majeur.\")\nelse:\n    print(\"Vous \u00eates mineur\")\n</code></pre> <p>Syntaxe raccourcie des conditions</p> <p>Dans le programme pr\u00e9c\u00e9dent, <code>majeur == True</code> est en fait un bool\u00e9en qui vaut <code>True</code> ou <code>False</code> selon la valeur de la variable <code>majeur</code>.</p> <p>Ainsi, les bool\u00e9ens permettent une syntaxe raccourcie et plus lisible lorsqu'on \u00e9crit des conditions. Au lieu d'\u00e9crire :</p> <p></p><pre><code>if majeur == True:\n</code></pre> on peut \u00e9crire :  <pre><code>if majeur:\n</code></pre> <p>Il est pr\u00e9f\u00e9rable d'utiliser cette syntaxe raccourcie, comme dans le code suivant :</p> <pre><code>majeur = True    # ou False\nif majeur:\n    print(\"Vous \u00eates majeur.\")\nelse:\n    print(\"Vous \u00eates mineur\")\n</code></pre> <p>Exercice 8</p> <p>\u00c9crire un programme qui :</p> <ul> <li>Demande \u00e0 l'utilisateur sa <code>taille</code> en cm</li> <li>Cr\u00e9e une variable bool\u00e9enne appel\u00e9e <code>grand</code> dont la valeur d\u00e9pend de la taille saisie ;</li> <li>Affiche un message diff\u00e9rent selon que l'utilisateur est grand ou pas (plus de 180 cm).</li> </ul>"},{"location":"Maths/Seconde/AlgoBases/Structures_conditionnelles/#les-conditions-multiples","title":"Les conditions multiples","text":"<p>On a parfois besoin de tester plusieurs conditions successivement comme dans l'exemple suivant.</p> <p>Le probl\u00e8me du pass sanitaire</p> <p>On demande \u00e0 une personne si elle est vaccin\u00e9e et si elle a un test PCR n\u00e9gatif. Si elle est vaccin\u00e9e, elle peut entrer. Sinon, elle ne peut entrer que si elle a un test PCR n\u00e9gatif.</p> <pre><code>vaccine = input(\"Etes-vous vaccin\u00e9 (O/N)?\") == 'O'\ntest_negatif = input(\"Avez-vous un test PCR n\u00e9gatif (O/N)?\") == 'O' \n\nif vaccine:\n    print(\"Vous pouvez entrer...\")\nelse:\n    if test_negatif:\n        print(\"Vous pouvez entrer!\")\n    else:\n        print(\"Vous ne pouvez pas entrer!\")\n</code></pre> <p>Le d\u00e9faut de ce programme est qu'il est assez difficile \u00e0 lire.</p> <p>En Python, on dispose d'une syntaxe plus l\u00e9g\u00e8re qui permet de clarifier un peu le programme : on peut condenser le <code>else if</code> en une seule ligne <code>elif</code></p> <p>Le programme ci-dessous fait exactement la m\u00eame chose que le pr\u00e9c\u00e9dent, mais n\u00e9cessite une ligne de moins et fait moins appel \u00e0 l'indentation dans les deux derni\u00e8res lignes :</p> <pre><code>vaccine = input(\"Etes-vous vaccin\u00e9 (O/N)?\") == 'O'\ntest_negatif = input(\"Avez-vous un test PCR n\u00e9gatif (O/N)?\") == 'O' \n\nif vaccine:\n    print(\"Vous pouvez entrer...\")\nelif test_negatif:\n    print(\"Vous pouvez entrer!\")\nelse:\n    print(\"Vous ne pouvez pas entrer!\")\n</code></pre> <p>Exercice 9</p> <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur sa moyenne du bac et qui lui indique sa mention :</p> <ul> <li>\\([0;8[\\) : Recal\u00e9 ;</li> <li>\\([8;10[\\) : Rattrapage ;</li> <li>\\([10;12[\\) : Passable ;</li> <li>\\([12;14[\\) : Assez Bien ;</li> <li>\\([14;16[\\) : Bien ;</li> <li>\\([16;18[\\) : Tr\u00e8s Bien ;</li> <li>\\([18;20]\\) : F\u00e9licitations.</li> </ul> <p>Exercice 10</p> <p>\u00c9crire un programme qui demande une ann\u00e9e \u00e0 l'utilisateur et indique s'il s'agit d'une ann\u00e9e bissextile : une ann\u00e9e est bissextile si elle est multiple de 4 mais pas multiple de 100, ou bien si elle est multiple de 400.</p> <p>Tester ensuite votre programme avec les ann\u00e9es 2023, 2020, 1900 et 2000.</p> <p>Indice : Pour savoir si le contenu de la variable <code>n</code>est un multiple de <code>6</code>, on peut utiliser l'op\u00e9rateur modulo <code>%</code> qui donne le reste de la division euclidienne. Si ce reste est \u00e9gal \u00e0 0, alors le nombre associ\u00e9 \u00e0 <code>n</code>est bien un multiple de <code>6</code> Ainsi :</p> <pre><code>&gt;&gt;&gt; n = 18\n&gt;&gt;&gt; n%6 #Op\u00e9ration modulo\n0\n&gt;&gt;&gt; n%6 == 0 #n est-elle un multiple de 6 ?\nTrue\n&gt;&gt;&gt; n%5 == 0 # n est-elle un multiple de 5 ?\nFalse\n</code></pre>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/","title":"Ensembles de nombres","text":""},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#c01-01-ensembles-de-nombres","title":"C01-01 : Ensembles de Nombres","text":"<p>La version pdf de ce cours est t\u00e9l\u00e9chargeable ici. (version 2021-2022)</p>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#activite-classer-des-nombres","title":"Activit\u00e9 : Classer des nombres","text":"<ol> <li> <p>Dans la liste ci-dessus, deux \u00e9critures sont interdites. Lesquelles et pourquoi ?</p> </li> <li> <p>Classer les nombres restants en cinq groupes, en justifiant vos choix.</p> </li> </ol> <p>Diff\u00e9rence entres propri\u00e9t\u00e9s et \u00e9critures</p> <p>Un nombre peut \u00eatre \u00e9crit de diff\u00e9rentes mani\u00e8res, plus ou moins compliqu\u00e9es. Par exemple :</p> \\[ 2 = \\cfrac{6}{3} = 20 \\times 10^{-1} = \\sqrt{4}= - \\left(-2\\right) = 2,0000  \\] <p>Pour autant, ce qui nous int\u00e9resse en math\u00e9matiques c'est d'\u00e9tudier les propri\u00e9t\u00e9s de ce nombre, qui elles sont ind\u00e9pendantes de l'\u00e9criture de ce nombre.</p>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-entiers-naturels-et-relatifs","title":"Nombres entiers naturels et relatifs","text":"<p>D\u00e9finitions</p> <ul> <li> <p>L'ensemble des entiers naturels, not\u00e9 \\(\\mathbb{N}\\), est l'ensemble des nombres permettant de d\u00e9nombrer une collection d'objets, de personnes, etc, c'est-\u00e0-dire la suite naturelle    \\(0~;~1~;~2~;~3~;~...\\)</p> </li> <li> <p>L'ensemble des entiers relatifs, not\u00e9 \\(\\mathbb{Z}\\), est l'ensemble des entiers naturels et leurs oppos\u00e9s, c'est-\u00e0-dire la suite \\(...~;~-3~;~-2~;~-1~;~0~;~1~;~2~;~3~;~...\\)</p> </li> </ul> <p>Info</p> <ul> <li> <p>L'ensemble \\(\\mathbb{N}\\) poss\u00e8de un plus petit \u00e9l\u00e9ment, c'est \\(0\\).</p> </li> <li> <p>Les nombres entiers naturels sont tous positifs ou nuls.</p> </li> <li> <p>Tous les entiers naturels sont aussi des entiers relatifs.</p> </li> </ul> <p>Vocabulaire et notations</p> <ul> <li> <p>Appartenance :   On dit que \\(5\\) appartient \u00e0 \\(\\mathbb{N}\\), et on note \\(5 \\in \\mathbb{N}\\). De m\u00eame \\(-2\\) n'appartient pas \u00e0 \\(\\mathbb{N}\\), et on note  \\(-12 \\notin \\mathbb{N}\\).</p> </li> <li> <p>Inclusion :  Tous les \u00e9l\u00e9ments de \\(\\mathbb{N}\\) sont aussi des \u00e9l\u00e9ments de \\(\\mathbb{Z}\\). On dit alors que \\(\\mathbb{N}\\) est un sous-ensemble de \\(\\mathbb{Z}\\) et on note alors \\(\\mathbb{N} \\subset \\mathbb{Z}\\) (qui se lit \\(\\mathbb{N}\\) est inclus dans \\(\\mathbb{Z}\\)).</p> </li> </ul> Application : choix du bon symbole ExerciceSolution <p>Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\)  :</p> <p>\\(7 \\dots \\mathbb{N}\\)</p> <p>\\(-3 \\dots \\mathbb{N}\\)</p> <p>\\(-5 \\dots \\mathbb{Z}\\)</p> <p>\\(7 \\dots \\mathbb{Z}\\)</p> <p>\\(\\dfrac{1}{3} \\dots \\mathbb{N}\\)</p> <p>\\(\\sqrt{9} \\dots \\mathbb{N}\\)</p> <p>\\(-\\sqrt{25} \\dots \\mathbb{N}\\)</p> <p>\\(-\\sqrt{2} \\dots \\mathbb{Z}\\)</p> <p>\\(5 \\times 10^{3} \\dots \\mathbb{N}\\)</p> <p>\\(5 \\times 10 ^{-3} \\dots \\mathbb{Z}\\)</p> <p>\\(-4,2 \\dots \\mathbb{Z}\\)</p> <p>\\(3 \\times (1 - \\dfrac{1}{3}) \\dots \\mathbb{N}\\)</p> <p>Compl\u00e9ter avec \\(\\in\\) ou \\(\\notin\\)  :</p> <p>\\(7 \\in \\mathbb{N}\\)</p> <p>\\(-3 \\notin \\mathbb{N}\\)</p> <p>\\(-5 \\in \\mathbb{Z}\\)</p> <p>\\(7 \\in \\mathbb{Z}\\)</p> <p>\\(\\dfrac{1}{3} \\notin \\mathbb{N}\\)</p> <p>\\(\\sqrt{9} \\in \\mathbb{N}\\) car \\(\\sqrt{9} = 3\\)</p> <p>\\(-\\sqrt{25} \\notin \\mathbb{N}\\) car \\(-\\sqrt{25} = -5\\)</p> <p>\\(-\\sqrt{2} \\notin \\mathbb{Z}\\) car \\(-\\sqrt{2} \\simeq -1,414...\\)</p> <p>\\(5 \\times 10^{3} \\in \\mathbb{N}\\) car \\(5 \\times 10^3 = 5 \\times 1000 = 5000\\)</p> <p>\\(5 \\times 10 ^{-3} \\notin \\mathbb{Z}\\) car \\(5 \\times 10 ^{-3}  = 5 \\times  0,001 = 0,005\\)</p> <p>\\(-4,2 \\notin \\mathbb{Z}\\)</p> <p>\\(3 \\times (1 - \\dfrac{1}{3}) \\in \\mathbb{N}\\) car \\(3 \\times (1 - \\dfrac{1}{3}) = 3 - 1 = 2\\) (en d\u00e9veloppant) ou \\(3 \\times (1 - \\dfrac{1}{3}) = 3 \\times \\dfrac{2}{3} = 2\\) (en calculant entre parenth\u00e8ses).</p>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-decimaux","title":"Nombres d\u00e9cimaux","text":"<p>d\u00e9finition : Nombres d\u00e9cimaux</p> <p>Un nombre d\u00e9cimal est un nombre pouvant s'\u00e9crire sous la forme d'une fraction d\u00e9cimale, c'est \u00e0 dire sous la forme  $$ \\dfrac{a}{10^n} $$  avec \\(a\\in \\mathbb{Z}\\) et \\(n\\in \\mathbb{N}\\).</p> <p>L'ensemble des d\u00e9cimaux est not\u00e9 \\(\\mathbb{D}\\).</p> Application  : Nombres d\u00e9cimaux et puissances de 10 ExerciceSolution <p>Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\).</p> <p>\\(4,37\\)</p> <p>\\(0,002\\)</p> <p>\\(-12\\)</p> <p>\\(\\dfrac{1}{3}\\)</p> <p>\\(\\dfrac{2}{5}\\)</p> <p>\\(\\sqrt{0,16}\\)</p> <p>\\(10^3\\)</p> <p>\\(10^{-5}\\)</p> <p>\\(-10^5\\)</p> <p>\\(\\dfrac{3.10^5}{10^7}\\)</p> <p>\\(\\dfrac{10^7}{3.10^5}\\)</p> <p>Pour chacun des nombres suivants, d\u00e9terminer si possible une \u00e9criture de la forme \\(\\dfrac{k}{10^n}\\).</p> <p>\\(4,37 = \\dfrac{437}{100} = \\dfrac{437}{10^{2}}\\)</p> <p>\\(0,002 = \\dfrac{2}{1~000} = \\dfrac{2}{10^{3}}\\)</p> <p>\\(-12 = \\dfrac{-12}{1} = \\dfrac{-12}{10^{0}}\\) ( car \\(a^0 =1\\) pour tout nombre \\(a \\neq 0\\)).</p> <p>\\(\\dfrac{1}{3} \\notin \\mathbb{D}\\) car \\(\\dfrac{1}{3} \\simeq 0,333...\\) (La d\u00e9monstration r\u00e9elle sera donn\u00e9e plus tard dans l'ann\u00e9e)</p> <p>\\(\\dfrac{2}{5} = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\)</p> <p>\\(\\sqrt{0,16} = 0,4 = \\dfrac{4}{10} = \\dfrac{4}{10^1}\\)</p> <p>\\(10^3 = \\dfrac{1~000}{1} = \\dfrac{1~000}{10^{0}}\\)</p> <p>\\(10^{-5} = \\dfrac{1}{10^5}\\) (par d\u00e9finition des exposants n\u00e9gatifs \\(a^{-n} = \\dfrac{1}{a^n}\\) pour tout \\(n \\in \\mathbb{Z}\\) si \\(a \\neq 0\\))</p> <p>\\(-10^5 = - 100~000 = \\dfrac{- 100~000}{1} = \\dfrac{- 100~000}{10^{0}}\\)$</p> <p>\\(\\dfrac{3.10^5}{10^7} = \\dfrac{3}{10^2}\\) par division des puissances (\\(\\dfrac{a^m}{a^n} = a^{m-n}\\) pour tout \\(m,n \\in \\Z\\))</p> <p>\\(\\dfrac{10^7}{3.10^5} = \\dfrac{10^2}{3} \\simeq 33,333.... \\notin \\mathbb{D}\\) </p> <p>Remarques</p> <ul> <li>Les entiers relatifs sont des d\u00e9cimaux, car si \\(k \\in \\mathbb{Z}\\), on peut aussi \u00e9crire \\(k=\\dfrac{k}{1}=\\dfrac{k}{10^0}\\). On a donc la  propri\u00e9t\u00e9 \\(\\mathbb{Z} \\subset \\mathbb{D}\\).</li> <li>Un nombre d\u00e9cimal poss\u00e8de une \u00e9criture d\u00e9cimale finie.</li> </ul>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-rationnels","title":"Nombres rationnels","text":"<p>D\u00e9finition : Nombres rationnels</p> <p>Un nombre rationnel est un nombre pouvant s'\u00e9crire sous la forme \\(\\dfrac{a}{b}\\) avec \\(a\\in \\mathbb{Z}\\) et \\(b\\in \\mathbb{N}^{*}\\) (c'est-\u00e0-dire \\(\\mathbb{N}\\) priv\u00e9 de \\(0\\)).</p> <p>L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{Q}\\).</p> <p>Remarque</p> <p>Un nombre d\u00e9cimal est par d\u00e9finition un nombre rationnel.</p> <p>Par d\u00e9finition de \\(\\mathbb{D}\\) et \\(\\mathbb{Q}\\), on a la propri\u00e9t\u00e9 \\(\\mathbb{D} \\subset \\mathbb{Q}\\).</p> <p>Propri\u00e9t\u00e9 : Caract\u00e9risation des rationnels non d\u00e9cimaux</p> <p>Tous les nombres rationnels ne poss\u00e8dent pas d'\u00e9criture d\u00e9cimale finie. En particulier, \\(\\dfrac{1}{3}\\) n'est pas d\u00e9cimal.</p> Preuve <p>La d\u00e9monstration de cette propri\u00e9t\u00e9 sera faite plus tard dans l'ann\u00e9e, dans le chapitre arithm\u00e9tique.</p> <p>Remarques</p> <ul> <li> <p>Les nombres rationnels non d\u00e9cimaux poss\u00e8dent une \u00e9criture d\u00e9cimale infinie p\u00e9riodique, c'est-\u00e0-dire avec une s\u00e9rie de chiffres qui     se r\u00e9p\u00e8tent \u00e0 l'infini. Par exemple \\(\\dfrac{1}{7} = 0,14285714285714...\\) (on constate la r\u00e9p\u00e9tition de la s\u00e9quence 142857}).</p> </li> <li> <p>R\u00e9ciproquement, si un nombre poss\u00e8de une \u00e9criture d\u00e9cimale infinie p\u00e9riodique, alors c'est un rationnel.</p> </li> </ul> <p>M\u00e9thode : D\u00e9terminer une fraction \u00e9gale \u00e0 une \u00e9criture d\u00e9cimale infinie p\u00e9riodique</p> <p>On consid\u00e8re le nombre \\(a\\) dont l'\u00e9criture d\u00e9cimale est infinie p\u00e9riodique  \\(a = 2,71347134...\\). D\u00e9montrons que ce nombre est rationnel.</p> Solution <p>On constate que la partie r\u00e9p\u00e9titive des chiffres de \\(a\\) est \\(7134\\), donc de taille 4.</p> <p>Donc \\(10^4 \\times a = 10~000\\times a = 27134,71347134...\\).</p> <p>D'o\u00f9 \\(10~000\\times a - a = 27134,71347134... - 2,71347134... = 27134 -2 = 27~132\\).</p> <p>Or \\(10~000\\times a - a = 9~999\\times a\\).</p> <p>D'apr\u00e8s les deux lignes pr\u00e9c\u00e9dentes, on a alors \\(9~999\\times a = 27132\\) soit \\(a = \\dfrac{27~132}{9~999} = \\dfrac{9~044}{3~333}\\).</p> <p>Donc \\(a\\) est bien un nombre rationnel puisqu'il s'\u00e9crit sous la forme d'une fraction.</p> Application : Calculs avec les rationnels ExerciceSolution <p>Dans chacun des cas suivants, calculer \u00e0 la main chacune des expressions suivantes :</p> <p>\\(A = \\dfrac {5}{7} - \\dfrac{3}{11}\\)</p> <p>\\(B = -\\dfrac {4}{3} + \\dfrac{7}{8}\\)</p> <p>\\(C = \\dfrac {3}{8} - \\dfrac{5}{12}\\)</p> <p>\\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9}\\)</p> <p>\\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right)\\)</p> <p>\\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64}\\)</p> <p>\\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21}\\)</p> <p>\\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}}\\)</p> <p>\\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}}\\)</p> <p>\\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3}\\)</p> <p>\\(A = \\dfrac {5}{7} - \\dfrac{3}{11} = \\dfrac {5\\times 11}{7\\times 11} - \\dfrac{3\\times 7}{11\\times 7} = \\dfrac {55}{77} - \\dfrac{21}{77} = \\dfrac{34}{77}\\)</p> <p>\\(B = -\\dfrac {4}{3} + \\dfrac{7}{8} = -\\dfrac {4 \\times 8}{3 \\times 8} + \\dfrac{7 \\times 3}{8 \\times 3} = -\\dfrac {32}{24} + \\dfrac{21}{24} -\\dfrac {11}{24}\\)</p> <p>\\(C = \\dfrac {3}{8} - \\dfrac{5}{12} = \\dfrac {3\\times 3}{8\\times 3} - \\dfrac{5 \\times 2}{12 \\times 2} = \\dfrac {9}{24} - \\dfrac{10}{24}  = - \\dfrac{1}{24}\\)</p> <p>\\(D = \\dfrac {-6}{7} \\times \\dfrac{8}{9} = \\dfrac{-6 \\times 8}{7 \\times 9} = \\dfrac{-2 \\times 3 \\times 8}{7 \\times 3 \\times 3} = -\\dfrac{16}{21}\\) N'oubliez pas de simplifier ! </p> <p>\\(E = \\dfrac {3}{2} \\times \\left(-\\dfrac{7}{3}\\right) =  -\\dfrac {3 \\times 7}{2 \\times3} = - \\dfrac{7}{2}\\)</p> <p>\\(F = \\dfrac {48}{35} \\times \\dfrac{25}{64} = \\dfrac{48 \\times 25}{35 \\times 64} = \\dfrac{2 \\times 3 \\times 8 \\times 5 \\times 5}{5\\times 7 \\times 2 \\times 4 \\times 8} = \\dfrac{15}{28}\\)</p> <p>\\(G = \\dfrac {4}{7} \\div \\dfrac{8}{21} = \\dfrac {4}{7} \\times \\dfrac{21}{8} = \\dfrac{4 \\times 21}{7 \\times 8} = \\dfrac{ 4 \\times 3 \\times 7}{7 \\times 2 \\times 4} = \\dfrac{3}{2}\\)</p> <p>\\(H = \\dfrac{~~\\dfrac{3}{4}~~}{\\dfrac{18}{20}} = \\dfrac{3}{4}\\div\\dfrac{18}{20} = \\dfrac{3}{4}\\div\\dfrac{20}{18} = \\dfrac{3 \\times 4 \\times 5}{ 4 \\times 3 \\times 6} = \\dfrac{5}{6}\\).</p> <p>\\(I = \\dfrac{~~7~~}{\\dfrac{5}{3}} = 7 \\div \\dfrac{5}{3} = 7 \\times \\dfrac{3}{5} = \\dfrac{21}{5}\\)</p> <p>\\(J = \\dfrac{~~\\dfrac{7}{5}~~}{3} = \\dfrac{7}{5} \\div 3 = \\dfrac{7}{5} \\times \\dfrac{1}{3} = \\dfrac{7}{15}\\)</p>"},{"location":"Maths/Seconde/C01/C01_01_Ensembles_Nombres/#nombres-reels","title":"Nombres r\u00e9els","text":"<p>D\u00e9finition : Nombres r\u00e9els</p> <p>Un {==nombre r\u00e9el est un nombre exprimant une longueur, ou l'oppos\u00e9 d'un nombre exprimant une longueur.</p> <p>L'ensemble des nombres rationnels est not\u00e9 \\(\\mathbb{R}\\).</p> <p>Remarques</p> <ul> <li> <p>Un nombre r\u00e9el est un  nombre dont le carr\u00e9 est positif ou nul .</p> </li> <li> <p>Par d\u00e9finition, tous les nombres rationnels sont des r\u00e9els. On a alors  \\(\\mathbb{Q} \\subset \\mathbb{R}\\) .</p> </li> <li> <p>Certains nombres r\u00e9els ne sont pas rationnels. Par exemple \\(\\pi\\) n'est pas rationnel, tout comme \\(\\sqrt{2}\\) ( on le montrera en     exercice ). Ces nombres sont dits  irrationnels .</p> </li> </ul> <p>Propri\u00e9t\u00e9 : Ensembles de nombres</p> <p>Des remarques pr\u00e9c\u00e9dentes, on \u00e0 la propri\u00e9t\u00e9 :</p> \\[ \\mathbb{N} \\subset \\mathbb{Z} \\subset \\mathbb{D} \\subset \\mathbb{Q} \\subset \\mathbb{R} \\] <p></p><p> </p> <p>Propri\u00e9t\u00e9 : Droite des r\u00e9els</p> <p>Tout nombre r\u00e9el est repr\u00e9sent\u00e9 par l'abscisse d'un point sur la droite num\u00e9rique ( appel\u00e9e aussi droite des r\u00e9els ).</p> <p></p><p> </p> Application : Repr\u00e9senter sur la droite des r\u00e9els <ol> <li>D\u00e9terminer l'abscisse de chacun des points de la droite ci-dessous :</li> </ol> <p></p><p> </p> <ol> <li>Repr\u00e9senter la droite des r\u00e9els ( unit\u00e9 : 5 ) et y placer le plus pr\u00e9cis\u00e9ment possible les nombres suivants :</li> </ol> \\[ 3 ~;~ -0,75 ~;~ \\dfrac{5}{4} ~;~\\dfrac{-2}{5} ~;~ \\dfrac{7}{3} ~;~ \\sqrt{2} \\]"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/","title":"Intervalles","text":""},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#c01-02-intervalles","title":"\\(C01-02\\) Intervalles","text":""},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#intervalles-de-nombres-reels","title":"Intervalles de nombres r\u00e9els","text":"<p>D\u00e9finition</p> <p>Soient \\(a\\) et \\(b\\) deux nombres r\u00e9els tels que \\(a \\leqslant b\\).</p> <ul> <li>On appelle intervalle ferm\u00e9 \\([a;b]\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a\\leqslant x\\leqslant b\\). <p> </p></li> <li>On appelle intervalle ouvert \\(]a;b[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(a&lt;x&lt;b\\). <p> </p></li> <li>On d\u00e9finit de m\u00eame les intervalles \\([a;b[\\) et \\(]a;b]\\).</li> <li>On note \\([a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x\\geqslant a\\). <p> </p></li> <li>On note \\(]a;+\\infty[\\) l\u2019ensemble des nombres r\u00e9els \\(x\\) tels que \\(x&gt;a\\). <p> </p></li> <li>On d\u00e9finit de m\u00eame \\(]- \\infty;a]\\) et \\(]-\\infty;a[\\).</li> </ul> <p>Remarques</p> <ul> <li>Le symbole \\(+\\infty\\) se lit \" Plus l'infini \".</li> <li>Le symbole \\(-\\infty\\) se lit \" Moins l'infini \".</li> </ul> Repr\u00e9senter des intervalles Enonc\u00e9Solution <p>Ecrire les in\u00e9galit\u00e9s suivantes sous la forme d'un intervalle, puis repr\u00e9senter cet intervalle sur la droite des r\u00e9els :</p> <ol> <li>\\(x\\leqslant 5\\)</li> <li>\\(x&gt;-3\\)</li> <li>\\(2&lt;x&lt;5\\)</li> <li>\\(-4\\leqslant x \\leqslant -3\\)</li> <li>\\(-3\\leqslant x &lt; 8\\)</li> <li>\\(-2&lt; x \\leqslant 0\\)</li> </ol> <ol> <li>\\(]-\\infty ; 5]\\) </li> <li>\\(]-3 ; +\\infty[\\)</li> <li>\\(]2;5[\\)</li> <li>\\([-4;-3]\\)</li> <li>\\([-3;8[\\)</li> <li>\\(]-2;0]\\)</li> </ol> Appartient ou pas ? Enonc\u00e9Solution <p>Compl\u00e9ter avec un symbole \\(\\in\\) ou \\(\\notin\\) :</p> <ul> <li>\\(-2 \\dots [-2; 1[\\)</li> <li>\\(-3 \\dots [-5; -1[\\)</li> <li>\\(-\\dfrac{26}{5} \\dots ]-5; -4[\\)</li> <li>\\(4 \\dots [-3; 4[\\) </li> <li>\\(2\\pi \\dots [7;8]\\)</li> <li>\\(0 \\dots \\mathbb{R}\\)</li> <li>\\(0 \\dots \\mathbb{R}^*\\)</li> </ul> <ul> <li>\\(-2 \\in [-2; 1[\\)</li> <li>\\(-3 \\in [-5; -1[\\)</li> <li>\\(-\\dfrac{26}{5} \\notin ]-5; -4[\\)</li> <li>\\(4 \\notin [-3; 4[\\) </li> <li>\\(2\\pi \\notin [7;8]\\)</li> <li>\\(0 \\in \\mathbb{R}\\)</li> <li>\\(0 \\notin \\mathbb{R}^*\\)</li> </ul> Travailler les repr\u00e9sentations Enonc\u00e9Solution <p>Recopier et compl\u00e9ter : </p><p> </p> <p>A venir....</p>"},{"location":"Maths/Seconde/C01/C01_02_Intervalles/#unions-et-intersections-dintervalles","title":"Unions et intersections d'intervalles","text":"<p>D\u00e9finition</p> <p>Soient \\(I\\) et \\(J\\) deux intervalles.</p> <ul> <li>L\u2019intersection de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 la fois \u00e0 \\(I\\) \\textbf{ET} \u00e0 \\(J\\). On note cet ensemble \\(I \\cap J\\).</li> <li>La r\u00e9union de \\(I\\) et \\(J\\) est l\u2019ensemble des r\u00e9els qui appartiennent \u00e0 \\(I\\) \\textbf{OU} \u00e0 \\(J\\). On note cet ensemble \\(I \\cup J\\).</li> </ul> <p>Remarques</p> <ul> <li>La notation \\(\\cap\\) se lit \\og inter \\fg. D'o\u00f9 \\(I \\cap J\\) se lit \\og \\(I\\) inter \\(J\\) \\fg.</li> <li>La notation \\(\\cup\\) se lit \\og union \\fg. D'o\u00f9 \\(I \\cup J\\) se lit \\og \\(I\\) union \\(J\\) \\fg.</li> <li>Parfois, il n'y a aucun \u00e9l\u00e9ment qui appartiennent \u00e0 la fois \u00e0 \\(I\\) et \\(J\\). L'intersection est donc \\textbf{vide}, et on note \\(\\emptyset\\) l'ensemble vide. Dans ce cas \\(I \\cap J = \\emptyset\\).</li> </ul> <p>Exemple</p> <p>On consid\u00e8re les intervalles \\(I=[3;7]\\) et \\(J=]2; 5[\\). </p><p> </p> <ul> <li>L'ensemble \\(I\\cap J\\) est \\([3;5[\\). <p> </p></li> <li>L'ensemble \\(I\\cup J\\) est \\(]2;7]\\). <p> </p></li> </ul> Utiliser les notations \\(\\cap\\) et \\(\\cup\\) Enonc\u00e9Solution <p>R\\'eduire sous la forme d'un seul intervalle si possible et repr\u00e9senter sur la droite des r\u00e9els :</p> <ul> <li>\\(]-3;7] \\cap ]-2;8[\\)</li> <li>\\(]-4;3] \\cap [-2;3,5[\\)</li> <li>\\([-7;4[ \\cup ]-3;5]\\)</li> <li>\\(]-3;5] \\cup [-1;2]\\)</li> <li>\\([-6;6]\\cup[-2;2]\\)</li> <li>\\(]-\\infty;2[ \\cap ]1;+\\infty[\\)</li> <li>\\(]-\\infty;-1] \\cup ]2;6]\\)</li> <li>\\([-5;3] \\cap [6;8]\\)</li> </ul> <ul> <li>\\(]-3;7] \\cap ]-2;8[ = ]-2;7]\\)</li> <li>\\(]-4;3] \\cap [-2;3,5[ = [-2;3]\\)</li> <li>\\([-7;4[ \\cup ]-3;5] = [-7;5]\\)</li> <li>\\(]-3;5] \\cup [-1;2] = ]-3;5]\\)</li> <li>\\([-6;6]\\cup[-2;2] = [-6;6]\\)</li> <li>\\(]-\\infty;2[ \\cap ]1;+\\infty[ = ]1;2[\\)</li> <li>\\(]-\\infty;-1] \\cup ]2;6] = ]-\\infty;-1] \\cup ]2;6]\\)</li> <li>\\([-5;3] \\cap [6;8] = \\emptyset\\)</li> </ul> <p>Ensemble vide</p> <p>L'ensemble vide est not\u00e9 \\(\\emptyset\\).</p> Travailler les in\u00e9quations et les intervalles Enonc\u00e9Solution <p>Compl\u00e9ter en s'aidant de la m\u00e9thode donn\u00e9e dans l'exemple ci-dessous.</p> <p>Exemple</p> <p>On a les \u00e9quivalences :</p> \\(x \\in [1;2]\\) \\(\\Longleftrightarrow\\) \\(1 \\leqslant x \\leqslant 2\\) par d\u00e9finition \\(\\Longleftrightarrow\\) \\(3 \\leqslant 3x \\leqslant 6\\) en multipliant chaque membre de l'in\u00e9galit\u00e9 par \\(3\\) \\(\\Longleftrightarrow\\) \\(3x \\in [3;6]\\) par d\u00e9finition <p>d'o\u00f9  \\(x \\in [1;2]\\) si et seulement si \\(3x \\in [3;6]\\)</p> <ol> <li>\\(x \\in [7;20]\\) si et seulement si \\(7x \\in \\dots\\)</li> <li>\\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in \\dots\\)</li> <li>\\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in \\dots\\)</li> <li>\\(x \\in \\dots\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\)</li> <li>\\(x \\in \\dots\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\)</li> <li>\\(x \\in \\dots\\) si et seulement si \\(4x+3 \\in [-6;5]\\)</li> </ol> <ol> <li>\\(x \\in [7;20]\\) si et seulement si \\(7x \\in [49;140]\\)</li> <li>\\(x \\in ]-1;3]\\) si et seulement si \\(x+4 \\in ]3;7]\\)</li> <li>\\(x \\in [2;6]\\) si et seuelemnt si \\(8-x \\in [2;6]\\)</li> <li>\\(x \\in ]-3 ; +\\infty[\\) si et seulement si \\(x+6 \\in ]3 ; +\\infty[\\)</li> <li>\\(x \\in ]-\\infty ; -2]\\) si et seulement si \\(-2x \\in [4 ; +\\infty[\\)</li> <li>\\(x \\in [-\\dfrac{9}{4};2]\\) si et seulement si \\(4x+3 \\in [-6;5]\\)</li> </ol> Repr\u00e9senter sous  la forme d'intervalles Enonc\u00e9 <ul> <li>\\(y&gt;-3\\) et \\(y&lt;4\\)</li> <li>\\(y&gt;-3\\) ou \\(y&lt;4\\)</li> <li>\\(y \\leqslant \\dfrac{1}{3}\\) et \\(y \\leqslant \\dfrac{1}{2}\\)</li> <li>\\(y \\leqslant \\dfrac{1}{3}\\) ou \\(y \\leqslant \\dfrac{1}{2}\\)</li> </ul> Solution <p>A venir</p> R\u00e9solutions d'\u00e9quations du premier degr\u00e9 Enonc\u00e9Solution <ol> <li> <p>R\u00e9soudre dans \\(\\mathbb{R}\\) chacune des \u00e9quations suivantes :</p> </li> <li> <p>\\(3x -6 =0\\)</p> </li> <li>\\(3x -4 = 0\\)</li> <li>\\(-3x +64 = 19\\)</li> <li>\\(-2(x+5)=-8\\)</li> <li>\\(3x -\\pi=0\\)</li> <li> <p>\\(\\dfrac{x-8}{3}=-4\\)</p> </li> <li> <p>Lesquelles de ces 4 \u00e9quations sont r\u00e9solubles dans \\(\\mathbb{Z}\\) ? Dans \\(\\mathbb{Q}\\) ?</p> </li> </ol> <p>A venir</p> R\u00e9solutions d'in\u00e9quations du premier degr\u00e9 Enonc\u00e9 <p>R\u00e9soudre les in\u00e9quations suivantes et pr\u00e9senter le r\u00e9sultat sous la forme d'un intervalle :</p> <ul> <li>\\(3x -6 &gt;0\\)</li> <li>\\(3x -4 \\leqslant  0\\)</li> <li>\\(-3x +64 &lt; 19\\)</li> </ul>"},{"location":"Miscellanees/FFMPEG/","title":"FFMPEG","text":""},{"location":"Miscellanees/FFMPEG/#ffmpeg","title":"FFMPEG","text":"<p>Quelques commandes pour FFMPEG :</p>"},{"location":"Miscellanees/FFMPEG/#concatenation-de-video","title":"Concat\u00e9nation de vid\u00e9o","text":"<p>Si les vid\u00e9os sont dans le m\u00eame format :</p> <ol> <li> <p>Cr\u00e9er un fichier texte <code>input.txt</code> avec la liste des fichiers \u00e0 concat\u00e9ner, pr\u00e9sent\u00e9s sous la forme suivante :</p> <p></p><pre><code>file 'fichier1.flv'\nfile 'fichier2.flv'\n</code></pre> 2. Utiliser la commande suivante : <pre><code>ffmpeg -f concat -safe 0 -i input.txt -c copy output.flv\n</code></pre> </li> </ol>"},{"location":"Miscellanees/Irisa_Femmes/","title":"Parit\u00e9 informatique","text":""},{"location":"Miscellanees/Irisa_Femmes/#parite-informatique","title":"Parit\u00e9 informatique","text":""},{"location":"Miscellanees/Irisa_Femmes/#irisa","title":"Irisa","text":"<p>=&gt; en 2023 </p> <ul> <li>22,4% femmes Mcf CR</li> <li>17,8 % femmes prof et DR</li> </ul> <p>=&gt; nationaux \u00e9quivalents</p> <p>L1 info rennes 1 =&gt; 15,3% \u00e9tudiantes L3 info =&gt; 19,3% d' \u00e9tudiantes INSA =&gt; 23,9%</p> <p>=&gt; entreprises informatiques</p> <p>50% des entreprises n'emploie pas de femmes 22% de femmes dans les effectifs gloibaux 10% de candidatures f\u00e9minines 8% taux d'embauche</p> <p>=&gt; en 2022-2023 </p> <p>*1G 14,5%  * En TG     * 11,'% maths NSI     * 14,7% en NSI</p> <ul> <li>Marion Cr\u00e9hange =&gt; premi\u00e8re personne \u00e0 soutenir une th\u00e8se en info en France</li> </ul>"},{"location":"Miscellanees/Irisa_Femmes/#atelier-1-informaticienne-ou-geek","title":"Atelier 1 =&gt; Informaticien.ne ou geek","text":""},{"location":"Miscellanees/Irisa_Femmes/#stereotype-1-cest-quoi-linformatique","title":"St\u00e9r\u00e9otype 1 : C'est quoi l'informatique","text":""},{"location":"Miscellanees/JDLE2023/","title":"JDLE 2023","text":""},{"location":"Miscellanees/JDLE2023/#jdle-2023","title":"JDLE 2023","text":""},{"location":"Miscellanees/JDLE2023/#presentation-flash-1","title":"Pr\u00e9sentation flash 1","text":""},{"location":"Miscellanees/JDLE2023/#panorama-des-rel","title":"Panorama des REL","text":"<p>(Ressources Educatives Libres) =&gt; 5R  =&gt; Retenir     =&gt; R\u00e9utiliser     =&gt; R\u00e9viser     =&gt; Remixer     =&gt; Redistribuer</p> <p>Sur Forge AEIF</p>"},{"location":"Miscellanees/JDLE2023/#ecovoit","title":"Ecovoit","text":"<p>Application de Covoit int\u00e9gr\u00e9e \u00e0 l'ENT de l'\u00e9tablissement. =&gt; </p>"},{"location":"Miscellanees/JDLE2023/#qcmcam","title":"QCMCam","text":"<p>Tester les \u00e9l\u00e8ves \u00e0 partir d'une cam\u00e9ra. + MathsMentales</p>"},{"location":"Miscellanees/JDLE2023/#baguette","title":"Baguette","text":"<p>esolang</p>"},{"location":"Miscellanees/JDLE2023/#openstreetmap","title":"OpenStreetMap","text":"<p>=&gt; a retester + GPS ?</p> <p>Flight simulator utilise OSM SNT =&gt; probl\u00e8me des mauvaises contributions Article sur les bonnes pratiques Ac-lyon OSM/SNT Parcours Magist\u00e8re https://clic.ac-lyon.fr/osm</p>"},{"location":"Miscellanees/JDLE2023/#motminot","title":"MotMinot","text":"<p>Rigolo =&gt; Motus</p>"},{"location":"Miscellanees/JDLE2023/#mixap","title":"Mixap","text":"<p>Application sur r\u00e9alit\u00e9 augment\u00e9e</p>"},{"location":"Miscellanees/JDLE2023/#relia","title":"RELIA","text":"<p>(REL + IA) =&gt; Chaire RELIA Unesco Universit\u00e9 de Nantes Colin de la Higuera / M\u00e9lanie Pauly Harquevaux</p> <p>5R de David Wiley</p> <p>R\u00e9cup\u00e9rer      =&gt; d\u00e9tenir l\u00e9galement une copie     =&gt; T\u00e9l\u00e9charger</p> <p>R\u00e9utiliser =&gt;     =&gt; utiliser directement en cours     =&gt; Afficher mat\u00e9riel sur cours en ligne     =&gt; Utikiser</p> <p>R\u00e9viser     =&gt; On peut traduire     =&gt; On peut corriger     =&gt; ajouter un exemple local     =&gt; adapter \u00e0 un lieu, \u00e0 une date</p> <p>Remixer     =&gt; Travailler \u00e0 plusieurs     =&gt; On peut collaborer     =&gt; Exemple Class'Code</p> <p>Redistribuer     =&gt; Mettre en circulation</p> <p>Placer une licence =&gt; </p> <p>X5GON =&gt; Moteur de recherche de REL anglophone</p>"},{"location":"Miscellanees/JDLE2023/#presentation-flash-2","title":"Pr\u00e9sentation flash 2","text":""},{"location":"Miscellanees/JDLE2023/#pmb","title":"PMB","text":"<p>=&gt; pas que EN</p>"},{"location":"Miscellanees/JDLE2023/#dora","title":"DORA","text":"<p>=&gt; Logiciel pour Course d'orientation</p>"},{"location":"Miscellanees/JDLE2023/#des-blocs","title":"Des Blocs","text":"<p>=&gt;</p>"},{"location":"Miscellanees/JDLE2023/#erudi","title":"\u00e9RUDI","text":""},{"location":"Miscellanees/JDLE2023/#mon-oralnet","title":"mon-oral.net","text":"<p>=&gt; a donner aux coll\u00e8gues de fra + Pr\u00e9paration Grand-oral</p>"},{"location":"Miscellanees/JDLE2023/#forge","title":"Forge","text":"<p>myMarkmap</p>"},{"location":"Miscellanees/mkdocs_cmd/","title":"MkDocs","text":""},{"location":"Miscellanees/mkdocs_cmd/#syntaxe-des-documents-mkdocs","title":"Syntaxe des documents MkDocs","text":"<p>Pour la documentation compl\u00e8te : mkdocs.org.</p> <p>Documentation sur materials :  materials reference </p> <p>La documentation sur le plugin macro : macro plugin</p>"},{"location":"Miscellanees/mkdocs_cmd/#bases-de-la-syntaxe-markdown","title":"Bases de la syntaxe Markdown","text":"<p>Le langage Mardown est en langage de balise simple, utilis\u00e9 entre autres dans les notebooks Jupyter, et pour lequel les r\u00e8gles d'utilisation sont simples :</p> <ul> <li>La mise en gras se fait par en encadrant par 2 \u00e9toiles  : <code>**Gras**</code> -&gt; Gras.</li> <li> <p>La mise en italique se fait par en encadrant par 1 \u00e9toile  : <code>*Italique*</code> -&gt; Italique.</p> </li> <li> <p>Les titres de diff\u00e9rents niveaux sont obtenus en utilisant un certain nombre de  di\u00e8se <code>#</code></p> </li> <li>Les images sont ins\u00e9r\u00e9es par la commande <code>![Alt text](/path/to/img.jpg \"Optional title\")</code></li> <li>Un texte sans fortmatage est obtenu en encadrant par des guillemets invvers\u00e9s ` : <code>'**Truc**'</code> n'est pas mis en forme</li> </ul> <p>Pour utiliser un caract\u00e8re * simple, il faut l'\u00e9chapper avec un backslash \\, comme pour tous les autres caract\u00e8re sp\u00e9ciaux.  </p>"},{"location":"Miscellanees/mkdocs_cmd/#les-citations","title":"Les citations","text":"<p>Pour  ins\u00e9rer une citation, on utilise le chevron &gt; devant chaque ligne de code : </p><pre><code>    &gt; Voici une citation\n\n    &gt; sur plusieurs lignes.\n</code></pre> donnera   <p>Voici une citation</p> <p>sur plusieurs lignes.</p> <p>A noter que si on ne saute pas de ligne, MkDocs formate selon la loingueur de la ligne courante : Pour  ins\u00e9rer une citation, on utilise le chevron &gt; devant chaque ligne de code : </p><pre><code>    &gt; Voici une citation\n    &gt; sur une seule ligne.\n</code></pre> donnera   <p>Voici une citation sur une seule ligne.</p>"},{"location":"Miscellanees/mkdocs_cmd/#les-hyperliens","title":"Les hyperliens","text":"<p>Le fonctionnement des hyperlmens est particulier \u00e0 MkDocs, donc ce qui suit n'est pas toujours valable dans  n'importe quel environnement lisant du MarkDown.</p> <p>Le principe de base : <code>[texte de remplacement](adresse du document)</code></p> <p>Il est possible de r\u00e9f\u00e9rer \u00e0 des documents internes en utilisant leur chemin relatif. <code>Please see the [project license](../about/license.md) for further details.</code></p> <p>Il est possible de faire une r\u00e9f\u00e9rence \u00e0 une partie sp\u00e9cifique d'un document par l'interm\u00e9diaire d'ID g\u00e9n\u00e9r\u00e9es automatiquement par MkDocs pour chaque header (\u26a0\ufe0f les noms sont en minuscules et les caract\u00e8res sp\u00e9ciaux - y compris les espaces, sont remplac\u00e9 par des tirets. lers tirets doubles sont alors r\u00e9duits \u00e0 un simple tiret).</p> <p>Ainsi le lien <code>[ceci](mkdocs_cmd.md#syntaxe-des-documents-mkdocs)</code> renvoie ici renvoie vers le header de cette partie.</p>"},{"location":"Miscellanees/mkdocs_cmd/#modules-de-mkdocs-material","title":"Modules de MkDocs-Material","text":""},{"location":"Miscellanees/mkdocs_cmd/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Miscellanees/mkdocs_cmd/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Miscellanees/mkdocs_cmd/#test-code","title":"Test code","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>supprime et insere et  Surligne </p>"},{"location":"Miscellanees/mkdocs_cmd/#keys","title":"Keys","text":"<p>Ctrl =&gt; <code>++ctrl++</code></p> <p>Alt =&gt; <code>++alt++</code></p> <p>Del =&gt; <code>++delete++</code></p>"},{"location":"Miscellanees/mkdocs_cmd/#latex","title":"Latex","text":"\\[  \\dfrac{3}{4x} \\] <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the  singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such  that \\(f(a)=f(b)\\).</p>"},{"location":"Miscellanees/mkdocs_cmd/#admonitions","title":"Admonitions (?)","text":"<p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.</p> Question <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Note</p> <p>On teste l'auto deploiement</p>"},{"location":"Miscellanees/mkdocs_cmd/#quelques-points-precis","title":"Quelques points pr\u00e9cis :","text":"<p>https://squidfunk.github.io/mkdocs-material/reference/formatting/</p>"},{"location":"Miscellanees/mkdocs_cmd/#pyodide-et-autre","title":"Pyodide et autre :","text":"<p>https://github.com/backstage/mkdocs-monorepo-plugin</p> <p>https://bouillotvincent.gitlab.io/pyodide-mkdocs/#syntaxe-markdown</p>"},{"location":"Miscellanees/p5_Thonny/","title":"P5 et Thonny","text":""},{"location":"Miscellanees/p5_Thonny/#utiliser-p5-avec-thonny","title":"Utiliser P5 avec Thonny","text":"<p>La configuration de Thonny au Lyc\u00e9e ne premet pas d'utiliser le module <code>p5</code> correctement. La m\u00e9thode suivante permet cependant d'utiliser une version de python suffisante :</p>"},{"location":"Miscellanees/p5_Thonny/#installer-une-version-recente-de-python-64-bits","title":"Installer une version r\u00e9cente de Python 64 bits","text":"<p>Le module <code>p5</code> ne fonctionne pas en 32 bits, il faut donc installer une version de python en 64 bits. Heureusement, il est toutefois possible de faire une installation locale de python :</p> <ol> <li>T\u00e9l\u00e9chargez la derni\u00e8re version de Python en 64 bits ici</li> <li> <p>Ex\u00e9cutez le fichier, puis d\u00e9cochez Install laucher for all users</p> <p></p> </li> <li> <p>S\u00e9lectionnez Customize installation</p> <p></p> </li> <li> <p>Puis Next</p> <p></p> </li> <li> <p>Changez le lieu d'installation en cr\u00e9ant un dossier <code>Python310</code> (si la version est 3.10) dans votre dossier <code>Documents</code>.</p> <p></p> </li> <li> <p>Lancez l'installation... Et patientez !</p> <p></p> </li> </ol>"},{"location":"Miscellanees/p5_Thonny/#creer-un-environnement-virtuel-python","title":"Cr\u00e9er un environnement virtuel Python","text":"<p>Afin de garder une installation propre de Python, il est toujours pr\u00e9f\u00e9rable de travailler avec un environnement virtuel. Pour ce faire, il faut suivre la m\u00e9thode suivante :</p> <ol> <li>Cr\u00e9er un dossier <code>Thonny310</code> dans votre dossier <code>Document</code> (soit \u00e0 c\u00f4t\u00e9 de votre dossier <code>Python310</code>).</li> <li>Lancez l'invite de commande windows <code>CMD</code>, et d\u00e9placez vous dans votre dossier <code>Document</code>.</li> <li> <p>Lancez la commande suivante, permettant de cr\u00e9er un {==environnement virtuel} correspondant \u00e0 la version de Python que vous avez install\u00e9e dans la partie pr\u00e9c\u00e9dente :</p> <pre><code>Python310\\python.exe -m venv Thonny310  </code></pre> <p></p> <p>Au retour du prompt, l'environnement virtuel est cr\u00e9e.</p> </li> </ol>"},{"location":"Miscellanees/p5_Thonny/#activer-le-venv-dans-thonny-et-installer-p5","title":"Activer le venv dans Thonny et installer p5","text":"<p>L'environnement virtuel \u00e9tant cr\u00e9\u00e9, on peut d\u00e9sormais configurer Thonny pour l'utiliser :</p> <ol> <li>Ouvrez Thonny.</li> <li> <p>Dans la console, on voit la version de Python actuellement ex\u00e9cut\u00e9e par Thonny</p> <p></p> </li> <li> <p>Ouvrez le menu <code>Tools &gt; Options</code></p> <p></p> </li> <li> <p>Dans l'onglet <code>Interpreter</code>, dans le menu d\u00e9roulant, s\u00e9lectionnez <code>Alternative Python 3 Interpreter or virtual environnement</code>.</p> <p></p> </li> <li> <p>S\u00e9lectionnez <code>Locate another python.exe</code>.</p> <p></p> </li> <li> <p>D\u00e9placez vous alors dand le dossier <code>Scripts</code> de l'environnement virtuel que vous avez cr\u00e9\u00e9 dans la partie pr\u00e9c\u00e9dente, et s\u00e9lectionnez l'ex\u00e9cutable <code>python.exe</code> qui s'y trouve.</p> <p></p> </li> <li> <p>V\u00e9rifiez que le chemin s\u00e9lectionn\u00e9 est correct, puis validez en appuyany sur le bouton <code>Ok</code></p> <p></p> </li> <li> <p>Au bout de quelques secondes, vous devriez voir dans la console le changement d'interpr\u00e9teur.</p> <p></p> </li> <li> <p>Vous pouvez maintenant installer le module <code>p5</code> par la mani\u00e8re habituelle (<code>Tools &gt; Manage Packages</code>). Patience, l'installation est tr\u00e8s longue !</p> </li> </ol>"},{"location":"Miscellanees/regex/","title":"REGEX","text":""},{"location":"Miscellanees/regex/#quelques-regex","title":"Quelques REGEX","text":""},{"location":"Miscellanees/regex/#regex-et-latex","title":"Regex et Latex","text":"<ul> <li><code>\\\\textit{(.*?)}</code> : trouve  toute cha\u00eene de caract\u00e8re correspondant \u00e0 <code>\\textit{...}</code> et peut \u00eatre remplac\u00e9e par exemple par <code>?\\1\\?</code>, ce qui donnera :<ul> <li><code>\\textit{bidule}</code> ---&gt; <code>?bidule?</code></li> </ul> </li> <li><code>\\\\includegraphics[(.*?)]{(.*?)}</code> devrait permettre de faire  <code>[\\2](\\2)){: style=\"width:80%; margin:auto;display:block;background-color: #d2dce0;\"}</code>, mais \u00e7a ne fonctionne pas.</li> </ul>"},{"location":"Miscellanees/utilisationP5/","title":"Bases de P5","text":""},{"location":"Miscellanees/utilisationP5/#petits-introduction-a-lutilisation-du-module-p5-python","title":"Petits introduction \u00e0 l'utilisation du module P5 Python","text":"<p>Diff\u00e9rents P5</p> <p>Il existe diff\u00e9rentes impl\u00e9mentations du module <code>P5</code> pour lesquelles les m\u00e9thodes sont l\u00e9g\u00e8rement diff\u00e9rentes dans leur \u00e9criture. Par exemple, pour cr\u00e9er une zone de dessin  de dimension \\(300 \\times 200\\) :</p> <ul> <li>dans l'impl\u00e9mentation disponible sur Capytale, il faut utiliser <code>createCanvas(300,200)</code> ;</li> <li>dans l'impl\u00e9mentation import\u00e9e par Python 3.10, il faut utiliser <code>size(300,200)</code>.</li> </ul> <p>Dans tous les cas, pour conna\u00eetre la liste exacte des m\u00e9thodes disponibles : </p><pre><code>import p5\nhelp(p5)\n</code></pre>"},{"location":"Miscellanees/utilisationP5/#le-principe","title":"Le principe","text":""},{"location":"Miscellanees/utilisationP5/#un-premier-exemple","title":"Un premier exemple","text":"<p>Un exemple d'utilisation de <code>p5</code> est donn\u00e9 dans la documentation (en anglais). Je le donne et l'explicite ici :</p> <pre><code>from p5 import *\n\ndef setup():\n    size(640, 360)\n    no_stroke()\n    background(204)\n\ndef draw():\n    if mouse_is_pressed:\n        fill(random_uniform(255), random_uniform(127), random_uniform(51), 127)\n    else:\n        fill(255, 15)\n\n    circle_size = random_uniform(low=10, high=80)\n\n    circle((mouse_x, mouse_y), circle_size)\n\ndef key_pressed(event):\n    background(204)\n\nrun()\n</code></pre>"},{"location":"Miscellanees/utilisationP5/#description-des-fonctions","title":"Description des fonctions","text":"<p>Dans la premi\u00e8re ligne, on importe la totalit\u00e9 du module <code>p5</code>.</p> <p>Le module <code>p5</code> utilise obligatoirement deux fonctions :</p> <ul> <li>la fonction <code>setup</code>, ex\u00e9cut\u00e9e une seule fois, et permettant de r\u00e9gler un certain nombre de param\u00e8tres graphiques ;</li> <li>la fonction <code>draw</code>, ex\u00e9cut\u00e9e \u00e0 intervalle r\u00e9guliers (par d\u00e9faut tous les 60\u00e8mes de secondes), et qui \u00e0 chaque appel trace sur le pr\u00e9c\u00e9dent canevas</li> </ul> <p>Les fonctions <code>setup</code> et <code>draw</code> sont ex\u00e9cut\u00e9es \u00e0 l'appel de la fonction <code>run</code> (ligne 21). Il est possible de changer le param\u00e8tre <code>frame_rate</code> (par d\u00e9faut 60), qui correspond au nombre d'appels de la fonction <code>draw</code> par secondes.</p> <p>La fonction <code>key_pressed</code> est une fonction spcifique traitant les \u00e9v\u00e8nements li\u00e9s au clavier, et est appel\u00e9e d\u00e8s qu'un \u00e9v\u00e8nement (touche press\u00e9e ou rel\u00e2ch\u00e9e) est d\u00e9tect\u00e9.</p>"},{"location":"Miscellanees/utilisationP5/#la-fonction-setup","title":"La fonction <code>setup</code>","text":"<pre><code>def setup():\n    size(640, 360)\n    no_stroke()\n    background(204)\n</code></pre> Cette fonction n'est ex\u00e9cut\u00e9e qu'une seule fois au d\u00e9clenchement du programme. <ul> <li>la fonction <code>size(640, 360)</code> fixe la taille de la fen\u00eatre graphique (du canevas, ou du sketch en anglais) \u00e0 une largeur de 640 pixels et une hauteur de 360 pixels.</li> <li>la fonction <code>no_stroke()</code> d\u00e9sactive le trac\u00e9 des bordures de tous les objets suivants.</li> <li>la fonction <code>background</code> fixe la couleur de fond, ici en nuances de gris. Il est possible de passer une couleur <code>RGB</code> ou <code>RGBA</code>, simplement par une commande du type <code>background(120,12,204,255)</code>.</li> </ul>"},{"location":"Miscellanees/utilisationP5/#la-fonction-draw","title":"La fonction <code>draw</code>","text":"<pre><code>def draw():\n    if mouse_is_pressed:\n        fill(random_uniform(255), random_uniform(127), random_uniform(51), 127)\n    else:\n        fill(255, 15)\n\n    circle_size = random_uniform(low=10, high=80)\n\n    circle((mouse_x, mouse_y), circle_size)\n</code></pre> <p>Cette fonction est ex\u00e9cut\u00e9e 60 fois par seconde par d\u00e9faut. Tous les dessins effectu\u00e9s dans cette fonctions vont \u00eatre trac\u00e9s sur le canevas pr\u00e9c\u00e9dent. Dans cette fonction :</p> <ul> <li>ligne 9 : on teste la valeur de la variable bool\u00e9enne <code>mouse_is_pressed</code>, qui vaut <code>True</code> si n'importe quel bouton de la souris est press\u00e9 :<ul> <li>dans le cas idoine (ligne 10), la couleur de remplissage des formes <code>fill</code> est fix\u00e9e \u00e0 une valeur al\u00e9atoire, gr\u00e2ce \u00e0 la loi de probabilit\u00e9 uniforme discr\u00e8te.</li> <li>dans le cas contraire (ligne 12, cette couleur de remplissage est fix\u00e9e au blanc.</li> </ul> </li> <li>ligne 14 : une valeur al\u00e9atoire comprise entre 10 et 80 est calcul\u00e9e avec la loi de probabilit\u00e9 uniforme discr\u00e8te, et affect\u00e9e \u00e0 la variable <code>circle_size</code>.</li> <li>ligne 16 : un cercle est trac\u00e9 gr\u00e2ce \u00e0 la fonction <code>circle</code>, prenant en argument un objet de type <code>tuple</code> repr\u00e9sentant les coordonn\u00e9es du centre, obtenues gr\u00e2ce aux variables <code>mouse_x</code> et <code>mouse_y</code>, et un objet <code>int</code> repr\u00e9sentant le rayon du cercle.</li> </ul>"},{"location":"Miscellanees/utilisationP5/#la-fonction-key_pressed","title":"La fonction <code>key_pressed</code>","text":"<pre><code>def key_pressed(event):\n    background(204)\n</code></pre> <p>Cette fonction est une fonction d\u00e9j\u00e0 d\u00e9finie dans le module <code>P5</code>, et qui est ici re-d\u00e9finie. Elle prend en argument un \u00e9v\u00e8nement clavier, et dans ce cas red\u00e9fini la couleur de fond - ce qui a pour effet d'effacer les trac\u00e9s ant\u00e9rieurs.</p>"},{"location":"Miscellanees/utilisationP5/#quelques-fonctions-et-methodes-utiles","title":"Quelques Fonctions et m\u00e9thodes utiles","text":""},{"location":"Miscellanees/utilisationP5/#formes-basiques","title":"Formes basiques","text":"<ul> <li><code>line(x1, y1, x2, y2)</code> ou <code>line((x1, y1), (x2, y2))</code>: trace une ligne  entre les points de coordonn\u00e9es \\((x1;y1)\\) et \\((x2;y2)\\).</li> <li><code>rect(x, y, width, height)</code> ou <code>rect((x, y), width, height)</code> : trace un rectangle en partant du coin  sup\u00e9rieur gauche de coordonn\u00e9es \\((x;y)\\), et de dimension <code>width</code> (largeur) et <code>height</code> (hauteur).     Il est aussi possible de modifier le comportement de la fonction <code>rect</code> en utilisant la fonction <code>rect_mode</code> :<ul> <li><code>rect_mode(CENTER)</code> suivi de <code>rect(x, y, width, height)</code> tracera un rectangle de centre \\((x;y)\\) et de largeur et de hauteur donn\u00e9e.</li> <li><code>rect_mode(CORNERS)</code> suivi de <code>rect(x1, y1, x2, y2)</code> tracera un rectangle de cooin sup\u00e9rieur gauche de coordonn\u00e9es \\((x1;y1)\\) et de coin inf\u00e9rieur droit de coordonn\u00e9es \\((x2;y2)\\).</li> </ul> </li> <li><code>ellipse(x,y, width, height)</code> ou <code>ellipse((x,y), width, height)</code>: fonctionne de la m\u00eame mani\u00e8re que la fonction <code>rect</code>, en tra\u00e7ant une ellipse de centre \\((x;y)\\) \u00e0 l'int\u00e9rieur du rectangle de centre \\((x,y)\\) et de largeur <code>width</code> et de hauteur <code>height</code>. Par d\u00e9faut le mode de l'ellipse est <code>CENTER</code>, mais il est possible de le changer gr\u00e2ce \u00e0 <code>ellipse_mode(CORNERS)</code>.</li> <li><code>triangle(x1, y1, x2, y2, x3, y3)</code> ou <code>triangle((x1, y1), (x2, y2), (x3, y3))</code> : trace un triangle entre les points de coordonn\u00e9es \\((x1;y1)\\), \\((x2;y2)\\) et \\((x3;y3)\\).</li> <li><code>circle(x, y, r)</code> ou <code>circle((x, y) ,r)</code> :  trace un cercle de centre \\((x;y)\\) et de rayon \\(r\\).</li> </ul>"},{"location":"Miscellanees/utilisationP5/#evenements","title":"Ev\u00e8nements","text":"<p>La gestion des \u00e9v\u00e8nements clavier et souris peut-\u00eatre finement configur\u00e9e dans <code>P5</code>, mais je laisse le soin \u00e0 ceux int\u00e9ress\u00e9s de voir la documentation correspondante. Nous ne donnerons ici qu'une description sommaire des \u00e9v\u00e9\u00e8nements </p>"},{"location":"Miscellanees/utilisationP5/#evenements-souris","title":"Ev\u00e8nements souris","text":"<p>Le module <code>P5</code> donne l'acc\u00e8s \u00e0 un certain nombre de variables permettant d'obtenir l'\u00e9tat de la souris :</p> <ul> <li><code>mouse_x</code> et <code>mouse_y</code> : coordonn\u00e9es du pointeur de la souris, de type <code>float</code>, valable dans l'appel actuel de la fonction <code>draw()</code>.</li> <li><code>pmouse_x</code> et <code>pmouse_y</code> : coordonn\u00e9es du pointeur de la souris, de type <code>float</code>, valable dans l'appel pr\u00e9c\u00e9dent de la fonction <code>draw()</code></li> <li><code>mouse_is_pressed</code> : bool\u00e9en valant <code>True</code> si un quelconque bouton de la souris est press\u00e9.</li> <li><code>mouse_button</code> : objet global pouvant valoir :<ul> <li><code>None</code> si aucun bouton n'est press\u00e9 ;</li> <li><code>\"LEFT\"</code> si le bouton gauche est press\u00e9 ;</li> <li><code>\"CENTER\"</code> si le bouton central est press\u00e9 ;</li> <li><code>\"RIGHT\"</code> si le bouton droit est press\u00e9.</li> </ul> </li> <li><code>mouse_is_dragging</code> : bool\u00e9en valant <code>True</code> si la souris est en glissement (c'est-\u00e0-dire le bouton gauche maintenu et la souris en mouvement).</li> </ul> <p>Il est aussi possible de d\u00e9finir un certain nombre de fonctions :</p> <ul> <li><code>mouse_moved()</code> : permet de d\u00e9finir les actions \u00e0 faire quand la souris est en mouvement ;</li> <li><code>mouse_pressed()</code> : permet de d\u00e9finir les actions \u00e0 faire quand un bouton est press\u00e9 ;</li> <li><code>mouse_released()</code> : permet de d\u00e9finir les actions \u00e0 faire quand un bouton est rel\u00e2ch\u00e9 ;</li> <li><code>mouse_clicked()</code> : permet de d\u00e9finir les actions \u00e0 faire quand un bouton est cliqu\u00e9, c'est-\u00e0-dire imm\u00e9diatement rel\u00e2ch\u00e9 apr\u00e8s avoir \u00e9t\u00e9 press\u00e9 ;</li> <li><code>mouse_draged()</code> : permet de d\u00e9finir les actions \u00e0 faire quand la souris est en glissement ;</li> <li><code>mouse_wheel()</code> : permet de d\u00e9finir les actions \u00e0 faire quand la molette de la souris est activ\u00e9e.</li> </ul>"},{"location":"Miscellanees/utilisationP5/#evenements-clavier","title":"Ev\u00e8nements clavier","text":"<p>Les deux principales variables sont :</p> <ul> <li><code>key_is_pressed</code> : bool\u00e9en valant <code>True</code> si une touche quelconque est press\u00e9e ;</li> <li><code>key</code> : variable globale traquant les touches appuy\u00e9es. Elle vaut <code>None</code> si aucune touche n'est press\u00e9e, sinon elle peut \u00eatre compar\u00e9e \u00e0 des cha\u00eenes de caract\u00e8res en majuscule comme <code>\"A\"</code>, <code>\"T\"</code>, <code>\"2\"</code>, <code>\"ESC\"</code>, <code>\"SPACE\"</code>, <code>\"ENTER\"</code>, etc...</li> </ul> <p>On peut aussi utiliser les trois fonctions suivantes :</p> <ul> <li><code>key_pressed()</code> : permet de d\u00e9finir les actions \u00e0 faire quand une touche est press\u00e9e ;</li> <li><code>key_released()</code> : permet de d\u00e9finir les actions \u00e0 faire quand une touche est rel\u00e2ch\u00e9e ;</li> <li><code>key_typed()</code> : permet de d\u00e9finir les actions \u00e0 faire quand une touche est press\u00e9e puis imm\u00e9diatement relach\u00e9e.</li> </ul>"},{"location":"Miscellanees/utilisationP5/#gestion-des-images","title":"Gestion des images","text":"<p>Voir la documentation</p>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/","title":"Manipulation des fichiers textes","text":""},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#manipulation-des-fichiers-textes-en-python","title":"Manipulation des fichiers textes en Python","text":""},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#1-principes-de-lecture-de-fichier-textes","title":"1. Principes de lecture de fichier textes","text":""},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#11-premier-exemple-ouvrir-et-lire-la-totalite-dun-fichier","title":"1.1 Premier exemple : ouvrir et lire la totalit\u00e9 d'un fichier","text":"<p>Copiez-collez le fichier <code>zoo.txt</code>dans le m\u00eame dossier que ce notebook, puis d\u00e9clenchez les deux cellules suivantes :</p> <pre><code>file  = open(\"zoo.txt\",\"r\",encoding=\"utf8\")\n</code></pre> <pre><code>file\n</code></pre> <p>La premi\u00e8re cellule ouvre le fichier <code>zoo.txt</code> en mode lecture seule, comme l'indique le second argument <code>r</code> (pour read) de la fonction <code>open()</code>. Remarquez que le fichier n'est pas encore lu, mais simplement ouvert (un peu comme lorsqu'on ouvre un livre, mais qu'on ne l'a pas encore lu). Le curseur de lecture est pr\u00eat \u00e0 lire le premier caract\u00e8re du fichier, et lira les caract\u00e8res avec l'encodage <code>utf8</code>. L'instruction <code>open(\"zoo.txt\", \"r\",encoding=\"utf8\")</code> suppose que le fichier <code>zoo.txt</code> est dans le r\u00e9pertoire depuis lequel l'interpr\u00e9teur Python a \u00e9t\u00e9 lanc\u00e9. Si ce n'est pas le cas, il faut pr\u00e9ciser le chemin d'acc\u00e8s au fichier, soit de mani\u00e8re absolue soit de mani\u00e8re relative.</p> <p>La seconde cellule nous confirme que la variable <code>file</code> contient la r\u00e9f\u00e9rence vers la zone de la m\u00e9moire vive dans laquelle est stock\u00e9e le fichier.</p> <pre><code>lignes = file.readlines()\nlignes\n</code></pre> <p>On lit ici la totalit\u00e9 du fichier gr\u00e2ce \u00e0 la m\u00e9thode <code>.readlines()</code>. Cette m\u00e9thode renvoie un tableau stock\u00e9 dans la varaible <code>lignes</code> o\u00f9 chaque \u00e9l\u00e9ment est une ligne du fichier texte. Le curseur de lecture est d\u00e9plac\u00e9 \u00e0 la fin de la derni\u00e8re ligne du fichier.</p> <pre><code>file.readlines()\n</code></pre> <p>Si on tente de relire une fois de plus les donn\u00e9es, la m\u00e9thode <code>.readlines()</code> renvoie une liste vide, car le curseur de lecture ne trouve plus rien.</p> <pre><code>file.close()\n</code></pre> <p>La ligne pr\u00e9c\u00e9dente ferme le fichier, plus pr\u00e9cis\u00e9ment elle ne renvoie rien mais modifie l'\u00e9tat de l'objet <code>file</code> en fichier ferm\u00e9. </p> <pre><code>file.readlines()\n</code></pre> <p>Il est donc impossible de lire de nouveau des informations.</p> <p> Exercice :</p> <p>1) Quel est le type des \u00e9l\u00e9ments du tableau renvoy\u00e9 par la m\u00e9thode <code>.readlines()</code> ?</p> <p>2) Ajouter \u00e0 l'aide de <code>Notepad++</code> les animaux <code>perroquets</code> et <code>ornithorynque</code> \u00e0 la suite de <code>zoo.txt</code>, puis relancer l'ouverture, la lecture et la fermeture du fichier. </p> <p>3) Lors de la lecture du fichier, apparaissent les caract\u00e8res <code>\\n</code>. A quoi correspondent-ils ?</p>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#12-lire-un-fichier-ligne-par-ligne","title":"1.2 Lire un fichier ligne par ligne","text":"<p>Il ne vous a pas \u00e9chapp\u00e9 que l'objet renvoy\u00e9 par la m\u00e9thode <code>.readlines()</code> renvoie une liste. Il est donc possible d'it\u00e9rer sur cette liste, en utilisant une boucle <code>for</code> :</p> <pre><code>file  = open(\"zoo.txt\",\"r\",encoding=\"utf8\")\nlines = file.readlines()\nfor n, line in enumerate(lines) :\n    print(f\"Ligne {n} : {line}\")\nfile.close()\n</code></pre>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#13-simplification-decriture-avec-le-gestionnaire-de-contexte-with","title":"1.3 Simplification d'\u00e9criture avec le gestionnaire de contexte <code>with</code>","text":"<p>Il est n\u00e9cessaire de faire une remarque importante :</p> <p> Il est imp\u00e9ratif de fermer un fichier d\u00e8s qu'on en a fini avec lui ! </p> <p>En effet, si le fichier reste ouvert en m\u00e9moire vive, il est possible qu'un appel du syst\u00e8me d'exploitation modifie la zone m\u00e9moire li\u00e9e \u00e0 ce fichier, ce qui risque de ne pas enregistrer les changements(au mieux), voire de le rendre illisible (au pire - c'est ce qui arrivait souvent sur les cl\u00e9s USB quand elles \u00e9taient mal \u00e9ject\u00e9es).</p> <p>Pire que \u00e7a, si une exception (= erreur) se produit avant l'appel \u00e0 la m\u00e9thode <code>.close()</code>, le fichier demeurera ouvert en m\u00e9moire et... advienne que pourra...</p> <p>Il est bien entendu possible de pr\u00e9voir un tel probl\u00e8me avec un bloc <code>try : ... finally : ...</code>, de la mani\u00e8re suivante :</p> <pre><code>try :\n    file  = open(\"zoo.txt\",\"r\",encoding=\"utf8\")\n    print(file.readlines())\n\nfinally :\n    file.close()\n</code></pre> <p>Cependant ce type de  structure est tr\u00e8s lourd \u00e0 mettre en place, et heureusement les d\u00e9veloppeurs de Python ont pr\u00e9vu un m\u00e9canisme plus simple : le gestionnaire de contexte <code>with</code>.</p> <pre><code>with open(\"zoo.txt\",\"r\",encoding=\"utf8\") as file :\n    print(file.readlines())\n</code></pre> <p>L'utilisation de <code>with</code> garanti la bonne fermeture du fichier, m\u00eame dans le cas d'exceptions.</p>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#14-autres-methodes-de-lecture","title":"1.4 Autres m\u00e9thodes de lecture","text":"<p>En plus de la m\u00e9thode <code>.readlines()</code>, il existe aussi d'autres possibilit\u00e9s pour lire un fichier texte : - la m\u00e9thode <code>.read</code> :</p> <pre><code>with open(\"zoo.txt\",\"r\",encoding=\"utf8\") as file :\n    contenu = file.read()\ncontenu\n</code></pre> <p>Cette m\u00e9thode lit l'int\u00e9gralit\u00e9 d'un fichier comme une unique chaine de caract\u00e8res.</p> <ul> <li>la m\u00e9thode <code>.readline()</code></li> </ul> <pre><code>with open(\"zoo.txt\",\"r\",encoding=\"utf8\") as file :\n    contenu = file.readline()\ncontenu\n</code></pre> <p>Cette m\u00e9thode lit le fichier ligne par ligne, en d\u00e9placant le curseur de lecture d'une ligne \u00e0 chaque appel.</p>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#2-ecriture-dans-un-fichier-texte","title":"2. Ecriture dans un fichier texte","text":"<p>### 2.1 Cr\u00e9ation d'un fichier texte</p> <p>La m\u00e9thode d'\u00e9criture dans un fichier texte est sensiblement la m\u00eame que pour la lecture :</p> <pre><code>with open(\"monPremierFichierTexte.txt\", \"w\", encoding = \"utf8\") as f :\n    f.write(\"J'\u00e9cris dans un fichier texte.\\n\")\n    f.write(\"J'\u00e9cris une deuxi\u00e8me ligne dans un fichier texte.\")\n    f.write(\"J'\u00e9cris la suite de la deuxi\u00e8me ligne.\")\n</code></pre> <p>Ici, le gestionnaire de contexte <code>with</code> ouvre le fichier en \u00e9criture seule, ce qui est signal\u00e9 par le deuxi\u00e8me param\u00e8tre <code>w</code> ( comme write). Le fichier n'existant pas au d\u00e9part, il est automatiquement cr\u00e9\u00e9 par Python. Le curseur d'\u00e9criture est plac\u00e9 au d\u00e9but du fichier.Puis l'appel de la m\u00e9thode <code>.write()</code> \u00e9crit la chaine de caract\u00e8re pass\u00e9e en argument dans le fichier, et place le curseur d'\u00e9criture \u00e0 la fin de la derni\u00e8re chaine de caract\u00e8re \u00e9crite. Notez qu'il n'y a pas de saut de ligne dans le fichier entre les chaines 2 et 3, pusisqu'on n'a pas explicitement demand\u00e9 un saut \u00e0 l'aide du caract\u00e8re sp\u00e9cial <code>\\n</code>.</p> <pre><code>with open(\"monPremierFichierTexte.txt\", \"w\", encoding = \"utf8\") as f :\n    f.write(\"Je r\u00e9\u00e9cris dans un fichier\")\n</code></pre> <p>Apr\u00e8s ex\u00e9cution de la cellule ci-dessus, on constate l'effacement des donn\u00e9es pr\u00e9c\u00e9dentes du fichier. En effet, si le fichier existe d\u00e9j\u00e0, l'ouvertur avec le param\u00e8tre <code>w</code> va \u00e9craser l'ancien contenu, le curseur d'\u00e9criture \u00e9tant plac\u00e9 au d\u00e9but du fichier.</p>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#22-ajouter-des-chaines-a-un-fichier-preexistant","title":"2.2 Ajouter des chaines \u00e0 un fichier pr\u00e9existant","text":"<p>Pour ajouter des chaines de caract\u00e8res \u00e0 un fichier pr\u00e9existant, il faut utiliser la fonction <code>open()</code> de la mlani\u00e8re suivante :</p> <pre><code>with open(\"monPremierFichierTexte.txt\", \"a\", encoding = \"utf8\") as f :\n    f.write(\"\\n\")\n    f.write(\"Maintenant, j'ajoute \u00e0 mon fichier pr\u00e9c\u00e9dent.\")\n</code></pre>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#23-ajouter-et-lire-des-donnees-non-textuelles","title":"2.3 Ajouter et lire des donn\u00e9es non textuelles","text":"<p>Comment faire pour ajouter des donn\u00e9es num\u00e9riques \u00e0 un fichier texte ?</p> <pre><code>with open(\"monPremierFichierTexte.txt\", \"a\", encoding = \"utf8\") as f :\n    for i in range(100):\n        f.write(i)    \n</code></pre> <p>On constate que l'erreur donn\u00e9e est <code>TypeError: write() argument must be str, not int</code>. Il est donc impossible d'ajouter directement des donn\u00e9es num\u00e9riques, il faut d'abord les caster en type <code>str</code> :</p> <pre><code>with open(\"monPremierFichierTexte.txt\", \"a\", encoding = \"utf8\") as f :\n    for i in range(100):\n        f.write(f\"{i}\")    \n</code></pre> <p>Il devient alors possible de passer dans un fichier texte le contenu de variables, en utilisant directement les <code>f-string</code> :</p> <pre><code>dico = {\"Vache\" : \"Meuh\",\n           \"Chien\" : \"Wouf\",\n           \"Chat\" : \"Miaou\",\n           \"Poule\" : \"Cot-cot\",\n           \"Ane\" : \"Hi-Han\",\n           \"Cochon\" : \"Gruik\",\n           \"Dindon\" : \"Leon\"\n           }\nwith open(\"sauvDico.txt\",\"w\",encoding=\"utf8\") as file:\n    file.write(f\"{dico}\")    \n</code></pre> <p>Pour lire ces donn\u00e9es, il suffit alors de relire l'int\u00e9gralit\u00e9 du fichier et de caster \u00e0 l'aide de la fonction built-in <code>eval()</code> :</p> <pre><code>with open(\"sauvDico.txt\",\"r\",encoding=\"utf8\") as file:\n    textdic = file.read()    \nnewDico = eval(textdic)\nprint(type(newDico))\nprint(f\"Le chien fait {newDico['Chien']}\")\n</code></pre>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#3-exercices","title":"3. Exercices","text":""},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#31-exercice-1","title":"3.1 Exercice 1","text":"<p>Le fichier <code>Notes.txt</code> contient les notes re\u00e7ues par des \u00e9l\u00e8ves \u00e0 un examen de Python.</p> <ol> <li>Ecrire une fonction <code>ouvreNote()</code> qui ouvre le fichier, et renvoie la liste des notes sous la forme d'une liste d'entiers.</li> <li>Ecrire une fonction <code>calculeMoyenne()</code> qui calcule la moyenne du groupe d'\u00e9l\u00e8ve</li> <li>Ecrire une fonction <code>admis()</code> qui cr\u00e9e un nouveau fichier <code>listeAdmis.txt</code>, avec en face de chaque note la mention admis si la note est sup\u00e9rieure ou \u00e9gale \u00e0 10, ou la mention recal\u00e9 si la note est strictement inf\u00e9rieure \u00e0 10.</li> </ol>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#32-exercice-2","title":"3.2 Exercice 2","text":"<p>Le Zen de Python est un ensemble de 19 principes qui influencent le design du langage de programmation Python, et sont utiles pour comprendre et utiliser le langage.</p> <p>\u00c9crit et publi\u00e9 sur la liste de discussion de Python en juin 1999 par Tim Peters, le Zen de Python a \u00e9t\u00e9 ensuite publi\u00e9 comme le Python Enhancement Proposal (PEP) num\u00e9ro 20, et est aussi pr\u00e9sent sur le site web officiel de Python, en anglais. Il est aussi inclus comme Easter egg dans la distribution de l'interpr\u00e9teur Python, et apparait quand on tape la commande <code>import this</code>. (extrait de wikipedia)</p> <p>Sa traduction en fran\u00e7ais est donn\u00e9e dans la cellule suivante :</p> <pre><code>zen = [\"Pr\u00e9f\u00e8re :\\n\",\n       \"la beaut\u00e9 \u00e0 la laideur,\\n\",\n       \"l'explicite \u00e0 l'implicite,\\n\",\n       \"le simple au complexe\\n\",\n      \"et le complexe au compliqu\u00e9,\\n\",\n      \"le d\u00e9roul\u00e9 \u00e0 l'imbriqu\u00e9,\\n\",\n       \"l'a\u00e9r\u00e9 au compact.\\n\",\n        \"Prends en compte la lisibilit\u00e9.\\n\",\n\"Les cas particuliers ne le sont jamais assez pour violer les r\u00e8gles.\\n\",\n\"Mais, \u00e0 la puret\u00e9, privil\u00e9gie l'aspect pratique.\\n\",\n\"Ne passe pas les erreurs sous silence,\\n\",\n\"... ou b\u00e2illonne-les explicitement.\\n\",\n\"Face \u00e0 l'ambigu\u00eft\u00e9, \u00e0 deviner ne te laisse pas aller.\\n\",\n\"Sache qu'il ne devrait [y] avoir qu'une et une seule fa\u00e7on de proc\u00e9der,\\n\",\n\"m\u00eame si, de prime abord, elle n'est pas \u00e9vidente, \u00e0 moins d'\u00eatre N\u00e9erlandais.\\n\",\n\"Mieux vaut maintenant que jamais.\\n\",\n\"Cependant jamais est souvent mieux qu'imm\u00e9diatement.\\n\",\n\"Si l'impl\u00e9mentation s'explique difficilement, c'est une mauvaise id\u00e9e.\\n\",\n\"Si l'impl\u00e9mentation s'explique ais\u00e9ment, c'est peut-\u00eatre une bonne id\u00e9e.\\n\",\n\"Les espaces de nommage ! Sacr\u00e9e bonne id\u00e9e ! Faisons plus de trucs comme \u00e7a.\"]\n</code></pre> <ol> <li>Ecrire une fonction <code>ecritZen()</code> qui \u00e9crit le contenu de la variable <code>zen</code> dans le fichier <code>zenPython.txt</code></li> <li>Ecrire une fonction <code>inverseZen()</code> qui lit le contenu du fichier <code>zenPython.txt</code>, et renvoie une chaine de caract\u00e8re contenant les phrases dans l'ordre inverse.</li> </ol>"},{"location":"Miscellanees/Bases_Python/Fichiers_Textes/#33-exercice-3","title":"3.3 Exercice 3","text":"<p>Cr\u00e9er une fonction qui ouvre le fichier <code>codeJedi.txt</code>, et qui remplace le mot Jedi par le mot Sith, les n\u00e9gations ne et pas \u00e9tant ajout\u00e9es aux bonnes positions, sauf pour la ligne 2 o\u00f9 pour d\u00e9fendre et prot\u00e9ger est supprim\u00e9.</p> <pre><code>with open(\"codeJedi.txt\", \"r\", encoding=\"utf8\") as f :\n    toto = f.readlines()\n</code></pre> <pre><code>toto\n</code></pre> <pre><code>['Les Jedi sont les gardiens de la paix dans la galaxie.\\n',\n 'Les Jedi utilisent leurs pouvoirs pour d\u00e9fendre et prot\u00e9ger.\\n',\n 'Les Jedi respectent la vie, en toutes ses formes.\\n',\n 'Les Jedi servent autrui plut\u00f4t que les dominer, pour le bien de la galaxie.\\n',\n \"Les Jedi cherchent \u00e0 s'am\u00e9liorer \u00e0 travers le savoir et l'instruction.\"]\n</code></pre> <pre><code>for ligne in toto :\n    print(ligne.split(\" \"))\n</code></pre> <pre><code>['Les', 'Jedi', 'sont', 'les', 'gardiens', 'de', 'la', 'paix', 'dans', 'la', 'galaxie.\\n']\n['Les', 'Jedi', 'utilisent', 'leurs', 'pouvoirs', 'pour', 'd\u00e9fendre', 'et', 'prot\u00e9ger.\\n']\n['Les', 'Jedi', 'respectent', 'la', 'vie,', 'en', 'toutes', 'ses', 'formes.\\n']\n['Les', 'Jedi', 'servent', 'autrui', 'plut\u00f4t', 'que', 'les', 'dominer,', 'pour', 'le', 'bien', 'de', 'la', 'galaxie.\\n']\n['Les', 'Jedi', 'cherchent', '\u00e0', \"s'am\u00e9liorer\", '\u00e0', 'travers', 'le', 'savoir', 'et', \"l'instruction.\"]\n</code></pre> <pre><code>toto\n</code></pre> <pre><code>['Les Jedi sont les gardiens de la paix dans la galaxie.\\n',\n 'Les Jedi utilisent leurs pouvoirs pour d\u00e9fendre et prot\u00e9ger.\\n',\n 'Les Jedi respectent la vie, en toutes ses formes.\\n',\n 'Les Jedi servent autrui plut\u00f4t que les dominer, pour le bien de la galaxie.\\n',\n \"Les Jedi cherchent \u00e0 s'am\u00e9liorer \u00e0 travers le savoir et l'instruction.\"]\n</code></pre>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/","title":"BDD, SQL et PHP","text":""},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#les-bases-de-donnees-et-le-sql","title":"Les bases de donn\u00e9es et le SQL","text":""},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#une-breve-introduction-aux-bases-de-donnees","title":"Une br\u00e8ve introduction aux bases de donn\u00e9es","text":"<p>Vocabulaire</p> <p>Une base de donn\u00e9e peut \u00eatre repr\u00e9sent\u00e9e comme un ensemble de tables, o\u00f9 chaque table poss\u00e8de plusieurs colonnes nomm\u00e9es.</p> <p>Une donn\u00e9e est alors une ligne d'une des tables.</p> <p>Prenons par exemple la base de donn\u00e9e suivante concernant des groupes de musiques:</p> <p></p> <p>Il y a 4 tables :</p> <ul> <li>la table <code>chanteur</code>, comportant 3 colonnes :<ul> <li><code>idc</code> : un num\u00e9ro d'identifiant (un nombre entier <code>int</code> ou <code>INTEGER</code>);</li> <li><code>nom</code> : le nom du chanteur (une chaine de caract\u00e8res <code>string</code>ou <code>VARCHAR</code>) ;</li> <li><code>prenom</code> : le pr\u00e9nom du chanteur (une chaine de caract\u00e8res <code>string</code>ou <code>VARCHAR</code>) ;</li> </ul> </li> <li>la table <code>groupe</code>, comportant 3 colonnes :<ul> <li><code>idG</code> : : un num\u00e9ro d'identifiant (un nombre entier <code>int</code> ou <code>INTEGER</code>);</li> <li><code>nom</code> : le nom du groupe (une chaine de caract\u00e8res <code>string</code>ou <code>VARCHAR</code>) ;</li> <li><code>id_style</code> : un num\u00e9ro d'identifiant li\u00e9 \u00e0 la table <code>style</code> (un nombre entier <code>int</code> ou <code>INTEGER</code>);</li> </ul> </li> <li>la table <code>style</code> avec deux colonnes qu'on ne d\u00e9taillera pas ici ;</li> <li>la table <code>album</code> avec quatre colonnes qu'on ne d\u00e9taillera pas ici.</li> </ul> <p>En liant les tables les unes aux autres gr\u00e2ce aux identifiants, on peut alors savoir que :</p> <ul> <li>L'album Fortitude vient du groupe d'identifiant <code>5</code>, qui est Gojira, dont le style est <code>2</code>, c'est-\u00e0-dire M\u00e9tal ;</li> <li>Le chanteur de l'album Era Vulgaris est d'identifiant <code>2</code>, et se nomme <code>Josh Homme</code>.</li> <li>etc.</li> </ul>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#utilisation-du-langage-sql","title":"Utilisation du langage SQL","text":""},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#presentation","title":"Pr\u00e9sentation","text":"<p>Le langage <code>SQL</code> est un langage sp\u00e9cifique invent\u00e9 pour communiquer avec des bases de donn\u00e9es \u00e0 l'aide de requ\u00eates. Les requ\u00eates peuvent \u00eatre de diff\u00e9rentes natures :</p> <ul> <li>interroger une table de la base de donn\u00e9e, par exemple renvoyer les noms de tous les chanteurs ou chercher tous les albums du groupe d'identifiant <code>5</code> ;</li> <li>interroger plusieurs tables de la base de donn\u00e9e en les liant, par exemple pour renvoyer tous les noms des groupes dont <code>Josh Homme</code>est le chanteur ;</li> <li>ins\u00e9rer une nouvelle ligne de donn\u00e9es dans une table ;</li> <li>modifier les donn\u00e9es d'une ligne d'une table ;</li> <li>supprimer une ligne d'une table.</li> </ul>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#quelques-lignes-de-code","title":"Quelques lignes de code","text":""},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#requetes-dinterrogations-simples","title":"Requ\u00eates d'interrogations simples","text":"<p>Chercher les noms de tous les chanteurs :</p> <p></p><pre><code>SELECT Nom FROM Chanteur ;\n</code></pre> Chercher tous les albums du groupe d'identifiant 5 : <pre><code>SELECT Titre FROM Album WHERE id_Groupe = 5 ;\n</code></pre>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#requetes-dinterrogations-complexes","title":"Requ\u00eates d'interrogations complexes","text":"<p>Rechercher les titres des albums dont Josh Homme est le chanteur :</p> <pre><code>SELECT Album.Titre FROM Album JOIN Chanteur ON Album.id_Chanteur == Chanteur.idC\nWHERE Chanteur. nom = \"Homme\" and Chanteur.prenom = \"Josh\"\n</code></pre>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#inserer-des-donnees-dans-une-table","title":"Ins\u00e9rer des donn\u00e9es dans une table","text":"<p>Ins\u00e9rer deux nouveaux styles dans la table <code>Style</code> :</p> <pre><code>INSERT INTO Style VALUES (3, 'Reggae'),\n(4, 'Rap'),\n(5, 'HardRock');\n</code></pre> <p>Ins\u00e9rer une ligne incompl\u00e8te dans la table <code>Groupe</code> :</p> <pre><code>INSERT INTO Groupe(idG, nom) VALUES\n(6, 'ACDC');\n</code></pre> <p>Les donn\u00e9es NULL</p> <p>Dans une BDD, parfois certaines informations ne sont pas renseign\u00e9es. Elles ont alors une valeur <code>NULL</code>.</p>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#changer-des-donnees","title":"Changer des donn\u00e9es","text":"<p>Ajouter le style HardRock au groupe ACDC :</p> <pre><code>UPDATE Groupe\nSET id_Style = 5\nWHERE nom = 'ACDC';\n</code></pre>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#supprimer-des-donnees","title":"Supprimer des donn\u00e9es","text":"<p>Pour supprimer la ligne correspondant \u00e0 l'album <code>Fortitude</code> :</p> <pre><code>DELETE FROM Album\nWHERE Titre='Fortitude';\n</code></pre>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#utilisation-de-php","title":"Utilisation de PHP","text":"<p><code>PHP</code> (Personnal Home Page) est un langage de programmation utilis\u00e9 principalement sur le web, c\u00f4t\u00e9 serveur, ce qui signifie qu'il travaille du c\u00f4t\u00e9 de la machine serveur, pour fabriquer la page web demand\u00e9e par le client. Un code en PHP peut \u00eatre int\u00e9gr\u00e9 au sein d'une page <code>HTML</code> gr\u00e2ce \u00e0 une balise sp\u00e9ciale : <code>&lt; ?PHP .... ?&gt;</code></p> <p>A lire</p> <p>On pourra simplement consid\u00e9rer que, pour construire une page web li\u00e9e \u00e0 <code>PHP</code> :</p> <ul> <li>on construit un squelette de page en <code>HTML</code>, comme d'habitude ;</li> <li>seules les informations sp\u00e9cifiques seront int\u00e9gr\u00e9es \u00e0 la page au moment de la construction, en rempla\u00e7ant certaines parties de texte</li> </ul> <p>Consid\u00e9rons par exemple le morceau de code HTML suivant :</p> <pre><code>&lt;p&gt; Bonjour &lt;?php echo $name ?&gt; ! &lt;/p&gt;\n</code></pre> <ul> <li>on a du code <code>HTML</code> classique, avec une balise <code>&lt;p&gt;</code> ;</li> <li>au sein de ce code, on \u00e0 la balise <code>&lt;?PHP ... ?&gt;</code>, qui introduit du code ;</li> <li>le code PHP consiste \u00e0 \u00e9crire dans le <code>HTML</code> (commande <code>echo</code>) le contenu de la variable <code>$name</code>.</li> </ul>"},{"location":"Miscellanees/Challenge_Ada_Lovelace/BDD/#les-variables","title":"Les variables","text":"<p>En PHP, les variables sont cr\u00e9es gr\u00e2ce au symbole <code>$</code>. On peut d\u00e9finir des variables comme montr\u00e9 ci-dessous :</p> <pre><code>&lt;?php\n  $prenom = 'Ada';  // Type string (chaine de caract\u00e8res avec deux guillemets simples)\n  $nom = \"Lovelace\";    // Type string ( avec deux guillemets doubles)\n  $age = 25;    // Type entier\n  $estLyceenne = true;  // Type bool\u00e9en\n  $competences = array('anglais','math\u00e9matiques','informatique','algorithmique'); // Type tableau\n\n?&gt;\n</code></pre> <p>On peut alors utiliser les variables comme dans tout autre langage :</p> <pre><code>&lt;?php\n$double_age = $age * 2 ; // la variable vaudra alors 50\n$nom_complet = $nom.' '.$prenom //Operation de concat\u00e9nation avec .\n// La chaine de caractere associ\u00e9e \u00e0 $nom_complet est alors \n// 'Lovelace Ada'\n?&gt;\n</code></pre>"},{"location":"Miscellanees/Manim/BasesManim/","title":"Manim","text":""},{"location":"Miscellanees/Manim/BasesManim/#bases-de-manim","title":"Bases de Manim","text":""},{"location":"Miscellanees/Manim/BasesManim/#installation-au-lycee","title":"Installation au Lyc\u00e9e","text":"<ol> <li>Le plus simple : Thonny</li> <li>T\u00e9l\u00e9charger archive <code>ffmpeg</code>, puis d\u00e9compresser.</li> <li> <p>faire une sauvegarde de l'actuel path :</p> <p>PATH &gt; sauvePath.txt</p> </li> <li> <p>Ajouter au path le chemin vers ffmpeg:</p> <p>PATH %PATH%;P:\\Documents\\ffmpeg\\bin</p> </li> </ol>"},{"location":"Miscellanees/Memorisation/Memorisation/","title":"La m\u00e9moire et les proc\u00e9ssus de m\u00e9morisation","text":""},{"location":"Miscellanees/Memorisation/Memorisation/#la-memoire-et-les-processus-de-memorisation","title":"La m\u00e9moire et les proc\u00e9ssus de m\u00e9morisation","text":"<p>Pr\u00e9-TD universit\u00e9 de Savoir : diff\u00e9rentes m\u00e9moires environ 6 min :</p> <p>lien</p> <p>Le r\u00f4le de la m\u00e9moire dans le processus d\u2019apprentissage (plus pour prof)</p> <p>lien</p> <p>Votre cerveau vous joue des tours - Conf\u00e9rence d'Albert Moukheiber</p> <p>lien</p>"},{"location":"Miscellanees/Minetest/Installation_presentation/","title":"Installation presentation","text":""},{"location":"Miscellanees/Minetest/Installation_presentation/#installation-et-interfacage-avec-python","title":"Installation et interfa\u00e7age avec Python","text":""},{"location":"Miscellanees/Minetest/Installation_presentation/#telechargement-et-installation","title":"T\u00e9l\u00e9chargement et installation","text":"<ol> <li>Allez \u00e0 la page  https://github.com/miney-py/miney_distribution/releases</li> <li>Allez \u00e0 la page  https://github.com/miney-py/miney_distribution/releases</li> </ol>"},{"location":"Miscellanees/Pygame/Base_pygame/","title":"Bases de Pygame","text":""},{"location":"Miscellanees/Pygame/Base_pygame/#bases-de-pygame","title":"Bases de Pygame","text":"<p>Ce cours est tr\u00e8s largement et assez honteusement copi\u00e9 sur celui-ci. Merci \u00e0 vous ! En cas de soucis de droits, n'h\u00e9sitez pas \u00e0 me contacter par le lien  situ\u00e9 en bas de page !</p>"},{"location":"Miscellanees/Pygame/Base_pygame/#importer-pygame-et-ses-constantes","title":"Importer Pygame et ses constantes","text":"<p><code>Pygame</code> est une biblioth\u00e8que, et en tant que telle, elle est construite \u00e0 partir de plusieurs modules. Les noms de ces modules sont :</p> <ul> <li>display</li> <li>mixer</li> <li>draw</li> <li>event</li> <li>image</li> <li>mouse</li> <li>time</li> </ul> <p>Il existe alors plusieurs possibilit\u00e9s pour importe <code>pygame</code> </p> <ol> <li> <p>Importation compl\u00e8te :</p> <pre><code>import pygame\n</code></pre> <p>La totalit\u00e9 de la biblioth\u00e8que est alors import\u00e9e, et pour utiliser la fonction <code>update</code> du module <code>display</code> on devra alors utiliser <code>pygame.display.update()</code>.</p> </li> <li> <p>Importation partielle des modules n\u00e9cessaires :</p> <pre><code>from pygame import display\n</code></pre> <p>Seul le module display est alors import\u00e9, et pour utiliser la fonction <code>update</code> de ce module, on devra alors utiliser <code>display.update()</code>. </p> </li> <li> <p>Importation compl\u00e8te avec import des constantes directement dans l'espace de nommage (conseill\u00e9e) :</p> <pre><code>import pygame\nfrom pygame.locals import *\n</code></pre> <p>Dans ce cas, pour utiliser la constante repr\u00e9sentant la touche espace, au lieu d'utiliser <code>pygame.locals.K_SPACE</code>, on utilisera simplement <code>K_SPACE</code>.</p> </li> </ol> <p>Le projet</p> <p>Commen\u00e7ons un petit programme qui nous am\u00e8nera \u00e0 d\u00e9placer un personnage de gauche \u00e0 droite sur un fond d'\u00e9cran, pendant que des balles tombent depuis le haut de l'\u00e9cran \u00e0 diff\u00e9rentes vitesses. Le jeu consistera \u00e0 \u00e9viter que le personnage entre en collision avec les balles, et s'arr\u00eatera d\u00e8s qu'une collision aura lieu.</p> <p>Le premier point est d'afficher une fen\u00eatre graphique d'une dimension donn\u00e9e : \\(640 \\times 480~ pixels^2\\) (oui, en bon prof de maths, je respecte \u00e0 minima les unit\u00e9s...).</p> <p>On utilise le script suivant, dans un fichier nomm\u00e9 <code>dodgeTheBall.py</code> : </p><pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\n</code></pre> <p>Analysons le code</p> <ul> <li>Dans les deux premi\u00e8res lignes, nous importons <code>pygame</code> en totalit\u00e9 ainsi que les constantes sp\u00e9cifiques dans l'espace de nommage courant.</li> <li>En ligne 4, nous initialisons tous les modules de <code>pygame</code>.</li> <li>En ligne 6, nous appelons ensuite la fonction <code>set_mode()</code> contenue dans le module <code>display</code> de <code>pygame</code>, qui prend en argument un tuple contenant la largeur et la hauteur de la fen\u00eatre voulue (attention, c'est bien un tuple ! <code>pygame.display.set_mode(640, 480)</code> ne fonctionne pas !).</li> </ul> Y'a un bug ! <p>La fen\u00eatre reste bloqu\u00e9e  et ne se ferme pas sauf si on force l'arr\u00eat du script !</p> <p>Effectivement, on se retrouve bloqu\u00e9... Il faut rajouter \u00e0 notre code une instruction suppl\u00e9mentaire pour que la fen\u00ebtre se ferme : </p><pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\n\npygame.quit()\n</code></pre> Encore un <p>Et oui ! Notre fen\u00eatre s'ouvre mais se ferme imm\u00e9diatement !</p> <p>Or nous aimerions qu'elle ne se ferme que sur demande explicite de l'utilisateur, par exemple par un clic sur la croix.</p> <p>C'est l\u00e0 qu'intervient la notion de boucle d'\u00e9v\u00e8nements. </p> <p>Dans un programme classique, en programmation imp\u00e9rative, le programme se d\u00e9roule plus ou moins lin\u00e9airement de la premi\u00e8re ligne \u00e0 la derni\u00e8re. Mais lorsqu'on utilise des interfaces graphiques, on ne peut pr\u00e9voir \u00e0 l'avance le comportement de l'utilisateur, et donc suivre un chemin clairement d\u00e9fini \u00e0 l'avance. C'est pour cette raison qu'on utilise plut\u00f4t le paradigme de la programmation \u00e9v\u00e9nementielle, c'est-\u00e0-dire un  paradigme o\u00f9 on pr\u00e9voira l'action de l'utilisateur, mais pas dans un ordre pr\u00e9cis. Chaque action pr\u00e9vue dans la boucle d'\u00e9v\u00e8nements aura un impact pr\u00e9cis.</p> <p>Dans notre cas, nous souhaiterions que la fen\u00eatre reste ouverte tant que l'utilisateur n'a pas exprim\u00e9 le d\u00e9sir de la fermer, soit par l'interm\u00e9diaire de la croix, soit par l'interm\u00e9diaire de la combinaison de touches Alt+F4.</p> <p>Notion d'\u00e9v\u00e8nements</p> <p>Dans la construction d'interfaces graphiques, on utilise souvent la notion d'\u00e9v\u00e8nements. Un \u00e9v\u00e8nement correspond \u00e0 :</p> <ul> <li>un d\u00e9placement de la souris ;</li> <li>le survol d'une zone sp\u00e9cifique de l'\u00e9cran par le pointeur de la souris ;</li> <li>un appui sur une ou plusieurs touches du clavier :</li> <li>le rel\u00e2chement d'une touche de clavier ;</li> <li>un appui ou rel\u00e2chement d'un bouton de la souris ;</li> <li>un \u00e9v\u00e9nement sp\u00e9cifique pr\u00e9vu dans le programme ;</li> <li>un changement de luminosit\u00e9 devant un capteur vid\u00e9o ;</li> <li>...</li> </ul> <p>Ces \u00e9v\u00e8nements sont stock\u00e9s \u00e0 leur apparition dans une file(fifo) de dimension limit\u00e9e, nettoy\u00e9e r\u00e9guli\u00e8rement de ses \u00e9v\u00e8nements les plus anciens. </p> <p>Dans <code>pygame</code>, les \u00e9v\u00e8nements sont des constantes, et celui qui nous int\u00e9resse est l'\u00e9v\u00e8nement <code>QUIT</code>. Nous allons donc parcourir la liste des \u00e9v\u00e8nements pour ensuite pouvoir quitter la fen\u00eatre si celui-ci est exprim\u00e9 : </p><pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\n\nfor event in pygame.event.get() :\n    if event == QUIT :\n        pygame.quit()\n</code></pre> L'arnaque : \u00e7a ne marche pas ! <p>On retombe sur notre probl\u00e8me pr\u00e9c\u00e9dent : la fen\u00eatre ne se ferme plus...</p> <p>C'est parce que la file d'\u00e9v\u00e8nements se construit et se nettoie tr\u00e8s rapidement ! Nous n'avons pas le temps de cliquer sur la croix que d\u00e9j\u00e0 le parcours par la boucle <code>for</code> est termin\u00e9 ! Et donc dans ce cas on ne passe jamais par l'instruction <code>pygame.quit()</code>.</p> <p>Il va donc falloir r\u00e9p\u00e9ter la lecture d'\u00e9v\u00e8nements pour pouvoir d\u00e9tecter quand l'utilisateur souhaite fermer sa fen\u00eatre.</p> <p>Boucle d'\u00e9v\u00e8nements</p> <p>Une boucle d'\u00e9v\u00e8nements est une boucle qui se r\u00e9p\u00e8te tant qu'un \u00e9v\u00e8nement pr\u00e9cis ne s'est pas produit. A chaque tour de boucle on va lire la totalit\u00e9 des \u00e9v\u00e8nements enregistr\u00e9s dans la file, et on d\u00e9clenchera la sortie de cette boucle si l'\u00e9v\u00e8nement est trouv\u00e9. </p><p> </p> <p>Pour notre exemple, nous allons cr\u00e9er une boucle <code>while</code> d\u00e9pendant d'une variable <code>continuer</code> initialis\u00e9e \u00e0 <code>True</code>, que nous basculerons \u00e0 <code>False</code> lorsque l'\u00e9v\u00e8nement <code>QUIT</code> est intercept\u00e9 :</p> Un code fonctionnel <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\n\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n\npygame.quit()\n</code></pre> <p>Enfin ! Notre fen\u00eatre fonctionne !</p>"},{"location":"Miscellanees/Pygame/Base_pygame/#creation-dune-fenetre-graphique-et-boucle-devenements","title":"Cr\u00e9ation d'une fen\u00eatre graphique et boucle d'\u00e9v\u00e8nements","text":""},{"location":"Miscellanees/Pygame/Base_pygame/#ajout-dimage-de-fond","title":"Ajout d'image de Fond","text":"<p>Image de fond</p> <p>Notre fond noir est un peu d\u00e9primant. Mettons un peu de verdure gr\u00e2ce \u00e0 l'image suivante : </p><p> </p> T\u00e9l\u00e9chargez cette image sous le nom <code>background.jpg</code> puis ajoutez la ligne suivante en ligne 7 : <pre><code>fond = pygame.image.load(\"background.jpg\").convert()\n</code></pre> <p>Bon : mauvaise nouvelle, ce ne sera pas suffisant !</p> <p>La variable <code>fond</code> n'est qu'une r\u00e9f\u00e9rence \u00e0 une <code>Surface</code> de <code>pygame</code>, retourn\u00e9e par la fonction <code>load()</code>. Une <code>Surface</code> est une classe d'objets d\u00e9finie dans <code>pygame</code> qui poss\u00e8de de nombreux attributs et m\u00e9thodes (cf. la doc ). La m\u00e9thode <code>convert()</code> des objets <code>Surface</code> sert \u00e0 convertir l'image source au format utilis\u00e9 par <code>pygame</code>.</p> <p>Le principe d'affichage de la SDL (la sous-couche logicielle g\u00e9rant les images, le son, etc...) est \u00e0 conna\u00eetre pour bien afficher ses images :  <code>fenetre</code> est une surface vide, sur laquelle on va \"coller\", ou \"empiler\" les autres images. Le fond doit donc \u00eatre empil\u00e9 sur la surface vide de la fen\u00eatre, gr\u00e2ce \u00e0 la m\u00e9thode <code>blit()</code>. Cette m\u00e9thode prend une <code>Surface</code> en argument ainsi qu'un tuple repr\u00e9sentant les coordonn\u00e9es du coin sup\u00e9rieur gauche auquel sera coll\u00e9 la <code>Surface</code> argument par rapport \u00e0 la <code>Surface</code> appelante.</p> <p>Syst\u00e8me de coordonn\u00e9es</p> <p>On peut donner comme exemples de tuple de coordonn\u00e9es ceux de l'image suivante : </p><p> </p> <p>On pourrait donc utiliser le code suivant :</p> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\n\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n\npygame.quit()\n</code></pre> Mais pourquoi \u00e7a n'affiche rien ! <p>Parce que quand on <code>blit</code> une <code>Surface</code>, <code>pygame</code> calcule ce qu'il faut mais ne l'ex\u00e9cute pas r\u00e9ellement. Il faut forcer le rafra\u00eechissement de l'\u00e9cran pour y parvenir, par l'interm\u00e9diaire de la commande <code>pygame.display.update()</code>. </p> <p>Comme nous comptons bien faire bouger un personnage sur l'\u00e9cran, et que les mouvements de celui-ci d\u00e9pendront de la boucle d'\u00e9v\u00e8nements, autant mettre imm\u00e9diatement cette commande en fin de boucle, pour que l'image soit syst\u00e9matiquement mise \u00e0 jour. :</p> <p></p><pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nfenetre.blit(fond,(0,0))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n    pygame.display.update()\npygame.quit()\n</code></pre> Et voil\u00e0 ! 15 lignes de code, et nous voil\u00e0 avec une fen\u00eatre graphique digne de ce nom !"},{"location":"Miscellanees/Pygame/Base_pygame/#ajout-du-sprite-du-joueur","title":"Ajout du sprite du joueur","text":"<p>Les sprites</p> ExplicationsCode complet <p>Ajoutons maintenant une nouvelle image, celle repr\u00e9sentant le personnage du joueur. </p><p> </p> Cette image est de dimension \\(100 \\times 100\\), et nous voudrions la placer  tout en bas  de l'\u00e9cran, au centre. Les coordonn\u00e9es de son coin sup\u00e9rieur gauche seront donc \\((\\dfrac{640 - 100}{2} ; 480 - 100)\\). <p>Pour cela, on ajoute hors de la boucle la commande suivante <code>perso = pygame.image.load(\"perso.png\").convert()</code>,  suivie de la commande <code>fenetre.blit(perso,(270,380))</code> (mais apr\u00e8s avoir coll\u00e9 le fond).</p> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert()\nfenetre.blit(fond,(0,0))\nfenetre.blit(perso, (270,380))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n\n    pygame.display.update()\npygame.quit()\n</code></pre> <p>Transparence et canal alpha</p> Canal AlphaCode complet Et les autres formats ? <p>Le r\u00e9sultat est peu probant. En effet nous voyons  un cadre noir autour  sprite du  personnage. Il va donc falloir ajouter de la transparence  \u00e0 cette image.</p> <p>Cette possibilit\u00e9 est offerte par le format <code>png</code>, qui poss\u00e8de un format de couleur bas\u00e9 sur la syst\u00e8me <code>RGB + canal Alpha</code>. Un pixel est donc  repr\u00e9sent\u00e9 par 4 octets :</p> <ul> <li>Les trois premiers pour les canaux <code>RGB</code>, chacun \u00e9tant donc repr\u00e9sent\u00e9 par un nombre entre 0 et 255 ( sommairement 0 repr\u00e9sentant le canal \u00e9teint, et 255 le canal allum\u00e9 au maximum) ;</li> <li>Le dernier octet pour le <code>canal Alpha</code>, qui va repr\u00e9senter le  niveau de transparence du pixel. Ainsi un pixel poss\u00e9dant un <code>canal Alpha</code>  \u00e0 \\(0\\) sera totalement transparent, alors qu'avec une valeur de \\(255\\), il sera totalement opaque.</li> </ul> <p>Pygame est bien entendu capable de g\u00e9rer cette transparence, il suffit d'utiliser  la m\u00e9thode <code>convert_alpha()</code> \u00e0 la place de la m\u00e9thode <code>convert()</code>.</p> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert_alpha()\nfenetre.blit(fond,(0,0))\nfenetre.blit(perso, (270,380))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n\n    pygame.display.update()\npygame.quit()\n</code></pre> <p>Le format <code>png</code> est \u00e0 privil\u00e9gier pour l'utilisation de sprites. cependant il est aussi possible de forcer une couleur d'une image de format quelconque  \u00e0 devenir transparente, gr\u00e2ce \u00e0 la m\u00e9thode <code>set_colorkey()</code> utilis\u00e9e comme dans la ligne suivante :</p> <pre><code>image.set_colorkey((255,255,255))\n</code></pre> <p>Ici on a rendu la couleur blanche (triplet RGB \\((255, 255, 255)\\)) transparente pour l'objet <code>image</code>.</p>"},{"location":"Miscellanees/Pygame/Base_pygame/#deplacement-du-joueur","title":"D\u00e9placement du joueur","text":"<p>Cette partie a pour objectif de vous faire comprendre deux points :</p> <ul> <li>la notion d'objet <code>Rect</code> de <code>pygame</code> ;</li> <li>l'utilisation d'\u00e9v\u00e8nements claviers.</li> </ul> <p>Elle n'est pas formellement correcte, car je n'utilise pas ici de constructeur d'objets et de capteurs d'\u00e9v\u00e8nements. Nous verrons ceci dans la partie suivante.</p> <p>Images et objets <code>Rect</code></p> <p><code>Pygame</code> utilises des objets de type <code>Rect</code> pour stocker et manipuler des surfaces rectangulaires. Un objet de type <code>Rect</code>peut \u00eatre cr\u00e9er par une combinaison de  valeurs <code>left, top, width, height</code> repr\u00e9sentant respectivement l'abscisse du c\u00f4t\u00e9 gauche du rectangle, l'ordonn\u00e9e du c\u00f4t\u00e9 haut du rectangle, sa largeur puis sa hauteur en pixels.</p> <p>Des objets de type <code>Rect</code> peuvent \u00eatre aussi cr\u00e9\u00e9s \u00e0 partir d'autres objets <code>pygame</code> qui sont soit des <code>Rect</code>, soit poss\u00e8dent un attribut nomm\u00e9 <code>rect</code> (ce qui est le cas des images).</p> <p>Un objet de type <code>Rect</code> poss\u00e8de de nombreux attributs d\u00e9finissant la position et la taille de l'objet :</p> <pre><code>x,y\ntop, left, bottom, right\ntopleft, bottomleft, topright, bottomright\nmidtop, midleft, midbottom, midright\ncenter, centerx, centery\nsize, width, height\nw,h\n</code></pre> <p>On peut aussi affecter directement tous ces attributs :</p> <pre><code>rect1.right = 10\nrect2.center = (20,30)\n</code></pre> <p>Affecter \u00e0 <code>size, width, height, w</code> ou <code>h</code> change les dimensions du rectangle. Toute les autres affectations d\u00e9placent le rectangle sans le redimmensionner.</p> <p>Notez que certains attributs sont des entiers (<code>x, y, top, bottom, centerx,...</code>),  et que d'autres sont des tuples d'entiers de dimension 2 ( <code>topleft, bottomright, center,...</code>)</p> <pre><code>Les m\u00e9thodes ou fonctions `Rect` qui changent la position ou la taille\n</code></pre> <p>d'un <code>Rect</code> renvoient une nouvelle copie de ce <code>Rect</code> avec les changements effectu\u00e9s. Le <code>Rect</code> original n'est pas modifi\u00e9.</p> <p>Cependant certaines m\u00e9thodes ont une version in-place  qui retournent <code>None</code> mais  affectent le <code>Rect</code> original. Ces m\u00e9thodes \"in-place\" sont celles pr\u00e9fix\u00e9es par <code>ip_</code>.</p> <p>La liste compl\u00e8te des m\u00e9thodes et des d\u00e9tails est bien s\u00fbr disponible dans  la doc pygame.</p> <p>Les \u00e9v\u00e8nements claviers</p> <p>Lorsque vous coderez une interface graphique, il est probable que vous assignerez des touches clavier aux diff\u00e9rentes actions. Le type d'\u00e9v\u00e9nement cr\u00e9\u00e9 lorsque l'on appuie sur une touche est rep\u00e9r\u00e9 par la constante <code>KEYDOWN</code>, (ou <code>KEYUP</code> au rel\u00e2chement de la touche). Dans la boucle d'\u00e9v\u00e8nement, on pourra alors utiliser une structure conditionnelle telle que</p> <pre><code>if event.type == KEYDOWN:\n</code></pre> <p>Mais attention, cette condition sera vraie quelque soit la touche press\u00e9e ! Pour d\u00e9finir une seule touche du clavier, vous devrez utilisez en plus <code>event.key</code>, qui d\u00e9termine la touche press\u00e9e,  disponible uniquement lors d'un \u00e9v\u00e9nement clavier. Cet <code>event.key</code> peut prendre les valeurs suivantes :</p> <ul> <li>Lettres: <code>K_a ... K_z</code></li> <li>Nombres: <code>K_0 ... K_9</code></li> <li>Contr\u00f4les: <code>K_TAB, K_RETURN, K_ESCAPE,...</code></li> <li>Fl\u00e8ches: <code>K_LEFT, K_UP, K_RIGHT, K_DOWN</code></li> <li>...</li> </ul> <p>La liste compl\u00e8te des constantes est disponible ici</p> <p>D\u00e9placement du sprite de gauche \u00e0 droite</p> Mise en place du codeCode complet <p>Bien maintenant nous savons a peu pr\u00eat quoi faire. Commen\u00e7ons par cr\u00e9er un <code>Rect</code> a partir de l'image du personnage, juste apr\u00e8s la ligne  de cr\u00e9ation de l'image <code>perso</code> :</p> <pre><code>persoRect = perso.get_rect()\n</code></pre> <p>Mais attention, on ne vient que de cr\u00e9er le <code>Rect</code>, et il n'a pas de position d\u00e9finie. On va alors effacer la ligne de <code>blit</code> du personnage, et la remplacer par :</p> <pre><code>persoRect.topleft = (270,380)\n</code></pre> <p>Notre rectangle est ainsi positionn\u00e9 correctement au centre de l'\u00e9cran, en bas.</p> <p>Nous allons modifier ensuite <code>persoRect</code>pour d\u00e9placer le sprite. Nous fixons la vitesse de d\u00e9placement du sprite avec une base de \\(10\\) pixels par tour de boucle.</p> <p>Dans la boucle d'\u00e9v\u00e9nement, nous ajoutons alors les lignes suivantes :</p> <pre><code>if event.type == KEYDOWN  :\n    if event.key == K_LEFT :\n        if persoRect.left&gt;=10 :\n            persoRect = persoRect.move(-10,0)\n    if event.key == K_RIGHT :\n        if persoRect.right&lt;=630 :\n            persoRect = persoRect.move(10,0)\n</code></pre> <p>Nous avons ainsi un d\u00e9placement, mais si vous testez le code \u00e0 ce moment, rien ne se passe.</p> <p>En effet, il ne faut pas oublier de <code>blitter</code> l'image \u00e0 la nouvelle position du <code>Rect</code>. On rajoute donc \u00e0 la fin de la boucle <code>while True</code> la ligne suivante :</p> <pre><code>fenetre.blit(perso, persoRect)\n</code></pre> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert_alpha()\npersoRect = perso.get_rect()\npersoRect.topleft = (270,380)\n\nfenetre.blit(fond,(0,0))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n        if event.type == KEYDOWN  :\n                if event.key == K_LEFT :\n                    if persoRect.left&gt;=10 :\n                        persoRect = persoRect.move(-10,0)\n                if event.key == K_RIGHT :\n                    if persoRect.right&lt;=630 :\n                        persoRect = persoRect.move(10,0)\n\n    fenetre.blit(perso, persoRect)\n    pygame.display.update()\npygame.quit()\n</code></pre> Mais c'est nul ! raisons et correctionsLe code complet <p>Et oui, pour plusieurs raisons : * la page ne se rafra\u00eechit pas totalement, et la trace des anciennes positions du sprite est gard\u00e9e; * il faut r\u00e9-appuyer sur la touche pour re-d\u00e9placer le personnage, le d\u00e9placement n'est pas fluide.</p> <p>Le premier probl\u00e8me vient de la ligne <code>pygame.display.update()</code>,  qui ne change que les pixels modifi\u00e9s par rapport au dernier affichage. Une solution simple consiste \u00e0 forcer l'affichage du fond  avant le blit du sprite :</p> <pre><code>fenetre.blit(fond, (0,0))\nfenetre.blit(perso, persoRect)\n</code></pre> <p>Pour le second probl\u00e8me, une solution simple (mais pas toujours efficace) consiste \u00e0 utiliser la m\u00e9thode <code>set_repeat()</code> du module <code>key</code>,qui prend en param\u00e8tres :</p> <ul> <li>le d\u00e9lai avant de continuer les d\u00e9placements quand la touche reste enfonc\u00e9e (en millisecondes);</li> <li>le temps entre chaque d\u00e9placement. (en millisecondes)</li> </ul> <p>Vous devez donc, apr\u00e8s initialisation de <code>pygame</code> placer la ligne :</p> <pre><code>pygame.key.set_repeat(400, 30)\n</code></pre> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\npygame.key.set_repeat(400, 30)\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert_alpha()\npersoRect = perso.get_rect()\npersoRect.topleft = (270,380)\n\nfenetre.blit(fond,(0,0))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n        if event.type == KEYDOWN  :\n                if event.key == K_LEFT :\n                    if persoRect.left&gt;=10 :\n                        persoRect = persoRect.move(-10,0)\n                if event.key == K_RIGHT :\n                    if persoRect.right&lt;=630 :\n                        persoRect = persoRect.move(10,0)\n    fenetre.blit(fond, (0,0))\n    fenetre.blit(perso, persoRect)\n    pygame.display.update()\npygame.quit()\n</code></pre> Une solution plus \u00e9l\u00e9gante, et plus efficace (mais inutile ici) SolutionLe code de remplacement <p>Le probl\u00e8me de l'utilisation de la m\u00e9thode ci-dessus est qu'il est impossible de traiter des appuis sur des combinaisons de touches, puisqu'une seule touche est repr\u00e9sent\u00e9e par l'attribut <code>event.key</code>.</p> <p>Heureusement, les concepteurs de <code>pygame</code> ont pr\u00e9vu une m\u00e9thode bien plus efficace : la m\u00e9thode <code>get_pressed()</code> du module <code>key</code>, qui renvoie un  dictionnaire de bool\u00e9ens ayant pour cl\u00e9  la constante repr\u00e9sentant la touche, et pour lequel les valeurs <code>True</code> correspondent aux touches actuellement appuy\u00e9es.</p> <p>On peut alors retirer de la boucle d'\u00e9v\u00e8nements toute la partie concernant les appuis de touches, et les remplacer par :</p> <pre><code>dicKeys = pygame.key.get_pressed()\nif dicKeys[K_LEFT] :\n    if persoRect.left&gt;=10 :\n        persoRect = persoRect.move(-10,0)\nif dicKeys[K_RIGHT] :\n    if persoRect.right&lt;=630 :\n        persoRect = persoRect.move(10,0)\n</code></pre> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\npygame.key.set_repeat(400, 30)\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert_alpha()\npersoRect = perso.get_rect()\npersoRect.topleft = (270,380)\n\nfenetre.blit(fond,(0,0))\ncontinuer = True\nwhile continuer :\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n\n    dicKeys = pygame.key.get_pressed()\n    if dicKeys[K_LEFT] :\n        if persoRect.left&gt;=10 :\n            persoRect = persoRect.move(-10,0)\n    if dicKeys[K_RIGHT] :\n        if persoRect.right&lt;=630 :\n            persoRect = persoRect.move(10,0)\n    fenetre.blit(fond, (0,0))\n    fenetre.blit(perso, persoRect)\n    pygame.display.update()\n    pygame.quit()\n</code></pre>"},{"location":"Miscellanees/Pygame/Base_pygame/#creation-dune-classe-dobjets-balle","title":"Cr\u00e9ation d'une classe d'objets \"Balle\"","text":"<p>classe <code>Balle</code></p> InterfaceCode du fichier <code>balle.py</code> <p>Sachant que plusieurs balles vont tomber simultan\u00e9ment, nous allons construire une classe d'objets pour repr\u00e9senter ces balles.</p> <p>Chaque balle sera repr\u00e9sent\u00e9e par une image, qui devra donc \u00eatre associ\u00e9e \u00e0 un rectangle. Chaque balle aura une position, qui sera donn\u00e9e originellement par son centre. Elle aura par ailleurs une vitesse, dont la valeur de d\u00e9part sera tir\u00e9e al\u00e9atoirement entre 1 et 5.</p> <p>Un certain nombre d'actions seront utilis\u00e9es sur ou par cette balle :</p> <ul> <li>elle se d\u00e9placera d'un nombre de pixels \u00e9gal \u00e0 sa vitesse ;</li> <li>on testera sa collision avec le joueur, en renvoyant un bool\u00e9en ;</li> <li>et bien sur on l'affichera dans la fenetre courante.</li> </ul> <p>On repr\u00e9sente donc la classe balle par l'interface suivante : </p><p> </p> <p>Nous impl\u00e9mentons de cette classe dans un fichier <code>balle.py</code>. Le code est donn\u00e9 dans l'onglet ci contre, et ne n\u00e9cessite que peu de commentaires, \u00e0 part pour la m\u00e9thode <code>collision(self,targetRect)</code>.</p> <p>Dans le cadre de ce tutoriel, nous utiliserons la m\u00e9thode <code>colliderect</code> des objets <code>Rect</code>. Cette m\u00e9thode renvoie <code>True</code> si le rectangle de la balle est en collision avec le rectangle pass\u00e9 en argument et <code>False</code> sinon. Deux rectangles sont en collision si ils  ont une partie commune.</p> <p>Pour les amateurs de hitbox plus pr\u00e9cises, il faudra voir du c\u00f4t\u00e9 de la classe <code>Mask</code> de <code>pygame</code>,  qui utilise le canal alpha ou bien une cl\u00e9 colorim\u00e9trique pour d\u00e9tecter des collisions au pixel pr\u00e8s.</p> <pre><code>import pygame\nfrom random import randint\n\nclass Balle :\n    def __init__(self, image, center) :\n\"\"\" Initialisation d'un objet de classe Balle a partir de deux arguments :\n    - image est l'adresse relative ou absolue de l'image voulue pour l'objet ;\n    - center est un tuple de deux entiers donnant la position du centre de la balle lors de\n    sa cr\u00e9ation.\"\"\"\n\n        self. image = pygame.image.load(image).convert_alpha()\n        self.rect = self.image.get_rect()\n        self.rect.center = center\n        self.vitesse = randint(1,5)\n\n    def affiche(self, fenetre) :\n        fenetre.blit(self.image, self.rect)\n\n    def deplace(self) :\n        self.rect = self.rect.move(0,self.vitesse)\n\n\n    def collision(self, targetRect) :\n        return self.rect.colliderect(targetRect)                    \n</code></pre>"},{"location":"Miscellanees/Pygame/Base_pygame/#apparition-des-objets-balle-et-gestion-des-collisions","title":"Apparition des objets <code>Balle</code> et gestion des collisions","text":"<p>\u00c9tablissons les r\u00e8gles</p> <p>On pose les r\u00e8gles suivantes concernant les balles :</p> <ul> <li>elles ne peuvent pas \u00eatre plus de 10 simultan\u00e9ment ;</li> <li>elles sont construites \u00e0 partir de l'image suivante, de dimension \\(50 \\times 50\\) :     <p> </p></li> <li>elles apparaissent avec une abscisse al\u00e9atoire entre 25 et 455 (pour ne pas d\u00e9passer de l'\u00e9cran ;</li> <li>elles disparaissent une fois compl\u00e8tement sorties de l'\u00e9cran ;</li> <li>le jeu s'arr\u00eate et ferme la fen\u00eatre d\u00e8s que le personnage est touch\u00e9 par une balle.</li> </ul> <p>Codons !</p> Descriptionle code complet du fichier <code>dodegTheBall.py</code> <p>Commen\u00e7ons d\u00e9j\u00e0 par importer les objets de types <code>Balle</code> depuis <code>balle.py</code>, et importons aussi au passage la fonction <code>randint</code> du module <code>random</code> dont nous aurons besoin pour les tirages al\u00e9atoires  des positions de d\u00e9part.</p> <pre><code>from balle import Balle\nfrom random import randint\n</code></pre> <p>Les balles existantes seront stock\u00e9es dans une liste python tout ce qui est de plus classique. Nous cr\u00e9ons  donc une variable <code>listeBalles</code> au d\u00e9part vide, juste avant la boucle <code>while continuer :</code>.</p> <pre><code>listeBalles = []\n</code></pre> <p>Ensuite il faut cr\u00e9er un syst\u00e8me d'apparition des balles. Pour cela, dans la boucle <code>while continuer :</code>, nous allons \u00e0 chaque tour de boucle  ajouter une balle, si la longueur de la liste est inf\u00e9rieure \u00e0 10.</p> <p>Mais ce ne sera pas suffisant ! En effet, la boucle tourne tr\u00e8s vite ! Plusieurs centaines de fois voir plusieurs milliers de fois par seconde. Donc dans ce cas, le joueur aurait l'impression que les 10 balles arrivent de mani\u00e8re simultan\u00e9es. Il faut donc introduire un syst\u00e8me permettant de limiter ces apparitions, tout en gardant un c\u00f4t\u00e9 al\u00e9atoire pour le jeu.</p> <p>On utilisera alors les lignes suivantes :</p> <p></p><pre><code>if len(listeBalles)&lt;10 and randint(1,500)&lt;=10 :\n    listeBalles.append(Balle('golfBall.png',(randint(25,455),-25)))\n</code></pre> Les valeurs pr\u00e9sentes dans la condition <code>randint</code> ont \u00e9t\u00e9 test\u00e9e sur mon PC,  mais elles peuvent \u00eatre modifi\u00e9es selon la puissance de votre machine. <p>Voil\u00e0, les objets de type <code>Balle</code> sont cr\u00e9es selon les conditions que nous avons pos\u00e9es au d\u00e9part.</p> <p>Reste \u00e0 les afficher, les d\u00e9placer et les faire dispara\u00eetre le cas \u00e9ch\u00e9ant.</p> <p>Pour les d\u00e9placer et les afficher, pla\u00e7ons nous juste apr\u00e8s le <code>blit</code> de l'image de fond. Nous parcourons alors  la liste des balles et leur appliquons successivement les m\u00e9thodes <code>deplace()</code> et <code>affiche()</code>, en donnant comme argument la fen\u00eatre courante pour l'affichage :</p> <p></p><pre><code> for ball in listeBalles :\n    ball.deplace()\n    ball.affiche(fenetre)\n</code></pre> Probl\u00e8me : nos balles disparaissent de l'\u00e9cran, mais de nouvelles n'apparaissent plus. C'est normal, nous avons satur\u00e9 la variable  <code>listeBalles</code> qui ne peut contenir plus de 10 objets. Il faut donc faire dispara\u00eetre les objets de la liste quand ils sortent de l'\u00e9cran.  <p></p><pre><code> for ball in listeBalles :\n    ball.deplace()\n    if ball.rect.top &gt;= 480 :\n        listeBalles.remove(ball)\n    else :\n        ball.affiche(fenetre)\n</code></pre> Il ne nous reste plus qu'\u00e0 g\u00e9rer la fin du jeu : quand une balle entre en collision avec le joueur, nous basculons la variable <code>continuer</code> \u00e0 <code>False</code> pour arr\u00eater la boucle <code>while</code> : <pre><code> for ball in listeBalles :\n    ball.deplace()\n    if ball.rect.top &gt;= 480 :\n        listeBalles.remove(ball)\n    else :\n        if ball.collision(persoRect) :\n            continuer = False\n        ball.affiche(fenetre)\n</code></pre> <p>Voil\u00e0, le contrat est rempli. Bien entendu ce n'est qu'un d\u00e9but de jeu, et il reste beaucoup de points \u00e0  am\u00e9liorer. Mais vous avez maintenant les bases pour vous permettre de r\u00e9aliser des jeux d'arcades classiques.</p> <pre><code>import pygame\nfrom pygame.locals import *\nfrom balle import Balle\nfrom random import randint\n\npygame.init()\npygame.key.set_repeat(400, 30)\n\nfenetre = pygame.display.set_mode((640, 480))\nfond = pygame.image.load(\"background.jpg\").convert()\nperso = pygame.image.load(\"Perso.png\").convert_alpha()\npersoRect = perso.get_rect()\npersoRect.topleft = (270,380)\nfenetre.blit(fond,(0,0))\n\ncontinuer = True\nlisteBalles =[]\n\nwhile continuer :\n    if len(listeBalles)&lt;10 and randint(1,500)&lt;=10 :\n        listeBalles.append(Balle('golfBall.png',(randint(25,455),-25)))\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            continuer = False\n        if event.type == KEYDOWN  :\n            if event.key == K_LEFT :\n                if persoRect.left&gt;=10 :\n                    persoRect = persoRect.move(-10,0)\n            if event.key == K_RIGHT :\n                if persoRect.right&lt;=630 :\n                    persoRect = persoRect.move(10,0)\n\n    fenetre.blit(fond, (0,0))\n    for ball in listeBalles :\n        ball.deplace()\n        if ball.rect.top &gt;= 480 :\n            listeBalles.remove(ball)\n        else :\n            if ball.collision(persoRect) :\n                continuer = False\n            ball.affiche(fenetre)\n\n    fenetre.blit(perso, persoRect)\n    pygame.display.update()\n    pygame.time.wait(10)\npygame.quit()\n</code></pre>"},{"location":"Miscellanees/Pygame/InstallationPygame/","title":"Installation","text":""},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-de-pygame-dans-thonny","title":"Installation de Pygame dans Thonny","text":""},{"location":"Miscellanees/Pygame/InstallationPygame/#cest-quoi-pygame","title":"C'est quoi Pygame","text":"<p><code>Pygame</code>Pygame est une biblioth\u00e8que (= un ensemble de modules),  libre, multiplate-forme, qui facilite le d\u00e9veloppement de jeux vid\u00e9o temps r\u00e9el avec le langage de programmation Python. </p> <p>\"Construite sur la biblioth\u00e8que SDL, elle permet de programmer la partie multim\u00e9dia (graphismes, son et entr\u00e9es au clavier, \u00e0 la souris ou au joystick), sans se heurter aux difficult\u00e9s des langages de bas niveaux comme le C et ses d\u00e9riv\u00e9s. Cela se fonde sur la supposition que la partie multim\u00e9dia, souvent la plus contraignante \u00e0 programmer dans un tel jeu, est suffisamment ind\u00e9pendante de la logique m\u00eame du jeu pour qu'on puisse utiliser un langage de haut niveau (en l'occurrence le Python) pour la structure du jeu.</p> <p>Pygame, en plus d'adapter la SDL au Python, fournit \u00e9galement un petit nombre de fonctions sp\u00e9cifiques au d\u00e9veloppement de jeux.</p> <p>On peut aussi remarquer que Pygame n'est plus utilis\u00e9e exclusivement pour des jeux vid\u00e9o, mais \u00e9galement pour des applications diverses n\u00e9cessitant du graphisme. \" wikipedia.</p> <p>Depuis Octobre 2020, apr\u00e8s 20 ans d'existence,<code>pygame</code> est pass\u00e9 en version 2, et c'est une tr\u00e8s bonne nouvelle !</p>"},{"location":"Miscellanees/Pygame/InstallationPygame/#ou-trouver-de-la-documentation","title":"O\u00f9 trouver de la documentation ?","text":"<p>La documentation en fran\u00e7ais de <code>Pygame</code> est \u00e0 la fois assez limit\u00e9e (il n'y a pas un site de r\u00e9f\u00e9rence) et en m\u00eame temps tr\u00e8s touffue (on trouve des dizaines de vid\u00e9os tutorielles sur Youtube).</p> <p>On trouvera cependant l'excellent tutoriel situ\u00e9 autrefois sur le site du z\u00e9ro (c'est une copie de mauvaise qualit\u00e9 graphique, mais le document en lui m\u00eame est excellent).</p> <p>Pour les plus anglophones d'entre-vous (mais vous l'\u00eates tous \ud83d\ude1b ), vous trouverez toutes les informations n\u00e9cessaires dans la documentation de pygame.</p>"},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-du-module-dans-thonny","title":"Installation du module dans Thonny","text":"<p>How to </p> <p>Dans Thonny, ouvrez le menu <code>Tools</code> puis <code>Manage Packages</code> : </p><p> </p> <p>Dans la nouvelle fen\u00eatre, tapez <code>pygame</code> puis <code>Search on PyPI</code> : </p><p> </p> <p>S\u00e9lectionnez le module <code>pygame</code> dans la fen\u00eatre de r\u00e9sultats : </p><p> </p> <p>Cliquez enfin sur <code>Install</code> : </p><p> </p> <p>Une fois ces manipulations termin\u00e9es, vous pouvez tester l'installation de <code>Pygame</code> dans le shell de <code>Thonny</code>. Si vous avez un message de bienvenue tel que dans l'image ci-contre, <code>Pygame</code> est install\u00e9. Sinon vous devriez recommencer l'installation, ou bien chercher l'erreur rencontr\u00e9e sur StackOverflow. </p><p> </p>"},{"location":"Miscellanees/Pygame/InstallationPygame/#installation-hors-de-thonny","title":"Installation hors de Thonny","text":"<p>Si vous n'utilisez pas d'environnements virtuel python (c'est une tr\u00e8s mauvaise id\u00e9e), vous pouvez toujours utiliser la commande suivante pour installer <code>pygame</code> :</p> <pre><code>python3 -m pip install pygame\n</code></pre> <p>Si vous utilisez un venv python, vous savez d\u00e9j\u00e0 probablement quoi faire !</p>"},{"location":"Miscellanees/Pyodide-mkdocs/Pyodide-mkdocs/","title":"Installation de Pyodide-mkdocs","text":""},{"location":"Miscellanees/Pyodide-mkdocs/Pyodide-mkdocs/#installation-de-pyodide-mkdocs","title":"Installation de Pyodide-mkdocs","text":"<p>Depuis https://bouillotvincent.gitlab.io/pyodide-mkdocs/, suivre \u00e0 la lettre le tutoriel.</p> <p>Modifier <code>main.py</code> :</p> <ul> <li>ajouter <code>from math import log10</code></li> <li>ajouter <code>MAX_EMPTY_IDE = 10</code> \u00e0 <code>define_env</code></li> <li>ajouter <code>import hashlib</code></li> <li>dans <code>read_ext_file</code>, changer <code>docs_path = f\"\"\"docs\"\"\"</code></li> <li> <p>changement dans :</p> <p><code>python  path_file = '/'.join(filter(lambda folder: folder != \"\", convert_url_to_utf8(env.variables.page.abs_url).split('/')[1:-2])) #Changer le 2 en 1</code> * changement dans </p> <pre><code>if path == \"\":\n    print(f\"Try to open {docs_path}/{nom_script}.{filetype}\") # suppression de /scripts/\n    f = open(f\"\"\"{docs_path}/{nom_script}.{filetype}\"\"\")\n</code></pre> </li> <li> <p>Plein de hacks pour les boutons :</p> <p>```` pythonlen_path = len(convert_url_to_utf8(env.variables.page.abs_url).split('/'))     fix_url = env.macros.fix_url     if len_path&gt; 1 :         path_img = \"/\"+'../'*(len(convert_url_to_utf8(env.variables.page.abs_url).split('/'))-3)     else :          path_img =\"\"     if '127.0.0.1' not in env.variables.config['site_url'] :         path_img = fix_url(path_img)     path_file = '/'.join(filter(lambda folder: folder != \"\",        convert_url_to_utf8(env.variables.page.abs_url).split('/')[1:-2])) </p><pre><code>et \n\n```` python\ndiv_edit += tooltip_button(f\"\"\"'interpretACE(\"editor_{tc}\",\"{mode}\")'\"\"\", f\"\"\"&lt;img src=\"{path_img}images/buttons/icons8-play-64.png\"&gt;&lt;span class=\"tooltiptext\"&gt;Lancer&lt;/span&gt;\"\"\")\n    div_edit += create_unittest_button(tc, nom_script, path_file, mode, MAX) + blank_space(1)\n    div_edit += tooltip_button(f\"\"\"\\'downloadFile(\"editor_{tc}\",\"{nom_script}\")\\'\"\"\", f\"\"\"&lt;img src=\"{path_img}images/buttons/icons8-download-64.png\"&gt;&lt;span class=\"tooltiptext\"&gt;T\u00e9l\u00e9charger&lt;/span&gt;\"\"\")+ blank_space()\n    div_edit += create_upload_button(tc) + blank_space(1)\n    div_edit += tooltip_button(f\"\"\"\\'reload(\"{tc}\")\\'\"\"\", f\"\"\"&lt;img src=\"{path_img}images/buttons/icons8-restart-64.png\"&gt;&lt;span class=\"tooltiptext\"&gt;Recharger&lt;/span&gt;\"\"\") + blank_space()\n    div_edit += tooltip_button(f\"\"\"\\'saveEditor(\"{tc}\")\\'\"\"\", f\"\"\"&lt;img src=\"{path_img}images/buttons/icons8-save-64.png\"&gt;&lt;span class=\"tooltiptext\"&gt;Sauvegarder&lt;/span&gt;\"\"\")\n    div_edit += '&lt;/div&gt;'\n</code></pre> <p> NE PAS OUBLIER DE CHANGER POUR TESTS ET UPLOAD </p> </li> </ul>"},{"location":"Miscellanees/Securite/Securite_MDP/","title":"S\u00e9cuisation des mots de passes","text":""},{"location":"Miscellanees/Securite/Securite_MDP/#secuisation-des-mots-de-passes","title":"S\u00e9cuisation des mots de passes","text":""},{"location":"Miscellanees/Securite/Securite_MDP/#un-constat-vitesse-de-craquage-des-mots-de-passe","title":"Un constat : vitesse de craquage des mots de passe","text":"###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder"},{"location":"NSI/Premiere/C01/Bases_Python_1/","title":"Variables et affectations","text":""},{"location":"NSI/Premiere/C01/Bases_Python_1/#objets-variables-et-affectation","title":"Objets, variables et affectation","text":"<p>Ce cours est accompagn\u00e9 d'un notebook Capytale disponible aux \u00e9l\u00e8ves disposant d'un compte Toutatice.</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#types-de-base","title":"Types de base","text":""},{"location":"NSI/Premiere/C01/Bases_Python_1/#objets-et-types-de-base","title":"Objets et types de base","text":"<p>Le principe d'un programme est de manipuler des donn\u00e9es avec des instructions afin de produire de nouvelles donn\u00e9es.</p> <p>En Python, des donn\u00e9es sont appel\u00e9es des objets, et tout ce qui est manipulable est un objet.</p> <p>Tester les objets</p> Test1Test2Test3Test4Une astuce <p>Ex\u00e9cuter la commande suivante dans le terminal ci-dessous :</p> <pre><code>5 / 3\n</code></pre> <p>Ex\u00e9cuter la commande suivante dans le terminal ci-dessous :</p> <pre><code>\"abra\"+\"cadabra\"\n</code></pre> <p>Ex\u00e9cuter la commande suivante dans le terminal ci-dessous :</p> <pre><code>5&lt;9\n</code></pre> <p>Ex\u00e9cuter la commande suivante dans le terminal ci-dessous :</p> <pre><code>4.5 + \"3.2\"\n</code></pre> <p>Dans un terminal, la seule ligne active est celle du prompt, c'est-\u00e0-dire la derni\u00e8re marqu\u00e9e par les chevrons <code>&gt;&gt;&gt;</code>. On ne peut pas r\u00e9-ex\u00e9cuter une ligne d\u00e9j\u00e0 tap\u00e9e. Cependant, il est possible de r\u00e9cup\u00e9rer une telle ligne, gr\u00e2ce \u00e0 l'historique de commande obtenu en utilisant les fl\u00e8ches de direction Up et Down</p> <p></p>&gt;&gt;&gt;  <p>Par exemple, dans le code suivant :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>7+5bksl-nl4.2+4.6bksl-nl453py-str12bksl-nl12-5bksl-nl</p> <p>Lorsqu'on ex\u00e9cute ce code, on cr\u00e9e 4 objets diff\u00e9rents, pr\u00e9sents dans ce qu'on appelle l'espace des objets. </p> <p>Cependant l'ex\u00e9cution du script ne renvoie aucune donn\u00e9e (aucun objet). En effet, un m\u00e9canisme existant dans presque tous les langages de programmation, appel\u00e9 garbage collector (soit collecteur d'ordure), nettoie automatiquement tout objet non utilis\u00e9. La m\u00e9moire de l'ordinateur \u00e9tant limit\u00e9e physiquement, il est n\u00e9cessaire de nettoyer tr\u00e8s r\u00e9guli\u00e8rement (plusieurs centaines de fois par seconde), afin de garantir le bon fonctionnement de la machine. Le garbage collector a donc supprim\u00e9 les objets <code>12</code>, <code>8.8</code>, <code>5436</code> et <code>7</code>.</p> <p>Regardons plus pr\u00e9cis\u00e9ment ces objets, en demandant \u00e0 Python gr\u00e2ce \u00e0 l'instruction built-in <code>type()</code> la nature des objets cr\u00e9\u00e9s.</p> <p>Les types d'objets</p> <p>Dans la console ci-dessous, testez une par une les commandes suivantes :</p> Test 1Test 2Test 3Test 4 <pre><code>type(\"Abracadabra\")\n</code></pre> <pre><code>type(True)\n</code></pre> <pre><code>type(5)\n</code></pre> <pre><code>    type(4.5)\n</code></pre> <p></p>&gt;&gt;&gt;  Une erreur ? <p>Si vous avez fait un copi\u00e9-coll\u00e9 du Test 4 pr\u00e9c\u00e9dent, vous avez obtenu une erreur telle que celle ci-dessous :</p> <p></p><pre><code>&gt;&gt;&gt;     type(4.5)\n\nFile \"&lt;console&gt;\", line 1\n    type(4.5)\n    ^\nIndentationError: unexpected indent\n</code></pre> Il s'agit d'une erreur d'indentation, ce qui signifie que le code <code>type(4.5)</code> est d\u00e9cal\u00e9 par rapport au d\u00e9part de ligne. Ici, il y a 4 espaces devant, ce qui est obtenu en g\u00e9n\u00e9ral en appuyant sur la touche Tab dans les consoles Python ainsi que dans les principaux \u00e9diteurs. Il s'agit d'une erreur d'indentation, ce qui signifie que le code <code>type(4.5)</code> est d\u00e9cal\u00e9 par rapport au d\u00e9part de ligne. Ici, il y a 4 espaces devant, ce qui est obtenu en g\u00e9n\u00e9ral en appuyant sur la touche Tab dans les consoles Python ainsi que dans les principaux \u00e9diteurs.  <p>Types de bases et objets sp\u00e9cifiques</p> <p>Les types basiques de Python sont donc les suivants :</p> <ul> <li>le type <code>int</code> : qui permet de manipuler des nombres entiers relatifs, de \\(-2.10^{9}\\) \u00e0 \\(+2.10^9\\) (mais la plage pouvant \u00eatre \u00e9tendue, en pratique on ne s'int\u00e9resse pairs en python aux limites des entiers) ;</li> <li>le type <code>float</code> : qui permet de manipuler des nombres d\u00e9cimaux \u00e0 \\(32\\) bits (s'\u00e9crivant avec 32 chiffres binaires) entre \\(-10^{302}\\) et \\(+10^{302}\\) (avec quelques subtilit\u00e9s, que nous verrons dans le chapitre correspondant au codage des nombres flottants);</li> <li>le type <code>str</code> : qui permet de manipuler des cha\u00eenes de caract\u00e8res ;</li> <li>le type <code>bool</code> : qui permet de manipuler des valeurs bool\u00e9ennes, c'est \u00e0 dire vraies ou fausses, utilis\u00e9es par d\u00e9faut dans les instructions n\u00e9cessitant une condition (<code>if</code> ou <code>while</code> par exemple).</li> </ul> <p>Chacun de ces types poss\u00e8de des op\u00e9rations qui lui sont propres. Elles sont nombreuses, et largement document\u00e9es dans la doc Python 3 officielle, en suivant le lien ci contre : Doc Python 3 en fran\u00e7ais.</p> <p>Il existe aussi des constantes sp\u00e9cifiques, c'est-\u00e0-dire des objets sp\u00e9ciaux, comme par exemple <code>None</code>, qui est un objet sans type, signifiant une absence de valeur.</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#nommage-des-objets-et-affectations","title":"Nommage des objets et affectations","text":"<p>Bien entendu, de mani\u00e8re quasi obligatoire, il est n\u00e9cessaire de conserver des objets et d'\u00e9viter que ceux-ci disparaissent avec le garbage collector.</p> <p>Pour cela, on va associer \u00e0 chaque objet un nom dans l'espace de nom, gr\u00e2ce \u00e0 l'op\u00e9ration d'affectation <code>=</code>, comme par exemple <code>un_inconnu = \"Toto\"</code>. Ici le nom de variable <code>un_inconnu</code> est associ\u00e9 \u00e0 l'objet de type cha\u00eene de caract\u00e8re <code>\"Toto\"</code>. </p> <p>Une fois un objet associ\u00e9 \u00e0 un nom, il n'est plus ramass\u00e9 automatiquement par le garbage collector, et peut \u00eatre rappel\u00e9 plus tard dans le code en utilisant son nom.</p> <p>Exemple</p> <p>Ex\u00e9cutez le code suivant, puis testez dans la console \u00e0 droite le type des objets suivants, en utilisant leur nom.</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegardermonpy-undentier = 5bksl-nllepy-undvraipy-undhero = \"Dark\"bksl-nlestpy-undactif = Truebksl-nlmonpy-undflottant = 3.2bksl-nlcpy-undestpy-undlui = \"Vador\"bksl-nl <p>Testez ensuite chacune des propositions ci-dessous. Pour chacune d'entre elles, expliquez ce qui se passe.</p> 1234567 <pre><code>mon_entier**2\n</code></pre> <pre><code>le_vrai_hero+c_est_lui\n</code></pre> <pre><code>mon_flottant if est_actif else mon_entier\n</code></pre> <pre><code>mon_flottant if not(est_actif) else mon_entier\n</code></pre> <pre><code>type(mon_flottant*mon_entier)\n</code></pre> <pre><code>mon_entier == mon_flottant\n</code></pre> <pre><code>le_vrai_hero*10\n</code></pre> <p>Comprendre l'affectation</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re le code suivant : </p><pre><code>a = 5\nb = 4.2\nc = a+b\na*c\na = a*3\nb = 42\n</code></pre> <p>Compl\u00e9ter le tableau d'\u00e9tat des variables suivants en ex\u00e9cutant le programme \u00e0 la main, puis v\u00e9rifier dans la console :</p> \\[ \\begin{array}{|c|c|c|} \\hline a &amp; b &amp; c\\\\\\hline \\phantom{BBB} &amp; \\phantom{BBB} &amp; \\phantom{BBB}\\\\\\hline \\phantom{BBB} &amp; \\phantom{BBB} &amp; \\phantom{BBB}\\\\\\hline \\phantom{BBB} &amp; \\phantom{BBB} &amp; \\phantom{BBB}\\\\\\hline \\phantom{BBB} &amp; \\phantom{BBB} &amp; \\phantom{BBB}\\\\\\hline \\end{array} \\] <p></p> <p>R\u00e8gles de nommage des variables</p> <p>Le nom donn\u00e9 \u00e0 l'objet peut \u00eatre n'importe lequel, en respectant les r\u00e8gles imp\u00e9ratives suivantes :</p> <ul> <li>Un nom de variable est une s\u00e9quence de lettres, de chiffres, qui ne doit pas commencer par un chiffre.</li> <li>La casse est significative (les caract\u00e8res majuscules et minuscules sont distingu\u00e9s). Donc <code>Joseph</code>, <code>joseph</code>, et <code>JOSEPH</code> sont des variables diff\u00e9rentes.</li> <li>Les \u00ab mots r\u00e9serv\u00e9s \u00bb du langage sont d\u00e9j\u00e0 pris (ex : <code>type()</code>, <code>float</code>, <code>str</code>...). Il s'agit des instructions de bases et des fonctions natives ( voir ici ). Si vous nommez une variable comme un de ces mots, vous ne pourrez plus utiliser la fonctionnalit\u00e9 du mot r\u00e9serv\u00e9. </li> </ul> Pour les cracks <p>Il faut \u00e9galement noter que les variables dont le nom commence par le caract\u00e8re <code>_</code> ont une signification particuli\u00e8re :</p> <ul> <li>les noms commen\u00e7ant par un <code>_</code> ne sont pas export\u00e9s lorsqu'ils se trouvent dans un module ;</li> <li>les noms commen\u00e7ant par deux <code>_</code> et finissant par deux <code>_</code> sont r\u00e9serv\u00e9s par le langage lui m\u00eame, notamment pour la programmation orient\u00e9e objet.</li> </ul> <p>Ces deux points ci-dessus sont juste des indications pour l'instant, ils seront vu dans le futur, en particulier en terminale.</p> <p>Conventions de nommage et PEP8</p> <p>Il existe quelques r\u00e8gles de \"bien nommage\" des variables, d\u00e9finies dans ce qu'on appelle la PEP8, c'est-\u00e0-dire une description des bonnes pratiques d'\u00e9criture en Python. La PEP8 donne les conventions principales, qui permettent de lire plus facilement le code fourni par un\u00b7e autre codeur\u00b7euse. Les principales recommandations sont :</p> <ul> <li>Ne jamais utiliser les caract\u00e8res \"l\" (L minuscule), \"O\" (o majuscule), ou \"I\" (i majuscule) seuls comme nom de variables. Dans certaines polices, ces caract\u00e8res sont impossibles \u00e0 distinguer des num\u00e9riques un et z\u00e9ro. Lorsque vous \u00eates tent\u00e9\u00b7e d\u2019utiliser \"l\", utilisez \"L\" \u00e0 la place.</li> <li>Il est recommand\u00e9 d'\u00e9crire les noms de variables en minuscule. Si le nom de variable doit contenir plusieurs mots, on conseille d'\u00e9crire en snake_case, c'est-\u00e0-dire en s\u00e9parant les mots par le caract\u00e8re <code>_</code>. Exemple : <code>marge_brut</code>.</li> <li>Il convient aussi d'\u00e9viter autant que possible l'\u00e9num\u00e9ration de variables (<code>toto1</code>, <code>toto2</code>, <code>toto3</code>, ...), cela rend le programme parfaitement incompr\u00e9hensible et sujet \u00e0 des erreurs.</li> <li>De mani\u00e8re g\u00e9n\u00e9rale, il convient de suivre aussi strictement que possible les r\u00e8gles \u00e9dict\u00e9es par la Python Software Foundation \u00e0 travers les normes PEP.</li> </ul>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#exercices-daffectation","title":"Exercices d'affectation","text":"<ol> <li> <p>\u00c9crire un code qui affecte l'objet <code>15</code> de type <code>int</code>  \u00e0 une variable nomm\u00e9 <code>valeur</code>, puis ex\u00e9cuter l'instruction <code>valeur*4</code>.</p> <p></p>###Lancerbenchmark = ['valeur == 15', 'valeurpy-str4 == 60']bksl-nl Valider                5/5                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderbksl-nl </li> <li> <p>\u00c9crire un code qui affecte l'objet <code>\"15\"</code> de type <code>str</code>  \u00e0 une variable nomm\u00e9 <code>texte</code>, puis ex\u00e9cuter l'instruction <code>texte*4</code>.</p> <p></p>###Lancerbenchmark = ['texte == \"15\"']bksl-nl Valider                5/5                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderbksl-nl </li> <li> <p>Compl\u00e9ter le code suivant afin que les objets des variables <code>a</code> et <code>b</code> soient invers\u00e9s, SANS UTILISER D'AFFECTATIONS DE NOMBRES, et sans toucher la valeur de <code>c</code>.</p> <p></p>###Lancerbenchmark = ['a == 200 and b == 10 and c == 4000']bksl-nl Valider                5/5                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegardera = 10bksl-nlb = 200bksl-nlc = 4000bksl-nl </li> <li> <p>\u00c9crivez un code qui permute les objets des variables <code>a</code>, <code>b</code> et <code>c</code> ( l'objet de <code>a</code> est affect\u00e9 \u00e0 <code>b</code>, l'objet de <code>b</code> est affect\u00e9 \u00e0 <code>c</code> et l'objet de <code>c</code> est affect\u00e9 \u00e0 <code>a</code>) sans utiliser de valeurs num\u00e9riques.</p> <p></p>###Lancerbenchmark = ['b = 10 and c = 200 and a = 4000']bksl-nl Valider                5/5                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegardera = 10bksl-nlb = 200 bksl-nlc = 4000bksl-nl </li> </ol>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#operations-sur-les-objets","title":"Op\u00e9rations sur les objets","text":""},{"location":"NSI/Premiere/C01/Bases_Python_1/#types-numeriques-et-operations","title":"Types num\u00e9riques et op\u00e9rations","text":"<p>Pour les types num\u00e9riques, <code>int</code> et <code>float</code> (et pour le type <code>complex</code>, mais qui n'est pas vu en maths avant la terminale ), on trouve toutes les op\u00e9rations classiques. </p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#addition-entiere","title":"Addition enti\u00e8re","text":"<pre><code>&gt;&gt;&gt; 5 + 2 #Addition enti\u00e8re\n7\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#addition-flottante","title":"Addition flottante","text":"<pre><code>&gt;&gt;&gt; 5.6 + 3.4 # Addition flottante ( Quel est le type du r\u00e9sultat ?)\n9.0\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#addition-mixte","title":"Addition mixte","text":"<pre><code>&gt;&gt;&gt; 5 + 3.4 # Addition entre un entier et un flottant ( Quel est le type du r\u00e9sultat ?)\n8.4\n</code></pre> <p>Attention avec les flottants</p> <p>Testez dans la console ci-dessous l'instruction suivante <code>0.1 + 0.2</code>. Qu'obtient-on ?</p> <p></p>&gt;&gt;&gt;"},{"location":"NSI/Premiere/C01/Bases_Python_1/#soustractions","title":"Soustractions","text":"<pre><code>&gt;&gt;&gt; 3.2-4 #Soustraction ( A tester de la m\u00eame mani\u00e8re)\n-0.79999999999\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#multiplication","title":"Multiplication","text":"<pre><code>&gt;&gt;&gt; 4*8.5 #Multiplication ( idem)\n34.0\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#division-flottante","title":"Division flottante","text":"<pre><code>&gt;&gt;&gt; 1/3 #Division\n0.3333333333333333\n</code></pre> <p>Attention ! Au r\u00e9sultat ci-dessous, le type obtenu est <code>float</code>, m\u00eame si le dividende et le diviseur sont entiers et que le r\u00e9sultat \u00ab tombe juste \u00bb... </p> <pre><code>&gt;&gt;&gt; 4/2\n2.0\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#division-euclidienne","title":"Division Euclidienne","text":"<pre><code>&gt;&gt;&gt; 72//5 #Quotient de la division euclidienne\n14\n</code></pre> <p>Ici par contre le r\u00e9sultat est bien de type <code>int</code> (A tester aussi...)</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#reste-de-la-division-euclidienne","title":"Reste de la Division Euclidienne","text":"<pre><code>&gt;&gt;&gt; 72%5 #reste de la division euclidienne ( ou modulo).\n2\n</code></pre> <p>C'est un point important en informatique, nous avons souvent besoin du reste, aussi appel\u00e9 modulo. Par exemple pour savoir si un nombre entier est pair, on utilise :</p> <pre><code>&gt;&gt;&gt; 23%2 == 0 \nFalse\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#puissances","title":"Puissances","text":"<pre><code>&gt;&gt;&gt; 10**7 #Puissance\n10000000\n</code></pre> <p>Op\u00e9rations avec les noms des objets</p> <p>Tourtes les op\u00e9rations faites avec les objets ci-dessus peuvent \u00eatre effectu\u00e9es directement sur les noms si ils existent :</p> <pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; b = 2\n&gt;&gt;&gt; a + b\n7\n&gt;&gt;&gt; a%b\n1\n</code></pre> <p>Vous pouvez tester ces \u00e9l\u00e9ments dans le terminal ci-dessous :</p> &gt;&gt;&gt;"},{"location":"NSI/Premiere/C01/Bases_Python_1/#types-str-chaines-de-caracteres-et-operations","title":"Types <code>str</code> (chaines de caract\u00e8res) et op\u00e9rations","text":""},{"location":"NSI/Premiere/C01/Bases_Python_1/#declarations","title":"D\u00e9clarations","text":"<p>Une cha\u00eene de caract\u00e8re doit \u00eatre d\u00e9clar\u00e9e :</p> <ul> <li>soit entre une paire de guillemets simples (simple quote) : <code>'Toto'</code> ;</li> <li>soit entre une paire de guillemets doubles (double quote) : <code>\"Toto\"</code>.</li> </ul> <p>L'utilisation de l'un ou de l'autre n'a pas d'importance, mais on peut rapidement se tromper selon le contenu de la cha\u00eene :</p> <p>Tester les cha\u00eenes de caract\u00e8res</p> <p>Tester les cha\u00eenes suivantes dans le terminal ci-dessous:</p> 123456 <pre><code>texte = \"Hello World !\"\n</code></pre> <pre><code>texte = 'Hello World !'\n</code></pre> <pre><code>texte = \"Salut l'ami !\"\n</code></pre> <pre><code>texte = 'Salut l'ami !'\n</code></pre> <pre><code>texte = 'Alors l\u00e0 je dis : \"Non !\"'\n</code></pre> <pre><code>texte = \"Alors l\u00e0 je dis : \"Non !\"\"\n</code></pre> <p></p>&gt;&gt;&gt;  <p>Normalement, une cha\u00eene de caract\u00e8re, quelle que soit sa longueur, n'est consid\u00e9r\u00e9e \u00eatre que sur une seule et unique ligne. Il est cependant possible d'avoir des cha\u00eenes de caract\u00e8res multi-lignes, \u00e0 condition de les d\u00e9clarer entre trois paires de guillemets identiques :</p> <pre><code>&gt;&gt;&gt; zen = \"\"\"\nPr\u00e9f\u00e8re :\n      la beaut\u00e9 \u00e0 la laideur,\n      l'explicite \u00e0 l'implicite,\n      le simple au complexe\n      et le complexe au compliqu\u00e9,\n      le d\u00e9roul\u00e9 \u00e0 l'imbriqu\u00e9,\n      l'a\u00e9r\u00e9 au compact.\nPrends en compte la lisibilit\u00e9.\nLes cas particuliers ne le sont jamais assez pour violer les r\u00e8gles.\nMais, \u00e0 la puret\u00e9, privil\u00e9gie l'aspect pratique.\nNe passe pas les erreurs sous silence,\n... ou b\u00e2illonne-les explicitement.\nFace \u00e0 l'ambigu\u00eft\u00e9, \u00e0 deviner ne te laisse pas aller.\nSache qu'il ne devrait [y] avoir qu'une et une seule fa\u00e7on de proc\u00e9der,\nm\u00eame si, de prime abord, elle n'est pas \u00e9vidente, \u00e0 moins d'\u00eatre N\u00e9erlandais.\nMieux vaut maintenant que jamais.\nCependant jamais est souvent mieux qu'imm\u00e9diatement.\nSi l'impl\u00e9mentation s'explique difficilement, c'est une mauvaise id\u00e9e.\nSi l'impl\u00e9mentation s'explique ais\u00e9ment, c'est peut-\u00eatre une bonne id\u00e9e.\nLes espaces de nommage ! Sacr\u00e9e bonne id\u00e9e ! Faisons plus de trucs comme \u00e7a. \n\"\"\"\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#indice-dun-caractere","title":"Indice d'un caract\u00e8re","text":"<p>Chaque caract\u00e8re d'une cha\u00eene est rep\u00e9r\u00e9 par son indice, c'est-\u00e0-dire par un num\u00e9ro donnant sa position. Attention toutefois,en informatique, les indices commencent \u00e0 0 dans quasiment tous les langages !</p> <p>Ainsi :</p> <p></p> <p>Dans la cha\u00eene pr\u00e9c\u00e9dente, <code>\"P\"</code> \u00e0 pour indice 0, <code>\"y\"</code> a pour indice 1 et <code>\"n\"</code> a pour indice 5.</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#acces-a-un-caractere-par-son-indice","title":"Acc\u00e8s \u00e0 un caract\u00e8re par son indice","text":"<p>Les crochets</p> <p>Vous utiliserez beaucoup les crochets en Python, pour les obtenir sur un clavier AZERTY :</p> <ul> <li><code>[</code> s'obtient par AltGr+[ ;</li> <li><code>]</code> s'obtient par AltGr+] ;</li> </ul> <p>On utilise l'indice entre crochets, juste apr\u00e8s la cha\u00eene de caract\u00e8re.</p> <pre><code>&gt;&gt;&gt; \"Python\"[3]\n'h'\n</code></pre> <p>Si la cha\u00eene est associ\u00e9e \u00e0 un nom :</p> <p></p><pre><code>&gt;&gt;&gt; texte = \"DarkVador\"\n&gt;&gt;&gt; texte[4]\n'V'\n</code></pre> Attention, si on cherche un indice qui n'existe pas, on a l'erreur suivante : <pre><code>&gt;&gt;&gt; \"Abcdefg\"[10]\nTraceback (most recent call last):\n    File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: string index out of range\n</code></pre> <p>Cependant il est aussi possible de parcourir une cha\u00eene \u00e0 l'envers :</p> <pre><code>&gt;&gt;&gt; \"Python\"[-1]\n'n'\n&gt;&gt;&gt; \"Python\"[-3]\n'h'\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#longueur-dune-chaine","title":"Longueur d'une cha\u00eene","text":"<p>La longueur de la cha\u00eene <code>\"Python\"</code>, c'est-\u00e0-dire le nombre de caract\u00e8res qui la composent,  est par contre bien de 6, et on peut y acc\u00e9der gr\u00e2ce \u00e0 la fonction built-in <code>len()</code>.</p> <pre><code>&gt;&gt;&gt; len(\"Python\")\n6\n</code></pre> <p>La longueur d'une cha\u00eene vide est 0 :</p> <pre><code>&gt;&gt;&gt; len(\"\")\n0\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#concatenation","title":"Concat\u00e9nation","text":"<p>La concat\u00e9nation est l'op\u00e9ration consistant \u00e0 accoler deux cha\u00eenes de caract\u00e8res :</p> <pre><code>&gt;&gt;&gt; \"Toto\"+\"Tata\" \n'TotoTata'\n</code></pre> <p>On peut aussi concat\u00e9ner une cha\u00eene avec elle-m\u00eame \u00e0 plusieurs reprises :</p> <pre><code>&gt;&gt;&gt; \"Toto\"*5\n'TotoTotoTotoTotoToto'\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#methodes-des-chaines-de-caracteres","title":"M\u00e9thodes des cha\u00eenes de caract\u00e8res","text":"<p>Le type <code>str</code> poss\u00e8de lui aussi ses propres fonctionnalit\u00e9s ( ou m\u00e9thodes) qui permettent de transformer ou modifier une cha\u00eene de caract\u00e8re. Parmi celles-ci, en voici quelques une utiles :</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#substitution-dune-sous-chaine-par-une-autre","title":"Substitution d'une sous-cha\u00eene par une autre","text":"<pre><code>&gt;&gt;&gt; \"abracadabra\".replace(\"bra\",\"BRUHHH\") \n\"'aBRUHHHcadaBRUHHH'\"\n</code></pre> <p>On utilise ici la m\u00e9thode <code>replace</code> sur la cha\u00eene de caract\u00e8re <code>\"abracadabra\"</code>, et on va r\u00e9cup\u00e9rer la nouvelle cha\u00eene <code>'aBRUHHHcadaBRUHHH'</code></p> <p>Modifications en place ou non ?</p> <p>Ex\u00e9cutez les lignes suivantes une par une dans le terminal ci-dessous :</p> <pre><code>&gt;&gt;&gt; texte = 'abracadabra'\n&gt;&gt;&gt; texte.replace('a', 'U')\n&gt;&gt;&gt; texte\n</code></pre> <p>Le contenu de la variable <code>texte</code> n'a pas \u00e9t\u00e9 remplac\u00e9. Un nouvel objet de type <code>str</code> a \u00e9t\u00e9 cr\u00e9\u00e9, mais il a \u00e9t\u00e9 imm\u00e9diatement ramass\u00e9 par le garbage collector, et a donc disparu. Il n'y a aucune modification de l'objet original qui est conserv\u00e9 (la modification n'est pas en place).Si on veux conserver :</p> <ul> <li> <p>la cha\u00eene originale et la cha\u00eene modifi\u00e9e, il faut donner un nouveau nom et affecter de la mani\u00e8re suivante :</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegardertexte =  'abracadabra'bksl-nlnouveaupy-undtexte = texte.replace('a', 'U')bksl-nl </li> <li> <p>uniquement la cha\u00eene modifi\u00e9e, il suffit de r\u00e9affecter la modification au nom <code>texte</code> :</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegardertexte =  'abracadabra'bksl-nltexte = texte.replace('a', 'U')bksl-nl </li> </ul>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#changement-de-casse","title":"Changement de casse","text":"<p>Il existe les m\u00e9thodes <code>.lower()</code> , <code>.upper()</code> et <code>.capitalize()</code> qui mettent respectivement la chaine originale en minuscule, en majuscule, et la premi\u00e8re lettre en majuscule puis le reste en minuscule.</p> <pre><code>&gt;&gt;&gt; \"Toto\".lower() #mise en minuscule, appel encore une fois \u00e0 une m\u00e9thode de classe.\n'toto'\n&gt;&gt;&gt; \"Toto\".upper() #mise en majuscule, idem\n'TOTO'\n&gt;&gt;&gt; \"une phrase SANS QUEUE ni t\u00cate.\".capitalize()\n#Met en majuscule le premier caract\u00e8re de la cha\u00eene, et en minuscule les autres, idem\n'Une phrase sans queue ni t\u00eate.'\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#suppression-des-espaces-inutiles-avant-et-apres-une-chaine","title":"Suppression des espaces inutiles avant et apr\u00e8s une cha\u00eene","text":"<p>Supprime les espaces inutiles devant et apr\u00e8s une cha\u00eene de caract\u00e8res</p> <pre><code>&gt;&gt;&gt; \"              Des Blancs            \".strip()\n\n'Des Blancs'\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#separation-dune-chaine-selon-un-motif-donne","title":"S\u00e9paration d'une cha\u00eene selon un motif donn\u00e9","text":"<p>S\u00e9pare  une cha\u00eene de caract\u00e8re en, fonction d'une cha\u00eene pass\u00e9e en argument, et renvoie une liste (que nous \u00e9tudierons plus tard)</p> <pre><code>&gt;&gt;&gt; \"Une phrase est faite avec des mots\".split(\"est\")\n['Une phrase ', ' faite avec des mots']\n&gt;&gt;&gt; \"12:34:45:78\".split(\":\")\n['12', '34', '45', '78']\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#les-objets-de-type-sequence","title":"Les objets de type s\u00e9quence","text":"<p>Il existe dans Python de nombreux autres types d'objets, et plus particuli\u00e8rement les types <code>list</code> et <code>tuple</code>, que nous \u00e9tudierons en d\u00e9tail plus tard dans l'ann\u00e9e. Ces objets permettent de regrouper en une seule s\u00e9quence ordonn\u00e9e diff\u00e9rents objets, et peuvent \u00eatre alors utilis\u00e9s simplement avec les possibilit\u00e9s suivantes (non exhaustives):</p>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#construction-dune-liste-ou-dun-tuple","title":"Construction d'une liste ou d'un tuple","text":"<p>Une liste se cr\u00e9e \u00e0 l'aide des crochets <code>[</code> et <code>]</code>, avec deux possibilit\u00e9s :</p> <ul> <li>soit une liste vide :     <pre><code>&gt;&gt;&gt; ma_liste = []\n</code></pre></li> <li>soit une liste contenant d\u00e9j\u00e0 des objets :     <pre><code>&gt;&gt;&gt; ma_liste = [5, 4.2, True, \"Toto\"]\n</code></pre></li> </ul> <p>Une liste en python est un objet qu'on peut modifier. On peut y ajouter un \u00e9l\u00e9ment, en retirer un, en modifier un en particulier, etc.</p> <p>Un tuple ne peut se cr\u00e9e \u00e0 l'aide des parenth\u00e8ses <code>(</code> et <code>)</code>, mais il doit d\u00e9j\u00e0 \u00eatre rempli, car il ne peut pas \u00eatre modifi\u00e9(ni ajout, ni suppression, ni modification d'\u00e9l\u00e9ments) :</p> <pre><code>&gt;&gt;&gt; mon_tuple = (12, 45, -13, \"Bob\")\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#acces-a-un-element","title":"Acc\u00e8s \u00e0 un \u00e9l\u00e9ment","text":"<p>Dans une liste ou un tuple, on peut acc\u00e9der \u00e0 un objet gr\u00e2ce \u00e0 son indice, tout comme pour les chaines de caract\u00e8res :</p> <pre><code>&gt;&gt;&gt; ma_liste[3]\n'Toto'\n&gt;&gt;&gt; mon_tuple[2]\n-13\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#ajouter-un-element-a-une-liste-a-la-derniere-position","title":"Ajouter un \u00e9l\u00e9ment \u00e0 une liste \u00e0 la derni\u00e8re position","text":"<pre><code>&gt;&gt;&gt; ma_liste = [5, 4.2, True, \"Toto\"]\n&gt;&gt;&gt; ma_liste.append(7)\n&gt;&gt;&gt; ma_liste\n[5, 4.2, True, \"Toto\", 7]\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#supprimer-le-dernier-element","title":"Supprimer le dernier \u00e9l\u00e9ment","text":"<pre><code>&gt;&gt;&gt; ma_liste = [5, 4.2, True, \"Toto\"]\n&gt;&gt;&gt; ma_liste.pop()\n\"Toto\" # l'\u00e9l\u00e9ment est renvoy\u00e9 dans l'espace des objets courants\n&gt;&gt;&gt; ma_liste\n[5, 4.2, True]\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#modifier-un-element-dindice-donne","title":"Modifier un \u00e9l\u00e9ment d'indice donn\u00e9 :","text":"<pre><code>&gt;&gt;&gt; ma_liste = [5, 4.2, True, \"Toto\"]\n&gt;&gt;&gt; ma_liste[1] = \"Abracadabra\"\n&gt;&gt;&gt; ma_liste\n[5, \"Abracadabra\", True, \"Toto\"]\n</code></pre>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#interactions-avec-lutilisateur-transtypage-des-donnees-notions-de-formatage-des-chaines-de-caracteres","title":"Interactions avec l'utilisateur, transtypage des donn\u00e9es, notions de formatage des cha\u00eenes de caract\u00e8res","text":""},{"location":"NSI/Premiere/C01/Bases_Python_1/#afficher-a-lecran","title":"Afficher \u00e0 l'\u00e9cran","text":"<p>Jusqu'\u00e0 pr\u00e9sent, les seules choses que nous avons obtenu dans le terminal \u00e9taient des affichages simples des objets attach\u00e9s \u00e0 un nom connu. Il est possible de personnaliser, de diff\u00e9rer, et de multiplier les affichages gr\u00e2ce \u00e0 la fonction built_in `print()'.</p> <p>Par exemple, essayez le code suivant :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>a = 25bksl-nlprint(a)bksl-nlb = 30bksl-nlprint(b)bksl-nlprint(a+b)bksl-nlbksl-nl</p> <p>La fonction <code>print</code> prend entre parenth\u00e8se un objet, et l'\u00e9crit sous la forme d'une chaine de caract\u00e8res dans la console. Cependant on voit vite qu'en cas de multiples appels \u00e0 la fonction <code>print</code>, on risque vite de se perdre dans les affichages. Il faut am\u00e9liorer la sortie pour qu'elle soit compr\u00e9hensible par un \u00eatre humain.</p> <p>Ex\u00e9cutez alors le code ci-dessous :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>a = 25bksl-nlprint(f\"La variable a contient {a}.\")bksl-nlb = 30bksl-nlprint(f\"La variable b contient {b}.\")bksl-nlprint(f\"La somme de a et b est {a+b}.\")bksl-nl</p> <p>D'une part la fonction <code>print()</code> \u00e9crit les cha\u00eenes de caract\u00e8res dans la console, mais en plus, gr\u00e2ce au <code>f</code> situ\u00e9 devant les cha\u00eenes comme :</p> <p></p><pre><code>f\"La variable a contient {a}.\"\n</code></pre> on a une chaine de caract\u00e8re cr\u00e9e en remplacement le nom de la variable situ\u00e9 entre accolades par sa valeur.  On appelle cela le formatage des cha\u00eenes de caract\u00e8res, la documentation python vous donnera toutes les subtilit\u00e9s n\u00e9cessaires. La sortie \u00e9crite par le programme dans la console est devenu bien plus compr\u00e9hensible.  <p>Les accolades</p> <p>Vous utiliserez beaucoup les accolades en Python, pour les obtenir sur un clavier AZERTY :</p> <ul> <li><code>{</code> s'obtient par AltGr+' ;</li> <li><code>}</code> s'obtient par AltGr+= ;</li> </ul>"},{"location":"NSI/Premiere/C01/Bases_Python_1/#demander-a-lutilisateur-de-saisir-quelque-chose-au-clavier","title":"Demander \u00e0 l'utilisateur de saisir quelque chose au clavier","text":"<p>Pour demander une saisie clavier \u00e0 un utilisateur, on utilise la fonction built-in <code>input()</code>, prenant \u00e9ventuellement en argument  une cha\u00eene de caract\u00e8res. Celle-ci interrompt le programme et attend une saisie clavier de l'utilisateur, et retourne cette saisie sous la forme d'une cha\u00eene de caract\u00e8re d\u00e8s que la touche Enter est press\u00e9e.</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>nom = input(\"Entrez votre nom :\")bksl-nlprint(f\"Votre nom est {nom}\")bksl-nl</p> <p>Il faut cependant \u00eatre attentif \u00e0 ce qui est r\u00e9alis\u00e9 par la  fonction <code>input()</code>. En effet, le retour effectu\u00e9 par cette fonction est renvoy\u00e9 sous la forme de cha\u00eene de caract\u00e8res, ce qui peut poser un probl\u00e8me, comme par exemple dans la situation ci-dessous :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>nb = input(\"Entrez un nombre entier :\")bksl-nlprint(2py-strnb)bksl-nl</p> <p>Pour lever cette ambig\u00fcit\u00e9, nous sommes parfois oblig\u00e9s d'effectuer un transtypage des donn\u00e9es, c'est-\u00e0-dire une modification du type,  avec l'aide des fonctions built-in suivantes :</p> <ul> <li><code>str()</code></li> <li><code>int()</code></li> <li><code>float()</code></li> <li><code>bool()</code></li> <li>...</li> </ul> <p>Par exemple :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>nb = int(input(\"Entrez un nombre entier :\"))bksl-nlprint(2py-strnb)bksl-nlbksl-nl</p> <p>On a forc\u00e9 ici dans la premi\u00e8re ligne Python \u00e0 transformer (si il le peut) le contenu de la variable <code>nb</code> comme \u00e9tant un nombre entier.</p> <p>Ceci ne l\u00e8ve cependant pas tous les probl\u00e8mes, puisque si l'utilisateur\u00b7trice saisit une cha\u00eene de caract\u00e8res ne pouvant \u00eatre transtyp\u00e9e en nombre entier, le programme renverra une erreur.</p> <p>Exercice</p> <p>\u00c9crire dans l'\u00e9diteur ci dessous un code python qui :</p> <ul> <li>demande deux nombres entiers <code>a</code> et <code>b</code> \u00e0 l'utilisateur\u00b7trice ;</li> <li>donne le produit des deux nombres, ainsi que le type du r\u00e9sultat, sous la forme d'une cha\u00eene de caract\u00e8res du type <code>3x4 = 12</code> (si l'utilisateur\u00b7trice \u00e0 saisi 4 pour <code>a</code> et 3 pour <code>b</code>).                                                                                                                    </li> </ul> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder"},{"location":"NSI/Premiere/C01/Conditions_Boucles/","title":"Boucles et conditions","text":""},{"location":"NSI/Premiere/C01/Conditions_Boucles/#conditions-et-boucles-en","title":"Conditions et boucles en","text":""},{"location":"NSI/Premiere/C01/Conditions_Boucles/#structures-conditionnelles","title":"Structures conditionnelles","text":""},{"location":"NSI/Premiere/C01/Conditions_Boucles/#comparateurs-et-appartenance","title":"Comparateurs et appartenance","text":"<p>En Python, comme dans de nombreux langages, on utilise les comparateurs et op\u00e9rateurs d'appartenance :</p> <ul> <li><code>==</code> : comparateur d'\u00e9galit\u00e9 ;</li> <li><code>!=</code> : comparateur de diff\u00e9rence;</li> <li><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> : comparateurs d'ordre ;</li> <li><code>in</code>, <code>notin</code> : op\u00e9rateurs d'inclusion.</li> </ul> <p>Ces op\u00e9rateurs renvoient une valeur de type bool\u00e9en ( donc <code>True</code> ou <code>False</code>). </p> <p>Exemples</p> <ul> <li> <p>Egalit\u00e9 :</p> <pre><code>&gt;&gt;&gt; 5 == 2.0+3.0\nTrue\n</code></pre> </li> <li> <p>In\u00e9galit\u00e9s :</p> <pre><code>&gt;&gt;&gt; 4 != 2+3\nTrue\n</code></pre> </li> <li> <p>Ordre :</p> <pre><code>&gt;&gt;&gt; 7 &lt; 5\nFalse\n&gt;&gt;&gt; 7 &gt;= 7\nTrue \n</code></pre> <p>Les relations d'ordre ne sont pas limit\u00e9es aux nombres, puisqu'on peut comparer des cha\u00eenes de caract\u00e8res gr\u00e2ce \u00e0 l'ordre lexicographique (grosso modo en Python l'ordre alphab\u00e9tique, les majuscules \u00e9tant situ\u00e9es avant les minuscules) :</p> <pre><code>&gt;&gt;&gt; 'ABC' &lt; 'DEFGH'\nTrue\n&gt;&gt;&gt; 'JKLMN' &lt; 'OPQ'\nTrue\n&gt;&gt;&gt; 'toto' &lt; 'Toto'\nFalse\n</code></pre> </li> <li> <p>Appartenance :</p> <pre><code>&gt;&gt;&gt; 'to' in 'Toto'\nTrue\n&gt;&gt;&gt; 'TO' in 'Toto'\nFalse\n&gt;&gt;&gt; 5 not in [0, 1, 2, 3, 4] # On utilise une structure de liste (objets entre crochets et s\u00e9par\u00e9s par des virgules)\nTrue\n</code></pre> </li> </ul>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#operations-logiques","title":"Op\u00e9rations logiques","text":"<p>Il est souvent n\u00e9cessaire de v\u00e9rifier que plusieurs conditions soient v\u00e9rifi\u00e9es en m\u00eame temps, ou bien qu'au moins une condition parmi plusieurs soit v\u00e9rifi\u00e9e. On utilisera aussi souvent la n\u00e9gation d'une condition.</p> <p>Pour combiner ainsi plusieurs conditions ensembles, on va utiliser la logique bool\u00e9enne et les op\u00e9rateurs <code>NON</code>, <code>ET</code> et <code>OU</code>:</p> <ul> <li> <p><code>NON</code> op\u00e9rateur qui renvoie <code>Vrai</code> si la condition pass\u00e9e est <code>Faux</code>, et r\u00e9ciproquement. En python on utilise l'op\u00e9rateur <code>not</code> :</p> <pre><code>&gt;&gt;&gt; 2*5 &lt; 50\nTrue\n&gt;&gt;&gt; not(2*5 &lt; 50)\nFalse\n</code></pre> </li> <li> <p><code>ET</code> qui renverra <code>Vrai</code> si les deux conditions sont simultan\u00e9ment <code>Vrai</code>, comme pr\u00e9sent\u00e9 dans la table de v\u00e9rit\u00e9 ci-dessous :</p> <p></p> <p>En python on utilisera l'op\u00e9rateur <code>and</code>.</p> <pre><code>&gt;&gt;&gt; 5&lt;2 and 5&lt;7\nFalse\n&gt;&gt;&gt; 2&lt;5 and 2&lt;7\nTrue\n&gt;&gt;&gt; 2&lt;5 and 2&gt;7\nFalse\n&gt;&gt;&gt; 2&gt;5 and 2&gt;7\nFalse\n</code></pre> </li> <li> <p><code>OU</code> qui renverra <code>Vrai</code> si au moins une des deux conditions est <code>Vrai</code>, comme pr\u00e9sent\u00e9 dans la table de v\u00e9rit\u00e9 ci-dessous :</p> <p></p> <p>En python on utilisera l'op\u00e9rateur <code>or</code>.</p> <pre><code>&gt;&gt;&gt; 5&lt;2 or 5&lt;7\nTrue\n&gt;&gt;&gt; 2&lt;5 or 2&lt;7\nTrue\n&gt;&gt;&gt; 2&lt;5 or 2&gt;7\nTrue\n&gt;&gt;&gt; 2&gt;5 or 2&gt;7\nFalse\n</code></pre> </li> </ul> <p>Conditions sur les nombres entiers</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re un objet de type <code>int</code> dont le nom est <code>nb</code>. Que faut-il \u00e9crire pour :</p> <ol> <li>Savoir si le nombre <code>nb</code> est un nombre pair et strictement sup\u00e9rieur \u00e0 50 ?</li> <li>Savoir si le nombre <code>nb</code> est un nombre pair ou un multiple de 3 ?</li> <li>Savoir si le nombre <code>nb</code> appartient \u00e0 l'intervalle \\([-13 ; 25]\\)  ?</li> <li>Savoir si le nombre <code>nb</code> n'appartient pas \u00e0 l'intervalle \\([-13 ; 25]\\)  ?</li> </ol> <ol> <li><code>nb%2 == 0 and nb &gt; 50</code></li> <li><code>nb%2 == 0 or nb%3 == 0</code></li> <li><code>nb &gt;= -13 and nb &lt;= 25</code> (et en python, on a aussi <code>13&lt;= nb &lt;= 25</code>)</li> <li><code>nb&lt;13 or nb &gt;25</code> ou <code>not(nb &gt;= -13 and nb &lt;= 25)</code> ou en python  <code>not(13&lt;= nb &lt;= 25)</code></li> </ol> <p>Vous pouvez tester les conditions ci-dessus en ex\u00e9cutant le code suivant, qui cr\u00e9e un objet <code>int</code> al\u00e9atoire entre -20 et 70, puis en v\u00e9rifiant en affichant la valeur de <code>nb</code></p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderfrom random import randintbksl-nlbksl-nlnb = randint(-20, 70)bksl-nl <p>Une erreur courante</p> <p>Supposons qu'on ait besoin de savoir si le nombre <code>nb</code> est \u00e9gal \u00e0 <code>0</code> ou \u00e0 <code>1</code>. Il serait assez naturel d'\u00e9crire :</p> <p></p><pre><code>a == 0 or 1\n</code></pre>  C'est une erreur courante chez les d\u00e9butants en programmation, mais qu'il faut \u00e9viter \u00e0 tout prix !  <p>En effet, testons les lignes suivantes dans le terminal ci-dessous :</p> <p></p> <pre><code>0 == 0 or 1\n</code></pre> <pre><code>1 == 0 or 1\n</code></pre> <pre><code>12 == 0 or 1\n</code></pre> <p></p>&gt;&gt;&gt;  <p>Les trois expression ne renvoient pas <code>True</code>, <code>True</code> et <code>False</code> comme on pourrait s'y attendre, mais <code>1</code>, <code>1</code> et <code>1</code> (Ce qui est \u00e9quivalent \u00e0 trois <code>True</code>).</p> <p>En effet l'op\u00e9rateur <code>or</code>, tout comme l'op\u00e9rateur <code>and</code> ne correspond uniquement qu'\u00e0 la table de v\u00e9rit\u00e9 donn\u00e9e ci-dessus, donc effectue une op\u00e9ration entre deux bool\u00e9ens.</p> <p>Dans le troisi\u00e8me exemple, il prend comme premier bool\u00e9en <code>12 == 0</code>, soit <code>False</code>, et comme second op\u00e9rateur, il n'utilise que l'objet <code>1</code>, qu'il essaye de transtyper en bool\u00e9en, et qui donne <code>True</code> (les r\u00e8gles de transtypage en bool\u00e9en en python sont donn\u00e9es ici, mais ne sont pas \u00e0 conna\u00eetre). Au final on a donc <code>False or True</code>, ce qui donne <code>True</code>. </p> <p>L'expression saisie est donc fausse.</p> <p>Il faut la corriger en utilisant</p> <pre><code>a == 0 or a == 1\n</code></pre> <p>Exercice</p> Enonc\u00e9Solution <p>Le code suivant est-il correct d'un point de vue logique ?</p> <pre><code>'toto' and 'plage' in 'toto va \u00e0 la plage'\n</code></pre> <p>Non, il faut utiliser :</p> <pre><code>'toto' in  'toto va \u00e0 la plage' and 'plage' in 'toto va \u00e0 la plage'\n</code></pre> Pour les cracks : \u00e9valuation au plus court <p>Dans une \u00e9valuation de condition poss\u00e9dant un ou plusieurs op\u00e9rateurs <code>and</code> et <code>or</code>, l'interpr\u00e9teur python \u00e9value de gauche vers la droite. Si les \u00e9valuations d\u00e9j\u00e0 effectu\u00e9es permettent d\u00e9j\u00e0 de donner le bool\u00e9en r\u00e9ponse, l'interpr\u00e9teur python s'arr\u00eate automatiquement. Ainsi :</p> <ul> <li><code>5 &lt; 7 or 5 &lt; 9</code> : <code>5 &lt; 7</code> renvoie <code>True</code>, et l'op\u00e9rateur <code>or</code> renvoie <code>True</code> d\u00e8s qu'une des deux condition est v\u00e9rifi\u00e9e. La condition  <code>5 &lt; 9</code> n'est donc pas \u00e9valu\u00e9e, ce serait inutile.</li> <li><code>5 &lt; 7 and 5 &lt; 9</code> : <code>5 &lt; 7</code> renvoie <code>True</code>, et l'op\u00e9rateur <code>and</code> renvoie <code>True</code> d\u00e8s que les deux conditions sont v\u00e9rifi\u00e9es. La condition  <code>5 &lt; 9</code> est donc obligatoirement \u00e9valu\u00e9e.</li> <li><code>5 &lt; 2 and 5 &lt; 9</code> : <code>5 &lt; 2</code> renvoie <code>False</code>, et l'op\u00e9rateur <code>and</code> renvoie <code>False</code> d\u00e8s qu'une des deux condition n'est pas v\u00e9rifi\u00e9e. La condition  <code>5 &lt; 2</code> n'est donc pas \u00e9valu\u00e9e, ce serait inutile.</li> <li><code>5 &lt; 9 and 5 &lt; 2</code> : <code>5 &lt; 9</code> renvoie <code>True</code>, et l'op\u00e9rateur <code>and</code> doit obligatoirement \u00e9valuer <code>5 &lt; 2</code> pour conclure.</li> </ul> <p>Les deux derniers exemples montrent l'importance de l'ordre dans les op\u00e9rations bool\u00e9ennes, certains ordre permettant de gagner du temps de calcul.</p>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#structures-conditionnelles_1","title":"Structures conditionnelles","text":"<p>En Python, on utilise pour les structures conditionnelles la syntaxe suivante :</p> <pre><code>if condition1 :#Le : est important !\n    #bloc de une ou\n    #plusieurs lignes\n    #indent\u00e9es ( avec la touche tabulation)\nelif condition2 :\n    #encore un autre bloc\nelif condition3 :\n    #etc\n    #etc\n    #etc\n\n.\n.\n.\n\nelse :\n    #et enfin un dernier bloc si aucune des conditions pr\u00e9c\u00e9dentes n'a \u00e9t\u00e9 r\u00e9alis\u00e9e.    \n</code></pre> <p>Les diff\u00e9rents blocs d'instructions doivent \u00eatre correctement indent\u00e9s ( c'est-\u00e0-dire correctement d\u00e9cal\u00e9 s vers la droite).</p> <p>La r\u00e8gle de bonne conduite est d'utiliser 4 espaces par indentation (qu'il est souvent possible d'obtenir gr\u00e2ce \u00e0 la touche tabulation Tab ). Il est  r\u00e9ellement fondamental de respecter au maximum les indentations, celles-ci \u00e9tant pour l'interpr\u00e9teur Python le signal de d\u00e9clenchement d'un bloc de code ind\u00e9pendant. Par exemple, le code ci-dessous renverra une erreur :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>nb = int(input(\"Entrez un nombre entre 1 et 100 :\"))bksl-nlif nb&lt;1 :bksl-nl    print(\"Votre nombre est trop petit\")bksl-nlelif nb&gt;100 :bksl-nl    print(\"Votre nombre est trop grand\")bksl-nlelif nb &lt; 50 :bksl-nl    nb = nb + 50bksl-nl    print(f\"Le nombre final est {nb}\")bksl-nlelse :bksl-nl    nb = nb - 50bksl-nl    print(f\"Le nombre final est {nb}\")bksl-nlprint(\"FIN\")bksl-nl</p> <p>On peut aussi noter qu'il est possible dans certaines situations de se passer des instructions <code>elif</code> et <code>else</code>, mais cela peut conduire \u00e0 certains effets de bords qui peuvent \u00eatre parfois dommageables. Testez par exemple le code suivant :</p> <pre><code>nb = int(input(\"Entrez un nombre entre 1 et 100 :\"))\nif nb&lt;1 :\n    print(\"Votre nombre est trop petit\")\nif nb&gt;100 :\n    print(\"Votre nombre est trop grand\")\nif nb &lt; 50 :\n    nb = nb + 50\n    print(f\"Le nombre final est {nb}\")\nif nb&gt;= 50 :\n    nb = nb - 50\n    print(f\"Le nombre final est {nb}\")\nprint(\"FIN\")\n</code></pre> <p>Les structures conditionnelles peuvent aussi \u00eatre imbriqu\u00e9es, en indentant \u00e0 plusieurs reprises :</p> <pre><code>nb=int(input(\"Entrez un nombre entier, positif ou n\u00e9gatif :\"))\nif nb&gt;0 :\n    print(\"Votre nombre est positif !\")\n    if nb%2==0 :\n        print(\"Et c'est un multiple de 2 !\")\n    else :\n        print(\"Et ce n'est pas un multiple de 2 !\")\nelse :\n    print(\"Votre nombre est n\u00e9gatif !\")\n</code></pre> <pre><code>Entrez un nombre entier, positif ou n\u00e9gatif :9\nVotre nombre est positif !\nEt ce n'est pas un multiple de 2 !\n</code></pre>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#boucles","title":"Boucles","text":""},{"location":"NSI/Premiere/C01/Conditions_Boucles/#boucle-non-bornee-while","title":"Boucle non born\u00e9e <code>while</code>","text":"<p>Boucle born\u00e9e</p> <p>On utilise une boucle born\u00e9e lorsqu'on veut r\u00e9-ex\u00e9cuter un bloc de code tant qu'une condition est v\u00e9rifi\u00e9e.</p> <p>La boucle <code>while</code> ( ou boucle <code>Tant que</code> en pseudo-code), poss\u00e8de la structure suivante en Python :</p> <pre><code>while condition :#Encore une fois, ne pas oublier le signe :\n    #bloc de code\n    #indent\u00e9\n</code></pre> <p>Le bloc de code situ\u00e9 sous l'instruction <code>while</code> sera ex\u00e9cut\u00e9 tant que la condition donn\u00e9e sera vraie, comme dans l'exemple donn\u00e9 ci-dessous :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>nb= int(input(\"Donnez un nombre entier positif:\"))bksl-nlpuissance = 0bksl-nlwhile nb//2 &gt;=1  :bksl-nl    puissance = puissance +1bksl-nl    nb=nb//2bksl-nlprint(\"Votre nombre est sup\u00e9rieur ou \u00e9gal \u00e0 2 puissance {p} et inf\u00e9rieur \u00e0 2 puissance {q}\".format(bksl-nl    p=puissance,q=puissance+1))#A noter qu'ici le texte \u00e9tant trop long, on a pu \"sauter\" \u00e0 la lignebksl-nl                            #le saut de ligne \u00e9tant compris entre les parenth\u00e8ses de la m\u00e9thode formatbksl-nl</p>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#boucle-bornee-for","title":"Boucle born\u00e9e : <code>for</code>","text":"<p>Boucle born\u00e9e</p> <p>On utilise une boucle born\u00e9e lorsqu'on connait \u00e0 l'avance le nombre de fois o\u00f9 un bloc de code doit \u00eatre ex\u00e9cut\u00e9.</p>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#la-boucle-classique-for","title":"La boucle classique <code>for</code>","text":"<p>Dans de nombreux langages de programmation, une boucle <code>for</code> (<code>Pour</code> en pseudo-code) fonctionne en :</p> <ul> <li>Cr\u00e9ant un compteur ( ou it\u00e9rateur), nomm\u00e9 traditionnellement <code>i</code> ;</li> <li>en initialisant ce compteur \u00e0 une valeur de d\u00e9part ;</li> <li>en augmentant \u00e0 chaque tour de boucle le compteur d'une certaine valeur appel\u00e9e le pas (step en anglais);</li> <li>en continuant tant qu'une certaine valeur limite n'est pas atteinte (ou qu'une condition est respect\u00e9e).</li> </ul> <p>En Python, on utilisera la structure suivante :</p> <p></p><pre><code>for i in range(depart, limite, pas) :\n    # Bloc de code\n</code></pre> o\u00f9 : <ul> <li><code>i</code> est le compteur. C'est une variable donc on peut choisir son nom selon les r\u00e8gles de nommages habituelles ;</li> <li><code>depart</code> est la valeur de d\u00e9part \u00e0 laquelle est initialis\u00e9e <code>i</code> ;</li> <li><code>limite</code> est la valeur telle que si <code>i</code> est sup\u00e9rieure ou \u00e9gale \u00e0 cette valeur, la boucle s'arr\u00eate.</li> <li><code>pas</code> est le pas, c'est-\u00e0-dire la valeur d'augmentation de <code>i</code> \u00e0 chaque tour.</li> </ul> <p>M\u00eame s'il s'agit d'une simplification abusive de ma part, vous pouvez consid\u00e9rer que la fonction <code>range()</code> construit l'ensemble des valeurs que peut prendre le compteur <code>i</code>, et fait passer <code>i</code> d'une valeur \u00e0 l'autre \u00e0 chaque tour de boucle.</p> <p>Exemple de boucle for</p> <p>Prenons comme exemple la boucle suivante :</p> <p></p><pre><code>for i in range (12,24,3) :\n    print(i, end=\" \")\n</code></pre> La valeur d'initialisation de <code>i</code> est <code>12</code>, la valeur limite est <code>24</code>, et le pas est <code>3</code>. <p>L'ex\u00e9cution du programme donnera donc en sortie : </p><pre><code>12 15 18 21 \n</code></pre> <p>Cette boucle <code>for</code> est donc exactement \u00e9quivalente au code suivant :</p> <pre><code>i = 12\nwhile i &lt; 24 :\n    print(i)\n    i = i + 3\n</code></pre> <p>Exercice</p> Enonc\u00e9Solution <p>On consid\u00e8re le code suivant :</p> <pre><code>for toto in range(15,30,5) :\n    # Bloc de code\n    ...\n</code></pre> <p>Combien y aura-t-il de r\u00e9p\u00e9titions du bloc de code dans cette boucle <code>for</code>  ?</p> <p>Il y aura une ex\u00e9cution du bloc de code pour chacune des valeurs suivante de <code>toto</code> : \\(15\\), \\(20\\) et \\(25\\). Lorsque <code>toto</code> prend la valeur <code>30</code>, la boucle est arr\u00eat\u00e9e et le bloc n'est pas ex\u00e9cut\u00e9.</p> <p>Raccourcis d'\u00e9criture</p> <p>Il existe des facilit\u00e9s de programmation qui permettent de simplifier l'\u00e9criture de la fonction <code>range</code> :</p> <ul> <li>Si le pas est de <code>1</code>, on peut l'omettre : <code>range(12, 17)</code> est \u00e9quivalent \u00e0 <code>range(12, 17, 1)</code>, et cr\u00e9e la liste <code>12, 13, 14, 15, 16</code> ;</li> <li>Si la valeur de d\u00e9part est <code>0</code>, et le pas de <code>1</code>, on peut les omettre : <code>range(5)</code> est \u00e9quivalent \u00e0 <code>range(0, 5, 1)</code> et cr\u00e9e la liste <code>0, 1, 2, 3, 4</code> (ce qui permet d'avoir exactement 5 tours de boucle) ;</li> </ul> <p>Attention, il n'est pas possible de donner le pas sans donner la valeur de d\u00e9part ! <code>range(0, 45, 3)</code> ne peut pas \u00eatre raccourci !</p>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#la-boucle-for-en-python","title":"La boucle <code>for</code> en Python","text":"<p>En python, la boucle <code>for</code> peut aussi \u00eatre utilis\u00e9e comme une boucle <code>foreach</code> (<code>Pour chaque</code> en pseudo-code) :</p> <p>Testez par exemple le code suivant :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>texte ='Un texte quelconque'bksl-nlfor lettre in texte :bksl-nl    if lettre in 'aeiouy':bksl-nl        print(f\"Tiens, j'ai vu la voyelle {lettre}.\")bksl-nl</p> <p>Le compteur <code>lettre</code> prendra successivement chaque (each) caract\u00e8re de la cha\u00eene <code>texte</code>, soit <code>U</code>, <code>n</code>, <code></code>(1 espace), <code>t</code>, ..., jusqu'\u00e0 ce que le parcours de la cha\u00eene soit termin\u00e9. </p> <p>Dans ce cas, il n'y a pas de pas, on parcourt chaque \u00e9l\u00e9ment d'un ensemble donn\u00e9. Nous verrons plus tard dans l'ann\u00e9e qu'on peut parcourir ainsi des listes, des tuples, etc.</p> <p>Exercice</p> <p>Comment faire pour prendre en compte les majuscules dans le compte des voyelles ?</p>"},{"location":"NSI/Premiere/C01/Conditions_Boucles/#exercices","title":"Exercices","text":"<p>Conditions, saisies et affichages</p> \u00c9nonc\u00e9Solutions <ol> <li>\u00c9crire un programme qui demande un nombre \u00e0 l'utilisateur, puis affiche le carr\u00e9 de ce nombre.</li> <li>\u00c9crire un programme qui demande l'heure qu'il est (un nombre pour les heures, un nombre pour les minutes et un pour les secondes). Cet algorithme indiquera en outre si l'heure donn\u00e9e est valide, c'est-\u00e0-dire que les nombres sont bien des entiers, et qu'ils sont compris entre 0 et 23 ou 0 et 59.</li> <li>Compl\u00e9ter le programme pr\u00e9c\u00e9dent afin que l'algorithme donne l'heure qu'il sera 10 minutes apr\u00e8s l'heure saisie.</li> <li>Une ann\u00e9e est dite bissextile si cette ann\u00e9e est divisible par 4, sauf si elle est divisible par 100 et pas par 400. Construire un programme qui dit si une ann\u00e9e saisie par un utilisateur\u00b7trice est bissextile ou non.</li> <li>\u00c9crire un programme qui demande les coefficients \\(a\\) et \\(b\\) d'une fonction affine, et qui donne son nombre de racines et leurs valeurs \u00e9ventuelles. Attention aux cas particuliers !</li> <li>\u00c9tendre le programme pr\u00e9c\u00e9dent pour la r\u00e9solution d'\u00e9quations du type \\(ax+b = cx+d\\), o\u00f9 \\(a,b,c,d\\) sont des entiers saisis par l'utilisateur\u00b7trice.</li> <li>Pour les \u00e9l\u00e8ves ayant encore des maths, reprendre le probl\u00e8me n\u00b05 pour un trin\u00f4me du second degr\u00e9.</li> </ol> <p>A venir !</p> <p>Exercices sur les boucles <code>for</code> et <code>while</code></p> \u00c9nonc\u00e9Solutions <ol> <li> <p>\u00c9crire un programme qui affiche les 20 premiers nombres de la table de multiplication d'un entier choisi par l'utilisateur\u00b7trice, sous la forme (avec choix de <code>7</code> par l'utilisateur) :</p> <pre><code>7 x 0 = 0\n7 x 1 = 7\n7 x 2 = 14\n...\n</code></pre> </li> <li> <p>\u00c9crire un programme qui affiche les restes des divisions euclidiennes des \\(200\\) premiers entiers par  \\(7\\).</p> </li> <li>\u00c9crire un programme qui affiche les restes des divisions euclidiennes des \\(300\\) premi\u00e8res puissances de \\(2\\) par \\(9\\). Que constate-t-on ?</li> <li>\u00c9crire un programme qui affiche une suite de 12 nombres dont chaque terme soit \u00e9gal au triple du nombre pr\u00e9c\u00e9dent, le nombre de d\u00e9part \u00e9tant choisi par l'utilisateur\u00b7trice.</li> <li> <p>La suite de Syracuse est d\u00e9finie ainsi :</p> <ul> <li>on part d'un nombre entier choisis par l'utilisateur.trice ;</li> <li>si le nombre est pair, on le divise par 2, et on recommence avec le r\u00e9sultat ;</li> <li>sinon on le multiplie par 3 et on ajoute 1, et on recommence avec le r\u00e9sultat.</li> </ul> <p>Construire un programme qui affiche les 30 premiers nombres de la suite de Syracuse \u00e0 partir d'un nombre entier choisis par un\u00b7e utilisateur\u00b7trice.</p> </li> <li> <p>\u00c9crire un programme qui demande un nombre entier entre 1 et 10 \u00e0 l'utilisateur\u00b7trice, et qui poursuit cette demande tant que l'utilisateur\u00b7trice n'a pas exactement fait ce qui lui \u00e9tait demand\u00e9 ( on appelle ce type de programme dumbproof). </p> </li> </ol> <p>A venir !</p> <p>TP Turtle</p> <p>Faire le TP suivant sur Capytale</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/","title":"Fonctions, assertions et tests unitaires","text":""},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#fonctions-assertions-et-docstring-en","title":"Fonctions, assertions et docstring en","text":""},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#premiers-pas-avec-les-fonctions","title":"Premiers pas avec les fonctions","text":""},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#pourquoi-des-fonctions","title":"Pourquoi des fonctions ?","text":"<p>Dans la partie pr\u00e9c\u00e9dente, nous avons termin\u00e9 par un petit programme qu demande \u00e0 un\u00b7e utilisateur\u00b7trice de donner un nombre entier entre 1 et 10, et qui v\u00e9rifie la saisie jusqu'\u00e0 ce que l'utilisateur\u00b7trice ait effectuer une saisie correcte. Voici un exemple simple d'impl\u00e9mentation de ce programme :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>while True :bksl-nl    n = input(\"Entrez un nombre entier entre 1 et 10 : \")bksl-nl    if n.isdigit() : # regarde si la chaine ne contient que des chiffresbksl-nl        n = int(n)bksl-nl        if n&gt;=1 and n&lt;= 10 :bksl-nl            print(\"Le nombre est correct\")bksl-nl            break # L'instruction break sort de la boucle imm\u00e9diatementbksl-nl        else :bksl-nl            print(\"Votre nombre est entier mais pas entre 1 et 10.\")bksl-nl    else :bksl-nl        print(\"Vous n'avez pas saisi un entier\")bksl-nlprint(f\"Vous avez saisi {n}\")bksl-nl    bksl-nl    bksl-nlbksl-nl</p> <p>Un blocage ?</p> Enonc\u00e9Solution <p>Essayez de saisir diff\u00e9rentes valeurs de diff\u00e9rents types. Quel est le probl\u00e8me rencontr\u00e9 ?</p> <p>Si 'utilisateur\u00b7trice saisi un nombre n\u00e9gatif, m\u00eame entier, celui-ci n'est pas reconnu comme un entier. Ce peut-\u00eatre parfois compl\u00e8tement bloquant pour le fonctionnement r\u00e9el d'une application.</p> <p>La version ci-dessous est un peu plus dumbproof, mais je ne vous demande pas encore de comprendre les blocs <code>try/except/else</code>.</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderbksl-nlwhile True :bksl-nl    nb = input(\"Entrez un nombre entier entre 1 et 10 : \")bksl-nl    #  Ici nb est du type 'str'bksl-nl    # Il faut donc d'abord le convertir en entier, mais si l'utilisateur a saisi une chaine qu'il est impossiblebksl-nl    # de convertir, l'interpr\u00e9teur l\u00e8vera par d\u00e9faut une erreur et arr\u00eatera le programme.bksl-nl    # Or nous ne voulons pas d'interruption , nous signifions donc explicitement au programme ce que nous souhaitonsbksl-nl    # qu'il fasse avec le bloc 'try : ...' 'except : ...' <code>else : ...</code>bksl-nl    try :bksl-nl        nb=int(nb)bksl-nl        # si l'interpr\u00e9teur n'arrive pas \u00e0 ex\u00e9cuter l'instruction ci-dessus, il d\u00e9clenche une erreur et passebksl-nl        # directement au bloc 'except'. Sinon il passe au bloc 'else'.bksl-nl    except ValueError :bksl-nl        print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")bksl-nl    else :bksl-nl        if 1&lt;= nb&lt;= 10 :bksl-nl            breakbksl-nl        else :bksl-nl            print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")bksl-nl    bksl-nlbksl-nlprint(f'Le carr\u00e9 de {nb} est {nbpy-strpy-str2}')bksl-nl <p>Application 1 : Multiplier les codes</p> Enonc\u00e9Solution <p>Imaginons maintenant un programme qui demande trois fois \u00e0 l'utilisateur d'entrer un tel nombre, puis qui v\u00e9rifie si les trois nombres correspondent \u00e0 une configuration de Pythagore.</p> <p>Vous devez vous inspirer du programme pr\u00e9c\u00e9dent pour compl\u00e9ter le programme ci-dessous afin d'obtenir trois nombres entiers <code>nb1</code>, <code>nb2</code> et <code>nb3</code> saisis par l'utilisateur :</p> <p>Un code pouvant \u00eatre ins\u00e9r\u00e9 (avec notre niveau actuel en Python et sans utiliser de structures de listes) est le suivant :</p> <pre><code>while True :\n    nb1 = input(\"Entrez un nombre entier entre 1 et 10 : \")\n    try :\n        nb1 = int(nb1)\n    except ValueError :\n        print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")\n    else :\n        if 1&lt;= nb1= 10 :\n            break\n        else :\n            print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")\nwhile True :\n    nb2 = input(\"Entrez un nombre entier entre 1 et 10 : \")\n    try :\n        nb2 = int(nb2)\n    except ValueError :\n        print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")\n    else :\n        if 1&lt;= nb2 &lt;= 10 :\n            break\n        else :\n            print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")\nwhile True :\n    nb3 = input(\"Entrez un nombre entier entre 1 et 10 : \")\n    try :\n        nb3 = int(nb3)\n    except ValueError :\n        print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")\n    else :\n        if 1&lt;= nb3 &lt;= 10 :\n            break\n        else :\n            print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")\n</code></pre> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder#### TAPEZ VOTRE CODE ENTRE LES DEUX COMMENTAIRESbksl-nlbksl-nlbksl-nl#### NE TOUCHEZ PAS AU CODE CI-DESSOUSbksl-nlbksl-nlif (nb1py-strpy-str2 == nb2py-strpy-str2 + nb3py-strpy-str2) or (nb2py-strpy-str2 == nb1py-strpy-str2 + nb3py-strpy-str2) or (nb3py-strpy-str2 == nb2py-strpy-str2 + nb1py-strpy-str2) :bksl-nl    print(\"C'est une configuration de Pythagore !\")bksl-nlelse :bksl-nl    print(\"Ce n'est pas une configuration de Pythagore !\")bksl-nl <p>Mauvaise pratique</p> <p>Si ce code fait le travail demand\u00e9, il n'en est pas moins de mauvaise qualit\u00e9 pour plusieurs raisons :</p> <ul> <li>Il est long, avec des r\u00e9p\u00e9titions. Plus un code est long, plus il prend de place en m\u00e9moire, alors qu'on cherche plut\u00f4t \u00e0 minimiser ce facteur.</li> <li>Le copi\u00e9-coll\u00e9 force quand m\u00eame \u00e0 repasser sur chacune des parties pour modifier le nom des variables (sinon les valeurs seraient \u00e9cras\u00e9es). Ainsi toute modification doit \u00eatre r\u00e9\u00e9crite \u00e0 chaque fois que le morceau de code est appel\u00e9. Dans notre exemple, ce n'est que trois fois, le risque d'erreurs est minime, mais pour un plus grand nombre de r\u00e9p\u00e9titions, il est tr\u00e8s facile d'oublier une modification.</li> <li>Le code n'est plus lisible. Dans le cas d'un travail en \u00e9quipe, il est imp\u00e9ratif d'avoir un code clairement \u00e9crit, avec des fonctionnalit\u00e9s clairement d\u00e9finies.</li> </ul>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#premiere-fonction","title":"Premi\u00e8re fonction","text":""},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#definition-dune-fonction","title":"D\u00e9finition d'une fonction","text":"<p>On va donc am\u00e9liorer non seulement la lisibilit\u00e9 de notre code, mais aussi son efficacit\u00e9 et sa simplicit\u00e9, en utilisant une fonction.</p> <p>D\u00e9finition : fonction</p> <p>Une fonction est un bloc de code nomm\u00e9 (c'est-\u00e0-dire poss\u00e9dant un nom dans l'espace de noms, comme toute autre variable). L'appel par l'interpr\u00e9teur du nom de la fonction suivi d'une paire de parenth\u00e8ses ex\u00e9cutera alors l'int\u00e9gralit\u00e9 du code et renverra une valeur de retour, c'est-\u00e0-dire un objet qui pourra \u00eatre utilis\u00e9 normalement dans la partie de code ayant appel\u00e9 la fonction.</p> <p>Pour notre exemple :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>def askpy-unduserpy-undint() -&gt; int:bksl-nl    while True :bksl-nl        nb = input(\"Entrez un nombre entier entre 1 et 10 : \")bksl-nl        try :bksl-nl            nb=int(nb)bksl-nl        except ValueError :bksl-nl            print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")bksl-nl        else :bksl-nl            if 1&lt;= nb&lt;= 10 :bksl-nl                return nbbksl-nl            else :bksl-nl                print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")bksl-nl    bksl-nl</p> <p>En regardant la premi\u00e8re ligne : </p><pre><code>def ask_user_int() -&gt; int:\n</code></pre> <ul> <li>La fonction est introduite par le mot cl\u00e9 <code>def</code>, suivi du nom de la fonction puis d'un couple de parenth\u00e8ses <code>()</code>, ce qui rend l'objet callable (\"appelable\").</li> <li>la notation <code>-&gt; int</code> est un type hint, autre\u00f9ment dit un indice de type, qui indique que la valeur renvoy\u00e9e par la fonction sera de type <code>int</code>. Les type hints sont facultatifs en Python, mais strictement n\u00e9cessaires dans d'autres langages (<code>Java</code>, <code>C</code>, <code>C++</code>, etc).</li> <li>Les deux points d\u00e9finissent un bloc de code qui est rep\u00e9r\u00e9 par une indentation, tout comme on d\u00e9finit des blocs dans des structures conditionnelles ou des boucles.</li> </ul> <p>On fait appel \u00e0 cette fonction en appelant le nom <code>ask_user_int()</code>, ce qui d\u00e9clenche le bloc de code, puis cr\u00e9e un objet de retour correspondant \u00e0 la valeur saisie par l'utilisateur.</p> <p>Oubli des parenth\u00e8ses</p> <p>Dans le cas d'un oubli des parenth\u00e8ses lorsqu'on appelle une fonction, on obtient dans le terminal le message suivant :</p> <pre><code>&gt;&gt;&gt; ask_user_int\n&lt;function ask_user_int at 0xe8c1a0&gt;\n</code></pre> <p>Qui signifie simplement que le nom <code>ask_user_int</code> fait r\u00e9f\u00e9rence \u00e0 une fonction dont l'adresse m\u00e9moire est donn\u00e9e sous forme hexad\u00e9cimale.</p> <p>Notez que <code>ask_user_int</code> est juste un nom, l'objet correspondant est stock\u00e9 dans l'espace des objets. On peut donc \u00e9crire les choses suivantes :</p> <pre><code>&gt;&gt;&gt; demande_entier=ask_user_int\n&gt;&gt;&gt; demande_entier()\n</code></pre>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#utilisation-de-la-valeur-de-retour","title":"Utilisation de la valeur de retour","text":"<p>Comme tout objet, la valeur de retour d'une fonction doit elle-m\u00eame \u00eatre stock\u00e9e dans une variable afin de ne pas \u00eatre ramass\u00e9e par le garbage collector.</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; entier = ask_user_int()\n&gt;&gt;&gt; print(f'La racine carr\u00e9e du nombre {entier} est {entier**(1/2)}')\n</code></pre> <p>L'interpr\u00e9teur Python \u00e9value la ligne <code>entier = ask_user_int()</code> :</p> <ul> <li>Il commence par appeler le code correspondant \u00e0 La fonction <code>ask_user_int()</code>.</li> <li>Le code de la fonction demande une saisie \u00e0 l'utilisateur, et une fois l'instruction <code>return</code> atteinte, l'instruction <code>ask_user_int()</code> est remplac\u00e9e \u00e0 l'endroit de l'appel par la valeur saisie par l'utilisateur, converti en objet de type int.</li> <li>L'objet est ensuite stock\u00e9 dans une variable nomm\u00e9e <code>entier</code>, et peut alors \u00eatre utilis\u00e9 en dehors de la fonction.</li> </ul>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#factorisation-du-code-de-pythagore","title":"Factorisation du code de Pythagore","text":"<p>Le code du programme de v\u00e9rification de Pythagore peut alors \u00eatre factoris\u00e9, et devient alors :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>#### Zone des fonctionsbksl-nlbksl-nldef askpy-unduserpy-undint() -&gt; int :bksl-nl    while True :bksl-nl        nb = input(\"Entrez un nombre entier entre 1 et 10 : \")bksl-nl        try :bksl-nl            nb=int(nb)bksl-nl        except ValueError :bksl-nl            print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")bksl-nl        else :bksl-nl            if 1&lt;= nb&lt;= 10 :bksl-nl                return nb #Renvoie l'objet associ\u00e9 \u00e0 nbbksl-nl            else :bksl-nl                print(\"Votre nombre n'est pas compris entre 1 et 10. Veuillez recommencer !\")bksl-nlbksl-nl### Code principalbksl-nlbksl-nlnb1 = askpy-unduserpy-undint()bksl-nlnb2 = askpy-unduserpy-undint()bksl-nlnb3 = askpy-unduserpy-undint()bksl-nlif (nb1py-strpy-str2 == nb2py-strpy-str2 + nb3py-strpy-str2) or (nb2py-strpy-str2 == nb1py-strpy-str2 + nb3py-strpy-str2) or (nb3py-strpy-str2 == nb2py-strpy-str2 + nb1py-strpy-str2) :bksl-nl    print(\"C'est une configuration de Pythagore !\")bksl-nlelse :bksl-nl    print(\"Ce n'est pas une configuration de Pythagore !\")bksl-nl</p> <p>Ce qui a l'avantage d'\u00eatre vraiment vraiment plus clair.</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#exercices","title":"Exercices","text":"<p>Application 2</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction nomm\u00e9e <code>table7</code> qui renvoie la table de multiplication de 7 avec un multiplicateur allant de 0 \u00e0 10, sous la forme d'une cha\u00eene de caract\u00e8res comme ci-dessous :</p> <pre><code>\"7x0=0 \\n 7x1=7 \\n 7x2=14 ...\"\n</code></pre> <p>Indication : le symbole <code>\\n</code>, ins\u00e8re un saut de ligne dans une cha\u00eene de caract\u00e8res.</p> <pre><code>def table7() -&gt; str:\n    table = ''\n    for i in range(11) : \n        table += f'7x{i} = {7*i} \\n'\n    return table\n</code></pre>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#augmenter-la-capacite-des-fonctions-les-arguments-obligatoires","title":"Augmenter la capacit\u00e9 des fonctions : les arguments obligatoires","text":"<p>L'exemple de la fonction <code>ask_user_int</code> est assez limit\u00e9. Dans l'absolu, on pourrait souhaiter que la fonction demande un nombre entier entre 2 valeurs variables, par exemple entre 1 et 100 ou bien entre -10 et 10.</p> <p>Pour ce faire, il faut, dans la d\u00e9finition de la fonction, pr\u00e9ciser des arguments qui seront des objets transmis et nomm\u00e9s initialis\u00e9s \u00e0 certaines valeurs lors de l'appel \u00e0 la fonction :</p> <p>Exemple :</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderdef askpy-unduserpy-undint(bornepy-undmin : int, bornepy-undmax: int) -&gt; int :bksl-nl    while True :bksl-nl        nb = input(f\"Entrez un nombre entier entre {bornepy-undmin} et {bornepy-undmax} : \")bksl-nl        try :bksl-nl            nb=int(nb)bksl-nl        except ValueError :bksl-nl            print(\"Vous n'avez pas saisi un entier. Veuillez recommencer !\")bksl-nl        else :bksl-nl            if bornepy-undmin&lt;= nb&lt;= bornepy-undmax :bksl-nl                breakbksl-nl            else :bksl-nl                print(f\"Votre nombre n'est pas compris entre {bornepy-undmin} et {bornepy-undmax}. Veuillez recommencer !\")bksl-nl    return nb    bksl-nl <p>La fonction <code>ask_user_int</code> utilise maintenant deux arguments <code>borne_min</code> et <code>borne_max</code>, qui sont deux entiers, et renverra toujours un entier</p> <p>Une fois la fonction d\u00e9finie, on peut l'appeler en pr\u00e9cisant les valeurs des deux arguments :</p> <pre><code>&gt;&gt;&gt; ask_user_int(1,100)\n&gt;&gt;&gt; ask_user_int(-10,10)\n</code></pre> <p>Erreurs d'appels et notion de pr\u00e9condition</p> <p>Avec le code actuel de la fonction <code>ask_user_int</code>, on peut rencontrer un certain nombre de difficult\u00e9s. Testez les commandes suivantes dans la console</p> Test 1Test 2Test 3Test 4 CodeProbl\u00e8me <pre><code>ask_user_int()\n</code></pre> <p>L'erreur signal\u00e9e est de type <code>TypeError</code>, et le message d'erreur nous dit qu'il manque 2 arguments lors de l'appel, et que ces arguments sont <code>borne_min</code> et <code>borne_max</code>.</p> CodeProbl\u00e8me <pre><code>ask_user_int(45)\n</code></pre> <p>L'erreur signal\u00e9e est de type <code>TypeError</code>, et le message d'erreur nous dit qu'il manque 1 argument lors de l'appel, et que cet argument est <code>borne_max</code>. Cela signifie aussi que le nom <code>borne_min</code> a bien re\u00e7u la valeur <code>45</code>.</p> CodeProbl\u00e8me <pre><code>ask_user_int(0.5,2.5)\n</code></pre> <p>Aucun v\u00e9ritable erreur n'est lev\u00e9e par Python, bien que les type hints demandent des arguments de type <code>int</code>. Comme dit pr\u00e9c\u00e9demment, ces indications sont facultatives (\u00e0 destination des programmeur\u00b7euse\u00b7s), et ici les transgresser ne pose pas vraiment de probl\u00e8me.</p> CodeProbl\u00e8me <pre><code>ask_user_int(30,10)\n</code></pre> <p>Ici, la fonction tourne en boucle et il est impossible de saisir une r\u00e9ponse qui am\u00e8nera \u00e0 l'instruction <code>return</code>. En effet, lors de l'appel \u00e0 la fonction, on a :</p> <ul> <li><code>borne_inf</code> initialis\u00e9 \u00e0 <code>30</code>;</li> <li><code>borne_sup</code> initialis\u00e9 \u00e0 <code>10</code>;</li> <li>pour atteindre l'instruction <code>return</code>, il faudrait que l'utilisateur\u00b7trice ait saisi\u00b7e un nombre <code>nb</code> \u00e0 la fois sup\u00e9rieur \u00e0 <code>30</code> et inf\u00e9rieur \u00e0 <code>10</code>, ce qui est impossible.</li> </ul> <p>On essayera donc le plus possible de cr\u00e9er des tests dans les fonctions permettant de tester des pr\u00e9conditions, c'est-\u00e0-dire des tests v\u00e9rifiant les propri\u00e9t\u00e9s n\u00e9cessaires concernant les arguments, par exemple ici que les arguments sont bien de type entier, et que <code>borne_inf</code> est bien inf\u00e9rieur ou \u00e9gal \u00e0 <code>borne_sup</code>. Ces tests seront vu dans la partie concernant les assertions.</p> <p>Application 3</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>table_multi(m : int)-&gt; str</code> qui prend un argument entier <code>m</code> et \u00e9crit la table de multiplication de ce nombre, avec un multiplicateur allant de 1 \u00e0 10.</p> <pre><code>def table_multi(m : int ) -&gt; str :\n    table = ''\n    for i in range(11) :\n        table += f'{nb}}x{i} = {nb*i} \\n'\n    return table\n</code></pre> <p>Application 4 : motif dans une chaine</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>trouve_chaine(motif : str, texte : str) -&gt; bool</code>qui prend deux arguments, un <code>motif</code> ( une chaine de caract\u00e8res )  et un <code>texte</code> ( une autre chaine de caract\u00e8res )  et qui renvoie <code>True</code> si le <code>motif</code> est pr\u00e9sent dans la <code>chaine</code>, quel que soit la casse du motif ou celle de la chaine, et <code>False</code> sinon.  Vous pouvez tester avec les lignes suivantes :</p> <pre><code>assert trouve_chaine('Toto', 'Toto va \u00e0 la plage')==True, 'Meme casse pas trouv\u00e9e'\nassert trouve_chaine('Totos', 'Toto va \u00e0 la plage')==False, 'Chaine non pr\u00e9sente trouv\u00e9e'\nassert trouve_chaine('TOTO', 'Toto va \u00e0 la plage')==True, 'Probl\u00e8me de majuscules dans le motif'\nassert trouve_chaine('toto', 'TOTO va \u00e0 la plage')==True, 'Probl\u00e8me de minuscules dans le motif'\nassert trouve_chaine('ToTo', 'OtOtO va \u00e0 la plage')==True, 'Que dire ?'\n</code></pre> <pre><code>def trouve_chaine(motif : str, texte: str) -&gt; bool:\n    return motif.lower() in texte.lower()\n</code></pre>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#augmenter-la-capacite-des-fonctions-les-arguments-optionnels","title":"Augmenter la capacit\u00e9 des fonctions : les arguments optionnels","text":"<p>Notre fonction <code>ask_user_int</code> commence \u00e0 \u00eatre int\u00e9ressante. Mais nous pourrions souhaiter personnaliser le message de la question, sans pour autant avoir envie de le changer syst\u00e9matiquement. C'est tout \u00e0 fait possible en Python, gr\u00e2ce aux arguments optionnels. Il s'agit d'arguments dont le nom est donn\u00e9 dans la fonction, mais avec une valeur par d\u00e9faut. Ainsi :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>def askpy-unduserpy-undint(bornepy-undmin : int, bornepy-undmax : int, prenom : str ='Inconnu' ) -&gt; int :bksl-nl    while True :bksl-nl        nb = input(f\"{prenom}, entrez un nombre entier entre {bornepy-undmin} et {bornepy-undmax} : \")bksl-nl        try :bksl-nl            nb=int(nb)bksl-nl        except ValueError :bksl-nl            print(f\"{Inconnu}, vous n'avez pas saisi un entier. Veuillez recommencer !\")bksl-nl        else :bksl-nl            if bornepy-undmin&lt;= nb&lt;= bornepy-undmax :bksl-nl                breakbksl-nl            else :bksl-nl                print(f\"{Inconnu}, votre nombre n'est pas compris entre {bornepy-undmin} et {bornepy-undmax}. Veuillez recommencer !\")bksl-nl    return nbbksl-nl</p> <p>Ainsi, la fonction ci-dessus poss\u00e8de trois arguments :</p> <ul> <li>deux arguments obligatoires, <code>borne_min</code> et <code>borne_max</code>, de type <code>int</code> ;</li> <li>un argument optionnel, <code>prenom</code>, de type <code>str</code>, dont la **valeur par d\u00e9faut est la chaine <code>Inconnu</code>.</li> </ul> <p>Il est \u00e0 noter qu'imp\u00e9rativement les arguments obligatoires doivent \u00eatre plac\u00e9s avant les arguments optionnels.</p> <p>On peut alors appeler la fonction des diff\u00e9rentes mani\u00e8res suivantes (\u00e0 tester) :</p> 123 <pre><code>ask_user_int(0, 10)\n</code></pre> <pre><code>ask_user_int(0, 10, prenom='Toto')\n</code></pre> <pre><code>ask_user_int(0, prenom='foo', 10)\n</code></pre> &gt;&gt;&gt;  <p>Application 5 : arguments optionnels</p> Enonc\u00e9Solution <p>Compl\u00e9ter la fonction <code>table_multi</code> afin qu'elle utilise deux arguments optionnels, la valeur de d\u00e9part, fix\u00e9e \u00e0 0 initialement, et la valeur d'arriv\u00e9e du multiplicateur, fix\u00e9e \u00e0 10 initialement.</p> <pre><code>def table_multi(nb : int, depart : int = 0, fin : int =10) -&gt; str :\n    table = ''\n    for i in range(depart, fin+1) :\n        table += f'{nb}}x{i} = {nb*i} \\n'\n    return table\n</code></pre> <p>Application 6 : arguments optionnels</p> Enonc\u00e9Solution <p>R\u00e9\u00e9crire la fonction <code>trouve_chaine</code> afin qu'elle utilise un argument bool\u00e9en optionnel <code>verifCasse</code>, afin de d\u00e9terminer si le <code>motif</code> est pr\u00e9sent dans le <code>texte</code> en v\u00e9rifiant la casse ou non. Par d\u00e9faut l'argument sera <code>False</code>. Vous pouvez utiliser les tests ci-dessous :</p> <pre><code>### Cette cellule est une cellule vous permettant de tester votre fonction\n##les assertions suivantes sont les m\u00eame que pr\u00e9c\u00e9demment\nassert trouve_chaine('Toto', 'Toto va \u00e0 la plage')==True, 'Meme casse pas trouv\u00e9e'\nassert trouve_chaine('Totos', 'Toto va \u00e0 la plage')==False, 'Chaine non pr\u00e9sente trouv\u00e9e'\nassert trouve_chaine('TOTO', 'Toto va \u00e0 la plage')==True, 'Probl\u00e8me de majuscules dans le motif'\nassert trouve_chaine('toto', 'TOTO va \u00e0 la plage')==True, 'Probl\u00e8me de minuscules dans le motif'\nassert trouve_chaine('ToTo', 'OtOtO va \u00e0 la plage')==True, 'Que dire ?'\n# Mais on rajoute celles-ci :\nassert trouve_chaine('Toto', 'Toto va \u00e0 la plage',verifCasse = True )==True, 'Meme casse pas trouv\u00e9e'\nassert trouve_chaine('TOTO', 'TOTO va \u00e0 la plage',verifCasse = True )==True, 'Meme casse pas trouv\u00e9e'\nassert trouve_chaine('Totos', 'Toto va \u00e0 la plage',verifCasse = True)==False, 'Chaine non pr\u00e9sente trouv\u00e9e'\nassert trouve_chaine('TOTO', 'Toto va \u00e0 la plage',verifCasse = True)==False, 'Probl\u00e8me de majuscules dans le motif'\nassert trouve_chaine('toto', 'TOTO va \u00e0 la plage',verifCasse = True)==False, 'Probl\u00e8me de minuscules dans le motif'\nassert trouve_chaine('ToTo', 'OtOtO va \u00e0 la plage',verifCasse = True)==False, 'Que dire ?'\n</code></pre> <pre><code>def trouve_chaine(motif : str,texte : str, verifCasse : bool=False) -&gt; bool :\n    if verifCasse==True :\n        return motif in texte\n    else :\n        return  motif.lower() in texte.lower() :\n</code></pre>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#commenter-son-code-les-docstrings","title":"Commenter son code : les docstrings","text":"<p>Commenter son code</p> <p>Une bonne habitude, \u00e0 prendre imm\u00e9diatement, est celle de commenter son code, c'est-\u00e0-dire d'expliquer l'impl\u00e9mentation de votre code sous la forme de commentaires, \u00e9crits en fran\u00e7ais (ou mieux, en anglais). Les commentaires sont des lignes non-lues par l'interpr\u00e9teur Python, commen\u00e7ant par le symbole di\u00e8se <code>#</code>.</p> <p>Ces explications sont importantes, car vous vous rendrez vite compte que vous serez parfois incapable de comprendre un code que vous avez \u00e9crit vous-m\u00eame quelques semaines voir quelques jours auparavant !</p> <p>Alors imaginez celui qui doit lire votre code, mais qui ne l'a pas \u00e9crit... </p> <p>Les concepteur\u00b7trice\u00b7s de Python ont cr\u00e9\u00e9 une fonction sp\u00e9cifique permettant d'obtenir des informations sur les autres objets : la fonction <code>help</code>.</p> <p>Testez par exemple la commande <code>help(print)</code> dans la console suivante, puis essayez avec d'autres objets de Python.</p> &gt;&gt;&gt;  <p>La fonction <code>help</code> va chercher dans l'objet pass\u00e9 en argument sa docstring, litt\u00e9ralement chaine de documentation, qui est une chaine de caract\u00e8res cr\u00e9e par le ou la codeur\u00b7euse pr\u00e9sentant l'utilisation de la fonction, ses param\u00e8tres obligatoires, ses param\u00e8tres optionnels, etc... Une docstring est construite comme une chaine de caract\u00e8res non nomm\u00e9e pr\u00e9sent\u00e9e imm\u00e9diatement apr\u00e8s la d\u00e9claration de la fonction, comme dans l'exemple ci-dessous :</p> ###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarder <p>def somme(a, b) :bksl-nl    \"\"\" fonction qui renvoie la somme des arguments a et b, bksl-nl    en v\u00e9rifiant si a et b sont bien du m\u00eame type, bksl-nl    et qui renvoie None sinon.bksl-nl    Par exemple :bksl-nlbksl-nl    somme(4, 3) renvoie 7bksl-nlbksl-nl    somme(4, \"3\") renvoie Nonebksl-nl   bksl-nl    \"\"\"bksl-nl    if type(a) == type(b) :bksl-nl        return a+bbksl-nl    else :bksl-nl        return Nonebksl-nl</p> <p>La fonction <code>somme</code> contient donc une docstring - introduite par trois guillemets (pour permettre les sauts de lignes). Celle-ci d\u00e9crit l'effet de la fonction, de mani\u00e8re exacte.</p> <p>On peut alors acc\u00e9der \u00e0 la docstring d'une fonction en utilisant la fonction built-in <code>help</code> :</p> <p>Testez par exemple <code>help(somme)</code>.</p> <p>Les docstrings</p> <p>Une docstring est essentielle pour comprendre l'utilit\u00e9 d'une fonction ! Vous devrez en utiliser le plus souvent possible !</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#notion-de-portee-des-variables","title":"Notion de port\u00e9e des variables","text":"<p>Au sein d'un m\u00eame programme, les variables d\u00e9finies n'ont pas syst\u00e9matiquement la m\u00eame port\u00e9e. La port\u00e9e d'une variable, c'est l'espace des objets/noms (on parle aussi de monde) dans lequel est d\u00e9fini cette variable.</p> <p>En utilisant le site Python Tutor, nous allons essayer de comprendre cette notion de port\u00e9e des variables.</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#variables-globales","title":"Variables globales","text":"<p>Dans l'exemple ci-dessus, la variable <code>gvar</code> est d\u00e9finie dans l'espace de nom global (global frame). Elle est accessible en lecture depuis l'int\u00e9rieur de la fonction <code>f</code>. On parlera alors de variable globale.</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#variables-locales","title":"Variables locales","text":"<p>Dans l'exemple ci-dessus, la variable <code>gvar2</code> est d\u00e9finie dans l'espace des noms associ\u00e9 \u00e0 la fonction <code>f</code>, et qui est cr\u00e9\u00e9 au moment de l'appel \u00e0 cette fonction (frame f). Cet espace est d\u00e9truit par le garbage collector d\u00e8s que l'ex\u00e9cution de la fonction est termin\u00e9 (une fois la valeur de <code>return</code> renvoy\u00e9e dans l'espace appelant). Il devient donc impossible d'utiliser la variable <code>gvar2</code> puisqu'elle a disparue. <code>gvar2</code> est une variable locale \u00e0 la fonction <code>f</code>.</p> <p>Changer la valeur d'une variable globale</p> <p>Regardons maintenant le code suivant :</p> <p> </p> <p>Le code pr\u00e9c\u00e9dent d\u00e9clenche une erreur <code>UnboundLocalError</code> en ligne 3. Cela signifie que l'interpr\u00e9teur Python ne peut pas effectuer la ligne <code>gvar=gvar+2</code> car il cherche une variable <code>gvar</code> qu'il peut modifier. Or une variable d\u00e9finie hors d'une fonction ne peut pas \u00eatre modifi\u00e9e par celle-ci.</p> <p>Il est par contre possible de travailler sur une copie de la variable souhait\u00e9e (uniquement dans le cas des types primitifs <code>int</code>, <code>float</code>, <code>str</code>...), en utilisant une fonction ayant un argument. Il faudra par cons\u00e9quent retourner la valeur chang\u00e9e* pour qu'elle soit effective. Par exemple comparez les deux scripts suivants :</p> Code incorrectCode correct <p> </p> <p>Ici on constate qu'en fait il y a deux variables <code>a</code> :</p> <ul> <li>une en dehors de la fonction, qui n'est pas modifi\u00e9e. C'est une variable globale.</li> <li>une \u00e0 l'int\u00e9rieur de la fonction, qui peut \u00eatre modifi\u00e9e, mais qui ne change pas la variable globale. C'est une variable locale \u00e0 la fonction.</li> </ul> <p>La fonction <code>f</code> ne renvoyant aucune donn\u00e9e, la variable locale <code>a</code> est d\u00e9truite apr\u00e8s la fin de la fonction <code>f</code>. </p> <p> </p> <p>Ici on a rajout\u00e9 deux lignes :</p> <ul> <li><code>return a</code> qui permet \u00e0 la fonction de renvoyer la valeur modifi\u00e9e ;</li> <li><code>a = f(a)</code> La valeur renvoy\u00e9e par l'appel <code>f(a)</code> est affect\u00e9 au nom de variable <code>a</code>. L'op\u00e9ration effectu\u00e9e \u00e0 l'int\u00e9rieur de la fonction se retrouve r\u00e9percut\u00e9e sur la variable globale <code>a</code>.</li> </ul>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#tests-assertions-et-module-doctest","title":"Tests, assertions et module Doctest","text":""},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#preconditions","title":"Pr\u00e9conditions","text":"<p>Comme nous l'avons vu pour la fonction <code>ask_user_int</code>, il est souvent n\u00e9cessaire de tester des pr\u00e9conditions sur les arguments d'une fonction, pour s'assurer que celle-ci fonctionnera bien selon le sch\u00e9ma voulu.</p> <p>Une m\u00e9thode pour tester les pr\u00e9conditions est d'utiliser des assertions. </p> <p>L'instruction <code>assert</code> de Python fonctionne de la mani\u00e8re suivante :</p> <pre><code> assert trouve_chaine('Toto', 'Toto va \u00e0 la plage')==True, 'Meme casse pas trouv\u00e9e'\n</code></pre> <p>L'instruction <code>assert</code> teste un bool\u00e9en, ici <code>trouve_chaine('Toto', 'Toto va \u00e0 la plage')==True</code>. Il peut alors se produire deux cas :</p> <ul> <li>soit le bool\u00e9en est <code>True</code>, auquel cas l'interpr\u00e9teur passe \u00e0 la ligne suivante (il ne se passe rien de visible) ;</li> <li>soit le bool\u00e9en est <code>False</code>, auquel cas l'interpr\u00e9teur arr\u00eate le code en levant une erreur de type <code>AssertionError</code> et affiche la chaine de caract\u00e8re pass\u00e9e en second argument, ici <code>'Meme casse pas trouv\u00e9e'</code>.</li> </ul> <p>Correction de la fonction <code>ask_user_int</code></p> <pre><code>def ask_user_int(borne_min : int, borne_max : int, prenom : str ='Inconnu' ) -&gt; int :\n\"\"\" Fonction demandant un entier compris entre borne_nf et borne_sup.\n    personnalisation du message avec l'argument optionnel prenom.\n    renvoir un objet de type entier.\n    \"\"\"\n    assert type(borne_inf) == int and type(borne_sup) == int, \"Erreur de type sur borne_inf et borne_sup\"\n    assert type(prenom) == str, \"Erreur de type sur prenom\"\n    assert borne_inf &lt;= borne_sup , \"borne_inf n'est pas inf\u00e9rieure \u00e0 borne_sup\"\n\n    while True :\n        ...# Le code ici n'est pas chang\u00e9        \n</code></pre> <p>Testez maintenant cette fonction avec de mauvaises valeurs pour les arguments.</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#reflechir-avant-dagir-ecrire-les-tests-avant-la-fonction","title":"R\u00e9fl\u00e9chir avant d'agir : \u00e9crire les tests avant la fonction","text":"<p>Lorsqu'on \u00e9crit une fonction, il est tr\u00e8s important d'avoir une id\u00e9e pr\u00e9cise de ce que la fonction doit renvoyer, y compris dans les cas extr\u00eames ou cas sp\u00e9cifiques.</p> <p>Par exemple, on pourrait consid\u00e9rer une fonction <code>coefficient_directeur</code> qui donne le coefficient directeur d'une droite quand on lui passe en argument les coordonn\u00e9es de deux points \\(A\\) et \\(B\\). Je rappelle que le calcul du coefficient directeur de la droite \\((AB)\\) se fait par l'interm\u00e9diaire de la formule :</p> \\[m = \\frac{y_B-y_A}{x_B-x_A}\\] <p>Ainsi nous aimerions que la fonction travaille avec 4 arguments de type entiers  <code>xA, yA, xB, yB</code>, qu'elle renvoie le coefficient directeur de \\((AB)\\) sous la forme d'un flottant si ce coefficient existe, et qu'elle renvoie <code>None</code> quand il n'existe pas. On, d\u00e9finit ici ce qu'on appelle une interface de la fonction :</p> <pre><code>def coefficient_directeur(xA : int, yA : int, xB : int, yB : int) -&gt; float :\n\"\"\" Renvoie le coefficient directeur de la droite (AB) telle que :\n        A (xA ; yA) et B(xB ; yB), et les coordonn\u00e9es de A ety B sont enti\u00e8res.\n        Dans le cas ou le coefficient directeur n'existe pas, renvoie None\n    \"\"\"\n    ... \n</code></pre> <p>On souhaite donc pr\u00e9voir en avance diff\u00e9rents cas de fonctionnement de la fonction, et on aimerait v\u00e9rifier que les calculs effectu\u00e9s par la fonction correspondent bien \u00e0 ces cas.</p> <p>Par exemple, nous aimerions que la fonction v\u00e9rifie le test suivant :</p> <pre><code>&gt;&gt;&gt; coefficient_directeur(2, 4, 3, 7)\n3.0\n</code></pre> <p>\u00c9crire des tests</p> Enonc\u00e9Solution <ol> <li>Ecrire 5 tests prenant en compte tous les cas possibles d'utilisation de la fonction, en supposant que les types fournis en argument soient bien des entiers.</li> <li>Compl\u00e9ter la fonction <code>coefficient_directeur</code> afin qu'elle remplisse le r\u00f4le qui lui est demand\u00e9.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#tester-avec-le-module-doctest","title":"Tester avec le module doctest","text":"<p>Pyhton \u00e9tant user friendly, il permet au programmeur de tester automatiquement, gr\u00e2ce au module <code>doctest</code>.</p> <p>Un module Python est un fichier (ou un ensemble de fichiers) qui comporte(nt) des objets et des fonctions qui peuvent \u00eatre ajout\u00e9s aux fonctionnalit\u00e9 de base de Python. Il en existe un tr\u00e8s grand nombre, tous \u00e9tant sp\u00e9cialis\u00e9s dans un domaine. On trouve par exemple :</p> <ul> <li>le module math, qui contient beaucoup de fonctions math\u00e9matiques ;</li> <li>le module turtle, qui permet de dessiner g\u00e9om\u00e9triquement ;</li> <li>le module pygame, qui est un module permettant de g\u00e9rer les diff\u00e9rents \u00e9l\u00e9ments d'un jeu vid\u00e9o ;</li> <li>le module panda, qui est utilis\u00e9 pour faire du traitement de donn\u00e9es ;</li> <li>le module flask, qui permet de cr\u00e9er une application web</li> <li>...</li> </ul> <p>Un module doit \u00eatre charg\u00e9 en m\u00e9moire une fois (de pr\u00e9f\u00e9rence au d\u00e9but du code), par l'interm\u00e9diaire de la commande :</p> <pre><code>import nom_du_module\n</code></pre> Mais non, ca ne se fait pas que comme \u00e7a ! <p>Oui, vous avez raison, mais ce n'est pas le cas de ce cours, nous verrons l'import de modules plus tard dans l'ann\u00e9e...</p> <p>Le module doctest, lui, permet d'int\u00e9grer \u00e0 la docstring un ensemble de tests qui sont v\u00e9rifi\u00e9s par l'appel de la fonction testmod du module doctest.</p> <p>Par exemple, copiez-collez le code suivant dans un fichier :</p> <pre><code>import doctest # On charge en m\u00e9moire le module doctest\n\n# Zone de d\u00e9claration des fonctions\n\ndef times2(n : object) -&gt; object:\n\"\"\"\n    Fonction qui multiplie par 2, selon le type d'objet\n\n&gt;&gt;&gt; times2(4)\n8\n&gt;&gt;&gt; times2(5.4)\n10.8\n&gt;&gt;&gt; times2('a')\n'aa'\n\"\"\"\n    return 2*n\n\n\n# Zone du script global\n\ndoctest.testmod() # Lance les tests des fonctions d\u00e9clar\u00e9es\n</code></pre> <p>L'appel \u00e0 la fonction <code>doctest.testmod()</code> d\u00e9clenche les trois tests pr\u00e9sents dans la doctsring, et v\u00e9rifie que les r\u00e9sultats de la fonctions correspondent \u00e0 ceux fournit dans la docstring.</p> <p>Application 7 : Ajouter une fonction et des tests</p> Enonc\u00e9Solution <p>Cr\u00e9ez une fonction <code>times3</code> qui multiplie un objet par 3, en \u00e9crivant les tests correspondants.</p> <p>A venir !</p> <p>Je me servirai de doctests ou bien d'assertions pour estimer la justesse de vos fonctions et de vos programmes. Une bonne id\u00e9e serait de TOUJOURS fournir un jeu d'exemple avant de se lancer dans la construction d'une fonction.</p>"},{"location":"NSI/Premiere/C01/Fonctions_Assertions/#exercices_1","title":"Exercices","text":"<p>Dans tous les exercices suivants, on supposera que l'utilisateur\u00b7trice de la fonction fournit des arguments du bon type</p> <p>Pour tester vos fonctions avec les jeux fournis, n'oubliez pas :</p> <ul> <li>d'importer le module avec <code>import doctest</code> ;</li> <li>de lancer les tests avec <code>doctest.testmod()</code> ;</li> </ul> <p>Vous pourrez cr\u00e9er un seul fichier contenant l'ensemble des fonctions ci-dessous.</p> <ol> <li> <p>Ecrire une fonction qui renvoie le maximum de deux nombres <code>\u00ecnt</code> donn\u00e9s :</p> <pre><code>def maxi(a : int,b :int) -&gt; int :\n\"\"\"\n    Fonction qui renvoie le maximum de deux nombres de type int.\n&gt;&gt;&gt; maxi(12,3)\n12\n&gt;&gt;&gt; maxi(-5,9)\n9\n&gt;&gt;&gt; maxi(6,6)\n6\n    \"\"\"\n</code></pre> </li> <li> <p>\u00c9crire une fonction qui renvoie le minimum de deux nombres <code>int</code> donn\u00e9s :</p> <pre><code>def mini(a : int, b : int ) -&gt; int :\n\"\"\"\n    Fonction qui renvoie le minimum de deux nombres\n&gt;&gt;&gt; mini(12,3)\n3\n&gt;&gt;&gt; mini(-5,9)\n-5\n&gt;&gt;&gt; mini(6,6)\n6\n    \"\"\"\n</code></pre> </li> <li> <p>\u00c9crire une fonction qui renvoie le maximum de trois nombres <code>int</code> donn\u00e9s :</p> <pre><code>def maxi3(a : int, b : int, c : int) -&gt; int :\n\"\"\"\n    Fonction qui renvoie le maximum de trois nombres\n&gt;&gt;&gt; maxi3(5,12,3)\n12\n&gt;&gt;&gt; maxi3(-5,-7,2)\n2\n&gt;&gt;&gt; maxi3(6,6,6)\n6\n&gt;&gt;&gt; maxi3(5,7,7)\n7\n    \"\"\"\n</code></pre> </li> <li> <p>\u00c9crire une fonction qui renvoie le nombre interm\u00e9diaire dans trois nombres <code>int</code> donn\u00e9s</p> <pre><code>def intermediaire(a : int, b : int, c : int) -&gt; int :\n\"\"\"\n    Fonction qui renvoie le nombre interm\u00e9diaire deux nombres\n&gt;&gt;&gt; intermediaire(12,8,3)\n8\n&gt;&gt;&gt; intermediaire(-5,9,0)\n0\n&gt;&gt;&gt; intermediaire(7,7,7)\n7\n&gt;&gt;&gt; intermediaire(7,4,7)\n7\n&gt;&gt;&gt; intermediaire(4,4,7)\n4\n    \"\"\"\n</code></pre> </li> <li> <p>Erire une fonction qui supprime tous les caract\u00e8res qui ne sont pas des lettres ( majuscules ou minuscules, sans accents ) d'une chaine de caract\u00e8res donn\u00e9e.</p> <pre><code>def rienQueDesLettres(chaine) :\n\"\"\"\n&gt;&gt;&gt; rienQueDesLettres('  toto  ')\n'toto'\n&gt;&gt;&gt; rienQueDesLettres('123Toto456')\n'Toto'\n&gt;&gt;&gt; rienQueDesLettres(\"Et!C'est Toto ?\")\n'EtCestToto'\n    \"\"\"\n</code></pre> </li> <li> <p>Ecrire la fonction coefficient_directeur qui v\u00e9rifie les conditions ci-dessous </p> <pre><code>def coefficient_directeur(xA,yA,xB,yB) :\n\"\"\"Fonction renvoyant le coefficient directeur de la droite (AB)\nen connaissant les coordonn\u00e9es des points A et B, ou None si c'est impossible\n&gt;&gt;&gt; coefficient_directeur(0,0,1,5)\n5\n&gt;&gt;&gt; coefficient_directeur(0,0,2,10)\n5\n&gt;&gt;&gt; coefficient_directeur(3,4,4,6)\n2\n&gt;&gt;&gt; coefficient_directeur(3,4,4,6)\n2\n&gt;&gt;&gt; coefficient_directeur(3,4,4,4)\n0\n&gt;&gt;&gt; coefficient_directeur(3,4,4,3)\n-1\n&gt;&gt;&gt; coefficient_directeur(3,4,3,7)==None\nTrue\n&gt;&gt;&gt; coefficient_directeur(3,4,3,4)==None\nTrue\n&gt;&gt;&gt; coefficient_directeur(4,4,3,4)==None\nFalse\n    \"\"\"\n###VOTRE CODE ICI\n</code></pre> </li> <li> <p>Ecrire une fonction - et le jeu de test correspondant, qui calcule l'ordonn\u00e9e \u00e0 l'origine d'une droite \\((AB)\\), en prenant en argument les coordonn\u00e9es des points \\(A\\) et \\(B\\) comme la fonction pr\u00e9c\u00e9dente, et qui renvoie None si c'est impossible.</p> </li> <li> <p>Ecrire une fonction - et le jeu de test qui va avec,  qui renvoie l'\u00e9quation r\u00e9duite de la droite \\((AB)\\), en prenant en argument les coordonn\u00e9es des points \\(A\\) et \\(B\\) comme dans les fonctions pr\u00e9c\u00e9dentes.</p> </li> <li> <p>Ecrire une fonction qui donne le discriminant d'un trin\u00f4me du second degr\u00e9 $ax^2 +bx+c $, en fournissant un jeu d'exemples complets.</p> </li> </ol>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/","title":"Binaire et codage des entiers","text":""},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#binaire-et-representation-des-entiers","title":"Binaire et repr\u00e9sentation des entiers","text":""},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#linformation-binaire","title":"L'information binaire","text":""},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#le-bit","title":"Le bit","text":"<p>L'histoire de l'informatique est intrins\u00e8quement d\u00e9pendante de l'histoire de la ma\u00eetrise de l'\u00e9lectricit\u00e9. Fondamentalement, tout ordinateur est construit \u00e0 partir de circuits \u00e9lectroniques qui:</p> <ul> <li>soit ne laissent pas passer le courant \u00e9lectrique (Off);</li> <li>soit laissent passer le courant \u00e9lectrique (In).</li> </ul> <p>Exemple</p> <p>Un circuit contenant un unique interrupteur admet donc deux \u00e9tats, il est binaire dans ce sens.</p> <p>D\u00e9finition : bit</p> <p>Un bit est l'unit\u00e9 \u00e9l\u00e9mentaire d'information pouvant prendre deux valeurs distinctes, not\u00e9es 0 et 1 (binaire). Le mot \u00ab bit \u00bb vient de l'anglais \u00ab Binary Digit \u00bb, soit litt\u00e9ralement chiffre binaire.</p> <p>La notation internationale pour le bit est \\(b\\). On parlera alors de \\(kb\\), \\(Mb\\), \\(Gb\\).</p>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#compter-en-binaire","title":"Compter en binaire","text":"<p>Pour compter en binaire, on applique le m\u00eame algorithme qu'en d\u00e9cimal : on ajoute 1 jusqu'\u00e0 \u00e9puiser les chiffres disponibles, et quand on a termin\u00e9, on ajoute un chiffre suppl\u00e9mentaire au nombre. En, binaire, cela donne :</p> Nombre en binaire Nombre en d\u00e9cimal 0 0 1 1 10 2 11 3 100 4 101 5 110 6 111 7 1000 8 ... ..."},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#grouper-les-bits","title":"Grouper les bits","text":"<p>Une information binaire est donc une suite de \\(0\\) et de \\(1\\). Cette information peut-\u00eatre de diff\u00e9rente nature, tout d\u00e9pend de la norme d'encodage utilis\u00e9e. En soit, la m\u00eame suite binaire peut signifier des choses totalement diff\u00e9rentes comme :</p> <ul> <li>un nombre entier ;</li> <li>un nombre flottant ;</li> <li>un caract\u00e8re ;</li> <li>une note de musique ;</li> <li>...</li> </ul> <p>Exemple</p> <p>L'\u00e9criture binaire \\(101010\\) signifie :</p> <ul> <li>\\(42\\) dans les nombres entiers non sign\u00e9s (c'est-\u00e0-dire positifs) ;     <pre><code>&gt;&gt;&gt; int('101010',2)\n42\n</code></pre></li> <li>Le caract\u00e8re * en UTF-8 :     <pre><code>&gt;&gt;&gt; chr(int('101010',2))\n'*'\n</code></pre></li> </ul> <p>Bits et quantit\u00e9s d'informations</p> <p>Avec un unique bit, on ne peux stocker que deux informations (deux nombres, deux caract\u00e8res, deux notes de musiques,...). La quantit\u00e9 d'information diff\u00e9rentes pouvant \u00eatre repr\u00e9sent\u00e9es d\u00e9pend donc du nombre de bits utilis\u00e9s :</p> Avec \\(2\\) bits :Avec \\(3\\) bits :Avec \\(4\\) bits : Done <p>On peux repr\u00e9senter \\(2 \\times 2 = 2^2 = 4\\) informations diff\u00e9rentes. Par exemple, avec des caract\u00e8res :</p> Mot Caract\u00e8re 00 A 01 B 10 C 11 D Done <p>On peux repr\u00e9senter \\(2 \\times 2 \\times 2= 2^3 = 8\\) informations diff\u00e9rentes. Par exemple, avec des caract\u00e8res :</p> Mot Caract\u00e8re 000 A 001 B 010 C 011 D 100 E 101 F 110 G 111 H Done <p>On peux repr\u00e9senter \\(2 \\times 2 \\times 2 \\times 2= 2^4 = 16\\) informations diff\u00e9rentes. Par exemple, avec des caract\u00e8res, on pourra repr\u00e9senter jusqu'\u00e0 <code>P</code>, qui sera repr\u00e9sent\u00e9 par le mot binaire <code>1111</code></p> <p>Avec un syst\u00e8me \u00e0 \\(n\\) bits, on peut repr\u00e9senter \\(2^n\\) informations diff\u00e9rentes.</p>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#octets","title":"Octets","text":"<p>Octets</p> <p>Pour quantifier les informations binaires, on utilise souvent le mot octet (abusivement appel\u00e9 aussi byte dans le monde anglo-saxon).</p> <p>Un octet est un groupement de \\(8\\) bits. Il permet de repr\u00e9senter \\(2^8 = 256\\) informations diff\u00e9rentes.</p> <p>La notation internationale pour l'octet est \\(o\\). On parlera alors de \\(ko\\) ( \\(1~ko = 1000 o\\) ), \\(Mo\\) ( \\(1~Mo = 10^3~ko = 10^6~o\\) ), \\(Go\\) ( \\(1~Go = 10^3~Mo = 10^9~o\\) ), etc, mais aussi de \\(ko/s\\), \\(Mo/s\\), etc...</p> <p>Remarque</p> <p>Les pr\u00e9fixes kilo, Mega, Giga ..., sont bien ceux du syst\u00e8me international, c'est-\u00e0-dire ceux pour \\(10^3\\), \\(10^6\\), \\(10^9\\)... On verra dans la partie suivante qu'ils sont parfois confondus avec les pr\u00e9fixes binaires ( kibi, Mibi, Gibi...), pour lesquels le facteur de changement d'unit\u00e9 n'est pas \\(10^3\\) mais \\(2^10 = 1024\\). Ainsi \\(1 Mibi = 1024 kibi\\).</p>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#ecritures-en-dautres-bases","title":"Ecritures en d'autres bases","text":""},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#les-entiers-en-base-decimale","title":"Les entiers en base d\u00e9cimale","text":"<p>Rappels : Base d\u00e9cimale </p> <p>Un nombre entier \u00e9crit dans une base d\u00e9cimale ( base \\(10\\) ) v\u00e9rifie les conditions suivantes :</p> <ul> <li>il est \u00e9crit avec les dix chiffres arabes : \\(0,1,2,3,4,5,6,7,8,9\\) ;</li> <li>chaque chiffre poss\u00e8de un poids, repr\u00e9sentant une puissance de \\(10\\), le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\).</li> </ul> <p>Exercice</p> Enonc\u00e9Solution <ol> <li>\\(14~763 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 7 \\times 10^{\\dots}+ 6\\times 10^{\\dots} + 3\\times 10^{\\dots}\\)</li> <li>\\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\)</li> </ol> <ol> <li>\\(14~763 = 1 \\times 10^{4} + 4 \\times 10^{3} + 7 \\times 10^{2}+ 6\\times 10^{1} + 3\\times 10^{0}\\)</li> <li>\\(100~042 = 1 \\times 10^{\\dots} + 4 \\times 10^{\\dots} + 2 \\times 10^{\\dots}\\)</li> </ol>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#la-base-2-systeme-binaire","title":"La base 2 (syst\u00e8me binaire)","text":"<p>Syst\u00e8me binaire</p> <p>Un nombre entier \u00e9crit dans le syst\u00e8me binaire v\u00e9rifie les conditions suivantes :</p> <ul> <li>il est \u00e9crit avec les deux chiffres : \\(0\\) et \\(1\\).</li> <li>chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(2\\), le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\).</li> </ul> <p>Remarques et notations</p> <p>L'\u00e9criture \\(101\\) poss\u00e8de aussi bien un sens en binaire (un-z\u00e9ro-un) qu'en d\u00e9cimal ( cent-un ). Pour lever l'ambigu\u00eft\u00e9 , on \u00e9crira :</p> <ul> <li>\\((101)_{10}\\) ou simplement \\(101\\) pour le nombre en base \\(10\\) ;</li> <li>\\((101)_2\\) pour le nombre en base \\(2\\).</li> </ul> <p>Exercice</p> Enonc\u00e9Solution <p>Consid\u00e9rons le nombre \\((101010)_2\\). Convertissez ce nombre binaire en d\u00e9cimal :</p> \\[ \\begin{array}{cccccccc} (101010)_2&amp;=&amp; 1 \\times 2^{5}&amp;+ 0 \\times 2^{4}&amp;+ 1 \\times 2^{3}&amp;+ 0 \\times 2^{2}&amp;+ 1 \\times 2^{1}&amp;+ 0 \\times 2^{0}\\\\ &amp; = &amp; 1 \\times 32 &amp; + 0 \\times 16&amp; + 1 \\times 8&amp; + 0 \\times 4&amp; + 1 \\times 2&amp; + 0 \\times 1\\\\ &amp;=&amp; 42 &amp;&amp;&amp;&amp;&amp;\\\\ \\end{array} \\] <p>Exercice : Conversions de la base \\(2\\) vers la base \\(10\\)</p> Enonc\u00e9Solution <p>Ecrire les nombres suivants en base \\(10\\) :</p> <ol> <li>\\((101)_2\\)</li> <li>\\((11111111)_2\\)</li> <li>\\((10010011)_2\\)</li> </ol> <p>A venir !</p> <p>Exercice : Un peu de Python</p> Enonc\u00e9 <p>Compl\u00e9ter la fonction suivante, sans utiliser <code>int(x,2)</code>, afin qu'elle renvoie en base 10 le nombre \\(x\\) pass\u00e9 en argument en base \\(2\\), sous la forme d'une chaine de caract\u00e8res. Vous pouvez cependant utiliser la fonction built-in <code>int</code> afin de convertir une chaine de carat\u00e8re en un entier. </p><pre><code>def bin2dec(x) :\n\"\"\"fonction convertissant le nombre (x)_2 en base 10\n&gt;&gt;&gt; bin2dec('0')\n0\n&gt;&gt;&gt; bin2dec('1')\n1\n&gt;&gt;&gt; bin2dec('11')\n3\n&gt;&gt;&gt; bin2dec('1000')\n8\n&gt;&gt;&gt; bin2dec('11111111')\n255\n    \"\"\"\n</code></pre>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#conversions-de-la-base-10-vers-la-base-2","title":"Conversions de la base \\(10\\) vers la base \\(2\\)","text":"<p>M\u00e9thode : Algorithme de conversion du nombre \\((n)_{10}\\) en base \\(2\\)</p> En langage naturelSous forme de diagramme <pre><code>fonction dec2bin(n) :\n    base2 &lt;- chaine de caract\u00e8re vide\n    Tant que n!=0 :\n        base2 &lt;- caractere(n%2)+base2\n        n &lt;- n//2\n    Renvoyer base2 \n</code></pre> <pre><code>\nflowchart TB\nA(Nombre n positif en d\u00e9cimal) --&gt; B(base2 chaine de caract\u00e8re vide)\nB --&gt; C{n != 0}\nC --&gt; |Non| F(base2 est la repr\u00e9sentation de n en binaire)\nsubgraph Z[\"Boucle principale\"]\n    direction LR\n    C --&gt;|oui| D[Ajouter n%2 au d\u00e9but de base2];\n    D --&gt; E[n prend la valeur n//2]\n    E --&gt; C \nend\n\n</code></pre> <p>Exemple : Conversion de \\((135)_{10}\\) en base \\(2\\)</p> <p>A venir !</p> <p>Conversions manuelles</p> Enonc\u00e9Solution <p>Convertir les nombres suivants en base \\(2\\) :</p> <ol> <li>\\((26)_{10}\\)</li> <li>\\((104)_{10}\\)</li> <li>\\((256)_{10}\\)</li> <li>\\((42)_{10}\\)</li> </ol> <p>A venir !</p> <p>Exercice : De l'algorithme au programme</p> Enonc\u00e9Solution <p>Compl\u00e9ter la fonction suivante en Python, qui renvoie la chaine de caract\u00e8res correspondant \u00e0 l'\u00e9criture de \\(n\\) en base \\(2\\).     </p><pre><code>def dec2bin(n) :\n\"\"\"fonction convertissant le nombre n en base 2,\net renvoyant la chaine de caract\u00e8res correspondante\n&gt;&gt;&gt; dec2bin(0)\n'0'\n&gt;&gt;&gt; dec2bin(1)\n'1'\n&gt;&gt;&gt; dec2bin(3)\n'11'\n&gt;&gt;&gt; dec2bin(8)\n'1000'\n&gt;&gt;&gt; dec2bin(255)\n'11111111'\n\"\"\"\n</code></pre> <p>A venir !</p> <p>Nombre de bits n\u00e9cessaires</p> <p>Soit \\((x)_{10}\\) un nombre \u00e9crit en base \\(10\\).</p> <p>Si \\(n\\) est l'entier tel que \\(2^{n-1} \\leqslant x &lt;2^n\\), alors le nombre \\(x\\) n\u00e9cessitera \\(n\\) bits pour \u00eatre repr\u00e9sent\u00e9 en binaire.</p> <p>Exercice : Nombre de bits n\u00e9cessaires</p> Enonc\u00e9Solution <p>D\u00e9terminer pour chacun des nombres ci-dessous le nombre de bits minimal qui seront n\u00e9cessaire dans l'\u00e9criture binaire de ce nombre :</p> <ol> <li>\\(12\\)</li> <li>\\(123\\)</li> <li>\\(999\\)</li> <li>\\(1927\\)</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#une-autre-base-utile-lhexadecimal","title":"Une autre base utile : l'hexad\u00e9cimal","text":"<p>Outre que la lecture des nombres en \u00e9criture binaire par un humain est tr\u00e8s compliqu\u00e9e, il faut remarquer que,  de par la construction de ces nombres, la quantit\u00e9 de symboles utilis\u00e9s en base \\(2\\) est largement sup\u00e9rieur \u00e0  celui utilis\u00e9 en base \\(10\\) - \\(3,2\\) fois plus grand en moyenne sur les \\(100~000\\) premiers entiers.</p> <p>Il peut donc \u00eatre utile de trouver un compromis entre la base \\(2\\), utile pour l'ordinateur, et la base \\(10\\), plus compr\u00e9hensible par un \u00eatre humain.</p> <p>Ce compromis peut-\u00eatre trouv\u00e9 avec le syst\u00e8me hexad\u00e9cimal, c'est-\u00e0-dire un syst\u00e8me de base 16.</p> <p>Cl\u00e9 WIFI</p> <p>Typiquement, une cl\u00e9 de s\u00e9curit\u00e9 WIFI est un nombre binaire \u00e0 128 bits (ou 256 bits). Lorsque vous vous connectez \u00e0 un nouveau r\u00e9seau WIFI, vous devez taper la cl\u00e9 sur votre ordinateur/smartphone (on \u00e9limine ici la possibilit\u00e9 d'un FlashCode), mais celle ci est pr\u00e9sent\u00e9e souvent sous la forme <code>38326f53685c2c256164712838</code>, d\u00e9j\u00e0 particuli\u00e8rement p\u00e9nible \u00e0 taper, et les erreurs de recopiages sont faciles \u00e0  faire et difficiles \u00e0 retrouver.</p> <p>Ce nombre, sous sa forme binaire est celui-ci : </p> <p><code>111000001100100110111101010011011010000101110000101100001001010110000101100100011100010010100000111000</code></p> <p>De quoi faire encore plus d'erreurs en le recopiant...</p> <p>Base hexad\u00e9cimale</p> <p>Un nombre entier \u00e9crit dans une base hexad\u00e9cimale ( base \\(16\\) ) v\u00e9rifie les conditions suivantes :</p> <ul> <li>il est \u00e9crit avec les seize chiffres hexad\u00e9cimaux : \\(0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F\\) ;</li> <li>chaque chiffre poss\u00e8de un poids repr\u00e9sentant une puissance de \\(16\\), le poids augmentant de la droite vers la gauche en partant d'un exposant \\(0\\).</li> </ul> <p>Exemple</p> <p>Le nombre hexad\u00e9cimal \\((5B6)_{16}\\) correspond donc en d\u00e9cimal \u00e0 :</p> A compl\u00e9terSolution \\[ \\begin{array}{ccccc} (5B6)_{16}&amp;=&amp; \\dots \\times 16^{\\dots}&amp;+ \\dots \\times 16^{\\dots}&amp;+ \\dots \\times 16^{\\dots}\\\\ &amp;=&amp; \\dots \\times \\dots&amp;+ \\dots \\times \\dots&amp;+ \\dots \\times \\dots\\\\ &amp;=&amp;&amp;&amp;\\\\ \\end{array} \\] \\[ \\begin{array}{ccccc} (5B6)_{16}&amp;=&amp; 5 \\times 16^{2}&amp;+ 11 \\times 16^{1}&amp;+ 6 \\times 16^{0}\\\\ &amp;=&amp; 5 \\times 256&amp;+ 11 \\times 16&amp;+ 6 \\times 1\\\\ &amp;=&amp;1~462&amp;&amp;\\\\ \\end{array} \\] <p>Exercice</p> Enonc\u00e9 <p>Convertir de l'hexad\u00e9cimal vers le d\u00e9cimal :</p> <ul> <li>\\((FF)_{16}\\)</li> <li>\\((6E)_{16}\\)</li> <li>\\((245A)_{16}\\)</li> </ul> <p>M\u00e9thode : Convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal</p> <p>Pour convertir vers l'hexad\u00e9cimal depuis le d\u00e9cimal, on utilise la m\u00eame m\u00e9thode  qu'en binaire mais en divisant par \\(16\\).</p> <p>Exemple</p> Enonc\u00e9Solution <p>Convertir le nombre \\(244\\) en hexad\u00e9cimal.</p> <p>A venir !</p> <p>Remarques</p> <ul> <li>A un chiffre dans la base \\(16\\), correspond exactement \\(4\\) chiffres dans la base \\(2\\).</li> <li>Cela signifie que pour \u00e9crire un octet en hexad\u00e9cimal, deux chiffres hexad\u00e9cimaux suffisent. C'est pour cette raison que les  octets \u00e9crits en base deux sont group\u00e9s par 4 chiffres :</li> </ul> \\[ (189)_{10} = (BD)_{16} = (1011~1101)_2 \\] <ul> <li>Ce syst\u00e8me de notation est tr\u00e8s pratique pour noter les codes des couleurs (par exemple en RGB : <code>#7455BA</code> signifie que l'octet repr\u00e9sentant le canal rouge a pour valeur <code>74</code>, celui du canal vert <code>55</code>, et celui du canal bleu <code>BA</code>), pour les cl\u00e9s de chiffrement (code Wifi par exemple), ...</li> </ul> Roue num\u00e9rique <p> </p> Ecriture d\u00e9cimale <p>0 0 0</p> <p></p>      -  <p>  Reset   +  </p> Ecriture binaire <p>0 0 0 0 0 0 0 0</p> <p></p> Ecriture hexad\u00e9cimale <p>0 0</p> <p></p> <p>Acc\u00e8s au fichier de base : ici</p>"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#operations-elementaires-sur-les-nombres-binaires","title":"Op\u00e9rations \u00e9l\u00e9mentaires sur les nombres binaires","text":""},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#sommes-de-nombres-binaires","title":"Sommes de nombres binaires","text":"<p>M\u00e9thode : Additionner deux nombres entiers en base 2</p> <p>La technique d'addition de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale :</p> En d\u00e9cimalEn binaire \\[ \\begin{array}{cccc} &amp;1&amp;4&amp;9\\\\ +&amp;&amp;7&amp;8\\\\\\hline &amp;&amp;&amp;\\\\ \\end{array} \\] \\[ \\begin{array}{*{9}{c}} &amp;1&amp;0&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\\\ +&amp;&amp;1&amp;0&amp;0&amp;1&amp;1&amp;1&amp;0\\\\\\hline &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\ \\end{array} \\]"},{"location":"NSI/Premiere/C02/BinaireCodageEntiers/#produits-de-nombres-binaires","title":"Produits de nombres binaires","text":"<p>M\u00e9thode : Multiplier deux nombres entiers en base 2</p> <p>La technique de multiplication de deux nombres binaire est la m\u00eame que pour des nombres en \u00e9criture d\u00e9cimale - mais la retenue peut se propager parfois plus loin que le rang imm\u00e9diatement sup\u00e9rieur :</p> En d\u00e9cimalEn binaire \\[ \\begin{array}{cccc} &amp;&amp;2&amp;7\\\\ \\times&amp;&amp;1&amp;3\\\\\\hline &amp;&amp;&amp;\\\\ +&amp;&amp;&amp;\\\\\\hline &amp;&amp;&amp;\\\\ \\end{array} \\] \\[ \\begin{array}{*{10}{c}} &amp;&amp;&amp;&amp;&amp;1&amp;1&amp;0&amp;1&amp;1\\\\ \\times&amp;&amp;&amp;&amp;&amp;&amp;1&amp;1&amp;0&amp;1\\\\\\hline &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\ +&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\ +&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\ +&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\\\hline &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\ \\end{array} \\]"},{"location":"NSI/Premiere/C02/CodageCaractere/","title":"Codage des caract\u00e8res","text":""},{"location":"NSI/Premiere/C02/CodageCaractere/#normes-dencodage-des-caracteres","title":"Normes d'encodage des caract\u00e8res","text":"<p>Nous avons vu que les nombres entiers et flottants sont cod\u00e9s en binaires, ainsi bien entendu que les bool\u00e9ens. Il en est de m\u00eame pour les caract\u00e8res. Cependant, de nombreuses normes existent. Les raisons en sont pour la plupart historiques, mais pas seulement. Nous regarderons dans ce cours trois de ces normes, dont la derni\u00e8re - l'unicode - est aujourd'hui celle majoritairement utilis\u00e9e.</p>"},{"location":"NSI/Premiere/C02/CodageCaractere/#historiquement-la-norme-ascii","title":"Historiquement - la norme ASCII","text":"<p>\u00c0 partir des ann\u00e9es 1960, les ordinateurs commencent \u00e0 \u00eatre \u00e9quip\u00e9s d'un clavier et d'un rouleau pour imprimer les sorties. Il fut donc n\u00e9cessaire de d\u00e9cider comment manipuler les caract\u00e8res alphanum\u00e9riques.</p> <p>La d\u00e9cision fut prise de repr\u00e9senter les caract\u00e8res de l'alphabet anglais sur un octet<sup>1</sup> de la mani\u00e8re suivante :</p> <ul> <li>les 7 octets de poids faible (les plus \u00e0 droite) serviront \u00e0 associer une valeur num\u00e9rique \u00e0 chaque caract\u00e8re ;</li> <li>l'octet de poids fort (celui le plus \u00e0 gauche) sera le bit de parit\u00e9 - une cl\u00e9 de contr\u00f4le.</li> </ul> <p>Bit de parit\u00e9</p> <p>Les ordinateurs de cette \u00e9poque \u00e9tant peu fiables au niveau des transmissions et traitement des bits, il arrivait des erreurs lors du traitement des signaux et un octet <code>1101 1011</code> pouvait vite se transformer en <code>1001 1011</code> : les donn\u00e9es \u00e9taient alors corrompues et le mauvais caract\u00e8re affich\u00e9. Le bit de parit\u00e9 est un bit qui prenait la valeur 0 ou 1 selon la parit\u00e9 du nombre de 1 dans les 7 bits repr\u00e9sentant le caract\u00e8re. </p> <p>Ainsi, si les 7 bits sont <code>101 1001</code>, le bit de parit\u00e9 est \u00e0 <code>0</code>, et l'octet complet devient <code>0101 1001</code>. Si celui re\u00e7u est <code>0101 0001</code>, un simple calcul avec le bit de parit\u00e9 permet de constater que le traitement du signal est d\u00e9fectueux. </p> <p>Il reste donc \\(7\\) bits pour encoder les caract\u00e8res, soit \\(2^7 = 128\\) possibilit\u00e9s. Ce codage est appel\u00e9 American Standard Code for Information Interchange, soit ASCII, et est pr\u00e9sent\u00e9 dans la table de jeu de caract\u00e8res ASCII ci-dessous :</p> <p></p> <p>La table ASCII contient 95 caract\u00e8res imprimables :</p> <ul> <li>les chiffres de <code>0</code> \u00e0 <code>9</code> ;</li> <li>les lettres minuscules de <code>a</code> \u00e0 <code>z</code> et majuscules de <code>A</code> \u00e0 <code>Z</code> ;</li> <li>des symboles math\u00e9matiques et de ponctuation.</li> </ul> <p>Les 32 premiers caract\u00e8res de <code>00</code> \u00e0 <code>1F</code>, ainsi que le \\(128^e\\) caract\u00e8re <code>FF</code> ne sont pas imprimables, ils correspondent \u00e0 des commandes de contr\u00f4le de terminaux informatiques (le caract\u00e8re <code>FF</code> est la commande pour effacer le caract\u00e8re pr\u00e9c\u00e9dent, le <code>07</code> provoque l'\u00e9mission d'un signal sonore, etc).</p> <p>Il faut diff\u00e9rencier la notion de jeu de caract\u00e8re (Character set en anglais) de celle de police de caract\u00e8re. Dans une police de caract\u00e8re, chaque glyphe est associ\u00e9 \u00e0 un num\u00e9ro correspondant \u00e0 un caract\u00e8re du jeu de caract\u00e8re. Intrins\u00e8quement, un ordinateur ne fait aucune diff\u00e9rence entre deux glyphes de la m\u00eame lettre.</p> <p>Glyphes</p> <p>Un glyphe est une repr\u00e9sentation graphique d'un signe typographique, c'est-\u00e0-dire d'un caract\u00e8re ou bien un id\u00e9ogramme.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>En Python</p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li> <p>Pour obtenir un caract\u00e8re correspondant \u00e0 un code hexad\u00e9cimal donn\u00e9, il faut convertir en entier le nombre hexad\u00e9cimal avec <code>int</code> puis passer par la fonction <code>chr</code> : </p> <p></p><pre><code>chr(int('Ox41',16))\n</code></pre> V\u00e9rifiez avec quelques caract\u00e8res. Comment faire \u00e0 partir du code binaire  ? </li> <li> <p>Testez <code>ord('A')</code>. Que renvoie cette fonction ? </p> </li> <li>Testez de m\u00eame les fonctions <code>hex()</code> et <code>bin()</code>.</li> </ol> <p>A venir</p> <p>Discussion</p> Enonc\u00e9 <p>Quelles sont les  limites de la norme ASCII ?</p>"},{"location":"NSI/Premiere/C02/CodageCaractere/#la-norme-iso-8859","title":"La norme ISO-8859","text":"<p>D\u00e8s la fin des ann\u00e9es 60, alors que la qualit\u00e9 des ordinateurs s'am\u00e9liore, il devient possible de b\u00e9n\u00e9ficier de l'octet de poids fort pour disposer de \\(2^8 = 256\\) possibilit\u00e9s de codage. Les diff\u00e9rents constructeurs d'ordinateurs se pr\u00e9cipitent sur cette possibilit\u00e9 afin de palier aux d\u00e9fauts de l'ASCII, malheureusement sans se coordonner. Diff\u00e9rentes normes voient le jour, appel\u00e9es ASCII \u00e9tendues, pour la plupart incompatibles entre elles. Par exemple IBM produit une table, la <code>CP437</code>, poss\u00e9dant des accents, ainsi que de nombreux symboles de trac\u00e9s de boites - les interfaces graphiques n'existant pas encore sur ces machines :</p> <p></p> <p>ISO-8859 et ses variantes</p> <p>Malgr\u00e9 tout, une norme arrive \u00e0 \u00eatre \u00e9tablie, l'ISO-8859, avec les conventions suivantes :</p> <ul> <li>le codage des caract\u00e8res pr\u00e9sents dans la tables <code>ASCII</code> est conserv\u00e9 (principe de r\u00e9tro-compatibilit\u00e9) ;</li> <li>on conserve le principe de caract\u00e8res sur 1 octet, avec utilisation compl\u00e8te de \\(8\\) bits.</li> </ul> <p>Plusieurs jeux de caract\u00e8res coexistent alors :</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Le jeu occidental <code>ISO 8859-1</code>, aussi appel\u00e9 ISO-Latin-1, a \u00e9t\u00e9 le jeu par d\u00e9faut du web avant d'\u00eatre \u00e0 son tour remplac\u00e9 par l'unicode. La norme <code>ISO 8859-1</code> a \u00e9t\u00e9 r\u00e9vis\u00e9e en <code>ISO 8859-15</code> \u00e0 la fin des ann\u00e9es 1990 pour y ajouter de nouveaux caract\u00e8res (comme le symbole \u20ac). </p> <p>\u00c0 noter que les efforts de normalisation ont parfois men\u00e9 \u00e0 des absurdit\u00e9s : pas moins de 5 normes <code>ISO 8859</code> diff\u00e9rentes coexistent pour l'alphabet cyrillique...</p> <p>Cependant, un probl\u00e8me majeur demeurait : certaines langues, comme le chinois, ne pouvaient tout simplement pas \u00eatre utilis\u00e9es, le nombres de glyphes n\u00e9cessaires \u00e9tant bien sup\u00e9rieur \u00e0 \\(256\\).</p> <p>Avec Python</p> \u00c9nonc\u00e9R\u00e9ponses <p>Il est possible avec Python de basculer d'un jeu de caract\u00e8re \u00e0 un autre. Le principe est de r\u00e9cup\u00e9rer l'octet correspondant \u00e0 un caract\u00e8re dans un charmap, et d'afficher le caract\u00e8re correspondant dans le nouveau charmap. Pour cela on utilise les m\u00e9thodes suivantes :</p> <ul> <li><code>.encode(charmap)</code> : transforme une chaine de caract\u00e8re de la charmap pass\u00e9e en argument  en une s\u00e9quence d'octets ;</li> <li><code>.decode(charmap)</code> : transforme une s\u00e9quence d'octets en une chaine de caract\u00e8re de la charmap pass\u00e9e en argument.</li> </ul> <p>Questions :</p> <ol> <li>Tester l'encodage de la chaine <code>'A'</code> d'abord en <code>ASCII</code>, puis en <code>ISO8859-1</code>, puis en <code>ISO8859-5</code> et enfin en <code>CP437</code>. Que constate-t-on ?</li> <li>Faire de m\u00eame avec la chaine <code>'\u00e9'</code>. Que constate-t-on ?</li> <li>A quels caract\u00e8res correspond l'octet dont le code Python est <code>b'\\xe7'</code> selon l'encodage utilis\u00e9 :<ol> <li>en <code>Latin-1</code> ?</li> <li>en <code>CP437</code> ?</li> <li>en <code>ISO8859-5</code> ?</li> </ol> </li> <li>Quel est le code Latin-1 correspondant \u00e0 la lettre '\u0153' ? Quel est le probl\u00e8me ?</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C02/CodageCaractere/#lencodage-unicode-utf-8","title":"L'encodage unicode <code>UTF-8</code>","text":"<p>Naissance d'Unicode</p> <p></p> <p>Internet naissant, les probl\u00e8mes li\u00e9s aux diff\u00e9rents encodages ont augment\u00e9s exponentiellement (et perdurent toujours aujourd'hui sur certains logiciels). La solution trouv\u00e9e est le standard unicode, n\u00e9 au d\u00e9but des ann\u00e9es 1990.</p> <p>L'objectif de cette norme est triple :</p> <ul> <li>R\u00e9tro-compatibilit\u00e9 avec <code>ASCII</code>, et en grande partie avec <code>ISO8859-1</code> ;</li> <li>Gestion d'un plus grand nombre de caract\u00e8res ;</li> <li>Affichage de textes bi-directionnels.</li> </ul> <p></p> <p></p> <p></p> <p>Un des formats d'encodage de l'unicode, et le plus utilis\u00e9, est l'UTF-8 pour \u00ab8-Bit Universal Character Set Transformation Format \u00bb. L\u2019UTF-8 code les caract\u00e8res en utilisant jusqu'\u00e0 4 octets. Il attribue \u00e0 chaque caract\u00e8re unicode existant une s\u00e9quence de bits pr\u00e9cise. La force de cette norme est de ne pas forc\u00e9ment utiliser 4 octets. La table <code>ASCII</code> est d\u2019ailleurs cod\u00e9e sur 1 seul octet (8 bits), pour garantir la r\u00e9tro-compatibilit\u00e9.</p> <p>En <code>utf-8</code>, chaque caract\u00e8re est repr\u00e9sent\u00e9 sous la forme d'un bloc <code>U+xxxx</code> (o\u00f9 <code>xxxx</code> est un hexad\u00e9cimal de 4 \u00e0 6 chiffres, entre <code>U+0000</code> et <code>U+10FFFF</code>). La plage ainsi d\u00e9finie permet d'attribuer jusqu'\u00e0 1 114 112 caract\u00e8res. \u00c0 l'heure actuelle, on recense environ 130 000 caract\u00e8res dans unicode.</p> <p>Pour savoir combien d\u2019octets on va utiliser les bits de poids fort du premier octet (celui de gauche) et pour savoir qu\u2019un octet est la suite du pr\u00e9c\u00e9dent on commence par 10 :</p> Codes Qt\u00e9 Encodage en UTF-8 Caract\u00e8res dans cet intervalle jusqu\u2019\u00e0 <code>U+007F</code> \\(2^7-1 = 127\\) <code>0bbbbbbb</code> latin de base (ASCII) jusqu\u2019\u00e0 <code>U+07FF</code> \\(2^{11}-1=2047\\) <code>110bbbbb 10bbbbbb</code> alphabets d\u2019Europe et du Moyen-Orient jusqu\u2019\u00e0 <code>U+FFFF</code> \\(2^{16-1} = 65535\\) <code>1110bbbb 10bbbbbb 10bbbbbb</code> La quasi-totalit\u00e9 des alphabets actuels jusqu\u2019\u00e0 <code>U+10FFFF</code> \\(2^{21}-1\\simeq 2\\times 10^6\\) <code>11110bbb 10bbbbbb 10bbbbbb 10bbbbbb</code> tous les caract\u00e8res <p>Cette norme permet donc d\u2019\u00eatre rapide pour les alphabets courants. Elle pr\u00e9sente le d\u00e9faut de ne pas pouvoir aller directement chercher le \\(10^e\\) caract\u00e8re d\u2019une phrase puisque le nombre d\u2019octets par lettre est variable. L\u2019<code>UTF-16</code>, lui, est cod\u00e9 sur 4 octets ou 2 octets en fonction du code du caract\u00e8re. La norme <code>UTF-32</code> utilise, elle, 32 bits en permanence. Cela consomme bien plus de m\u00e9moire, mais permet de trouver tr\u00e8s rapidement le x-i\u00e8me caract\u00e8re d\u2019une, chaine de caract\u00e8res.</p> <p>\u00abL'<code>UTF-8</code> est utilis\u00e9 par \\(82,2\\%\\) des sites web en d\u00e9cembre 2014, puis \\(87.6\\%\\) en 2016 et enfin \\(95,2\\%\\) en octobre 2020\u00bb[^UTF8].</p> <p>Par sa nature, <code>UTF-8</code> est d'un usage de plus en plus courant sur Internet, et dans les syst\u00e8mes devant \u00e9changer de l'information.</p> <p>Il s'agit \u00e9galement du codage le plus utilis\u00e9 dans les syst\u00e8mes GNU/Linux et compatibles pour g\u00e9rer le plus simplement possible des textes et leurs traductions dans tous les syst\u00e8mes d'\u00e9critures et tous les alphabets du monde.</p> <p>Concr\u00e8tement, UTF-8 est utilis\u00e9 par quasi tous les serveurs Web. Aujourd'hui, il n'y a plus de questions \u00e0 se poser : choisissez syst\u00e9matiquement l'encodage <code>utf-8</code> pour vos travaux, et comme explicit is better than implicit, comme dit le zen de Python, expliquez clairement dans tous vos codes l'encodage utilis\u00e9 :</p> <ul> <li>en HTML :      <pre><code>&lt;meta charset=\"utf8\"&gt;\n</code></pre></li> <li>au d\u00e9but d'un script Python, avec le shebang :      <pre><code>#-*- coding: utf-8 -*-\n</code></pre></li> </ul> <p>Jouer avec les encodages</p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>On consid\u00e8re la liste Python suivante : <code>[233, 112, 97, 116, 97, 110, 116, 32, 33]</code>. Quel est le message cach\u00e9 ?</li> <li>En HTML :<ol> <li>Cr\u00e9ez une page vide en HTML avec la code  suivant dans Notepad++, en v\u00e9rifiant que l'encodage est bien UTF-8 :     <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt; Nombreux accents  &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></li> <li>Ins\u00e9rez la phrase suivante dans le corps du document :      <pre><code>Portez ce vieux whisky au juge blond qui fume sur son \u00eele int\u00e9rieure, \u00e0 c\u00f4t\u00e9 de l'alc\u00f4ve ovo\u00efde, o\u00f9 les b\u00fbches se consument dans l'\u00e2tre, ce qui lui permet de penser \u00e0 la c\u00e6nog\u00e9n\u00e8se de l'\u00eatre dont il est question dans la cause ambigu\u00eb entendue \u00e0 Mo\u00ff, dans un capharna\u00fcm qui, pense-t-il, diminue \u00e7\u00e0 et l\u00e0 la qualit\u00e9 de son \u0153uvre. \n</code></pre></li> <li>Ouvrez ensuite le fichier dans un navigateur. L'affichage est-il correct ?</li> <li>Remplacez maintenant la ligne <code>&lt;meta charset=\"utf-8\"&gt;</code> par la ligne <code>&lt;meta charset=\"iso-8859-1\"&gt;</code>.</li> <li>Actualisez la page. Que se passe-t-il ?</li> <li>Ouvrez maintenant le fichier HTML avec le logiciel <code>HexEditorNeo</code>. Que retrouve-t-on ?</li> </ol> </li> </ol> <p>A venir !</p> <ol> <li> <p>En fait la premi\u00e8re table cr\u00e9\u00e9e \u00e9tait exactement sur 7 bits, le bit de parit\u00e9 ne fut utilis\u00e9 que lorsque le standard 8 bits fut g\u00e9n\u00e9ralis\u00e9.\u00a0\u21a9</p> </li> <li> <p>source wikipedia \u21a9</p> </li> </ol>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/","title":"Entiers relatifs et flottants","text":""},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#representation-des-entiers-relatifs-et-des-flottants","title":"Repr\u00e9sentation des entiers relatifs et des flottants","text":"<p>Nous avons vu pr\u00e9c\u00e9demment comment \u00e9crire les nombres entiers naturels en binaire :</p> <ul> <li>\\((101)_{2} = 1 \\times 2^2 +0 \\times 2^1 + 1\\times 2^0 = 4 + 0 +1 = 5\\) </li> <li>\\((1111)_2 = 1 \\times 2^3 + 1 \\times 2^2+ 1 \\times 2^1+ 1 \\times 2^0 = 8 + 4 +2 +1 = 15\\)</li> </ul> <p>Nous avons vu aussi que les nombres entiers \u00e9taient cod\u00e9s au niveau machine sur un nombre d'octets bien d\u00e9fini :</p> <ul> <li>sur 1 octet, on code \\(2^8 = 256\\) nombres, soit les nombres de \\(0\\) \u00e0 \\(255\\) ;</li> <li>sur 2 octets, on code \\(2^{16} = 65~536\\) nombres, soit les nombres de \\(0\\) \u00e0 \\(65~535\\) (en C, c'est le type <code>int</code>) ;</li> <li>sur 4 octets, on code \\(2^{32} \\simeq  4,3 \\times 10^9\\) nombres (en C, c'est le type <code>long</code>) ;</li> <li>sur 8 octets, on code \\(2^{64} \\simeq  1,8 \\times 10^{19}\\) nombres (en C, c'est le type <code>long long</code>).</li> </ul> <p>Enfin nous avons constat\u00e9 que les op\u00e9rations arithm\u00e9tiques basiques ( addition, soustraction, multiplication,...) \u00e9taient compatibles avec cette notation.</p> <p>Il nous faut maintenant nous int\u00e9resser aux autres possibilit\u00e9s de nombres : les nombres sign\u00e9s (relatifs) et les nombres flottants(d\u00e9cimaux).</p>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#les-entiers-relatifs-entiers-signes","title":"Les Entiers Relatifs (entiers sign\u00e9s)","text":""},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#une-version-naive","title":"Une version na\u00efve","text":"<p>Bit de signe</p> <p>Sur un octet, le bit de poids fort - c'est-\u00e0-dire le bit le plus \u00e0 gauche du nombre, repr\u00e9sente le signe (\\(0\\) pour positif et \\(1\\) pour n\u00e9gatif) et les \\(7\\) autres repr\u00e9sentent la valeur absolue du nombre.</p> <p>Exercice</p> \u00c9nonc\u00e9Solution <ol> <li>Quelle est la repr\u00e9sentation de \\(3\\) dans ce syst\u00e8me ? </li> <li>Quelle est la repr\u00e9sentation de \\(-4\\) dans ce syst\u00e8me ? </li> <li>Quel est le plus grand nombre repr\u00e9sentable sur un octet ?</li> <li>Quel est le plus petit nombre repr\u00e9sentable sur un octet ?</li> <li>Combien de nombres sont alors repr\u00e9sent\u00e9s ?</li> <li>Quel probl\u00e8me pouvez-vous d\u00e9j\u00e0 constater ?</li> <li>Effectuer l'addition binaire des nombres \\(3\\) et \\(-4\\). Le r\u00e9sultat est-il logique ?</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#complement-a-2","title":"Compl\u00e9ment \u00e0 2","text":"<p>Notation en compl\u00e9ment \u00e0 2</p> <p>Pour rem\u00e9dier aux probl\u00e8mes soulev\u00e9s par la version na\u00efve, on utilisera la notation en compl\u00e9ment \u00e0 deux. Dans cette notation, sur un octet :</p> <ul> <li>Les nombres positifs sont repr\u00e9sent\u00e9s comme pour les nombres entiers naturels.</li> <li>Pour les nombres n\u00e9gatifs, par contre :<ul> <li>On d\u00e9termine l'\u00e9criture binaire de la valeur absolue du nombre, g\u00e9n\u00e9ralement sur un octet.</li> <li>On inverse les bits de l'\u00e9criture binaire , ce qu'on appelle le compl\u00e9ment \u00e0 1 (cela correspond \u00e0 une op\u00e9ration logique <code>NON</code> sur chaque bit, donc \\(1\\) devient \\(0\\) et \\(0\\) devient \\(1\\)) ;</li> <li>On ajoute \\(1\\) au r\u00e9sultat, les d\u00e9passements (<code>overflow</code>, voir plus bas) \u00e9tant ignor\u00e9s - ce qui signifie qu'on reste bien sur le nombre de bits d\u00e9finis dans l'\u00e9tape 1.</li> </ul> </li> </ul> <p>Exemple</p> <ul> <li>Le nombre \\(13\\) est repr\u00e9sent\u00e9 par \\((00001101)_2\\).</li> <li>Pour le nombre \\(-4\\) :<ul> <li>on cherche d'abord la repr\u00e9sentation de sa valeur absolue : \\((0000 0100)_2\\) ;</li> <li>ensuite on inverse chaque bit : \\((1111 1011)_2\\)</li> <li>puis on ajoute \\(1\\) au r\u00e9sultat : \\((1111 1100)_2\\)</li> </ul> </li> </ul> <p>Le nombre \\(-4\\) a pour repr\u00e9sentation en compl\u00e9ment \u00e0 2 sur un octet la suite </p> Pour les curieux : \u00ab Overflow \u00bb <p>Ce qu'on appelle un \u00ab OVERFLOW \u00bb consiste en un d\u00e9passement de capacit\u00e9 lors d'une op\u00e9ration. Par exemple pour des nombres entiers \u00e9crits en binaire sur 1 octet, il est parfois possible qu'une op\u00e9ration d\u00e9passe les possibilit\u00e9s de stockage sur 1 octet.</p> <p>Prenons pour exemple l'op\u00e9ration \\(130 + 132\\) :</p> <ul> <li>en d\u00e9cimal, pas de soucis, \\(130 + 132 = 262\\) ;</li> <li> <ul> <li>\\(130 = 128 + 2 = 2^7 + 2^1 = (1000~0010)_2\\)</li> <li>\\(132 = 128 + 4 = 2^7 + 2^2 = (1000~0100)_2\\)</li> <li>Lorsqu'on effectue la somme en binaire sur 1 octet, le r\u00e9sultat reste sur 1 octet, d'o\u00f9 :</li> </ul> <p>en binaire sur 1 octet :</p> \\[ \\begin{array}{*{9}{c}} &amp;1&amp;0&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0\\\\ +&amp;1&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0\\\\\\hline &amp;0&amp;0&amp;0&amp;0&amp;0&amp;1&amp;1&amp;0\\\\ \\end{array} \\] <p>Le r\u00e9sultat donn\u00e9 par une machine effectuant des additions sur 1 octet est donc \\(130+132 = 5\\)... Il y a eu \u00ab integer overflow \u00bb, donc d\u00e9passement des capacit\u00e9s de la machine \u00e0 traiter les nombres entiers.</p> </li> </ul> <p>Obtenir un \u00ab overflow \u00bb est une preuve de mauvaise prise en compte des capacit\u00e9s limites de la machine. C'est un bug redout\u00e9 et redoutable, en particulier lorsqu'on utilise des structures de \u00ab Piles \u00bb (au programme de terminale) lors d'op\u00e9ration \u00ab r\u00e9cursives \u00bb (aussi au programme de terminale). On obtient alors une erreur qui est appel\u00e9e \u00ab Stack Overflow \u00bb. Cette erreur est tellement fr\u00e9quente et tellement c\u00e9l\u00e8bre qu'elle a donn\u00e9 son nom au plus grand forum d\u00e9di\u00e9 \u00e0 la programmation, Stack Overflow.</p> <p>Pour votre culture num\u00e9rique, le plus c\u00e9l\u00e8bre des \u00ab integer overflow \u00bb a \u00e9t\u00e9 un bug qui a co\u00fbt\u00e9 500 millions de dollars lors du premier lancement de la fuss\u00e9e Ariane 5.</p> <p>Exercice</p> Enonc\u00e9Solution <ol> <li>Compl\u00e9ter le tableau suivant (un calcul par \u00e9l\u00e8ve) :</li> </ol> \\[ \\begin{array}{|c|p|p|p|p|} \\hline \\text{Nombre relatif} &amp; \\text{V.A binaire sur 1 octet} &amp;\\text{Compl\u00e9ment \u00e0 1} &amp; \\text{Compl\u00e9ment \u00e0 2} &amp; \\text{Entier Naturel}\\\\\\hline -12&amp;&amp;&amp;&amp;\\\\\\hline -8&amp;&amp;&amp;&amp;\\\\\\hline -50&amp;&amp;&amp;&amp;\\\\\\hline -64&amp;&amp;&amp;&amp;\\\\\\hline -128&amp;&amp;&amp;&amp;\\\\\\hline -32&amp;&amp;&amp;&amp;\\\\\\hline -127&amp;&amp;&amp;&amp;\\\\\\hline -45&amp;&amp;&amp;&amp;\\\\\\hline -18&amp;&amp;&amp;&amp;\\\\\\hline -81&amp;&amp;&amp;&amp;\\\\\\hline \\end{array} \\] <ol> <li>Quel est le bit de poids fort sur chacun des nombres donn\u00e9s ? </li> <li>Quel relation existe-t-il entre les nombres relatifs et leur entier naturel correspondant ? </li> <li>Quel est le plus grand nombre repr\u00e9sentable sur un octet ?</li> <li>Quel est le plus petit nombre repr\u00e9sentable sur un octet ?</li> <li>Combien de nombre sont alors repr\u00e9sent\u00e9s ?</li> <li>Effectuer l'addition binaire de \\(-45\\) et \\(13\\). Est-elle compatible avec l'op\u00e9ration d\u00e9cimale ?</li> </ol> <p>A venir !</p> <p>Compl\u00e9ment \u00e0 \\(2\\)</p> <p>Le nombre entier relatif \\(x\\) n\u00e9gatif poss\u00e8de le m\u00eame codage sur \\(n\\) bits que le nombre entier naturel \\(2^n-|x|\\).</p> <p>Remarque</p> <p>Un algorithme simple pour trouver un compl\u00e9ment \u00e0 2 de t\u00eate est de garder tous les chiffres de la valeur absolue depuis le bit de poids faible jusqu'au premier \\(1\\), puis d'inverser tous les suivants. Par exemple :</p> <ul> <li>Pour obtenir le code de \\(-40\\) sur 1 octet :<ul> <li>Le nombre \\(40\\) s'\u00e9crit \\((0010~1000)_2\\)</li> <li>On garde la partie \u00e0 droite \\((0010~\\mathbf{1000})_2\\)</li> <li>On inverse la partie \u00e0 gauche apr\u00e8s le premier \\(1\\) \\((\\mathbf{1101}1000)_2\\)</li> <li>On a ainsi obtenu le codage du nombre \\(-40\\) sur 1 octet.</li> </ul> </li> <li>Pour obtenir le code de \\(-65\\) sur 1 octet :<ul> <li>Le nombre \\(65\\) s'\u00e9crit \\((0100~0001)_2\\)</li> <li>On garde uniquement le bit de poids faible \\((0100~000\\mathbf{1})_2\\)</li> <li>On inverse tous les autres bits \\((\\mathbf{1011~111}1)_2\\)</li> <li>On a ainsi obtenu le codage du nombre \\(-65\\) sur 1 octet.</li> </ul> </li> </ul>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#les-flottants","title":"Les Flottants","text":""},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#representation-de-la-partie-decimale-dun-nombre-en-ecriture-binaire","title":"Repr\u00e9sentation de la partie d\u00e9cimale d'un nombre en \u00e9criture binaire","text":"<p>Repr\u00e9sentation de la partie d\u00e9cimale en base 10</p> <p>En base 10, on a :</p> \\[ \\begin{array}{rl} 23,145 &amp;= 2 \\times 10^1 + 3 \\times 10^{0}+ \\dfrac{1}{10^1}+ \\dfrac{4}{10^2}+ \\dfrac{5}{10^3}\\\\ 23,145 &amp;= 2 \\times 10^1 + 3 \\times 10^{0} + 1 \\times 10^{-1}+ 4 \\times 10^{-2}+ 5 \\times 10^{-3} \\end{array} \\] <p>Partie \u00ab d\u00e9cimale \u00bb en \u00e9criture binaire</p> <p>De la m\u00eame mani\u00e8re qu'en \u00e9criture de base \\(10\\), on aura :</p> \\[ \\begin{array}{rl} (10,0101)_2 &amp;= 1 \\times 2^1 + 0 \\times 2^0+ 0 \\times 2^{-1}+ 1 \\times 2^{-2}+ 0 \\times 2^{-3}+ 1 \\times 2^{-4}\\\\ &amp;= 2 + 0 + \\dfrac{0}{2} + \\dfrac{1}{4}+ \\dfrac{0}{8}+ \\dfrac{1}{16}\\\\ &amp;=2 + 0 +0 +0,25+0+0,0625\\\\ &amp;= 2,3125 \\end{array} \\] <p>Convertir de la base 10 \u00e0 la base 2</p> <p>On cherche \u00e0 convertir en binaire le nombre \\(13,6875\\). On commence par convertir la partie enti\u00e8re \\(13 = (1101)_2\\). Il faut ensuite convertir la partie d\u00e9cimale \\(0,6875\\). Pour y arriver on applique l'algorithme suivant :</p> <ul> <li>on multiplie \\(0,6875\\) par \\(2\\) : \\(0,6875 \\times 2 = 1,375\\), et on note le r\u00e9sultat \\(\\mathbf{1} + 0,375\\) ;</li> <li>on multiplie \\(0,375\\) par \\(2\\) : \\(0,375 \\times 2 = 0,75\\), et on note le r\u00e9sultat \\(\\mathbf{0} + 0,75\\) ;</li> <li>on multiplie \\(0,75\\) par \\(2\\) : \\(0,75 \\times 2 = 1,5\\), et on note le r\u00e9sultat \\(\\mathbf{1} + 0,5\\) ;</li> <li>on multiplie \\(0,5\\) par \\(2\\) : \\(0,5 \\times 2 = 1\\), et on note le r\u00e9sultat \\(\\mathbf{1}\\), la partie d\u00e9cimale \u00e9tant nulle on arr\u00eate l'algorithme ;</li> </ul> <p>On r\u00e9cup\u00e8re les parties enti\u00e8res obtenues \u00e0 chaque \u00e9tape, soit \\(\\mathbf{1011}\\), qui repr\u00e9sente la partie d\u00e9cimale de notre nombre. D'o\u00f9 :</p> \\[ 13,6875 = (1101,1011)_2 \\] <p>Exercice</p> Enonc\u00e9Solution <ol> <li>Trouver la repr\u00e9sentation d\u00e9cimale de \\((100,0011)_2\\).</li> <li>Trouver la repr\u00e9sentation binaire de \\((6,625)_{10}\\).</li> <li>Trouver la repr\u00e9sentation binaire de \\((0,1)_{10}\\). Que remarque-t-on ? </li> </ol> <p>A venir !</p> <p>Remarque</p> <p>Tout comme le nombre \\(\\dfrac{1}{3}\\) ne poss\u00e8de pas d'\u00e9criture d\u00e9cimale finie, certains nombres ne poss\u00e8dent pas d'\u00e9critures binaires finies.</p>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#ecriture-scientifique-des-nombres-en-ecriture-binaires","title":"\u00c9criture scientifique des nombres en \u00e9criture binaires","text":"<p>\u00c9criture d\u00e9cimale scientifique</p> <p>Pour \u00e9crire de tr\u00e8s grands nombres, ou de tr\u00e8s petits, on utilise souvent une \u00e9criture scientifique, c'est-\u00e0-dire sous la forme \\(a \\times 10^n\\), o\u00f9 \\(a \\in [1;10[\\) et \\(n\\in\\mathbb{Z}\\). Ainsi :</p> <ul> <li>\\(4~571,23 = 4,57123 \\times 10^3\\)</li> <li>\\(0,003~45 = 3,45 \\times 10^{-3}\\)</li> </ul> <p>\u00c9criture scientifique en binaire</p> <p>Pour \u00e9crire un nombre binaire en \u00ab \u00e9criture scientifique \u00bb,  on l'\u00e9crira sous la forme \\(a \\times 2^n\\), o\u00f9 :</p> <ul> <li>\\(a\\) est un nombre binaire, avec partie \u00ab apr\u00e8s la virgule \u00bb et dont la partie enti\u00e8re est \\(1\\) ;</li> <li>\\(n\\) est un nombre entier relatif, \u00e9crit en binaire.</li> </ul> <p>Exemple</p> <ul> <li>Pour \u00e9crire le nombre \\(11010\\) en \u00ab \u00e9criture scientifique \u00bb, il faudra d\u00e9caler la virgule de \\(4\\) rangs sur la gauche, soit une puissance positive.  Or \\(4 = (100)_2\\).      Donc \\(11010 = 1,1010\\times 2^{100}\\).</li> <li>Pour \u00e9crire le nombre \\(0,001011\\) en \u00ab \u00e9criture scientifique \u00bb, il faudra d\u00e9caler la virgule de \\(3\\) rangs sur la droite, soit une puissance n\u00e9gative, or \\(3 = (11)_2\\).      Donc \\(0,001011 = 1,011\\times 2^{-11}\\).</li> </ul>"},{"location":"NSI/Premiere/C02/Entiers_relatifs_Flottants/#representation-des-flottants-en-machine","title":"Repr\u00e9sentation des flottants en machine","text":"<p>Le contenu de cette partie est largement issu de Pixees.fr.</p> <p>Norme <code>IEEE 754</code></p> <p>La norme <code>IEEE 754</code> est la norme la plus employ\u00e9e pour la repr\u00e9sentation des nombres \u00e0 virgule flottante dans le domaine informatique. La premi\u00e8re version de cette norme date de 1985.</p> <p>Nous allons \u00e9tudier deux formats associ\u00e9s \u00e0 cette norme : le format dit \u00ab simple pr\u00e9cision \u00bb et le format dit \u00ab double pr\u00e9cision \u00bb. Le format \u00ab simple pr\u00e9cision \u00bb utilise \\(32\\) bits pour \u00e9crire un nombre flottant alors que le format \u00ab double \u00bb utilise \\(64\\) bits. Dans la suite nous travaillerons principalement sur le format \\(32\\) bits.</p> <p>Que cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme <code>IEEE 754</code> utilise :</p> <ul> <li>1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif);</li> <li>des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision);</li> <li>des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision).</li> </ul> <p></p> <p>Nous pouvons v\u00e9rifier que l'on a bien \\(1 + 8 + 23 = 32\\) bits pour la simple pr\u00e9cision et \\(1 + 11 + 52 = 64\\) bits pour la double pr\u00e9cision. </p> <p>D\u00e9terminer la mantisse</p> <p>Pour \u00e9crire un nombre au format <code>IEEE 754</code>, il est n\u00e9cessaire de commencer par \u00e9crire notre nombre sous \u00ab \u00e9criture scientifique \u00bb binaire, sous la forme \\(1,XXXXX.2^e\\).</p> <p>Ainsi on sait d\u00e9j\u00e0 que le nombre \\(11010 = 1,1010\\times 2^{100}\\).</p> <p>La partie \u00ab \\(XXXXX\\) \u00bb  du nombre, c'est-\u00e0-dire \\(1010\\), correspond \u00e0 la mantisse. Mais comme la mantisse doit contenir exactement \\(23\\) bits en simple pr\u00e9cision, il faut donc la compl\u00e9ter avec \\(23-4 = 19\\) z\u00e9ros \u00e0 droite pour obtenir \\(23\\) bits, soit : </p> \\[ \\mathbf{1010}0000000000000000000 \\] <p>Exposant des nombres flottants</p> <p>Notre premi\u00e8re intuition serait de dire que la partie exposant correspond simplement au \u00ab e \u00bb de \\(1,XXXXX.2^e\\) (dans notre exemple \\(1,1010\\times 2^{100}\\), nous aurions \\(100\\)). En fait, c'est un peu plus compliqu\u00e9... En effet, comment repr\u00e9senter les exposants n\u00e9gatifs, sachant que dans la norme <code>IEEE 754</code>, aucun bit pour le signe de l'exposant n'a \u00e9t\u00e9 pr\u00e9vu. Il a donc \u00e9t\u00e9 n\u00e9cessaire de choisir une m\u00e9thode, et c'est celle du d\u00e9calage d'exposant qui a \u00e9t\u00e9 retenue : </p> <ul> <li>en simple pr\u00e9cision, on d\u00e9cale l'exposant de \\(127\\) ;</li> <li>en double pr\u00e9cision, on d\u00e9cale l'exposant de \\(1~023\\).</li> </ul> <p>D\u00e9terminer l'exposant</p> <p>Pour le format simple pr\u00e9cision, \\(8\\) bits sont consacr\u00e9s \u00e0 l'exposant, il est donc possible de repr\u00e9senter \\(256\\) valeurs, nous allons pouvoir repr\u00e9senter des exposants compris entre \\((-126)_{10}\\) et \\((+127)_{10}\\) (les valeurs \\(-127\\) et \\(+128\\) sont des valeurs r\u00e9serv\u00e9es, nous n'aborderons pas ce sujet ici, mais vous trouverez des pr\u00e9cisions sur l'article IEEE 754 de wikipedia}). Pour avoir des valeurs uniquement positives, il va falloir proc\u00e9der \u00e0 un d\u00e9calage : ajouter syst\u00e9matiquement \\(127\\) \u00e0 la valeur de l'exposant.</p> <p>Dans notre exemple, on a \\(11010 = 1,1010\\times 2^{100}\\). L'exposant est donc \\(4 =(100)_2\\), et pour le repr\u00e9senter il faut donc le d\u00e9caler : \\(4 + 127 = 131\\) soit \\(131=(10000011)_2\\). L'exposant poss\u00e8de 8 chiffres binaires, il n'est donc pas n\u00e9cessaire de rajouter de z\u00e9ros \u00e0 gauche.\\</p> <p>Au format simple pr\u00e9cision, le nombre \\(11010\\) s'\u00e9crit donc :</p> \\[ 0\\mathbf{10000011}10100000000000000000000 \\] <p>Exemple</p> <p>Soit le nombre \u00ab \\(-10,125\\) \u00bb en base \\(10\\). Repr\u00e9sentons-le au format simple pr\u00e9cision :</p> <ul> <li>nous avons \\((10)_{10} = (1010)_2\\) et \\((0,125)_{10} = (0,001)_2\\) soit \\((10,125)_{10} = (1010,001)_2\\) ;</li> <li>d\u00e9calons la virgule : \\(1010,001\\) = \\(1,010001.2^3\\), soit avec le d\u00e9calage de l'exposant \\(1,010001.2^{130}\\), en \u00e9crivant l'exposant en base 2, nous obtenons \\(1,010001.2^{10000010}\\) ;</li> <li>nous avons donc : notre bit de signe = \\(1\\) (nombre n\u00e9gatif), nos 8 bits d'exposant = \\(10000010\\) et nos 23 bits de mantisse = \\(01000100000000000000000\\)</li> <li>soit en \"collant\" tous les \"morceaux\" : </li> </ul> \\[ 11000001001000100000000000000000 \\] <p>Exercice</p> \u00c9nonc\u00e9Solution <ol> <li>D\u00e9terminez la repr\u00e9sentation au format simple pr\u00e9cision de \\((0,25)_{10}\\) en binaire. </li> <li>D\u00e9terminez la repr\u00e9sentation au format simple pr\u00e9cision de \\((0,1)_{10}\\) en binaire. </li> <li>Soit le nombre flottant au format simple pr\u00e9cision : \\(00111101110011001100110011001100\\). Trouvez la repr\u00e9sentation en base 10 de ce nombre. </li> <li>\u00c0 l'aide de Thonny, tapez dans la console : \\(0.1+0.2\\). Faites de m\u00eame dans la console Javascript de Firefox. Que constate-t-on ? Pourquoi ?</li> </ol> <p>A venir !</p> <p>\u0153</p>"},{"location":"NSI/Premiere/C03/CSS/","title":"CSS","text":""},{"location":"NSI/Premiere/C03/CSS/#mettre-en-forme-le-css","title":"Mettre en forme : le CSS","text":""},{"location":"NSI/Premiere/C03/CSS/#separer-le-fond-et-la-forme-un-exemple-avec-un-traitement-de-texte","title":"S\u00e9parer le fond et la forme : un exemple avec un traitement de texte","text":"<p>Activit\u00e9 avec un traitement de texte</p> <ol> <li>T\u00e9l\u00e9chargez puis ouvrez le fichier <code>Styles_et_mod\u00e8les.odt</code> avec Libre Office.</li> <li>Allez \u00e0 la page 7 du document.</li> <li>Ouvrez la fen\u00eatre de style en appuyant sur F11. </li> <li>cherchez le menu <code>Titre 1</code>, puis cliquez-droit et <code>Modifier</code>.</li> <li>Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. <ol> <li>Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? </li> <li>Y-a-t-il eu des changements sur d'autres pages ?</li> <li>Qu'ont en commun toutes les zones chang\u00e9es ?</li> </ol> </li> <li>Dans la fen\u00eatre de style, modifiez <code>Corps de texte -&gt; Liste 1</code> en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de type <code>Radial</code>. Observez les modifications du document.</li> <li>Allez \u00e0 la page 11,  s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en <code>Liste 1</code>, en <code>Liste 2</code>. Le texte at-il \u00e9t\u00e9 chang\u00e9 ?</li> </ol> <p>S\u00e9parer le fond de la forme</p> <p>Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res :</p> <ul> <li>sur un \u00e9cran couleur ;</li> <li>par un logiciel de synth\u00e8se vocale ;</li> <li>sur un \u00e9cran monochrome (ou dans la console) ;</li> <li>sur un \u00e9cran de smartphone ;</li> <li>par une impression sur un papier A4, ou A3, ou autres formats ;</li> <li>...</li> </ul> <p>Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style, regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes...</p>"},{"location":"NSI/Premiere/C03/CSS/#cascading-style-sheets","title":"Cascading Style Sheets","text":""},{"location":"NSI/Premiere/C03/CSS/#definition","title":"D\u00e9finition","text":"<p>CSS</p> <p>CSS est l'acronyme de Cascading Style Sheets, soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier <code>CSS</code> est appel\u00e9  par une ou plusieurs pages <code>HTML</code> (entre autre), et associe \u00e0 certaines balises et/ou attributs <code>html</code> certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises.</p> <p>Pour utiliser une feuille de style nomm\u00e9e <code>toto.css</code> dans une page <code>html</code>, il faut inclure entre les balises <code>&lt;head&gt;</code> et <code>&lt;/head&gt;</code> la ligne suivante :</p> <pre><code>    &lt;link href=\"toto.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n</code></pre> <p>Exemple</p> <p>Dans l'exemple ci-dessous, le fichier <code>style.css</code> est utilis\u00e9 par les diff\u00e9rentes pages html : </p><p> </p>"},{"location":"NSI/Premiere/C03/CSS/#declaration-dune-regle-css-vocabulaire-associe-et-premiers-exemples","title":"D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples","text":"<p>Vocabulaire</p> <p>Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles, qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple :</p> <p></p><p> </p> <ul> <li>le s\u00e9lecteur <code>p</code> signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <code>&lt;p&gt;</code> et <code>&lt;/p&gt;</code>. Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl+Alt+` ou AltGr+` donne { et Ctrl+Alt+= ou AltGr+= donne }).</li> <li>la propri\u00e9t\u00e9 <code>color</code> indique que la r\u00e8gle concerne la couleur de police ;</li> <li>la valeur associ\u00e9e <code>red</code> indique que la couleur de police sera rouge ;</li> <li>la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points.</li> </ul> <p>Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable :</p> <pre><code>h1 {\ncolor : magenta;\nbackground-color : lightblue;\nfont-style : italic;\nfont-size : 3em;\nfont-variant : small-caps;\n}\n</code></pre> <p>Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles. Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools.</p> <p>Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale.</p> <p>L'inspecteur d'objet</p> <p>Il est possible dans <code>Firefox</code>, comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans <code>Firefox</code>, vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl+Shift+I, ou bien par <code>Menu &gt; Outils suppl\u00e9mentaires &gt; Outils de d\u00e9veloppement web</code>.</p> <p>L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!)</p> <p>Exercice : Modifier une page web existante</p> <ol> <li>Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/.</li> <li>Ouvrez l'inspecteur d'objets.</li> <li>Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page <code>Mettre en forme : le CSS</code>.</li> <li>Vous devez voir apparaitre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur <code>.md-typeset h1</code> la d\u00e9claration <code>background-color : pink</code>.</li> <li>Enjoy </li> </ol>"},{"location":"NSI/Premiere/C03/CSS/#les-selecteurs-en-css","title":"Les s\u00e9lecteurs en CSS","text":""},{"location":"NSI/Premiere/C03/CSS/#le-dom-ou-comment-ca-marche-en-vrai","title":"Le DOM, ou comment \u00e7a marche en vrai !","text":"<p>le DOM</p> <p>Le DOM, ou Document Object Model est une interface de programmation pour des documents <code>HTML</code> ou <code>XML</code> qui repr\u00e9sente le document (la page web actuelle) sous une forme qui permet aux langages de script comme le JavaScript d'y acc\u00e9der et d'en manipuler le contenu et les styles.</p> <p>Le DOM est ainsi une repr\u00e9sentation structur\u00e9e du document sous forme \u00ab d'arbre \u00bb cr\u00e9e automatiquement par le navigateur </p> <p></p><p> </p> <p>Pratiquement,le DOM est cr\u00e9\u00e9  \u00e0 partir du code HTML<sup>1</sup>, et chaque style CSS est attach\u00e9 \u00e0 un noeud du DOM :</p> <p></p><p> </p> Pour atteindre en CSS un noeud du DOM, ou pour interagir avec lui, il faut utiliser le bon s\u00e9lecteur.  <p>Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles.</p>"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-type","title":"S\u00e9lecteur de type :","text":"<p>Cible toutes les balises d'un certain nom. Par exemple :</p> <pre><code>body {\nbackground-color : black;\n}\np {\ncolor : green;\n}\n</code></pre>"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-classe","title":"S\u00e9lecteur de classe :","text":"<p>Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut <code>class</code>. Toutes les balises poss\u00e9dant le m\u00eame attribut <code>class</code> peuvent \u00eatre alors cibl\u00e9es en ajoutant un point <code>.</code> pr\u00e9c\u00e9dant le nom de la classe. Par exemples :</p> <ul> <li>cibler toutes les balises poss\u00e9dant l'attribut <code>class=\"definition\"</code></li> </ul> <pre><code>.definition {\ncolor : red; border-width : 2px;\nborder-style : dashed;\n}\n</code></pre> <ul> <li>cible les titres de rang <code>h2</code> et poss\u00e9dant l'attribut <code>class=\"chapitre\"</code> (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es)</li> </ul> <pre><code>h2.chapitre {\ntext-decoration : underline;\n}\n</code></pre>"},{"location":"NSI/Premiere/C03/CSS/#selecteur-didentifiant","title":"S\u00e9lecteur d'identifiant :","text":"<p>Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut <code>id</code>. Par exemple, pour cibler la balise poss\u00e9dant l'attribut <code>id=\"titresite\"</code>, on utilise le symbole <code>#</code> :</p> <pre><code>#titresite{\ntext-align: center;\n}\n</code></pre>"},{"location":"NSI/Premiere/C03/CSS/#selecteur-denfants","title":"S\u00e9lecteur d'enfants :","text":"<p>Cible toutes les balises descendantes directes d'un autre \u00e9l\u00e9ment. Par exemple :</p> <pre><code>body &gt; p  {\nbackground-color : red;\n}\n</code></pre> <p>Ici on s\u00e9lectionne les balises <code>p</code> qui sont directement h\u00e9rit\u00e9es de <code>body</code> (c'est-\u00e0-dire directement encadr\u00e9es par les balises <code>&lt;body&gt;</code> et <code>&lt;/body&gt;</code>).</p>"},{"location":"NSI/Premiere/C03/CSS/#selecteur-de-descendants","title":"S\u00e9lecteur de descendants :","text":"<p>Cible toutes les balises qui descendent d'un autre \u00e9l\u00e9ment Par exemple :</p> <pre><code>body  p  {\nbackground-color : red;\n}\n</code></pre> <p>Ici on s\u00e9lectionne toutes les balises <code>p</code> qui sont \u00e0 l'int\u00e9rieur de <code>&lt;body&gt;...&lt;/body&gt;</code>.</p>"},{"location":"NSI/Premiere/C03/CSS/#selecteurs-de-pseudo-classes","title":"S\u00e9lecteurs de pseudo-classes","text":"<p>Lors de la construction de l'arbre du DOM, certaines pseudo-classes sont ajout\u00e9es automatiquement \u00e0 certains noeuds. Il est possible d'interagir avec ces pseudo-classes :</p> <ul> <li> <p><code>:first-child</code> : Cible un \u00e9l\u00e9ment quand il est le premier enfant d'un autre \u00e9l\u00e9ment. </p><pre><code>li:first-child  {\nbackground-color : yellow;\n}\n</code></pre>     Existe aussi en version <code>:last-child</code>, <code>:nth-child</code>, je vous laisse rechercher les possibilit\u00e9s  en ligne. </li> <li> <p><code>:hover</code> : Cible un \u00e9l\u00e9ment quand il poss\u00e8de la souris le survole. </p><pre><code>h1:hover {\nfont-size :5em;\n}\n</code></pre> </li> <li> <p><code>:link</code> : Cible un lien qui n'a pas \u00e9t\u00e9 visit\u00e9. </p><pre><code>a:link {\ntext-color : red;\n}\n</code></pre> </li> <li> <p><code>:visited</code> : Cible un lien qui a \u00e9t\u00e9 visit\u00e9. </p><pre><code>a:link {\ntext-color : orange;\n}\n</code></pre> </li> </ul> <p>Il existe bien d'autres pseudo-classes. Comme toujours Mozilla a fait un travail remarquable de documentation.</p>"},{"location":"NSI/Premiere/C03/CSS/#ordre-dapplication-des-selecteurs","title":"Ordre d'application des s\u00e9lecteurs","text":"<p>Priorit\u00e9 des s\u00e9lecteurs</p> <p>Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 connaitre pour \u00e9viter les comportement erratiques du CSS :</p> <ol> <li>La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte (<code>id</code> est plus pr\u00e9cis que <code>class</code> qui est plus pr\u00e9cis que le nom de la balise).</li> <li>Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal.</li> </ol>"},{"location":"NSI/Premiere/C03/CSS/#les-boites-css","title":"Les bo\u00eetes CSS...","text":"<p>Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla.</p>"},{"location":"NSI/Premiere/C03/CSS/#une-boite","title":"Une bo\u00eete...","text":"<p>Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres.</p> <p>Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on :</p> <ul> <li><code>padding</code> : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme <code>padding</code> \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme)</li> <li><code>border</code> : la ligne qui est juste autour du <code>padding</code> (en fran\u00e7ais cela correspond \u00e0 la bordure).</li> <li><code>margin</code> : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge).</li> </ul> <p></p>"},{"location":"NSI/Premiere/C03/CSS/#des-boites","title":"Des boites !","text":"<p>Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement :</p> <ul> <li>\u00c9l\u00e9ment <code>block</code> : un \u00e9l\u00e9ment <code>block</code> occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments <code>block</code> s'enchainent, ils sont les uns au-dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <code>&lt;h1&gt;,&lt;h2&gt;,...,&lt;h6&gt;</code>, <code>&lt;p&gt;</code> et surtout <code>&lt;div&gt;</code> (balise g\u00e9n\u00e9rique de type <code>block</code>) sont des \u00e9l\u00e9ments de type <code>block</code>.</li> <li>\u00c9l\u00e9ment <code>inline</code> : un \u00e9l\u00e9ment <code>inline</code> s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s. Par d\u00e9faut les \u00e9l\u00e9ments <code>&lt;a&gt;,&lt;img&gt;,&lt;strong&gt;,...</code> sont des \u00e9l\u00e9ments de type <code>inline</code>.</li> </ul> <p>Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments <code>inline</code> et <code>block</code>, qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous pourriez vous poser. </p> <p>Modifier le type d'un \u00e9l\u00e9ment : <code>display</code></p> <p>Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page <code>html</code>. Pour cela on utilise la propri\u00e9t\u00e9 <code>display</code> et ses diff\u00e9rentes valeurs :</p> <ul> <li><code>none</code> : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles.</li> <li><code>block</code> : rend l'\u00e9l\u00e9ment de type <code>block</code>;</li> <li><code>inline</code> : rend l'\u00e9l\u00e9ment de type <code>inline</code>;</li> <li><code>grid</code> : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ;</li> <li><code>flex</code> : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite.</li> </ul>"},{"location":"NSI/Premiere/C03/CSS/#les-dimensions-et-unites-de-mesures-les-plus-utiles","title":"Les dimensions et unit\u00e9s de mesures les plus utiles","text":"<p>En CSS, il est souvent imp\u00e9ratif de donner des longueurs ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types :</p> <ul> <li>valeur en pourcentage : <code>font-size : 120\\%;</code> d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %.</li> <li>hauteur <code>em</code> : cadratin ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re <code>M</code>. <code>font-size : 1.5em;</code> \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de <code>1em</code>.</li> <li>valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple <code>width : 50px;</code> mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. \u00c0 proscrire sauf cas particuliers.</li> <li>valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : <code>margin-left : 50vw;</code> permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre.</li> <li>valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : <code>margin-left : 50vh;</code> permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre.</li> </ul>"},{"location":"NSI/Premiere/C03/CSS/#pour-aller-plus-loin-adaptation-aux-differents-ecransmedias-de-sortie","title":"Pour aller plus loin : adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie","text":"<p>Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage.</p> <p>Afin d'afficher correctement un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css, diff\u00e9rentes versions du site. Pour cela on utilise des media-queries - soit requ\u00eates de media. Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site.</p> <p>Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes :</p> <ul> <li><code>max-width</code> : applique les r\u00e8gles si la largeur de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ;</li> <li><code>min-width</code> : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ;</li> </ul> <p>Exemple</p> <p>L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen.</p> <pre><code>/* version par d\u00e9faut: sur grand \u00e9cran */\n.menu {\nwidth: 30em; /* etc. */ }\n\n/* \u00e9cran plus petit: on passe le menu en horizontal */\n@media (max-width: 100em) {\n.menu { width: 100%; }\n.menu li { display: inline-block; }\n/* etc. */\n}\n\n/* \u00e9cran encore plus petit: on cache le menu */\n@media (max-width: 50em) {\n.menu { display: none; }\n}\n</code></pre> <ol> <li> <p>Le HTML n'a pas besoin d'\u00eatre int\u00e9gralement charg\u00e9 pour que le CSS lui soit ajout\u00e9. Il est tout \u00e0 fait possible de passer le HTML par morceaux depuis le serveur, et l'arbre du DOM se construit petit \u00e0 petit. Merci Armand pour cette remarque pertinente !\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI/Premiere/C03/HTML/","title":"HTML strict","text":""},{"location":"NSI/Premiere/C03/HTML/#mettre-du-fond-html","title":"Mettre du fond : HTML","text":"<p>Ce document est une version rapide du cours de SNT de seconde, \u00e0 destination des \u00e9l\u00e8ves n'ayant que peu travaill\u00e9 sur HTML/CSS.</p>"},{"location":"NSI/Premiere/C03/HTML/#cest-quoi-une-page-web","title":"C'est quoi une page Web","text":"<p>Commen\u00e7ons par placer du vocabulaire ainsi qu'un bref apper\u00e7u de l'histoire du web.</p> <ol> <li> <p>Donner une d\u00e9finition de World Wide Web :</p> Done <p>Le World Wide Web ( <code>WWW</code>ou 3W) est un syst\u00e8me hypertexte fonctionnant sur Internet. Il a \u00e9t\u00e9 invent\u00e9 par Tim Berners-Lee et Robert Cailleau au CERN de Gen\u00e8ve, en 1989.</p> </li> <li> <p>Donner une d\u00e9finition d'Internet :</p> Done <p>Internet est le r\u00e9seau mondial d'ordinateurs accessibles au public. Nous verrons un historique rapide de la cr\u00e9ation d'Internet dans la partie R\u00e9seau du programme.</p> </li> <li> <p>Donner une d\u00e9finition de syst\u00e8me hypertexte :</p> Done <p>Un hypertexte est un document ou un ensemble de documents contenant des unit\u00e9s d'information li\u00e9es entre elles par des hyperliens. Ce syst\u00e8me permet \u00e0 l'utilisateur d'aller directement \u00e0 l'unit\u00e9 qui l'int\u00e9resse, \u00e0 son gr\u00e9, d'une fa\u00e7on non lin\u00e9aire. Le terme a \u00e9t\u00e9 cr\u00e9\u00e9 en 1965 par Ted Nelson, sociologue am\u00e9ricain.</p> </li> <li> <p>Donner une d\u00e9finition de Uniform Ressource Locator (URL) :</p> Done <p>Une URL (sigle de l\u2019anglais : Uniform Resource Locator, litt\u00e9ralement \u00ab localisateur uniforme de ressource \u00bb), couramment appel\u00e9e adresse web, est une cha\u00eene de caract\u00e8res uniforme qui permet d'identifier une ressource du World Wide Web par son emplacement et de pr\u00e9ciser le protocole internet pour la r\u00e9cup\u00e9rer (par exemple http ou https).<sup>1</sup></p> </li> <li> <p>Que signifie <code>http</code> et <code>https</code> ?</p> Done <p><code>http</code> signifie HyperText Transfer Protocol, soit litt\u00e9ralement * \u00ab Protocole de transfert Hypertexte \u00bb. C'est un protocole de communication client-serveur d\u00e9velopp\u00e9 pour le World Wide Web. Il existe aussi en version s\u00e9curis\u00e9e (protocole <code>https</code>, dont le fonctionnement est expliqu\u00e9 en classe de terminale).</p> </li> <li> <p>Expliquez ce qu'est Standard Generalized Markup Language :</p> Done <p>Standard Generalized Markup Language (\u00ab langage de balisage g\u00e9n\u00e9ralis\u00e9 normalis\u00e9 \u00bb - SGML) est un langage de description \u00e0 balises, de norme ISO (ISO 8879:1986).</p> <p>Ce langage, publi\u00e9 en 1986 par Charles Goldfarb, mais dont les pr\u00e9misses remontent \u00e0 1969, est un langage qui a eu pour vocation de s'affranchir des capacit\u00e9s techniques sp\u00e9cifiques des imprimantes pour d\u00e9crire un document texte. Ce standard, vite adopt\u00e9 par la communaut\u00e9 internationale, repose sur la s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations,...), qui est identifi\u00e9 par des balises ins\u00e9r\u00e9es dans le document lui-m\u00eame, de sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation (livre, journal, pr\u00e9sentation, \u00e9cran, ...).</p> <p>HTML (HyperText Markup Language) est une application de SGML, cr\u00e9e par Tim Berners-Lee en 1989.</p> </li> </ol>"},{"location":"NSI/Premiere/C03/HTML/#un-langage-de-balise-html","title":"Un langage de balise : HTML","text":"<p>Une page web, dans sa partie logique, c'est un fichier contenant du texte, ce texte \u00e9tant enrichi par un syst\u00e8me de balises ouvrantes - par exemple <code>&lt;p&gt;</code> et fermantes - par exemple <code>&lt;/p&gt;</code>, permettant de donner un sens particulier (autrement dit une s\u00e9mantique) au texte encadr\u00e9 par ces balises (titres, chapitres, paragraphes, illustrations...).</p> <p>Le langage utilis\u00e9 qui contient le texte et les balises s'appelle <code>HTML</code> ( d'o\u00f9 le nom de l'extension de fichier <code>.html</code>), qui est un acronyme pour Hyper Text Markup Language, soit langage de balisage hypertexte. Il est \u00e0 noter que HTML n'est pas un langage de programmation, mais simplement un langage de description du texte, privil\u00e9giant la mise en avant du sens avant la forme.</p> <p>Il existe de nombreux langages de balisages, permettant de donner une forme particuli\u00e8re \u00e0 du texte ou \u00e0 des chaines de caract\u00e8res. Par exemple, <code>HTML</code> pour le Web, \\(\\LaTeX\\) pour les documents scientifiques et les formules math\u00e9matiques, <code>XML</code> pour organiser des donn\u00e9es, ou m\u00eame <code>Markdown</code>, utilis\u00e9 dans les Notebooks et pour la conception de ce site.</p> <p>Un fichier <code>html</code> se pr\u00e9sente donc sous la forme suivante :</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"fr\"&gt; \n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" &gt;\n        &lt;title&gt;Une simple page web &amp;#129409; &lt;/title&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;h1&gt;Ma premi\u00e8re page web&lt;/h1&gt;\n        &lt;h2&gt;Le code html&lt;/h2&gt;\n        &lt;!-- ceci est un commentairen comme en Python, il n'est pas interpr\u00e9t\u00e9 par le navigateur, et n'est l\u00e0 que pour les codeurs ou les curieux --&gt;\n        &lt;p&gt; Pour faire une page web, il faut taper du code &lt;strong&gt;HTML&lt;/strong&gt;.\n        &lt;p&gt; Afin de faire fonctionner celui-ci, il faut placer des &lt;strong&gt;balises&lt;/strong&gt; qui encadrent des portions du texte :\n        &lt;/p&gt;\n        &lt;ul&gt;\n            &lt;li&gt; Une balise ouvrante, utilisant les symboles  &amp;lt; et &amp;gt; , qui encadrent un mot cl\u00e9 ;&lt;/li&gt;\n            &lt;li&gt; Une balise fermante, identique \u00e0 la balise ouvrante, mais un slash  / pr\u00e9c\u00e8de le mot cl\u00e9 ;&lt;/li&gt;\n            &lt;li&gt; \u00e9ventuellement des &lt;strong&gt;attributs&lt;/strong&gt; viennent compl\u00e9ter le mot cl\u00e9, afin de pr\u00e9ciser un peu plus la balise, par exemple en donnant un identifiant particulier, ou l'url d'un lien.&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;h2&gt; Les diff\u00e9rentes balises&lt;/h2&gt;\n        &lt;p&gt; Il existe de nombreuses balises en HTML. On peut trouver des explications sur leur fonctionnement en suivant &lt;a href=\"https://developer.mozilla.org/fr/docs/Apprendre/HTML/Balises_HTML\"&gt;ce lien&lt;/a&gt;&lt;/p&gt;\n        &lt;p&gt; Une autre possibilit\u00e9 est de t\u00e9l\u00e9charger la fiche suivante (une cheat sheet) : &lt;/p&gt;\n        &lt;img src = \"https://media.cheatography.com/storage/thumb/rmathieu13_html.750.jpg\" alt =\"Image de cheat sheet HTML\" title=\"Cheat Sheet HTML\" &gt;\n    &lt;/body&gt;\n\n\n&lt;/html&gt;\n</code></pre> <p>Notepad++</p> <p>Pour l'\u00e9dition de fichier de type <code>.html</code>, il ne faut surtout pas utiliser un traitement de texte classique, comme Word ou LibreOffice. En effet ceux-ci rajoutent de mani\u00e8re cach\u00e9e des informations <sup>2</sup> dans le fichier en \u00e9dition, ce qui risque de pr\u00e9senter de s\u00e9rieux probl\u00e8mes lors de l'affichage de la page web par un navigateur.</p> <p>Dans la suite de ce chapitre, nous utiliserons majoritairement le logiciel <code>Notepad++</code>, qui est un \u00e9diteur de texte orient\u00e9 codage, reconnaissant la plupart des langages informatiques. Ce logiciel est libre, disponible sur les ordinateurs du Lyc\u00e9e, et peut-\u00eatre t\u00e9l\u00e9charg\u00e9 en suivant ce lien. Notez qu'il existe aussi en version portable, et que vous pouvez donc l'installer sur une cl\u00e9 USB.</p> <p>une premi\u00e8re page web</p> <ol> <li>Ouvrez le logiciel <code>Notepad++</code></li> <li>Cr\u00e9ez un fichier vide nomm\u00e9 <code>pagesimple.html</code> dans un dossier <code>NSI/Web</code>.</li> <li>Copiez dans le corps de ce fichier le contenu HTML pr\u00e9sent\u00e9 au dessus.</li> <li>Enregistrez le fichier.</li> <li>Avec l'explorateur de fichier, allez dans le dossier <code>NSI/Web</code> et double-cliquez sur le fichier <code>pagesimple.html</code>. Que se passe-t-il ?</li> <li>Quel est le r\u00f4le des balises pr\u00e9sentes dans ce document ?</li> </ol>"},{"location":"NSI/Premiere/C03/HTML/#structure-dun-document-html-et-balises-les-plus-utiles","title":"Structure d'un document HTML et balises les plus utiles.","text":"<p>Une balise <code>HTML</code> classique est de la forme suivante  :</p> <p></p><pre><code>&lt;p class=\"Toto\"&gt; ... &lt;/p&gt;\n</code></pre> o\u00f9 : <ul> <li><code>p</code> est l'identificateur de balise, ici celui d'un paragraphe ;</li> <li><code>class</code> est un attribut de la balise <code>&lt;p&gt;</code> ;</li> <li><code>\"Toto\"</code> est la valeur de l'attribut <code>class</code>. Une valeur est toujours entre guillemets.</li> <li><code>&lt;/p&gt;</code> est la balise fermante. Entre les deux balises se trouve le corps du paragraphe.</li> </ul> <p>Cas particulier : la balise <code>&lt;img &gt;</code></p> <p>La balise <code>&lt;img &gt;</code> est la balise permettant d'ins\u00e9rer des images dans le document HTML. Elle poss\u00e8de une particularit\u00e9 : elle est auto-fermante  (car elle n'encadre aucun \u00e9l\u00e9ment, elle contient la r\u00e9f\u00e9rence vers l'image).</p> <p>Elle poss\u00e8de entre-autres les attributs suivants :</p> <ul> <li><code>src</code> : l'adresse de l'image, absolue ou relative, ou sous la forme d'une URL (Attention aux URL google image, qui ne sont que temporaires !) ;</li> <li><code>alt</code> : le texte de remplacement si l'image est manquante (voir remarque ci-dessus) ;</li> <li><code>title</code> :  le texte de l'info-bulle de l'image</li> <li><code>width</code> : la largeur de l'image, en pixels ou en pourcentage ;</li> <li><code>height</code> : la hauteur de l'image, en pixels ou en pourcentage ;</li> <li>...</li> </ul> <p>Les balises <code>HTML</code> sont des \u00e9l\u00e9ments pr\u00e9cisant la nature du texte qu'elles encadrent. En aucun cas elles ne donnent d'indications de placement, d'alignement, bref de mise en page.</p> <p>Il s'agit donc de pr\u00e9ciser un d\u00e9coupage logique de la page.</p> <p>Les balises</p> <p>Pour chacune des balises suivantes, donner leur r\u00f4le et leurs principaux attributs, en s'aidant de la page d\u00e9veloppeur Mozilla.</p> <ol> <li><code>&lt;html&gt;</code></li> <li><code>&lt;head&gt;</code></li> <li><code>&lt;meta&gt;</code></li> <li><code>&lt;title&gt;</code></li> <li><code>&lt;body&gt;</code></li> <li><code>&lt;header&gt;</code> et <code>&lt;footer&gt;</code></li> <li><code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, ..., <code>&lt;h6&gt;</code></li> <li><code>&lt;ol&gt;</code>, <code>&lt;ul&gt;</code> et <code>&lt;li&gt;</code></li> <li><code>&lt;div&gt;</code></li> <li><code>&lt;a&gt;</code></li> <li><code>&lt;br&gt;</code></li> </ol> <p>Les balises et attributs obsol\u00e8tes</p> <p>Attention, vous trouverez dans de nombreux sites web des conseils forts mauvais pour l'utilisation des balises. certains en effet continuent d'utiliser des balises d\u00e9pr\u00e9ci\u00e9es ou obsol\u00e8tes, comme <code>&lt;center&gt;</code> par exemple.</p> <p>Vous pouvez trouver ici quelques-unes de ces balises et attributs</p> <p>A vous de jouer</p> <p>Cr\u00e9ez une page web sur le sujet que vous souhaitez, et qui respecte au moins les conditions suivantes :</p> <ol> <li>Un titre</li> <li>Deux parties de 3 paragraphes, avec au moins une liste (num\u00e9rot\u00e9e ou non).</li> <li>Un lien interne \u00e0 la page</li> <li>Un lien externe \u00e0 la page</li> <li>Une image locale (sur l'ordinateur)</li> <li>une image distante (par URL) </li> <li>Une incrustation vid\u00e9o (voir directement depuis YT pour obtenir le lien)</li> </ol>"},{"location":"NSI/Premiere/C03/HTML/#verifier-son-code-le-verificateur-du-w3c","title":"V\u00e9rifier son code : le v\u00e9rificateur du W3C","text":"<p>Le W3C (World Wide Web Consortium) est l'organisme \u00e0 buts non lucratifs, charg\u00e9 de standardiser et promouvoir les technologies du web. Sa gestion est assur\u00e9e conjointement par le MIT aux \u00c9tats-Unis, l'ERCIM en Europe (dont l'INRIA en France), l'universit\u00e9 Keio au Japon et l'universit\u00e9 Beihang en Chine. \u00c0 c\u00f4t\u00e9 d'industriels et d'\u00e9diteurs informatiques, en particulier les \u00e9diteurs des navigateurs (Mozilla Fondation, Microsoft, Apple, Opera ou Google), ses membres se composent aussi des centres de recherches (Inria, National Research Council Canada, etc.), des op\u00e9rateurs de r\u00e9seaux, ainsi que des entreprises investies dans le Web comme Braillenet, la Biblioth\u00e8que du Congr\u00e8s ou la BBC. </p> <p>Le W3C offre un service de validation des pages web, v\u00e9rifiant que leur structure est conforme aux normes en vigueur. On le trouve \u00e0 l'adresse https://validator.w3.org/.</p> <p>On peut y tester :</p> <ul> <li>soit une URl (Validate by URI) ;</li> <li>soit un fichier (Validate by File Upload);</li> <li>soit en copiant-collant le code HTML (Validate by Direct Input).</li> </ul> <ol> <li> <p>https://fr.wikipedia.org/wiki/Uniform_Resource_Locator \u21a9</p> </li> <li> <p>Les traitements de textes classiques comme LibreOffice, Word, Google Doc, sont appel\u00e9s des traitements de textes <code>WYSIWIG</code> (What you see is what you get). Ils sont extr\u00eamement puissants, mais parfois difficiles \u00e0 manipuler. De nombreux utilisateurs ne les utilisent que comme un substitut \u00e0 la machine \u00e0 \u00e9crire, sans avoir conscience des puissantes capacit\u00e9s d'\u00e9dition de ces logiciels. Ces logiciels ne fabriquent en r\u00e9alit\u00e9 pas un simple document texte, mais en r\u00e9alit\u00e9 une archive (comme un type <code>zip</code>, <code>7z</code> ou <code>rar</code>), qui contient l'ensemble des informations textuelles, de formatage, et hypertextuelles du document. Il faut noter aussi qu'il existe des logiciels de traitements de textes non WYSIWYG, tels que ceux utilisant \\(\\LaTeX\\), extr\u00eamement puissants puisqu'ils permettent \u00e0 un utilisateur averti de formater des documents exactement comme il le souhaite. Ces traitements de textes sont utilis\u00e9s dans le domaine de la recherche, et savoir utiliser \\(\\LaTeX\\) est un v\u00e9ritable atout pour un \u00e9tudiant en sciences.\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI/Premiere/C03/JS01/","title":"Introduction \u00e0 Javascript","text":""},{"location":"NSI/Premiere/C03/JS01/#ajouter-de-linteractivite-introduction-a-javascript","title":"Ajouter de l'interactivit\u00e9 : Introduction \u00e0 JavaScript","text":""},{"location":"NSI/Premiere/C03/JS01/#premiere-approche","title":"Premi\u00e8re approche","text":""},{"location":"NSI/Premiere/C03/JS01/#javascript","title":"Javascript ?","text":"<p><code>Javascript</code>, souvent raccourci en <code>JS</code>, est un langage de programmation interpr\u00e9t\u00e9, tout comme Python. Il est une des briques angulaire de <code>HTML 5</code>, avec <code>HTML</code> et <code>CSS</code>.</p> <p>A chaque fois qu'une page fait plus que simplement afficher du texte et des images - un contenu statique, copmme par exemple affiocher des animations, des cartes interactives, des menus d\u00e9roulants, etc, il y a de bonnes chances pour que ce soit un script <code>JavaScript</code> qui en soit la raison.</p> <p>Comme souvent, un tutoriel complet sur Javascript est disponible sur MDN Web Docs. Vous y trouverez de nombreuses explications absentes de ce cours.</p>"},{"location":"NSI/Premiere/C03/JS01/#une-premiere-approche-modifier-le-texte-dun-paragraphe-par-un-click","title":"Une premi\u00e8re approche : modifier le texte d'un paragraphe par un click.","text":"<p>Tips</p> <p>Cette partie est int\u00e9gralement trait\u00e9e sous la forme d'une vid\u00e9o :</p> <p> </p><p></p> <p></p> <p>Observons les codes de la page web (corrig\u00e9 pour la position de la  balise <code>&lt;script&gt;</code><sup>1</sup>) :</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"fr\"&gt; \n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;Un exemple de l'utilit\u00e9 de JS &lt;/title&gt;\n        &lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;      \n        &lt;p&gt;Bonjour Inconnu !&lt;/p&gt;        \n        &lt;script&gt;\nlet texte = document.querySelector('p');\ntexte.addEventListener('click', changeNom);\n\nfunction changeNom(){\nlet name = prompt(\"Entrez votre nom :\");\ntexte.textContent = \"Bonjour \"+name+\" !\";\n}\n&lt;/script&gt;\n    &lt;/body&gt; \n&lt;/html&gt;\n</code></pre> <pre><code>p{\ntext-align: center;\nborder: 2px solid rgba(0,0,200,0.6);\nbackground: rgba(0,0,200,0.3);\ncolor: rgba(0,0,200,0.6);\nbox-shadow: 1px 1px 2px rgba(0,0,200,0.4);\nborder-radius: 10px;\npadding: 3px 10px;\ncursor:pointer;\n}\n</code></pre> <p>Ainsi que l'arbre du DOM correspondant :</p> <p></p> <p>La construction d l'arbre du DOM se fait au fur et \u00e0 mesure de la lecture du fichier <code>.html</code>, et est pr\u00e9sent\u00e9e sur le sch\u00e9ma ci-dessus de gauche \u00e0 droite. La balise <code>&lt;script&gt;</code> \u00e9tant la derni\u00e8re balise pr\u00e9sente dans <code>&lt;body&gt;</code>, ell est lue en dernier.</p> <p>L'ex\u00e9cution du code <code>JS</code> est donc la suivante :</p> <ul> <li>Cr\u00e9ation d'une variable <code>texte</code> qui r\u00e9f\u00e9rence la premi\u00e8re balise <code>&lt;p&gt;</code> trouv\u00e9e dans le DOM (surlignage  jaune ).</li> <li>Ajout \u00e0 l'\u00e9l\u00e9ment <code>&lt;p&gt;</code> s\u00e9lectionn\u00e9 d'un \u00e9couteur d'\u00e9v\u00e8nement qui attends une action clique-gauche (fl\u00e8che  rouge ).</li> <li>Fin de la lecture du code, avec cr\u00e9ation d'une r\u00e9f\u00e9rence vers une fonction <code>changeNom</code>, qui n'est pas ex\u00e9cut\u00e9e.</li> </ul> <p>Une fois la construction du DOM termin\u00e9e, le gestionnaire d'\u00e9v\u00e8nement g\u00e9n\u00e9ral du navigateur \u00e9coute toutes les actions de l'utilisateur (mouvement souris, clique gauche ou clique droit, appuis sur le clavier, voire \u00e9coute micro si celui-ci a \u00e9t\u00e9 activ\u00e9....)</p> <p>Un clique-droit sur l'\u00e9l\u00e9ment <code>&lt;p&gt;</code> d\u00e9clenche l'ex\u00e9cution de la fonction <code>changeNom</code> (fl\u00e8che  bleue , qui elle m\u00eame va modifier l'attribut <code>textContent</code> de l'\u00e9l\u00e9ment <code>&lt;p&gt;</code> (fl\u00e8che  verte ).</p>"},{"location":"NSI/Premiere/C03/JS01/#bases-de-javascript","title":"Bases de Javascript","text":""},{"location":"NSI/Premiere/C03/JS01/#separer-le-code","title":"S\u00e9parer le code","text":"<p>Pour conserver la coh\u00e9rence de HTML5, on a s\u00e9par\u00e9 le code HTML, d\u00e9finissant la nature des \u00e9lements de la page, du CSS, qui d\u00e9finit la forme que prendront ces \u00e9l\u00e9ments. </p> <p>Il faudra faire de m\u00eame avec le code <code>javascript</code>, en le s\u00e9parant du code <code>html</code> en renseigant dans la balise <code>&lt;script&gt;</code> l'attribut <code>src</code> avec l'adresse (absolue ou relative) du fichier contenant le code javascript. Ainsi si le fichier javascript s'appelle <code>mon_fichier.js</code> et est dans le m\u00eame dossier que le fichier <code>html</code>, il suffira d'\u00e9crire la balise suivante :</p> <p></p><pre><code>&lt;script src=\"mon_fichier.js\"&gt; &lt;/script&gt;\n</code></pre> Un fichier javascript est donc simplement un fichier d'extension <code>.js</code> contenant du code javascript. <p>L'exemple pr\u00e9c\u00e9dent peut donc \u00eatre class\u00e9 en trois fichiers :</p> <p>  Fichier `pagesimple.html`  </p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"fr\"&gt; \n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;Un exemple de l'utilit\u00e9 de JS &lt;/title&gt;\n        &lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;      \n        &lt;p&gt;Bonjour Inconnu !&lt;/p&gt;        \n        &lt;script src=\"code.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt; \n&lt;/html&gt;\n</code></pre> <p>  Fichier `style.css`  </p> <pre><code>p{\ntext-align: center;\nborder: 2px solid rgba(0,0,200,0.6);\nbackground: rgba(0,0,200,0.3);\ncolor: rgba(0,0,200,0.6);\nbox-shadow: 1px 1px 2px rgba(0,0,200,0.4);\nborder-radius: 10px;\npadding: 3px 10px;\ncursor:pointer;\n}\n</code></pre> <p>  Fichier `code.js`  </p> <pre><code>let texte = document.querySelector('p');\ntexte.addEventListener('click', changeNom);\n\nfunction changeNom(){\nlet name = prompt(\"Entrez votre nom :\");\ntexte.textContent = \"Bonjour \"+name+\" !\";\n}\n</code></pre>"},{"location":"NSI/Premiere/C03/JS01/#utilisation-de-linspecteur-dobjet","title":"Utilisation de l'inspecteur d'objet","text":"<p>L'inspecteur d'objet permet d'avoir acc\u00e8s \u00e0 une console javascript, fort utile pour aider au d\u00e9boggage de code.</p> <p>Celle-ci est disponible une fois l'inspecteur d'objet ouvert :</p> <p></p> <p>prise en main de la console <code>js</code> </p> <ol> <li>Ouvrez la console javascript de votre navigateur, sur une page au choix.</li> <li>Tapez le code suivant :     <pre><code>function plop(){\nconsole.log(\"Plop !\");\n}\n</code></pre></li> <li> <p>Ex\u00e9cutez la fonction <code>plop</code> :</p> <p></p><pre><code>plop();\n</code></pre> Que se passe-t-il ? </li> <li> <p>Tapez maintenant le code suivant :     </p><pre><code>let cible = document.querySelector(\"h1\");\ncible.addEventListener('click', plop);          </code></pre> </li> <li>Cherchez la premi\u00e8re balise <code>&lt;h1&gt;</code> de la page et cliquez sur cet \u00e9l\u00e9ment. Que se passe-t-il ?</li> <li>Tapez le code suivant :     <pre><code>cible.addEventListener('mouseover', plop);\n</code></pre>     Comment faire pour d\u00e9clencher l'\u00e9criture dans la console \u00e0 partir de cet \u00e9v\u00e9nement ?</li> </ol> <p> Utilisation de <code>console.log()</code></p> <p>Il est parfois difficile de voir comment s'ex\u00e9cute un code javscript. L'utilisation de <code>console.log(message);</code> dans votre code, avec comme message une cha\u00eene de caract\u00e8re explicative, est parfois un bon moyen de v\u00e9rifier qu'un bloc de code est ex\u00e9cut\u00e9 par javascript.</p>"},{"location":"NSI/Premiere/C03/JS01/#programmer-en-javascript-les-bases","title":"Programmer en javascript : les bases","text":""},{"location":"NSI/Premiere/C03/JS01/#declaration-des-variables","title":"D\u00e9claration des variables","text":"<p>Javascript est un langage faiblement typ\u00e9. Cela signifie que lorsqu'on d\u00e9clare une variable, il n'est pas n\u00e9cessaire de d\u00e9clarer son type. Il suffit de d\u00e9clarer son nom, en ajoutant devant les mots-cl\u00e9s <code>let</code> ou <code>var</code> selon la situation<sup>2</sup>. On peut aussi d\u00e9clarer et initialiser une variable dans le m\u00eame temps :</p> <p></p><pre><code>let x ; // x est d\u00e9clar\u00e9e, mais pas initialis\u00e9e\nlet y = 10; // y est d\u00e9clar\u00e9e et initialis\u00e9e \u00e0 la valeur 10\n\nvar z =\"toto\";  // z est d\u00e9clar\u00e9e et initialis\u00e9e avec la cha\u00eene \"toto\"\n</code></pre> Sachez seulement que : <ul> <li><code>let</code> d\u00e9finit des variables dont la port\u00e9e (=l'ensemble des lignes o\u00f9 la variable est connue et utilisable) est celle du <code>bloc</code> ;</li> <li><code>var</code> d\u00e9finit des variables dont la port\u00e9e est celle de la fonction.</li> </ul> <p>Pour ceux int\u00e9ress\u00e9s les exemples ci-dessous sont parlants :</p> Exemples de port\u00e9es<sup>2</sup> <p>les deux codes suivant expliquent en partie la diff\u00e9rence entre <code>let</code> et <code>var</code> </p><pre><code>    function varTest() {\nvar x = 31;\nif (true) {\nvar x = 71;  // c'est la m\u00eame variable (m\u00eame fonction)!\nconsole.log(x);  // 71\n}\nconsole.log(x);  // 71\n}\n\nfunction letTest() {\nlet x = 31;\nif (true) {\nlet x = 71;  // c'est une variable diff\u00e9rente (changement de bloc)\nconsole.log(x);  // 71\n}\nconsole.log(x);  // 31\n}\n</code></pre> <p>Une ex\u00e9cution pas-\u00e0-pas est possible gr\u00e2ce au site pythontutor.com.</p>"},{"location":"NSI/Premiere/C03/JS01/#operations-arithmetiques","title":"Op\u00e9rations arithm\u00e9tiques","text":"<p>Les op\u00e9rations arithm\u00e9tiques de base sont les m\u00eame qu'en Python : \\(+\\), \\(-\\), \\(\\times\\) et \\(\\div\\) sont repr\u00e9sent\u00e9es par  <code>+</code>, <code>-</code>, <code>*</code> et <code>/</code>.</p> <p>Ainsi le calcul \\(3 + \\dfrac{4}{2-7}\\) est effectu\u00e9 par :</p> <pre><code>&gt;&gt; 3 + 4/(2-7)\n2.2\n</code></pre> <p>Les op\u00e9rations de modulo et d'exposants sont utilisables comme en Python :</p> <pre><code>&gt;&gt; 22%5\n2\n&gt;&gt; 5**3\n125\n</code></pre> <p>Quotient de la division euclidienne</p> <p>Il n'est pas possible comme en Python d'utiliser l'op\u00e9rateur <code>//</code> pour obtenir le quotient de la division euclidienne de deux entiers. Il faut donc utiliser une fonction sp\u00e9cifique du module <code>Math</code> pour l'obtenir :</p> <pre><code>&gt;&gt;&gt; Math.floor(24/5)\n4\n</code></pre> <p>Les fonctions math\u00e9matiques plus complexes ( \\(\\sqrt{~~}\\), \\(sin\\), \\(cos\\)...) peuvent \u00eatre utlis\u00e9es en les pr\u00e9fixant par <code>Math.</code></p> <pre><code>&gt;&gt; Math.sqrt(25)\n5\n&gt;&gt; Math.cos(45)\n0.5253219888177297\n</code></pre>"},{"location":"NSI/Premiere/C03/JS01/#les-chaines-de-caracteres","title":"Les  cha\u00eenes de caract\u00e8res","text":"<p>Le type primitif cha\u00eene de caract\u00e8re en javascript est rep\u00e9r\u00e9 comme en python par un encadrement par des guillemets simples <code>'</code>, doubles <code>\"</code> ou m\u00eame des accents graves <code>`</code>.</p> <p>Ce type primitif est converti automatiquement en objets <code>String</code> d\u00e8s qu'on fait appel aux m\u00e9thodes des objets <code>String</code>. Ainsi si <code>ma_chaine</code> est une chaine de caract\u00e8re :</p> <ul> <li><code>ma_chaine.length</code> donne la longueur de la cha\u00eene de caract\u00e8res ;</li> <li><code>ma_chaine.toLowerCase()</code> renvoie la cha\u00eene de caract\u00e8res en minuscules ( on a de m\u00eame <code>.toUpperCase()</code>)</li> <li><code>ma_chaine[i]</code> renvoie le caract\u00e8re d'indice <code>i</code> (toujours en partant de z\u00e9ro !)</li> <li>...</li> </ul> <p>La totalit\u00e9 des m\u00e9thodes li\u00e9es aux objets <code>String</code> sont d\u00e9crits dans cette page.</p> <p>Javascript et le transtypage</p> <p>En Python, une instruction telle que <code>\"Bonjour num\u00e9ro \"+6</code> ne fonctionne pas. On re\u00e7oit une erreur <code>TypeError: can only concatenate str (not \"int\") to str</code>, ce qui signifie qu'il est impossible de concat\u00e9ner un type <code>str</code> avec autre chose. Contrairement \u00e0 Python, en javascript il n'est pas n\u00e9cessaire de transtyper une variable pour qu'elle soit int\u00e9gr\u00e9e \u00e0 une op\u00e9ration avec d'autre types de variables. L'instruction <code>\"Bonjour num\u00e9ro \"+6</code> renvoie la cha\u00eene de caract\u00e8res <code>\"Bonjour num\u00e9ro 6\"</code><sup>3</sup>.</p> <p>C'est tr\u00e8s pratique, mais attention ! Certaines erreurs peuvent tr\u00e8s vite \u00eatre commise ! Un petit exemple de comportement de Javascript est donn\u00e9 dans l'exemple ci-dessous :</p> <p> </p>"},{"location":"NSI/Premiere/C03/JS01/#fonctions","title":"Fonctions","text":"<p>Une fonction en javascript est introduite par le mot-cl\u00e9 <code>function</code>, suivie du nom de la fonction, de parenth\u00e8ses contenant ou non des arguments. Le bloc de code de la fonction est d\u00e9limit\u00e9 par une paire d'accolades ouvrantes et fermantes.</p> <p>Une valeur de retour est possible en utilisant le mot cl\u00e9 <code>return</code>.</p> <p>Exemples</p> <p>Fonction calculant le discriminant d'un polyn\u00f4me de degr\u00e9 2</p> <p></p><pre><code>function discriminant(a,b,c){\nreturn b**2-4*a*c;\n}       </code></pre> Fonction renvoyant <code>true</code> si les deux vecteurs \\(\\vec{u}\\left(\\begin{array}{c}x1\\\\y1\\end{array}\\right)\\) et  \\(\\vec{v}\\left(\\begin{array}{c}x2\\\\y2\\end{array}\\right)\\) sont colin\u00e9aires, et <code>false</code> sinon <pre><code>function colineaires(x1, y1, x2, y2){\ndet = x1*y2-x2*y1;\nreturn det==0;      }       </code></pre>"},{"location":"NSI/Premiere/C03/JS01/#structures-conditionnelles","title":"Structures conditionnelles","text":"<p>La structure conditionnelle de base est obtenue gr\u00e2ce au code suivant :</p> <pre><code>if ( booleen ){\n// Bloc Si\n}\nelse {\n// Bloc Sinon\n}\n</code></pre> <p>Remarques</p> <ul> <li> <p>la condition bool\u00e9enne doit \u00eatre entre parenth\u00e8ses. L'interpr\u00e9teur javascript signalera une erreur dans le cas contraire :</p> <p></p> </li> <li> <p>il n'y a pas comme en Python de clause <code>elif</code>. Si on veut tester plusieurs sous conditions, il faudra imbriquer les structures conditionnelles. Voici une comparaison entre python et javascript :    </p> <p></p> <pre><code>if condition 1 :\n    # bloc condition 1\nelif condition 2 :\n    # bloc condition 2\nelse :\n    # bloc sinon    \n</code></pre> <p></p> <pre><code>if (condition 1){\n// bloc condition 1\n}\nelse {\nif (condition 2) {\n// bloc condition 2\n} else {\n// bloc sinon\n}\n}\n</code></pre> <p></p> <p>L'imbrication est tout de suite plus compliqu\u00e9e... Il faut \u00eatre rigoureux, et particuli\u00e8rement \u00eatre attentif \u00e0 bien fermer les accolades d\u00e8s qu'on en a ouvert une.</p> </li> <li> <p>Pour les cas avec trop d'imbrications, il est parfois n\u00e9cessaire de se servir plut\u00f4t de l'instruction <code>switch</code> pour laquelle la documentation est tr\u00e8s bien faite.</p> </li> </ul> <p>ET et OU en javascript</p> <p>Attention ! En javascript les mots-cl\u00e9s <code>AND</code> et <code>OR</code> n'existent pas :</p> <ul> <li>pour obtenir <code>ET</code> on utilise <code>&amp;&amp;</code> ;</li> <li>pour obtenir <code>OU</code> on utilise <code>||</code> ;</li> </ul> <p>Une condition  \\(\\in [0;10]\\) s'exprimera alors sous la forme <code>(a&gt;=0) &amp;&amp; (a=&lt;10)</code>.</p>"},{"location":"NSI/Premiere/C03/JS01/#boucles-bornees","title":"Boucles born\u00e9es","text":"<p>Une boucle born\u00e9e en javascript s'\u00e9crit de la mani\u00e8re suivante :</p> <p></p><pre><code>for (initialisation; conditions de continuit\u00e9; incr\u00e9mentation){\n// bloc d'instructions \u00e0 r\u00e9p\u00e9ter\n}\n</code></pre> Plus simplement, pour r\u00e9p\u00e9ter 10 fois un bloc d'instructions, on peut utiliser la structure suivante : <pre><code>for (let i=0; i&lt;10; i=i+1){\n// bloc d'instructions \u00e0 r\u00e9p\u00e9ter\n}\n</code></pre> <ul> <li>on commence par cr\u00e9er une variable sur laquelle on va it\u00e9rer : <code>var i=0;</code></li> <li>on indique une condition de continuit\u00e9 de l'action : <code>i&lt;10;</code> (tant que <code>i</code> est inf\u00e9rieur \u00e0 <code>10</code>, on effectue le bloc d'instruction de la boucle)</li> <li>on indique comment varie la variable \u00e0 chaque tour de boucle  : <code>i=i+1</code> (\u00e0 chaque tour, la variable <code>i</code> est incr\u00e9ment\u00e9e de 1$.</li> </ul> <p>Il faut noter que la variable <code>i</code> n'existe plus une fois la boucle termin\u00e9e, vu qu'n a utilis\u00e9 <code>let</code> :</p>"},{"location":"NSI/Premiere/C03/JS01/#boucles-non-bornees","title":"Boucles non-born\u00e9es","text":"<p>Une boucle non-born\u00e9e est obtenue en javascript par l'instruction suivante :</p> <pre><code>while (booleen) {\n// bloc d'instruction\n}\n</code></pre> <p>Un exemple d'utilisation avec les chaines de caract\u00e8res est disponible ici :</p>"},{"location":"NSI/Premiere/C03/JS01/#exercices","title":"Exercices","text":"<p>Exercice 1</p> Enonc\u00e9Solution <p>Ecrivez une fonction nomm\u00e9e <code>isTooLong</code> qui :</p> <ul> <li>prend une cha\u00eene de caract\u00e8res comme argument;</li> <li>renvoie vrai si la longueur de la cha\u00eene d\u00e9passe 10 caract\u00e8res;</li> <li>renvoie faux dans les autres cas.</li> </ul> <pre><code>function isTooLong(mot){\nif (mot.length&gt;10){\nreturn true;\n}else{\nreturn false;\n}\n}\n</code></pre> <p>Exercice 2</p> Enonc\u00e9Solution <p>Cr\u00e9ez une fonction nomm\u00e9e <code>aprec</code> qui :</p> <ul> <li>prend une note sur 20 en argument ;</li> <li>renvoie <code>\"Hideux\"</code> si la note est entre 0 et 7 exclus ;</li> <li>renvoie <code>\"Moche\"</code> si la note entre 7 et 10 exclus ;</li> <li>renvoie <code>\"Nice\"</code> si la note entre 10 et 15 exclus ;</li> <li>renvoie <code>\"GG\"</code> si la note entre 15 et 20 inclus ;</li> <li>renvoie <code>\"BUG\"</code> si la note n'est pas correcte.</li> </ul> <pre><code>function aprec(note){\nif ((note&gt;=0) &amp;&amp; (note&lt; 7)){\nreturn \"Hideux;         \n    } else if ((note&gt;=7) &amp;&amp; (note&lt; 10)){\n        return \"Moche\";\n    } else if ((note&gt;=10) &amp;&amp; (note&lt; 15)){\n        return \"Nice\";\n    } else if ((note&gt;=15) &amp;&amp; (note&lt;= 20)){\n        return \"GG\";\n    } else {\n        return \"BUG\";\n}\n\n}\n</code></pre> <p>Exercice 3</p> Enonc\u00e9Solution <p>\u00c9crivez une fonction <code>max3</code> qui renvoie le plus grand nombre parmi trois entiers pass\u00e9s en argument.</p> <pre><code>function max3(n1, n2, n3){\nif ((n1&gt;=n2) &amp;&amp; (n1&gt;=n3)){\nreturn n1\n} else if ((n2&gt;=n1) &amp;&amp; (n3&gt;=n1)){\nreturn n2\n} else {\nreturn n3\n}\n}\n</code></pre> <p>Exercice 4</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction affichant les 10 premiers multiples de 7.</p> <pre><code>function multiple7(){\nfor (let i=0; i&lt;10; i=i+1){\nconsole.log(\"7x\"+i+\" = \"+(7*i));\n}\n}\n</code></pre> <p>Exercice 5</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>puissance2(v)</code> qui renvoie gr\u00e2ce \u00e0 une boucle non-born\u00e9e l'entier <code>n</code> tel que :</p> \\[ 2^n \\leqslant v &lt; 2^{n+1} \\] <p>On supposera que <code>v</code> est bien un entier positif.</p> <pre><code>function puissance2(v){\nlet p =0;\nwhile (v&gt;1){\nv = Math.floor(v/2);\np = p+1;\n}\nreturn p\n}\n</code></pre> <ol> <li> <p>une vid\u00e9o d\u00e9taillant pourquoi la balise <code>&lt;script&gt;</code> doit \u00eatre plac\u00e9e dans la balise <code>&lt;body&gt;</code> est disponible ici.\u00a0\u21a9</p> </li> <li> <p>La question de l'utilisation de <code>let</code> ou <code>var</code> d\u00e9passe largement le cadre de ce cours. On trouvera ici un d\u00e9but d'explication.\u00a0\u21a9\u21a9</p> </li> <li> <p>https://fr.wikipedia.org/wiki/Le_Prisonnier#Synopsis \u21a9</p> </li> </ol>"},{"location":"NSI/Premiere/C03/JS02/","title":"Javascript, le DOM et les formulaires","text":""},{"location":"NSI/Premiere/C03/JS02/#javascript-et-la-manipulation-du-dom","title":"Javascript et la manipulation du DOM","text":"<p>Cette partie de cours consistera uniquement en une s\u00e9rie de vid\u00e9o. Vous devrez faire les manipulations propos\u00e9es en parall\u00e8le de vos visionnages de ces vid\u00e9os. Les diff\u00e9rents fichiers sont disponibles au t\u00e9l\u00e9chargement ici.</p>"},{"location":"NSI/Premiere/C03/JS02/#ajouter-des-objets-au-dom-en-javascript","title":"Ajouter des objets au DOM en Javascript","text":""},{"location":"NSI/Premiere/C03/JS02/#construction-et-traitements-de-formulaires-en-javascript","title":"Construction et traitements de formulaires en Javascript","text":""},{"location":"NSI/Premiere/C03/JS02/#partie-1-construire-un-formulaire-html","title":"Partie 1 : Construire un formulaire HTML","text":""},{"location":"NSI/Premiere/C03/JS02/#partie-2-recuperer-les-informations-dun-formulaire-avec-javascript","title":"Partie 2 : R\u00e9cup\u00e9rer les informations d'un formulaire avec Javascript","text":""},{"location":"NSI/Premiere/C03/JS02/#partie-3-utiliser-les-donnees-du-formulaire-pour-rendre-la-page-interactive","title":"Partie 3 : Utiliser les donn\u00e9es du formulaire pour rendre la page interactive.","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/","title":"Premiers algorithmes de tris","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#premiers-algorithmes-de-tri-de-tableaux","title":"Premiers algorithmes de tri de tableaux","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#trier-de-maniere-naturelle-les-algorithmes-naifs","title":"Trier de mani\u00e8re naturelle : les algorithmes na\u00effs","text":"<p>Trier \u00e0 la main</p> Enonc\u00e9Solution 1Solution 2 <p>On donne une main de 5 cartes d'un jeu de 54 cartes. Trier les cartes par ordre croissant, sans tenir compte des couleurs. Vous devrez marquer dans le tableau suivant l'ensemble des changements de positions des cartes dans votre main :</p> <p></p> <p>Avez-vous tous utilis\u00e9 la m\u00eame m\u00e9thode ?</p> <p></p> <p></p>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#tri-par-insertion","title":"Tri par insertion","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#principes","title":"Principes","text":"<p>Le principe du tri par insertion est le suivant :</p> <ul> <li>un tableau de dimension 1 est consid\u00e9r\u00e9 comme tri\u00e9, donc le sous-tableau contenant le premier \u00e9l\u00e9ment est tri\u00e9 ;</li> <li>on prend ensuite le deuxi\u00e8me \u00e9l\u00e9ment, et on l'ins\u00e8re \u00e0 la bonne place dans le sous-tableau tri\u00e9 ;</li> <li>on recommence en consid\u00e9rant chaque \u00e9l\u00e9ment du tableau.</li> </ul> <p>Exemple</p> <p>On veut trier le tableau <code>[6, 5, 3, 1, 8, 7, 2, 4]</code>  par un tri par insertion. Compl\u00e9ter le tableau suivant en repr\u00e9sentant :</p> <ul> <li>par des fl\u00e8ches bleues les d\u00e9placements d'\u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s ;</li> <li>par des fl\u00e8ches rouges l'insertion de nouveau \u00e9l\u00e9ments dans le sous-tableau tri\u00e9 (cases jaunes).</li> </ul> A compl\u00e9terVersion compl\u00e9t\u00e9eGIF extrait de wikipedia <p></p> <p>A venir</p> <p></p>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#algorithme-en-pseudo-code-et-complexite","title":"Algorithme en pseudo-code et complexit\u00e9","text":"<p>Algorithme</p> <p></p> <p>Quelques remarques</p> <ul> <li>Le tri par insertion est un tri en place, car il trie un tableau sans avoir besoin de tableau auxiliaire.</li> <li>La complexit\u00e9 du tri par insertion est quadratique, c'est-\u00e0-dire en \\(\\mathscr{O}(n^2)\\) dans le pire des cas, quand le tableau est \u00e0 l'envers. C'est aussi le cas moyen - ce qui n'est pas tr\u00e8s bon en terme de complexit\u00e9 en temps.</li> <li>Cependant, pour un tableau tri\u00e9 ou presque tri\u00e9, la complexit\u00e9 tombe en \\(\\mathscr{O}(n)\\), ce qui est une complexit\u00e9 lin\u00e9aire, tr\u00e8s efficace.</li> </ul> <p>Application : Python</p> ExerciceSolution <p>Construire une proc\u00e9dure (c'est-\u00e0-dire une fonction sans valeur de retour) Python <code>tri_insertion(tab)</code> qui trie le tableau <code>tab</code> par un tri par insertion.</p> <pre><code>def tri_insertion(tab): \n    # Parcours de 1 \u00e0 la taille du tab\n    for i in range(1, len(tab)): \n        k = tab[i] \n        j = i-1\n        while j &gt;= 0 and k &lt; tab[j] : \n                tab[j + 1] = tab[j] \n                j -= 1\n        tab[j + 1] = k\n</code></pre>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#le-tri-par-selection","title":"Le tri par s\u00e9lection","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#principes_1","title":"Principes","text":"<p>Le principe du tri par s\u00e9lection est le suivant :</p> <ul> <li>On cherche le plus petit \u00e9l\u00e9ment du tableau, et on \u00e9change sa place avec l'\u00e9l\u00e9ment d'indice 0.</li> <li>On recherche ensuite le plus petit \u00e9l\u00e9ment dans le sous-tableau commen\u00e7ant \u00e0 l'indice 1, et on \u00e9change sa place avec l'\u00e9l\u00e9ment d'indice 1.</li> <li>On recommence ainsi en allant jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment.</li> </ul> <p>Exemple</p> <p>On veut trier le tableau <code>[6, 5, 3, 1, 8, 7, 2, 4]</code>  par un tri par s\u00e9lection. Compl\u00e9ter le tableau suivant en repr\u00e9sentant par des fl\u00e8ches rouges les \u00e9changes de positions entre \u00e9l\u00e9ments</p> A compl\u00e9terVersion compl\u00e9t\u00e9e <p></p> <p>A venir</p>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#algorithme-en-pseudo-code-et-complexite_1","title":"Algorithme en pseudo-code et complexit\u00e9","text":"<p>Algorithme</p> <p></p> <p>Quelques remarques</p> <ul> <li>Le tri par s\u00e9lection est un tri en place, car il trie un tableau sans avoir besoin de tableau auxiliaire.</li> <li>La complexit\u00e9 du tri par s\u00e9lection est quadratique, c'est-\u00e0-dire en \\(\\mathscr{O}(n^2)\\) dans tous les cas, puisqu'il faut parcourir chaque sous-tableau afin de trouver son minimum, et ce pour chaque \u00e9l\u00e9ment du tableau.</li> </ul> <p>Application : Python</p> ExerciceSolution <p>Construire une proc\u00e9dure (c'est-\u00e0-dire une fonction sans valeur de retour) Python <code>triSelection(tab)</code> qui trie le tableau <code>tab</code> par un tri par s\u00e9lection.</p> <pre><code>def triSelection(tab):\n    for i in range(len(tab)):\n      # Trouver le min\n       min = i\n       for j in range(i+1, len(tab)):\n           if tab[min] &gt; tab[j]:\n               min = j                      \n       tmp = tab[i]\n       tab[i] = tab[min]\n       tab[min] = tmp\n</code></pre>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#un-autre-algorithme-de-tri-le-tri-a-bulle","title":"Un autre algorithme de tri : le tri \u00e0 bulle","text":"<p>L'algorithme de tri \u00e0 bulles consiste \u00e0 trier la liste en n'autorisant qu'\u00e0 intervertir deux \u00e9l\u00e9ments cons\u00e9cutifs de la liste. On peut le d\u00e9crire comme ceci:</p> <ul> <li>Parcourir tout le tableau et comparer les \u00e9l\u00e9ments cons\u00e9cutifs. Lorsque deux \u00e9l\u00e9ments sont dans le d\u00e9sordre, les inverser.</li> <li>Une fois la fin du tableau, recommencer.</li> <li>S'arr\u00eater d\u00e8s qu'un parcours du tableau n'a \u00e9chang\u00e9 aucun \u00e9l\u00e9ment.</li> </ul> <p>Exemple</p> <p>Effectuer le tri \u00e0 bulle du tableau <code>[5, 1, 4, 8, 2]</code></p> A compl\u00e9terVersion compl\u00e9t\u00e9e <p></p> <p>A venir</p> <p>Exercice</p> Enonc\u00e9Solution <ol> <li>Pourquoi, \u00e0 votre avis, appelle-t-on ce tri un \u00ab tri \u00e0 bulle \u00bb ?</li> <li>Quelles propri\u00e9t\u00e9 at-on apr\u00e8s un parcours complet d'un tableau ?</li> <li>Ecrire un algorithme repr\u00e9sentant un tri \u00e0 bulle.</li> <li>Quelle est la complexit\u00e9 de cet algorithme ?</li> <li>Impl\u00e9menter une proc\u00e9dure python <code>triBulle(tab)</code>.</li> </ol> <p>A venir ! </p>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#algorithme-de-recherche-dichotomique","title":"Algorithme de recherche dichotomique","text":""},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#presentation-de-lalgorithme","title":"Pr\u00e9sentation de l'algorithme","text":"<p>Dans le cas d'une s\u00e9quence ordonn\u00e9e tri\u00e9e de valeurs (c'est-\u00e0-dire une liste, un tuple, un tableau), un des algorithmes de recherche les plus connus est celui de la recherche dichotomique. On peut le d\u00e9crire ainsi :</p> <p>Recherche dichotomique</p> <p>Si <code>T</code> est une liste tri\u00e9e par ordre croissant, et qu'on cherche l'\u00e9l\u00e9ment <code>el</code> :</p> <ol> <li>trouver l'indice de la position la plus centrale du tableau, on note <code>ct</code> l'\u00e9l\u00e9ment \u00e0 cette position ;</li> <li>comparer <code>el</code> avec <code>ct</code> :<ul> <li>si ils sont \u00e9gaux, alors retourner l'indice de <code>ct</code>;</li> <li>si <code>el</code> est strictement inf\u00e9rieur \u00e0 <code>ct</code>, on recommence l'\u00e9tape 1 dans le sous-tableau gauche (les valeurs inf\u00e9rieures \u00e0 <code>ct</code>) ;</li> <li>si <code>el</code> est strictement sup\u00e9rieur \u00e0 <code>ct</code>, on recommence l'\u00e9tape 1 dans le sous-tableau droit (les valeurs sup\u00e9rieures \u00e0 <code>ct</code>)</li> </ul> </li> <li>si \u00e0 un moment on cherche dans un sous-tableau vide, c'est que <code>el</code> n'est pas dans <code>T</code>.</li> </ol>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#exemple-debranche","title":"Exemple d\u00e9branch\u00e9","text":"<p>On cherche dans le tableau ci-dessous la valeur <code>12</code> :</p> Etape 0Etape 1Etape 2Etape 3Etape 4Etape 5Etape 6Etape 7Etape 8Etape 9Etape 10Etape 11 <p>On part d'un tableau tri\u00e9 donn\u00e9</p> <p></p> <p>Entre les indices <code>0</code> et <code>8</code>, on calcule <code>ct</code> qui vaut <code>4</code>.</p> <p></p> <p>Le nombre cherch\u00e9 <code>12</code>, \u00e9tant inf\u00e9rieur \u00e0 <code>15</code>, on va chercher dans le sous-tableau gauche.</p> <p></p> <p>Le sous-tableau commence \u00e0 l'indice <code>0</code> et va jusqu'\u00e0 l'indice <code>3</code>.</p> <p></p> <p>Entre les indices <code>0</code> et <code>3</code>, on calcule <code>ct</code> qui vaut <code>1</code>.</p> <p></p> <p>Le nombre cherch\u00e9 <code>12</code>, \u00e9tant sup\u00e9rieur \u00e0 <code>7</code>, on va chercher dans le sous-tableau droit.</p> <p></p> <p>Le sous-tableau commence \u00e0 l'indice <code>2</code> et va jusqu'\u00e0 l'indice <code>3</code>.</p> <p></p> <p>Entre les indices <code>2</code> et <code>3</code>, on calcule <code>ct</code> qui vaut <code>2</code>. Le nombre cherch\u00e9 <code>12</code>, \u00e9tant sup\u00e9rieur \u00e0 <code>9</code>, on va chercher dans le sous-tableau droit.</p> <p></p> <p>Le sous-tableau commence et fini \u00e0 l'indice <code>3</code>.</p> <p></p> <p>Donc <code>ct</code> vaut <code>3</code>.</p> <p></p> <p>On compare <code>12</code> avec <code>12</code>. Le nombre est trouv\u00e9.</p> <p></p> <p>On renvoie <code>ct</code>, soit <code>3</code>, c'est-\u00e0-dire l'indice de <code>12</code> dans le tableau.</p> <p></p>"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#complexite-de-lalgorithme-de-dichotomie","title":"Complexit\u00e9 de l'algorithme de dichotomie","text":"<p>Nous avons vu que le parcours na\u00eff d'un tableau pour trouver une valeur donn\u00e9e est dans le pire des cas en \\(\\mathscr{0}(n)\\) (complexit\u00e9 lin\u00e9aire). Cela signifie que si le tableau est de taille \\(n\\), il faudra faire un nombre d'op\u00e9rations proportionnel \u00e0 \\(n\\) pour d\u00e9terminer qu'un nombre n'appartient pas au tableau.</p> <p>La recherche dichotomique est-elle meilleure ? Oui, si on prend en compte le crit\u00e8re du nombre de comparaisons effectu\u00e9es.</p> <p>Dans notre exemple, le tableau est de taille \\(9\\). Avec un algorithme na\u00eff, il faut \\(9\\) comparaisons pour prouver qu'un nombre n'appartient pas au tableau.</p> <p>Avec l'algorithme de recherche dichotomique, \u00e0 chaque it\u00e9ration de l'algorithme, on travaille sur un tableau 2 fois plus petit que le pr\u00e9c\u00e9dent, ici <code>9-&gt;4-&gt;2-&gt;1</code>, et on compare une fois par sous-tableau \u00e9tudi\u00e9. Il n'y a donc besoin que de \\(4\\) comparaisons. On remarque que 9 est compris entre \\(2^3\\) et \\(2^4\\).</p> <p>Sur un tableau plus grand, de taille \\(100\\), l'algorithme na\u00eff n\u00e9cessite \\(100\\) comparaisons. Avec l'algorithme de recherche dichotomique,on utilisera des tableaux de tailles <code>100 -&gt; 50 -&gt; 25 -&gt; 12 -&gt; 6 -&gt; 3 -&gt; 1</code>, soit \\(7\\) comparaisons. On remarque que \\(2^6 \\leqslant 100 &lt;2^7\\).</p> <p>Fonction</p> <p>Compl\u00e9ter le code suivant, en respectant les tests demand\u00e9s :</p> <pre><code>def nb_comparaisons(n : int) -&gt; int :\n\"\"\" renvoie le nombre de comparaisons n\u00e9cessaires lors de l'ex\u00e9cution\n    de l'algorithme de recherche dichotomique sur un tableau tri\u00e9 de taille n,\n    avec n entier naturel non nul.\n    &gt;&gt;&gt; nb_comparaisons(9)\n    4\n    &gt;&gt;&gt; nb_comparaisons(100)\n    7\n    &gt;&gt;&gt; nb_comparaisons(1)\n    1\n    \"\"\"\n    assert isinstance( n, int), \"n doit \u00eatre entier\"\n    assert ..., ...\n    nb = 0\n    while 2**... &lt;= ... :\n        nb += ...\n    return nb\n</code></pre> <p>Fonction \\(\\log_2\\)</p> <p>La fonction logarithme binaire est la fonction d\u00e9finie de \\(\\mathbb{R}^+\\) vers \\(\\mathbb{R}\\) par \\(\\log_2 : x \\mapsto y\\), avec \\(y\\) tel que \\(2^y = x\\).</p> <p>Complexit\u00e9 en temps de l'algorithme de recherche dichotomique</p> <p>L'algorithme de recherche dichotomique est en complexit\u00e9 en \\(\\mathscr{O}(\\log_2(n))\\), c'est-\u00e0-dire en complexit\u00e9 logarithmique, donc beaucoup plus efficace que l'algorithme na\u00eff.</p> <p>Voici un tableau r\u00e9capitulant le nombre d'op\u00e9rations de comparaisons effectu\u00e9es dans les deux algorithmes :</p> Taille du tableau Algorithme na\u00eff Algorithme dichotomie \\(1~000\\) \\(1~000~000\\) \\(1~000~000~000\\)"},{"location":"NSI/Premiere/C04/Algorithmes_Tri/#un-exemple-dimplementation-en-python","title":"Un exemple d'impl\u00e9mentation en Python","text":"<pre><code>def recherche_dichotomique(x : int, tab : list) -&gt; int :\n\"\"\" fontion renvoyant l'indice de l'\u00e9l\u00e9ment x dans le tableau tab si celui-ci est pr\u00e9sent\n    et -1 dans le cas o\u00f9 x n'est pas pr\u00e9sent\"\"\"\n    deb = 0\n    fin = ...\n    while deb &lt;= fin :\n        ct = ...\n        if x == tab[ct] :\n            return ...\n        elif x &lt; tab[ct] :\n            fin = ...\n        else :\n            ...\n    return ...\n</code></pre> <p>Le programme pr\u00e9sent\u00e9 ci-dessus n'est cependant pas optimis\u00e9, car il effectue en r\u00e9alit\u00e9 deux comparaisons par tour de boucle. Pour voir un article plus complet sur la recherche dichotomique, notamment les preuves de correction et de terminaison de l'algorithme, voir ici.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/","title":"Les images Matricielles","text":""},{"location":"NSI/Premiere/C04/ImagesBMP/#les-images-matricielles","title":"Les images matricielles","text":"<p>Avant toutes choses, nous allons utiliser le module <code>pillow</code> de Python. Nous allons donc l'installer dans Thonny, en utilisant le menu <code>Tools &gt; Manage Packages</code>, et dans la barre de recherche, chercher le module <code>pillow</code>, et l'installer s'il n'est pas d\u00e9j\u00e0 install\u00e9.</p> <p></p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#notion-de-bitmap-une-image-en-noir-et-blanc","title":"Notion de BitMap : une image en noir et blanc","text":""},{"location":"NSI/Premiere/C04/ImagesBMP/#bitmap","title":"Bitmap","text":"<p>Analyser une premi\u00e8re image</p> <p>Consid\u00e9rons l'image suivante :</p> <p></p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>T\u00e9l\u00e9chargez ici cette image et sauvegardez-la dans un dossier <code>BitMap</code> que vous aurez cr\u00e9\u00e9.</li> <li>Quel est le format de cette image ? Recherchez sa signification sur le web.</li> <li>Quelles en sont les dimensions en pixels ? Quelle est sa taille en octets ?</li> <li>Ouvrez l'image gr\u00e2ce au logiciel <code>Hex Editor Neo</code> (que vous pouvez mettre en Fran\u00e7ais par l'interm\u00e9diaire de <code>Tools &gt; Settings &gt; Language</code>). Le r\u00e9glage basique de <code>Hex Editor Neo</code> donne les valeurs hexad\u00e9cimales des diff\u00e9rents octets composant l'image. Dans la colonne situ\u00e9e \u00e0 droite de ces valeurs hexad\u00e9cimales, on trouve une repr\u00e9sentation de ces octets au format ANSI, c'est-\u00e0-dire sous forme de caract\u00e8res. Que retrouve-t-on au tout d\u00e9but de cette colonne ?</li> <li> <p>En cliquant droit sur les groupes d'octets, effectuer le r\u00e9glage suivant :</p> <ul> <li><code>Afficher comme &gt; D\u00e9cimale</code></li> <li><code>Colonnes &gt; 32 colonnes</code></li> </ul> <p>Puis supprimer les 13 premiers octets (juste avant la premi\u00e8re valeur 255). D\u00e9zoomer avec <code>CTRL + Molette de souris</code>. Que voit-on apparaitre ?</p> </li> <li> <p>Que repr\u00e9sente une valeur d\u00e9cimale <code>255</code> (ou  <code>ff</code> en hexad\u00e9cimal) ?</p> </li> <li>Que repr\u00e9sente une valeur d\u00e9cimale <code>0</code> (ou  <code>00</code> en hexad\u00e9cimal) ?</li> </ol> <ol> <li>RAS</li> <li>Format <code>pgm</code> : Portable Gray Map, permet de faire des images matricielles en nuances de gris.</li> <li>\\(32 \\times 32\\) pixels, soit \\(1024\\) pixels. En octets : \\(1037\\)</li> <li>On retrouve les valeurs 255 et 0.</li> <li>On voit apparaitre l'image.</li> <li>255 repr\u00e9sente un pixel blanc.</li> <li>0 repr\u00e9sente un pixel noir.</li> </ol> <p>Les images matricielles</p> <p>Les images matricielles, ou \u00ab cartes de points \u00bb (de l'anglais Bitmap) est une image constitu\u00e9e d'une matrice de points color\u00e9s. C'est-\u00e0-dire, constitu\u00e9e d'un tableau, d'une grille, o\u00f9 chaque case poss\u00e8de une couleur qui lui est propre et est consid\u00e9r\u00e9e comme un point. Il s'agit donc d'une juxtaposition de points de couleurs formant, dans leur ensemble, une image. </p> <p>Dans notre cas, l'image est une matrice carr\u00e9e de taille \\(32\\times 32\\) pixels. Chaque pixel peut donc \u00eatre rep\u00e9r\u00e9 par ses coordonn\u00e9es, comme sur le sch\u00e9ma ci-dessous, o\u00f9 <code>width</code> (largeur en anglais) et <code>height</code> (hauteur en anglais) sont les dimensions de l'image. Attention ! Le sens de l'axe de ordonn\u00e9es est invers\u00e9s par rapport aux math\u00e9matiques !</p> <p></p> <p>Taille des images en noir et blanc</p> <p>En fait notre image utilise beaucoup plus de place en m\u00e9moire qu'elle ne le devrait. En effet, pour repr\u00e9senter 2 couleurs (noir et blanc), un seul bit suffit. 0 repr\u00e9sente un pixel noir, et 1 repr\u00e9sente un pixel blanc. Le format <code>pgm</code> n'est pas vraiment adapt\u00e9 aux pures images en noir et blanc, puisqu'il utilise 1 octet complet pour repr\u00e9senter la couleur, soit 8 fois plus que ce qui est strictement n\u00e9cessaire.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#manipulation-dimages-avec-pillow","title":"Manipulation d'images avec Pillow","text":"<p>Module Pillow</p> <p>Le module <code>pillow</code> de python permet la manipulation des images. Son guide (en anglais) est disponible ici.</p> <p>Son utilisation basique est relativement simple, testez par exemple le code suivant :</p> <pre><code>from PIL import Image \n\noriginale = Image.open(\"YingYang.pgm\")\nwidth, height = originale.size \n\ncopie = Image.new(originale.mode, originale.size)   \n\nfor x in range(width) :                         \n    for y in range(height) :                    \n        if originale.getpixel((x,y)) == 255 :   \n            copie.putpixel((x, y), 0)\n        else :\n            copie.putpixel((x, y),  255)\n\ncopie.save(\"YangYing.bmp\")\ncopie.show()\n</code></pre> <p>Explicitons alors ce code :</p> <ul> <li>Ligne 1 : on importe la classe <code>Image</code> du module <code>PIL</code> (c'est-\u00e0-dire <code>pillow</code>).</li> <li>Ligne 3 : on utilise la m\u00e9thode <code>open</code> de la classe <code>Image</code> pour ouvrir l'image <code>YingYang.pgm</code> et la stocker dans la variable <code>originale</code>, qui est donc un objet de type <code>Image</code>.</li> <li>Ligne 4 : on utilise l'attribut <code>size</code> des objets <code>Image</code> extraire la largeur et la hauteur de notre image, et les stocker dans les variables <code>width</code> et <code>height</code>, de type <code>int</code>.</li> <li>Ligne 6 : <code>copie</code> est un nouvel objet de type <code>Image</code>, qui poss\u00e8de les m\u00eames caract\u00e9ristiques que l'image originale : son <code>mode</code> (nous reviendrons dessus plus loin), et sa taille gr\u00e2ce \u00e0 l'attribut <code>size</code>.</li> <li>Lignes 8-9 : on va parcourir l'image originale pixel par pixel, en effectuant le parcours colonnes par colonnes.</li> <li>Lignes 10 : on r\u00e9cup\u00e8re la valeur du pixel de coordonn\u00e9es \\((x;y)\\) de l'image originale gr\u00e2ce \u00e0 la m\u00e9thode <code>getpixel</code>, et on regarde si il est blanc (<code>==255</code>).</li> <li>Ligne 11 : si la condition pr\u00e9c\u00e9dente est vraie, on va fixer la couleur du pixel de coordonn\u00e9es \\((x;y)\\) de la copie \u00e0 noir (<code>0</code>), gr\u00e2ce \u00e0 la m\u00e9thode <code>putpixel</code> (Attention ! <code>putpixel</code> et <code>getpixel</code> n'acceptent que des tuples pour les coordonn\u00e9es ! Si vous oubliez la paire de parenth\u00e8ses, vous risquez d'obtenir <code>TypeError: putpixel() takes 3 positional arguments but 4 were given</code>).</li> <li>Lignes 12-13 : si la condition est fausse, on va fixer la couleur du pixel de coordonn\u00e9es \\((x;y)\\) de la copie \u00e0 blanc (<code>255</code>).</li> <li>Ligne 15 : on sauvegarde la copie sous le nom <code>YangYing.bmp</code>. Vous devriez trouver ce fichier dans votre dossier. On notera que <code>pillow</code> accepte de changer le type de fichier (ici on est pass\u00e9 de <code>pgm</code> \u00e0 <code>bmp</code>).</li> <li>Ligne 16 : on affiche l'image <code>copie</code>.</li> </ul> <p>Factorisation du code</p> \u00c9nonc\u00e9Correction <p>Transformez le code pr\u00e9c\u00e9dent en cr\u00e9ant une fonction <code>inverseNB(img)</code> qui prend en argument un objet <code>img</code> de type <code>Image</code> et qui renvoie un nouvel objet de type <code>Image</code> de m\u00eame dimension et m\u00eame mode que l'argument, mais ayant ses couleurs noirs et blanc invers\u00e9es.</p> <pre><code>def inverseNB(img) :\n    width, height = img.size \n    copie = Image.new(img.mode, img.size)   \n\n    for x in range(width) :                         \n        for y in range(height) :                    \n            if img.getpixel((x,y)) == 255 : \n                copie.putpixel((x, y), 0)\n            else :\n                copie.putpixel((x, y),  255)\n    return copie\n</code></pre> Pour les cracks : am\u00e9liorons le code \u00c9nonc\u00e9R\u00e9ponse <p>En fait le code ci dessus n'est valable que p\u00e9dagogiquement, pour comprendre les . Il est tout \u00e0 fait possible de se passer de la structure conditionnelle des lignes 10 \u00e0 13, qui peuvent \u00eatre effectu\u00e9es en une seule ligne ! Comment faire ?</p> <pre><code>def inverseNB(img) :\n    width, height = img.size \n    copie = Image.new(img.mode, img.size)   \n\n    for x in range(width) :                         \n        for y in range(height) :                    \n            copie.putpixel((x, y), 255 - img.getpixel((x,y)))\n    return copie\n</code></pre>"},{"location":"NSI/Premiere/C04/ImagesBMP/#les-niveaux-de-gris","title":"Les niveaux de gris","text":""},{"location":"NSI/Premiere/C04/ImagesBMP/#un-exemple","title":"Un exemple","text":"<p>Une nouvelle image</p> <p>On consid\u00e8re maintenant l'image suivante :</p> <p></p> <p>t\u00e9l\u00e9chargeable ici.</p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>Quelle est la dimension de cette image en pixels ? Quelle est sa dimension en octets ?</li> <li>Ouvrez-l\u00e0 avec <code>Hex Editor Neo</code>. Quelle est la principale diff\u00e9rence avec l'image pr\u00e9c\u00e9dente ?</li> <li>Testez sur cette image la fonction <code>inverseNB</code>. Obtient-on un n\u00e9gatif de cette image ?</li> </ol> <ol> <li>\\(29 \\times 54\\) pixels, soit 1566 pixels, pour une taille de 1579 octets.</li> <li>Il y a d'autres valeurs entre 0 et 255.</li> <li>Non.</li> </ol> <p>Images en niveaux de gris - Grayscale</p> <p>Pour repr\u00e9senter une palette de 256 couleurs allant du noir au blanc, on utilise un octet complet</p> <ul> <li>la valeur 0 repr\u00e9sente le noir ;</li> <li>la valeur 255 repr\u00e9sente le blanc ;</li> <li>une valeur proche de 0 repr\u00e9sente un gris fonc\u00e9</li> <li>une valeur proche de 255 repr\u00e9sente un gris clair.</li> </ul> <p>Une telle image, dite en \u00ab niveaux de gris \u00bb, utilise 1 octet par pixel.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#manipulation-dune-image-en-niveau-de-gris","title":"Manipulation d'une image en niveau de gris","text":"<p>Manipuler les images</p> \u00c9nonc\u00e9Correction <ol> <li>T\u00e9l\u00e9chargez une image quelconque libre de droits sur internet - peu importe son format.</li> <li> <p>On cherche \u00e0 obtenir un n\u00e9gatif de l'image. Pour ce faire, il faut utiliser une fonction math\u00e9matique. En effet, ce que nous voulons, c'est une fonction qui transforme :</p> <ul> <li>0 en 255</li> <li>1 en 254</li> <li>2 en 253 </li> <li>...</li> <li>254 en 1</li> <li>255 en 0</li> </ul> <p>Quelle est cette fonction ?</p> </li> <li> <p>Cr\u00e9er alors une fonction python <code>n\u00e9gatif(img)</code> qui renvoie le n\u00e9gatif de l'objet <code>img</code> de type <code>Image</code>.</p> </li> <li> <p>\u00c9claircissement d'une image :</p> <p>Pour \u00e9claircir une image, il faut transformer les valeurs grayscale de chaque pixel en les augmentant. Une possibilit\u00e9 simples est de les augmenter d'un terme constant, comme 20 par exemple. Ainsi, un pixel initialement \u00e0 0 sera chang\u00e9 \u00e0 20, et un pixel \u00e0 147 sera chang\u00e9 \u00e0 167 (pillow n'autorisera pas les d\u00e9passement au del\u00e0 de 255, donc un pixel \u00e0 250 sera bien transform\u00e9 \u00e0 255).</p> <p>Cr\u00e9er alors une fonction python <code>\u00e9claircir(img, t=20)</code> qui renvoie un nouvel objet de type <code>Image</code>, version \u00e9claircie de l'objet <code>img</code> de type <code>Image</code> pass\u00e9 en argument, et utilisant l'argument optionnel <code>t</code>.</p> </li> <li> <p>Assombrissement d'une image : </p> <p>Cr\u00e9er de m\u00eame une fonction python <code>assombrir(img, t=20)</code> qui renvoie un nouvel objet de type <code>Image</code>, version assombrie de l'objet <code>img</code> de type <code>Image</code> pass\u00e9 en argument, et utilisant l'argument optionnel <code>t</code>.</p> </li> <li> <p>\u00c9tait-on vraiment oblig\u00e9 de faire deux fonctions ?</p> </li> </ol> <ol> <li>RAS</li> <li>\\(f : x \\mapsto 255 -x\\)</li> <li>La fonction :     <pre><code>def negatif(img) :\n    width, height = img.size \n    copie = Image.new(img.mode, img.size)   \n\n    for x in range(width) :                         \n        for y in range(height) :                    \n            copie.putpixel((x, y), 255 - img.getpixel((x,y)))\n    return copie\n</code></pre></li> <li>La fonction :     <pre><code>def eclaircir(img, t=20) :\n    width, height = img.size \n    copie = Image.new(img.mode, img.size)   \n\n    for x in range(width) :                         \n        for y in range(height) :                    \n            copie.putpixel((x, y), t + img.getpixel((x,y)))\n    return copie\n</code></pre></li> <li>La fonction :     <pre><code>def assombrir(img, t=20) :\n    return eclaircir(img, -t)\n</code></pre></li> <li>Non, au vu de la question pr\u00e9c\u00e9dente </li> </ol> Pour les cracks <p>Nos \u00e9claircissement et assombrissement pr\u00e9c\u00e9dents ne sont gu\u00e8re satisfaisants... car nous ne jouons pas sur le contraste. Il existe bien de fonctions math\u00e9matiques permettant d'am\u00e9liorer notre m\u00e9thode. Vous pouvez vous inspirer du travail de Paul Milan, tr\u00e8s math\u00e9matique, ou bien tester les fonctionnalit\u00e9s du module <code>pillow</code>, en suivant par exemple ce tutoriel.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#images-en-couleur","title":"Images en couleur","text":"<p>Il est temps de mettre un peu de couleur !</p> <p>Synth\u00e8se additive RGB</p> <p>Un pixel  de couleur est repr\u00e9sent\u00e9 par un triplet \\((R;G;B)\\), o\u00f9 \\(R\\), \\(G\\) et \\(B\\) sont des valeurs de \\(0\\) \u00e0 \\(255\\) repr\u00e9sentant respectivement les couleurs rouges, vertes et bleues. Un tel syst\u00e8me permet de repr\u00e9senter \\(256^3 = 16~277~216\\) nuances de couleurs diff\u00e9rentes, par synth\u00e8se additive des couleurs. Ce format est adapt\u00e9 \u00e0 la lecture sur \u00e9cran (on utilise un syst\u00e8me diff\u00e9rent pour l'impression des images, le syst\u00e8me CYMB - Cyan Yellow Magenta Black - qui utilise la synth\u00e8se soustractive).</p> <p></p> <p>De ce fait, dans un format non compress\u00e9 comme le format <code>BMP</code>, chaque pixel est repr\u00e9sent\u00e9 par 3 octets.</p> <p>Exemple</p> <p>On consid\u00e8re l'image suivante :</p> <p></p> <p>L'image est de dimension \\(320 \\times 100\\) et p\u00e8se 96 ko, ce qui correspond \\(320 \\times 100 \\times 3 = 96~000~o\\) (en n'oubliant pas les m\u00e9ta-donn\u00e9es).</p> <p>RGB et pillow</p> \u00c9nonc\u00e9Solutions <ol> <li>T\u00e9l\u00e9chargez l'image suivante : </li> <li> <p>Cr\u00e9er un code  dans Thonny ouvrant l'image et affichant cette image :</p> <pre><code>from PIL import Image   \noriginale = Image.open(\"TroisCercles.bmp\") ## Attention si vous avez chang\u00e9 le nom !\noriginale.show()\n</code></pre> </li> <li> <p>.</p> <ol> <li>Ins\u00e9rez dans ce code la commande :     <pre><code>print(image.getpixel((150,50)))         \n</code></pre> Que renvoie-t-elle ?</li> <li>A l'aide d'un \u00e9diteur d'images, rep\u00e9rer dans l'image pr\u00e9c\u00e9dente le pixel de coordonn\u00e9es \\((150 ; 50)\\). Quelle est sa couleur ?</li> </ol> </li> <li>Reprendre la question 3 avec les pixels suivants :<ol> <li>\\((50 ; 100)\\)</li> <li>\\((250 ; 100)\\)</li> <li>\\((100 ; 130)\\)</li> <li>\\((200 ; 130)\\)</li> <li>\\((50 ; 230)\\)</li> <li>\\((150 ; 150)\\)</li> </ol> </li> </ol> <p>A venir !</p> <p>Transparence</p> <p>Dans certains formats d'image il est possible d'utiliser un quatri\u00e8me octet pour chaque pixel, qui permet de g\u00e9rer la transparence(aussi appel\u00e9e canal alpha) de ce pixel. Cette valeur d\u00e9fini un pourcentage de transparence permettant de voir au travers de ce pixel, et donc de superposer des images.</p> <p>Par exemple, les deux images suivantes sont construites ainsi : une est construite en <code>jpg</code>, sans transparence, avec fond noir, et la seconde est en <code>png</code>, avec transparence pour le fond de couleur noire :</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Dans un format avec transparence, la valeur 0 correspond \u00e0 un pixel totalement opaque, et une valeur 255 \u00e0 un pixel totalement transparent.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#compression-des-images","title":"Compression des images","text":"<p>Compression des images</p> <p>Les images sont tr\u00e8s gourmandes en place m\u00e9moire. Un moniteur moderne supportant une r\u00e9solution 4K a pour dimension \\(4~096 \\times 2~160\\) pixels, soit plus de 8,8 millions de pixels. Une image de fond d'\u00e9cran couleur, avec transparence, non compress\u00e9e,  repr\u00e9sente donc plus de \\(8,8 \\times 4 \\simeq 35\\) millions d'octets, soit plus de 35 Mo.</p> <p>Pourtant une image comme celle-ci (cr\u00e9dits inconnus), pourtant bien de la dimension \\(4~096 \\times 2~160\\), p\u00e8se seulement 4,52 Mo.</p> <p>Ceci est du \u00e0 un processus appel\u00e9 compression d'images, qui peut \u00eatre effectu\u00e9 de plusieurs mani\u00e8res diff\u00e9rentes :</p> <ul> <li>en r\u00e9duisant le nombre de couleurs r\u00e9elles de l'image (on cr\u00e9e une palette sp\u00e9cifique pour cette image, dont la table de correspondance est ins\u00e9r\u00e9e dans les m\u00e9ta-donn\u00e9es de l'image) ;</li> <li>en groupant les pixels contigus de m\u00eame couleur (100 pixels de la m\u00eame couleur sur la m\u00eame ligne occupent a minima 300 octets, alors que l'information  \u00ab Il y a 100 pixels sur cette ligne de la m\u00eame couleur \u00e0 partir de la position \\((x_0;y_0)\\) \u00bb peut occuper uniquement 6 octets - 1 pour le nombre 100, un pour \\(x_0\\), un pour \\(y_0\\) et 3 pour la couleur RGB) ;</li> <li>etc...</li> </ul> <p>Par exemple, l'algorithme de compression JPEG red\u00e9finit les couleurs des pixels en leurs r\u00e9-attribuant une couleur moyenne qui est calcul\u00e9e en fonction des couleurs des pixels voisins, et  qui d\u00e9pend d'un taux de compression d\u00e9finissable par l'utilisateur. Plus le taux de compression est \u00e9lev\u00e9, plus l'image sera d\u00e9grad\u00e9e (compression avec perte):</p> <p></p> <p></p> <p>Original : 1,42 Mo</p> <p>Format d\u00e9j\u00e0 compress\u00e9</p> <p></p> <p></p> <p>Copie 1 : 205 ko</p> <p>Compression depuis original : 90%</p> <p></p> <p></p> <p>Copie 2 : 162 ko</p> <p>Compression depuis original  : 99%</p> <p></p> <p>Il existe cependant des algorithmes de compression sans perte, comme par exemple avec le format <code>png</code>.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#les-formats-des-fichiers-images","title":"Les formats des fichiers images","text":"<p>Il existe de nombreux formats d'images num\u00e9riques de types matriciels. Les principaux sont donn\u00e9s dans le tableau suivant :</p> Type Extension Compression Transparence Utilisation JPEG .jpg , .jpeg , .jfif , .pjpeg , .pjp avec pertes Non Web, aper\u00e7us, impressions (si peu de compression) PNG .png sans pertes Oui Besoin de transparence fine, peu de couleurs GIF .gif avec pertes Oui (partielle) Images anim\u00e9es, fichiers de petites tailles TIFF .tiff, .tif sans pertes Non Images hautes d\u00e9finition, scans pr\u00e9cis RAW .raw, .data, ... Non Non Images brutes, \u00e9ditions de photos BMP .bmp Non En partie Paint... <p>Les logiciels de retouches et d'\u00e9dition d'images matricielles sont nombreux, le plus connu \u00e9tant le c\u00e9l\u00e8bre <code>Photoshop</code>, mais qui est un logiciel propri\u00e9taire. </p> <p>Son \u00e9quivalent libre est <code>GIMP</code>. Il offre les m\u00eames fonctionnalit\u00e9s, et ne demande qu'une simple adaptation \u00e0 l'interface...</p> Images Vectorielles <p>Dans le tableau pr\u00e9c\u00e9dent, vous n'avez que des format d'images matricielles. Il existe aussi un autre type d'images num\u00e9riques appel\u00e9 images vectorielles, construites sur un tout autre principe.</p> <p>Une image vectorielle est une image pour laquelle les \u00e9l\u00e9ments constitutifs sont stock\u00e9e sous la forme d'\u00e9quations.</p> <p>Ainsi l'image du manchot Tux, mascotte officielle du noyau Linux (\u00e0 ne pas confondre avec GNU/Linux), est une image vectorielle au format <code>SVG</code>, qui peut \u00eatre ouverte par <code>Notepad++</code>. On trouve dans le fichier la description des diff\u00e9rentes courbes, surfaces, etc... qui d\u00e9crivent l'image. </p> <p>L'avantage d'une telle image est qu'elle ne pixelisera pas, quel que soit le zoom qui lui est appliqu\u00e9 (en th\u00e9orie...).</p> <p>De telles images peuvent \u00eatre cr\u00e9es et manipul\u00e9es \u00e0 l'aide du logiciel libre <code>Inkscape</code>.</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#manipulation-des-images","title":"Manipulation des images","text":""},{"location":"NSI/Premiere/C04/ImagesBMP/#creation-dimages","title":"Cr\u00e9ation d'images","text":"<p>Exemple de cr\u00e9ation d'image RGB avec Pillow</p> <p>Le code suivant permet de cr\u00e9er une image au format <code>png</code> des trois cercles color\u00e9s de la synth\u00e8se additive :</p> <pre><code>from PIL import Image\nfrom math import sqrt\n\ndef distance(p1, p2) :\n    return sqrt((p1[0]-p2[0])**2+(p1[1]-p2[1])**2)\n\ndef makeCircles(a) :\n    width = 3*a\n    height = int((2+sqrt(3)/2)*a)\n    img = Image.new(\"RGB\", (width, height))\n    for x in range(width) :\n        for y in range(height) :\n            R = 255*(distance((x, y), (2*a, (1+sqrt(3)/2)*a))&lt;a)\n            G = 255*(distance((x, y), (3*a/2, a))&lt;a)\n            B = 255*(distance((x, y), (a, (1+sqrt(3)/2)*a))&lt;a)\n            img.putpixel((x, y),(R, G, B))\n    return img\n\nif __name__ == \"__main__\" :\n    image = makeCircles(100)\n    image.save(\"TroisCercles.png\")\n</code></pre> <p>Les lignes importantes sont les suivantes :</p> <ul> <li>Ligne 10 : on cr\u00e9e une nouvelle image utilisant le format RGB, de la largeur et de la hauteur donn\u00e9e (sous la forme d'un tuple de dimension 2). On pourrait cr\u00e9er une image avec transparence en utilisant le format <code>RGBA</code> - voir ici</li> <li>Lignes 11-12, on parcours l'image colonne par colonne, <code>x</code> \u00e9tant l'abscisse (= le num\u00e9ro de colonne) et <code>y</code> \u00e9tant l'ordonn\u00e9e (= le num\u00e9ro de ligne).</li> <li>ligne 16 : on place \u00e0 la position \\((x;y)\\) un pixel dont la couleur est donn\u00e9e par le tuple <code>(R, G, B)</code>, conform\u00e9ment au mode choisi en ligne 10.</li> <li>ligne 21 : l'objet <code>image</code> renvoy\u00e9 par la fonction <code>makeCircles</code> avec l'argument 100 est sauvegard\u00e9e sous le nom <code>TroisCercles.png</code> gr\u00e2ce \u00e0 la m\u00e9thode <code>save</code>.</li> </ul> Un peu de maths <p>L'image est construite \u00e0 partir d'un triangle \u00e9quilat\u00e9ral de c\u00f4t\u00e9 \\(a\\) dont les sommets sont les centres des trois cercles RGB, et dont les coordonn\u00e9es sont respectivement \\((2a ; (1+\\cfrac{\\sqrt{3}}{2}a)\\), \\((\\cfrac{3}{2}a ; a)\\) et \\((a ; (1+\\cfrac{\\sqrt{3}}{2}a)\\).</p> <p>Cr\u00e9er des images simples</p> \u00c9nonc\u00e9Corrig\u00e9 <ol> <li>Cr\u00e9er le drapeau fran\u00e7ais sous la forme d'une image de taille \\(300 \\times 200\\).</li> <li>Cr\u00e9er le drapeau n\u00e9erlandais sous la forme d'une image de taille \\(300 \\times 210\\).</li> <li>Cr\u00e9er un damier noir et blanc (ou toute autre paire de couleurs), de dimension \\(600 \\times 400\\), et donc chaque carr\u00e9 \u00e0 une taille de 20 pixels (Indice : pensez \u00e0 la division euclidienne et \u00e0 l'op\u00e9rateur modulo %).</li> </ol> <ol> <li>Le drapeau fran\u00e7ais :     <pre><code>def drapeauFR() :\n    drapeau = Image.new('RGB', (300,200))\n    for x in range(300) :\n        for y in range(200) :\n            drapeau.putpixel((x, y), (255*(x&gt;=100), 255*(100&lt;=x&lt;200), 255*(x&lt;200)))\n    drapeau.show()\n</code></pre></li> <li>Le drapeau N\u00e9erlandais     <pre><code>def drapeauNL() :\n    drapeau = Image.new('RGB', (300,210))\n    for x in range(300) :\n        for y in range(210) :\n            drapeau.putpixel((x, y), (255*(y&lt;=140), 255*(70&lt;=y&lt;140), 255*(y&gt;70)))\n    drapeau.show()              \n</code></pre></li> <li> <p>Le damier de taille 20 pixels :</p> <pre><code>def damier() :\n    damier = Image.new('RGB', (600,400))\n    for x in range(600) :\n        for y in range(400) :\n            c = x//20 # Num\u00e9ro de colonne\n            l = y//20 # Num\u00e9ro de ligne\n            if  c%2 == l%2 :\n                damier.putpixel((x, y), (0,0,0))\n            else :\n                damier.putpixel((x, y), (255,255,255))\n    damier.show()               \n</code></pre> </li> </ol>"},{"location":"NSI/Premiere/C04/ImagesBMP/#symetries","title":"Sym\u00e9tries","text":"<p>Sym\u00e9tries axiales et centrales</p> \u00c9nonc\u00e9Solutions <p>S\u00e9lectionnez une image libre de droit sur le web.</p> <ol> <li>Cr\u00e9ez une fonction <code>symetrieVerticale</code> qui prend en argument un objet de type <code>Image</code> et qui renvoie un nouvel objet de type <code>Image</code> qui correspond \u00e0 l'image sym\u00e9trique de l'originale par une sym\u00e9trie d'axe m\u00e9dian vertical.</li> <li>Cr\u00e9ez une fonction <code>symetrieHorizontale</code> qui prend en argument un objet de type <code>Image</code> et qui renvoie un nouvel objet de type <code>Image</code> qui correspond \u00e0 l'image sym\u00e9trique de l'originale par une sym\u00e9trie d'axe m\u00e9dian horizontal.</li> <li>Cr\u00e9ez une fonction <code>symetrieCentrale</code> qui prend en argument un objet de type <code>Image</code> et qui renvoie un nouvel objet de type <code>Image</code> qui correspond \u00e0 l'image sym\u00e9trique de l'originale par une sym\u00e9trie de centre correspondant au centre de l'image.</li> </ol> <ol> <li> <p>Sym\u00e9trie Verticale :</p> <pre><code>def symetrieVerticale(originale) :\n    width, height = originale.size\n    nouvelle = Image.new(originale.mode, originale.size)\n    for x in range(width) :\n        for y in range(height) :\n            p = originale.getpixel((x,y))\n            nouvelle.putpixel((width-1-x, y) , p)\n    return nouvelle\n</code></pre> </li> <li> <p>Sym\u00e9trie horizontale :</p> <pre><code>def symetrieHorizontale(originale) :\n    width, height = originale.size\n    nouvelle = Image.new(originale.mode, originale.size)\n    for x in range(width) :\n        for y in range(height) :\n            p = originale.getpixel((x,y))\n            nouvelle.putpixel((x, height-1-y) , p)\n    return nouvelle\n</code></pre> </li> <li> <p>Sym\u00e9trie centrale :</p> <pre><code>def symetrieCentrale(originale) :\n    return symetrieHorizontale(symetrieVerticale(originale))\n</code></pre> </li> </ol>"},{"location":"NSI/Premiere/C04/ImagesBMP/#filtres-colores","title":"Filtres color\u00e9s","text":"<p>Filtre vert</p> <p>Quand on applique un filtre vert \u00e0 une image num\u00e9rique, on parcourt l'image enti\u00e8re en ne r\u00e9cup\u00e9rant pour chaque pixel que sa composante verte, et en mettant le rouge et le bleu \u00e0 0. Par exemple, avec une image de type <code>png</code> et en gardant le canal alpha : </p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Filtres de couleur</p> \u00c9nonc\u00e9R\u00e9ponse <ol> <li> <p>Cr\u00e9er une fonction <code>filtreCouleur</code> qui prend en argument un objet de type <code>Image</code> et un tuple <code>(r, g, b, a)</code>, o\u00f9 <code>r, g, b</code> et <code>a</code> sont des  bool\u00e9ens, et qui renvoie une nouvelle image pour lesquelles les couleurs RGBA sont conserv\u00e9es si le bool\u00e9en correspondant est <code>True</code>. Par exemple, l'image de Naruto verte ci-dessus est obtenue par le code :</p> <pre><code>naruto = Image.open(\"Naruto.png\")\nnarutoGreen = filtreCouleur(naruto, (False, True, False, True))\nnarutoGreen.show()\n</code></pre> <p>Cr\u00e9er ainsi des images <code>NarutoRouge.png</code>, <code>NarutoBleu.png</code>, <code>NarutoJaune.png</code>, <code>NarutoMagenta.png</code> et <code>NarutoCyan.png</code></p> </li> <li> <p>Cr\u00e9er maintenant l'image suivante \u00e0 partir de <code>pillow</code> (indice : pensez \u00e0 l'op\u00e9ration modulo !) :</p> <p></p> </li> <li> <p>Cr\u00e9er une fonction <code>negatif</code> qui prend en argument une image et inverse les octets de chacune de ses composantes, en conservant le canal alpha. On obtiendra par exemple :</p> <p></p> </li> </ol> <ol> <li> <p>Filtre couleur :</p> <pre><code>def filtreCouleur(img, filtre) :\n    fr, fg, fb, fa = filtre\n    copie = Image.new(img.mode, img.size)\n    width, height = img.size\n    for x in range(width) :\n        for y in range(height) :\n           pr, pg, pb, pa = img.getpixel((x,y))\n           copie.putpixel((x,y), (pr*fr, pg*fg, pb*fb, pa*fa))\n           # ou copie.putpixel((x,y), tuple(f*p for f, p in zip(filtre, img.getpixel(x,y))\n    return copie\n</code></pre> </li> </ol>"},{"location":"NSI/Premiere/C04/ImagesBMP/#agrandissements-et-reductions-dun-facteur-2","title":"Agrandissements et r\u00e9ductions d'un facteur 2","text":""},{"location":"NSI/Premiere/C04/ImagesBMP/#version-naive","title":"Version na\u00efve","text":"<p>Agrandissement d'un facteur 2</p> \u00c9nonc\u00e9Solution <p>Le principe d'agrandissement d'un facteur 2 est le suivant : chaque pixel va \u00eatre dupliqu\u00e9 4 fois comme sur le sch\u00e9ma suivant :</p> <p></p> <p>Compl\u00e9ter la fonction <code>doubleSimple(image)</code> qui prend en argument un objet de type <code>Image</code> et renvoie un autre objet de type <code>Image</code> deux fois plus grand utilisant la technique montr\u00e9e ci-dessus :</p> <pre><code>def doubleSimple(image) :\n    w, h = image.size\n    double = Image.new('RGBA', ...)    \n    for x in range(...) :\n        for y in range(...) :\n            double.putpixel((2*x,2*y), image.getpixel((x, y)))\n            ...\n            ...\n            ...\n    return double\n</code></pre> <pre><code>def doubleSimple(image) :\n    w, h = image.size\n    double = Image.new('RGBA', (2*w, 2*h))    \n    for x in range(w) :\n        for y in range(h) :\n            double.putpixel((2*x,2*y), image.getpixel((x, y)))\n            double.putpixel((2*x+1,2*y), image.getpixel((x, y)))\n            double.putpixel((2*x,2*y+1), image.getpixel((x, y)))\n            double.putpixel((2*x+1,2*y+1), image.getpixel((x, y)))\n    return double\n</code></pre> <p>R\u00e9duction d'un facteur 2</p> \u00c9nonc\u00e9Solution <p>Encore une fois le principe est simple, on ne garde qu'un pixel sur deux, au choix, les pixels de rang pairs ou bien impairs (ici on garde ceux de rang impair):</p> <p></p> <p>Cr\u00e9er une fonction <code>reductionSimple(image)</code> qui prends en argument un objet de type <code>Image</code> est qui renvoie sa version r\u00e9duite avec la m\u00e9thode ci-dessus.</p> <p><code>python linenums = \"1\" def reductionSimple(image) :     w, h = image.size     reduction = Image.new('RGBA', (w//2, h//2))         for x in range(w//2) :         for y in range(h//2) :             reduction.putpixel((x,y), image.getpixel((x*2, y*2)))     return reduction</code></p> <p>Combiner les deux</p> \u00c9nonc\u00e9Solution <ol> <li>Cr\u00e9er, \u00e0 partir d'une image de base, une image r\u00e9duite, puis, \u00e0 partir de cette image r\u00e9duite, une nouvelle image agrandie.<ol> <li>V\u00e9rifier que cette derni\u00e8re est bien de la m\u00eame taille que l'image originale.</li> <li>Comparer alors cette image avec l'originale. La transformation est-elle avec pertes ou sans pertes ?</li> </ol> </li> <li>Recommencer mais en agrandissant d'abord.</li> <li>Comparer les images obtenues en 1 et en 2. Sont-elles identiques ?</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C04/ImagesBMP/#version-pour-les-cracks","title":"Version \"pour les cracks\"","text":"<p>Interpolation</p> <p>Le principe de l'interpolation est d'augmenter ou de diminuer la matrice initiale d'une image, en cr\u00e9ant les nouveaux points \u00e0 partir de ceux de l'image originale, en y appliquant \u00e9ventuellement des fonctions math\u00e9matiques.</p> <p>Il existe de nombreuses m\u00e9thodes d'interpolation en imagerie num\u00e9rique, certaines n\u00e9cessitant des algorithmes complexes.</p> <p>Celles pr\u00e9sent\u00e9es ici font partie des plus simples.</p> <p>Agrandissement avec interpolation par moyenne</p> \u00c9nonc\u00e9Solution <p>La m\u00e9thode que nous allons utiliser est la suivante :</p> <p></p> <p>Entre deux pixels existants, que ce soit horizontalement, verticalement ou en diagonale, on ins\u00e8re un pixel dont la valeur <code>RGBA</code> est \u00e9gale \u00e0 la moyenne des valeurs <code>RGBA</code> des deux pixels qui l'encadrent.</p> <ol> <li>Cr\u00e9er une fonction <code>moyenne(px1, px2)</code> qui prend en argument les valeurs <code>RGBA</code> de ces deux pixels et renvoie un tuple de dimension 4 correspondant \u00e0 la moyenne par composante <code>RGBA</code>.</li> <li>Cr\u00e9er, en s'inspirant de la fonction \u00e0 partir de la fonction <code>doubleSimple</code>, une fonction <code>doubleInterpolation(image)</code> qui prend en argument un objet de type <code>Image</code> et qui renvoie un nouvel objet de dimension double en utilisant la technique pr\u00e9c\u00e9dente. Attention ! Il y a des cas limites \u00e0 pr\u00e9voir  dans la manipulation des pixels !</li> </ol> <p>A venir !</p> <p>R\u00e9duction avec interpolation par moyenne des voisins</p> \u00c9nonc\u00e9 <p>La m\u00e9thode que nous allons utiliser va consister \u00e0 reprendre la m\u00e9thode utilis\u00e9e dans la r\u00e9duction simple, c'est-\u00e0-dire de prendre un pixel sur deux, mais le pixel \u00e9crit dans la nouvelle image sera obtenu en effectuant la moyenne des valeurs <code>RGBA</code> de tous les voisins du pixel choisi :</p> <p></p> <ol> <li>Cr\u00e9er une fonction <code>moyenneVoisin(image, x, y)</code> qui prend en argument un objet de type <code>Image</code>, et deux entiers <code>x</code> et <code>y</code>, et qui renvoie un tuple correspondant \u00e0 la moyenne des valeurs <code>RGBA</code> des voisins du pixel de coordonn\u00e9es \\((x~;~y)\\) de l'image <code>image</code>.</li> <li>A l'aide de la fonction pr\u00e9c\u00e9dente, et en s'inspirant de la fonction <code>reductionSimple</code>, cr\u00e9er une fonction <code>reductionInterpolation(image)</code> qui renvoie une image r\u00e9duite en utilisant la technique pr\u00e9c\u00e9dente.</li> </ol> <p>Combiner les deux</p> \u00c9nonc\u00e9Solution <ol> <li>Cr\u00e9er, \u00e0 partir d'une image de base, une image r\u00e9duite, puis, \u00e0 partir de cette image r\u00e9duite, une nouvelle image agrandie.<ol> <li>V\u00e9rifier que cette derni\u00e8re est bien de la m\u00eame taille que l'image originale.</li> <li>Comparer alors cette image avec l'originale. La transformation est-elle avec pertes ou sans pertes ?</li> </ol> </li> <li>Recommencer mais en agrandissant d'abord.</li> <li>Comparer les images obtenues en 1 et en 2. Sont-elles identiques ?</li> <li>Comparer maintenant les transformations simples avec les transformations avec interpolation.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C04/Listes_Comprehension/","title":"Listes et compr\u00e9hensions","text":""},{"location":"NSI/Premiere/C04/Listes_Comprehension/#listes-et-comprehensions-de-listes-en-python-introduction-a-la-notion-de-cout-en-temps","title":"Listes et compr\u00e9hensions de listes en Python, introduction \u00e0 la notion de co\u00fbt en temps","text":""},{"location":"NSI/Premiere/C04/Listes_Comprehension/#les-tableaux","title":"Les tableaux","text":"<p>Tableaux</p> <p>En informatique, un tableau est une structure de donn\u00e9es repr\u00e9sentant une s\u00e9quence finie d'\u00e9l\u00e9ments auxquels on peut acc\u00e9der efficacement par leur position (ou indice), dans la s\u00e9quence. C'est un type de conteneur que l'on retrouve dans un grand nombre de langages de programmation. On parle aussi de tableau index\u00e9.</p> <p>Dans les langages \u00e0 typage statique (comme C, Java et OCaml), tous les \u00e9l\u00e9ments d'un tableau doivent \u00eatre du m\u00eame type. Certains langages \u00e0 typage dynamique, tels que Python, permettent des tableaux h\u00e9t\u00e9rog\u00e8nes (donc avec des donn\u00e9es de natures diff\u00e9rentes).</p> <p>Les tableaux en Python</p> <p>En Python, un tableau est repr\u00e9sent\u00e9 par un objet de type <code>list</code>. Les principales diff\u00e9rences entre les types <code>list</code> et <code>tuple</code> sont :</p> <ul> <li> <p>un objet de type <code>list</code> est une s\u00e9quence entre crochets :</p> <pre><code>&gt;&gt;&gt; mon_tab = [45, 24, -35, -12]\n&gt;&gt;&gt; type(mon_tab)\n&lt;class 'list'&gt;\n</code></pre> </li> <li> <p>un objet de type <code>list</code> est mutable, ce qui signifie qu'on peut changer sa valeur apr\u00e8s sa cr\u00e9ation<sup>1</sup>, ce qui n'est pas le cas d'un <code>tuple</code> :</p> CodePython Tutor <pre><code>&gt;&gt;&gt; mon_tab = [45, 24, -35, -12]\n&gt;&gt;&gt; mon_tab[2]  = 1000\n&gt;&gt;&gt; mon_tab\n[45, 24, 1000, -12]\n&gt;&gt;&gt; mon_tuple=(45, 24, -35, -12)\n&gt;&gt;&gt; mon_tuple[2] = 1000\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n</code></pre> <p> </p> </li> </ul> <p>Les types <code>list</code> et <code>tuple</code> partagent sinon les m\u00eames propri\u00e9t\u00e9s : indices, acc\u00e8s aux \u00e9l\u00e9ments, longueur avec <code>len()</code>, parcours s\u00e9quentiel avec <code>for</code>...</p> <p>En particulier les algorithmes vus pr\u00e9c\u00e9demment sont aussi valable pour un tableau.</p> <p>Algorithme de recherche s\u00e9quentiel</p> Enonc\u00e9Solution <p>On veut construire une fonction <code>chercheElement(elem, monTab)</code> qui renvoie :</p> <ul> <li>l'indice de la premi\u00e8re occurrence de <code>elem</code> si <code>elem</code> est pr\u00e9sent dans le tableau <code>monTab</code> ;</li> <li>la longueur du tableau si l'\u00e9l\u00e9ment <code>elem</code> n'est pas pr\u00e9sent dans le tableau <code>monTab</code>.</li> </ul> <p>R\u00e9pondre aux questions suivantes :</p> <ol> <li>D\u00e9crire en pseudo-code un algorithme d\u00e9finissant cette fonction.</li> <li>Proposer une impl\u00e9mentation de ce pseudo-code en Python.</li> <li>Quel est le co\u00fbt en temps de cet algorithme ? (\u00e0 faire avec le professeur.)</li> </ol> <p>A venir !</p> M\u00e9thode built-in <code>index</code> en Python <p>La fonction pr\u00e9c\u00e9dente est d\u00e9j\u00e0 impl\u00e9ment\u00e9e en Python, avec une diff\u00e9rence : elle renvoie une erreur si l'\u00e9l\u00e9ment cherch\u00e9 n'est pas dans le tableau.</p> <pre><code>&gt;&gt;&gt; mon_tab =  [45, 24, -35, -12, 24]\n&gt;&gt;&gt; mon_tab.index(24)\n1\n&gt;&gt;&gt; mon_tab.index(36)\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: 36 is not in list\n</code></pre>"},{"location":"NSI/Premiere/C04/Listes_Comprehension/#specificite-des-listes-en-python","title":"Sp\u00e9cificit\u00e9 des listes en Python","text":"<p>M\u00e9thodes et utilisations des listes</p> <ol> <li> <p>Construire une liste vide :</p> <pre><code>&gt;&gt;&gt; monTab = [ ] # ou bien\n&gt;&gt;&gt; monTab = list()\n</code></pre> </li> <li> <p>Ajouter un \u00e9l\u00e9ment \u00e0 la fin d'une liste :</p> <pre><code>&gt;&gt;&gt; monTab.append(3)\n&gt;&gt;&gt; monTab\n[3]\n&gt;&gt;&gt; monTab.append(5)\n&gt;&gt;&gt; monTab.append(7)\n&gt;&gt;&gt; monTab\n[3, 5, 7]\n</code></pre> </li> <li> <p>Supprimer et r\u00e9cup\u00e9rer le dernier \u00e9l\u00e9ment du tableau :</p> <pre><code>&gt;&gt;&gt; dernier = monTab.pop()\n&gt;&gt;&gt; dernier \n7\n&gt;&gt;&gt; monTab\n[3, 5]\n</code></pre> <p>La m\u00e9thode <code>pop</code> poss\u00e8de d'autres propri\u00e9t\u00e9s que je vous laisse rechercher.</p> </li> <li> <p>Convertir un tableau en tuple :</p> <pre><code>&gt;&gt;&gt; monTuple = tuple(monTab)\n&gt;&gt;&gt; monTuple\n(3, 5)\n</code></pre> </li> <li> <p>Convertir un tuple en tableau :</p> <pre><code>&gt;&gt;&gt; monTab = list(monTuple)\n&gt;&gt;&gt; monTab\n[3, 5]\n</code></pre> </li> <li> <p>Extraire des parties d'un tableau gr\u00e2ce aux slices :</p> <pre><code>&gt;&gt;&gt; monTab = [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n&gt;&gt;&gt; monTab[ :4]\n[35, 36, 37, 38]\n&gt;&gt;&gt; monTab[7: ]\n[42, 43, 44, 45, 46, 47]\n&gt;&gt;&gt; monTab[4:7]\n[39, 40, 41]\n</code></pre> </li> <li> <p>Concat\u00e9ner des tableaux:</p> <pre><code>&gt;&gt;&gt; [1, 2, 3] + [7, 8, 9]\n[1, 2, 3, 7, 8, 9]\n</code></pre> </li> </ol> <p>Exercice</p> Enonc\u00e9Solution <p>En utilisant les m\u00e9thodes pr\u00e9sent\u00e9es ci-dessus :</p> <ol> <li> <p>\u00c9crire une fonction <code>carre(n)</code> qui renvoie le tableau des carr\u00e9s des nombres entiers compris entre \\(0\\) et \\(n-1\\).</p> <pre><code>&gt;&gt;&gt; carre(4)\n[0, 1, 4, 9]\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>imagesf(deb,fin)</code> qui renvoie le tableau  des images des nombres entiers compris entre <code>deb</code> et <code>fin</code> par la fonction \\(f :x \\mapsto 3x^2-2x+1\\).</p> <pre><code>&gt;&gt;&gt; imagef(-2,3)\n[17, 6, 1, 2, 9, 22]\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>genereListe(n)</code> qui renvoie un tableau de \\(n\\) nombres al\u00e9atoires compris entre \\(1\\) et \\(n^2\\). ( On pourra importer une fois le module <code>random</code> et utiliser la fonction<code>random.randint(a,b)</code> qui renvoie un nombre al\u00e9atoire entre \\(a\\) et \\(b\\) inclus).</p> </li> <li> <p>Ecrire une fonction <code>insere(monTab, val, i)</code> qui renvoie une liste dans laquelle est inser\u00e9 l'\u00e9l\u00e9ment <code>val</code> \u00e0 l'indice <code>i</code> au sein des \u00e9l\u00e9ments de <code>monTab</code>, en supposant que <code>i&lt;len(monTab)</code>.</p> <pre><code>&gt;&gt;&gt; insere([1, 2, 3, 4],5,2)\n[1, 2, 5, 3, 4]\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>compter(monTab,val)</code> permettant de compter le nombre d'occurrences de <code>val</code> dans <code>monTab</code>.</p> <pre><code>&gt;&gt;&gt; compter([4, 6, 8, 6, 7, 6, 9], 6)\n3\n&gt;&gt;&gt; compter([2, 4, 6],3)\n0\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>compterIndices(monTab,val)</code> permettant de renvoyer un tableau des indices des  occurrences de <code>val</code> dans <code>monTab</code>.</p> <pre><code>&gt;&gt;&gt; compter([4, 6, 8, 6, 7, 6, 9], 6)\n[1, 3, 5]\n&gt;&gt;&gt; compter([2, 4, 6],3)\n[]\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>separer(monTab,val)</code> permettant, \u00e0 partir d'une liste de nombres <code>monTab</code> d'obtenir deux listes. La premi\u00e8re comporte les nombres inf\u00e9rieurs ou \u00e9gaux \u00e0 un nombre donn\u00e9, la seconde les nombres qui lui sont strictement sup\u00e9rieurs :</p> <pre><code>&gt;&gt;&gt; separer([45, 21, 56 ,12, 1, 8, 30, 22, 6, 33], 30)\n[21, 12, 1, 8, 30, 22, 6], [45, 56, 33]\n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>plusProche(monTab,val)</code> permettant de rechercher la plus proche valeur d'un nombre dans une liste :</p> <pre><code>&gt;&gt;&gt; plusProche([45, 21, 56 ,12, 1, 8, 30, 22, 6, 33], 20)\n21.\n</code></pre> </li> </ol> <ol> <li> <pre><code>def carre(n) :\n    t = []\n    for i in range(n+1) :\n        t.append(i**2)\n    return t\n</code></pre> </li> <li> <p><code>python     def imagesf(deb,fin) :         t =[]         for i in range(deb, fin+1) :             t.append(3*i**2 -2*i+1)         return t</code></p> </li> </ol>"},{"location":"NSI/Premiere/C04/Listes_Comprehension/#construction-de-listes-par-comprehension","title":"Construction de listes par compr\u00e9hension","text":"<p>Jusqu'\u00e0 pr\u00e9sent nous avons d\u00e9fini nos listes par extension, c'est-\u00e0-dire en donnant exactement les \u00e9l\u00e9ments de la liste. Cependant, cette m\u00e9thode n'est pas efficace pour de tr\u00e8s grandes listes. Il faudra donc donner une m\u00e9thode de construction de la liste, en essayant de comprendre les liens entre les diff\u00e9rents \u00e9l\u00e9ments de cette liste. On parle alors de listes d\u00e9finies par compr\u00e9hension.</p> <p>Compr\u00e9hensions de listes</p> <p>Une des sp\u00e9cificit\u00e9s de Python est la capacit\u00e9 \u00e0 construire des listes (et des tuples) par compr\u00e9hension. Cette capacit\u00e9 est partag\u00e9e avec d'autres langages, comme <code>Haskell</code>.</p> <p>premi\u00e8res compr\u00e9hensions</p> Enonc\u00e9 <ol> <li> <p>Quel est le tableau associ\u00e9 \u00e0 <code>monTab</code> ?</p> <pre><code>monTab = [4*nb for nb in range(100)]\n</code></pre> </li> <li> <p>Quel est le tableau associ\u00e9 \u00e0 <code>monTab</code> ? Pourquoi ?</p> <pre><code>monTab = [3*nb for nb in range(100) if nb%2==0]\n</code></pre> </li> <li> <p>Quel est le tableau associ\u00e9 \u00e0 <code>monTab</code> ?</p> <pre><code>monTab = [let for let in 'Abracadabra']\n</code></pre> </li> <li> <p>Quel est le tableau associ\u00e9 \u00e0 <code>monTab</code> ? Pourquoi ?</p> <pre><code>monTab = [let for let in 'Abracadabra' if let.upper()!='A']\n</code></pre> </li> <li> <p>Quel est le tableau associ\u00e9 \u00e0 <code>monTab</code> ? Pourquoi ?</p> <pre><code>monTab = [ord(let) for let in 'Abracadabra']\n</code></pre> </li> </ol> <p>R\u00e9duire le code</p> Enonc\u00e9Solution <p>Comme vous avez pu le constater, les compr\u00e9hensions sont rapides \u00e0 \u00e9crire. Et certaines fonctions de l'exercice n\u00b02 peuvent \u00eatre consid\u00e9rablement r\u00e9duites : les fonctions <code>carre</code>, <code>imagef</code> et <code>genereListe</code>.  Utilisez les compr\u00e9hensions pour r\u00e9duire leur taille.</p> <p>A venir !</p> <ol> <li> <p>Voir ici \u21a9</p> </li> </ol>"},{"location":"NSI/Premiere/C04/Tableaux2D/","title":"Tableaux \u00e0 2 dimensions : Matrices","text":""},{"location":"NSI/Premiere/C04/Tableaux2D/#tableaux-a-deux-dimensions-les-matrices","title":"Tableaux \u00e0 deux dimensions : les Matrices","text":""},{"location":"NSI/Premiere/C04/Tableaux2D/#definitions-et-premiers-exemples","title":"D\u00e9finitions et premiers exemples","text":"<p>Matrices</p> <p>En math\u00e9matiques, on appelle matrice un tableau \\(M\\) de nombres \\(a_{i,j}\\) o\u00f9 \\(i\\) est le num\u00e9ro de ligne et \\(j\\) le num\u00e9ro de colonne. On parlera de matrice de dimension \\(m\\times n\\) si la matrice poss\u00e8de \\(m\\) lignes et \\(n\\) colonnes.</p> <p></p> <p>Les matrices sont des \u00e9l\u00e9ments esentiels de l'alg\u00e8bre lin\u00e9aire, et elles sont un outils efficace dans beaucoup de probl\u00e8mes aussi bien math\u00e9matiques qu'informatique.</p> <p>Repr\u00e9sentation informatique</p> <p>Pour repr\u00e9senter informatiquement une matrice de nombres, entiers ou flottant, on utilise un tableau de tableau. Ainsi la matrice \\(M = \\begin{pmatrix}1&amp;2&amp;3\\\\4&amp;5&amp;6\\end{pmatrix}\\) sera repr\u00e9sent\u00e9e sous la forme suivante :</p> <pre><code>M = [[1, 2, 3], [4, 5, 6]]\n</code></pre> <p>En Python, il est souvent pr\u00e9f\u00e9rable de d\u00e9finir une matrice en utilisant la possibilit\u00e9 de sauter des lignes \u00e0 l'int\u00e9rieur de deux d\u00e9limiteurs (paires de parenth\u00e8ses, crochets, etc...) :</p> <pre><code>M = [\n    [1, 2, 3],\n    [4, 5, 6]\n    ]       \n</code></pre> <p>On peut alors acc\u00e9der aux \u00e9l\u00e9ments de la matrice par la notation suivante <code>M[1][2]</code>, ce qui correspond \u00e0 l'\u00e9l\u00e9ment d'indice 2 de la ligne d'indice 1, soit dans notre exemple \\(6\\). Autrement dit, il s'agit de l'\u00e9l\u00e9ment de la ligne 1 et de la colonne 2 : </p> <p> </p> <p>Une r\u00e8gle implicite</p> <p>Math\u00e9matiquement, toutes les lignes d'un matrice sont de la m\u00eame dimension. Or ce n'est pas obligatoire dans une construction de liste de listes en Python. En effet une variable telle que la suivante est tout \u00e0 fait possible :</p> <pre><code>M = [\n    [1, 2],\n    [3, 4, 5, 6],\n    [],\n    [7, 8, 9, 10, 11, 12]\n    ]   \n</code></pre> <p>Lire une matrice</p> <p>On consid\u00e8re la matrice suivante : </p><pre><code>&gt;&gt;&gt; M =[\n        [1, 2, 3, 4, 5],\n        [2, 4, 6, 8, 10],\n        [3, 6, 9, 12, 15],\n        [4, 8, 12, 16, 20]\n        ]\n</code></pre> Enonc\u00e9Solutions <ol> <li>A quel nombre fait r\u00e9f\u00e9rence l'\u00e9l\u00e9ment \\(M[1][3]\\) ?</li> <li>Comment obtenir le nombre \\(15\\)  ? </li> <li>A quel nombre fait r\u00e9f\u00e9rence l'\u00e9l\u00e9ment \\(M[-1][2]\\) ?</li> <li>A quel nombre fait r\u00e9f\u00e9rence l'\u00e9l\u00e9ment \\(M[0][-2]\\) ?</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C04/Tableaux2D/#parcourir-une-matrice","title":"Parcourir une matrice","text":"<p>Parcourir une matrice</p> Enonc\u00e9Solutions <p>Pour parcourir une matrice, il faut utiliser deux boucles <code>for</code> imbriqu\u00e9es l'une dans l'autre :</p> <ol> <li> <p>Tester le code suivant sur une matrice \\(M = \\begin{pmatrix}1&amp;2&amp;3\\\\4&amp;5&amp;6\\end{pmatrix}\\).</p> <p></p><pre><code>for i in range(2) :\n    for j in range(3) :\n        print(M[i][j])\n</code></pre> Dans quel ordre apparaissent les \u00e9l\u00e9ments ? </li> <li> <p>Tester le code suivant, toujours sur la matrice \\(M\\) </p><pre><code>for j in range(3) :\n    for i in range(2) :\n        print(M[i][j])\n</code></pre>     Dans quel ordre apparaissent les \u00e9l\u00e9ments ? </li> <li>Dans le code pr\u00e9c\u00e9dent, que se passe-t-il si on \u00e9crit <code>print(M[j][i])</code> ?</li> <li>Tester le code suivant, toujours sur la matrice \\(M\\) <pre><code>for line in M :\n    for elem in line :\n        print(elem)\n</code></pre>     Dans quel ordre apparaissent les \u00e9l\u00e9ments ?</li> <li>Est-il possible d'inverser le type de parcours pr\u00e9c\u00e9dent ?</li> <li>Tester le code suivant, toujours sur la matrice \\(M\\) <pre><code>for i, line in enumerate(M) :\n    for j, elem in enumerate(line) :\n        print(f\"M[{i}][{j}] = {elem}\")\n</code></pre>     A quoi sert la fonction <code>enumerate</code> ?</li> <li> <p>Ecrire une fonction <code>parcoursIndicesLignes(M)</code> qui effectue un parcours par indice et par ligne de la matrice qui lui est pass\u00e9e en argument. On pourra tester avec les matrices suivantes :</p> <pre><code>M1 = [[0]]\nM2 = [[1, 2],\n    [3, 4]]\nM2 = [[1, 2],\n    [3, 4],\n    [5, 6]]\nM3 = [[1, 2, 3, 4, 5],\n    [6, 7, 8, 9, 10]]\n</code></pre> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C04/Tableaux2D/#initialisation-de-matrices","title":"Initialisation de matrices","text":"<p>Pourquoi initialiser</p> <p>Tr\u00e8s souvent on va travailler sur un tableau et/ou une matrice dont on connait au pr\u00e9alable la dimension, et sur laquelle on va modifier les valeurs au fur et \u00e0 mesure. Il sera souvent plus facile de travailler sur une matrice d\u00e9j\u00e0 pr\u00e9-remplie avec des valeurs de d\u00e9part - des z\u00e9ros souvent, plut\u00f4t que d'\u00eatre oblig\u00e9 de v\u00e9rifier que le terme \\(a[i][j]\\) existe, et de faire un <code>append</code> dans le cas contraire.</p> <p>Initialisation</p> Enonc\u00e9 <ol> <li>Avec un tableau \u00e0 une dimension. Tester la ligne suivante :     <pre><code>T = [0]*10\n</code></pre>     Que fait ce code ?</li> <li>Avec des tableaux \u00e0 deux dimensions :<ol> <li>Tester la ligne suivante :     <pre><code>M = [[0]*10]*4\n</code></pre>     Que fait ce code ?</li> <li>Tester alors la ligne suivante :     <pre><code>M[0][5] = 777\n</code></pre></li> <li>A quel objet est alors associ\u00e9 \\(M\\) ?</li> <li>Quel est le probl\u00e8me ?</li> <li>Tester alors le code suivant, :     <pre><code>M = [[0]*10 for i in range(4)]\n</code></pre></li> <li>Faites de nouveau l'affectation suivante     <pre><code>M[0][5] = 777\n</code></pre>     A quoi est-alors associ\u00e9 le nom <code>M</code> ?</li> </ol> </li> </ol>"},{"location":"NSI/Premiere/C04/Tableaux2D/#exercice-les-carres-magiques","title":"Exercice : les carr\u00e9s magiques","text":"<p>Carr\u00e9 magiques</p> Enonc\u00e9 <p>Un carr\u00e9 magique d'ordre \\(n\\) est une matrice carr\u00e9e \\(n\\times n\\) telle que que la somme des nombres sur chaque ligne, sur chaque colonne et sur chaque diagonale principale soient \u00e9gales.</p> <ol> <li>V\u00e9rifier que la matrice \\(\\begin{pmatrix} 4&amp;9&amp;2\\\\3&amp;5&amp;7\\\\8&amp;1&amp;6\\end{pmatrix}\\) est bien un carr\u00e9 magique.</li> <li>On se propose de construire une fonction v\u00e9rifiant qu'une matrice de taille \\(n \\times n\\) est bien un carr\u00e9 magique.<ol> <li>Cr\u00e9er une fonction <code>estCarre(M)</code> qui v\u00e9rifie que la matrice \\(M\\) est bien carr\u00e9e (son nombre de ligne est \u00e9gal \u00e0 son nombre de colonne). Cette fonction renverra <code>True</code> dans ce cas, et <code>False</code> sinon.</li> <li>Cr\u00e9er une fonction <code>sommeLigne(M,i)</code> qui renvoie la somme des nombres de la ligne \\(i\\) de la matrice \\(M\\).</li> <li>Cr\u00e9er une fonction <code>sommeColonne(M,i)</code> qui renvoie la somme des nombres de la colonne \\(i\\) de la matrice \\(M\\).</li> <li>Cr\u00e9er une fonction <code>sommeDiagPrincipale(M)</code> qui renvoie la somme des nombres de la diagonale principale de \\(M\\) (diagonale dont les \u00e9l\u00e9ments ont le m\u00eame num\u00e9ro de ligne et de colonne).</li> <li>Cr\u00e9er une fonction <code>sommeDiagSecondaire(M)</code> qui renvoie la somme des nombres de la diagonale non principale de \\(M\\).</li> <li>En utilisant les fonctions pr\u00e9c\u00e9dentes, cr\u00e9er une fonction <code>estMagique(M)</code> qui renvoie <code>True</code> si la matrice \\(M\\) est magique, et <code>False</code> sinon.</li> </ol> </li> </ol> <p>D'autres carr\u00e9s magiques</p> <p>Vous trouverez des carr\u00e9s magiques de diff\u00e9rents ordres sur les pages suivantes :</p> <ul> <li>la page wikip\u00e9dia des carr\u00e9s magiques (math\u00e9matiques)</li> <li>http://www.bibmath.net/carres/</li> <li>http://www.maths-rometus.org/mathematiques/maths-et-jeux/carres-magiques.asp#id1781</li> </ul>"},{"location":"NSI/Premiere/C04/Tuples/","title":"Tuples et algorithmes de parcours","text":""},{"location":"NSI/Premiere/C04/Tuples/#tuples-et-algorithmes-de-parcours","title":"Tuples et algorithmes de parcours","text":"<p>Largement inspir\u00e9 du fabuleux site Pixees.fr</p> <p>D\u00e9finition : S\u00e9quences</p> <p>En informatique, il est possible de \u00ab stocker \u00bb plusieurs grandeurs dans une m\u00eame structure, appel\u00e9e une s\u00e9quence. De fa\u00e7on plus pr\u00e9cise, une s\u00e9quence est un ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments, rep\u00e9r\u00e9s par un indice.</p> <p>Dans de tr\u00e8s nombreux langages informatiques, mais pas dans tous, les indices d\u00e9marrent \u00e0 z\u00e9ro.</p> <p>Exemples</p> <ul> <li>La liste des mois de l'ann\u00e9e est une s\u00e9quence, chaque mois \u00e9tant rep\u00e9r\u00e9 par son indice (le num\u00e9ro du mois), qui commence \u00e0 \\(1\\).</li> <li>Les cha\u00eenes de caract\u00e8res en Python sont aussi des s\u00e9quences, chaque caract\u00e8re \u00e9tant rep\u00e9r\u00e9 par son indice commen\u00e7ant \u00e0 \\(0\\).</li> </ul> <p>Nous \u00e9tudierons deux types de s\u00e9quences particuli\u00e8res en Python : les tuples et les tableaux (listes).</p>"},{"location":"NSI/Premiere/C04/Tuples/#premier-types-de-sequences-les-tuples","title":"Premier types de s\u00e9quences : les tuples","text":"<p>Tuples</p> <p>En Python, un tuple est une s\u00e9quence, qui est d\u00e9finie entre parenth\u00e8ses, et dont les \u00e9l\u00e9ments sont s\u00e9par\u00e9s par des virgules, et dont les indices commencent \u00e0 \\(0\\). Les \u00e9l\u00e9ments peuvent \u00eatre de m\u00eame nature ( <code>int</code>, <code>float</code>, <code>str</code>, <code>bool</code> et m\u00eame <code>tuple</code>), ou bien de natures vari\u00e9es.</p> <p>Un tuple poss\u00e8de une longueur, qui est le nombre d'\u00e9l\u00e9ments le composant. Elle est obtenue gr\u00e2ce \u00e0 la fonction built-in <code>len()</code>.</p> <p>Par exemple, on peut voir la cr\u00e9ation d'objets de type <code>tuple</code> dans Python-tutor :</p> <p>Dans la variable <code>mon_autre_tuple</code> :</p> <ul> <li><code>\"chien\"</code> est l'\u00e9l\u00e9ment d'indice \\(0\\) ;</li> <li><code>\"chat\"</code> est l'\u00e9l\u00e9ment d'indice \\(1\\) ;</li> <li><code>\"poisson rouge\"</code> est l'\u00e9l\u00e9ment d'indice \\(2\\).</li> </ul> <p>Le dernier indice est donc \\(2\\), mais la longueur de <code>mon_autre_tuple</code> est bien 3 !</p> <p>Diff\u00e9rencier indices et longueur</p> <p>Dans une s\u00e9quence en Python, la longueur est \u00e9gale au dernier indice plus \\(1\\) !</p> <p>Le dernier indice d'un tuple <code>t</code> est donc <code>len(t)-1</code> !</p> <p>Acc\u00e9der aux \u00e9l\u00e9ments d'un tuple</p> <p>Pour acc\u00e9der aux \u00e9l\u00e9ments d'un tuple, on utilise la m\u00eame notation que pour acc\u00e9der aux caract\u00e8res d'une chaine de caract\u00e8res : la notation entre crochets.</p> Le codeVisualisation dans Python-Tutor <pre><code>&gt;&gt;&gt; mon_tuple = (2, 7, 5, 8, 6, 9, 4, 3, 1, 12)\n&gt;&gt;&gt; mon_tuple[2]\n5     \n</code></pre> <p> </p> <p>Exercice 1</p> Enonc\u00e9Solutions <ol> <li>Sachant que <code>un_tuple_bizarre = (2, 3.1, \"toto\", True)</code>, quelle est la valeur renvoy\u00e9e par <code>un_tuple_bizarre[1]</code> ?</li> <li>A quelle valeur est associ\u00e9e le nom <code>a</code> apr\u00e8s ex\u00e9cution du code suivant ?     <pre><code>mon_tuple = (2, 7, 5, 8, 6, 9, 4, 3, 1, 12)\na = mon_tuple[6]      \n</code></pre></li> <li>Dans le code pr\u00e9c\u00e9dent, que faut-il mettre entre les crochets pour que le nom <code>a</code> soit associ\u00e9 \u00e0 la valeur \\(1\\) ?</li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (2, 7, 5, 8, 6, 9, 4, 3, 1, 12)\na = mon_tuple[-1]     \n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (2, 7, 5, 8, 6, 9, 4, 3, 1, 12)\na = mon_tuple[10]     \n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (2, 7, 5, 8, 6, 9, 4, 3, 1, 12)\nmon_tuple[5] = 42     \n</code></pre></li> </ol> <ol> <li>c'est 3.1</li> <li><code>a</code> est associ\u00e9 \u00e0 la valeur 4.</li> <li>Pour obtenir la valeur 1, il faut saisir <code>a[8]</code></li> <li>On obtient 12, c'est-\u00e0-dire le dernier \u00e9l\u00e9ment du tuple.</li> <li>On obtient l'erreur <code>IndexError: tuple index out of range</code>, ce qui signifie qu'on recherche quelque chose en dehors du tuple, ce qui est une erreur <code>IndexError</code>.</li> <li>On essaye de donner la valeur 42 \u00e0 l'\u00e9l\u00e9ment d'indice 5 du tuple, ce qui est impossible :     <code>TypeError: 'tuple' object does not support item assignment</code></li> </ol> <p>Exercice 2</p> Enonc\u00e9Solutions <ol> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (\"le\", \"bonjour\", \"monde\")\nprint(f\"{mon_tuple[1].capitalize()} {mon_tuple[0]} {mon_tuple[2]} !\")     \n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>def add(a, b) :\n    return (a, b, a+b)\n\nmon_tuple = add(5,8)\nprint(f\"{mon_tuple[0]} + {mon_tuple[1]} = {mon_tuple[2]}\")\n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (\"Luke Skywalker\", \"Mark Hamill\", \"Jedi\", \"Dark Vador\")\npersonnage, acteur, metier, pere = mon_tuple\n</code></pre></li> </ol> <ol> <li>On obtient : <code>Bonjour le monde !</code></li> <li>On obtient : <code>5 + 8 = 13</code></li> <li>La variable <code>personnage</code> contient la cha\u00eene de caract\u00e8res <code>\"Luke Skywalker\"</code>, la variable <code>acteur</code>contient <code>\"Mark Hamill\"</code>, etc.</li> </ol> <p>Tuple unpacking</p> <p>La m\u00e9thode utilis\u00e9e dans l'exercice pr\u00e9c\u00e9dent s'appelle le tuple unpacking, soit \u00ab d\u00e9sempaquetage \u00bb de tuple. Elle est tr\u00e8s souvent utilis\u00e9e pour d\u00e9composer des tuples renvoy\u00e9s comme valeur de retour d'une fonction.</p> <p>Exercice 3</p> Enonc\u00e9Solution <p>Essayez et commentez le code suivant : </p><pre><code>def euclide(a, b) :\n    return (a,b,a//b,a%b)\nres = euclide(20,7)\nprint(type(res))\ndividende, diviseur, quotient, reste = res\nprint(type(quotient))\n</code></pre> <p>Quotient est un \u00e9l\u00e9ment de type <code>int</code>, chacune des variables <code>dividende</code>, <code>diviseur</code>, etc... contient la valeur qui lui est associ\u00e9e. le tuple a \u00e9t\u00e9 d\u00e9compact\u00e9 (unpack).</p>"},{"location":"NSI/Premiere/C04/Tuples/#parcourir-une-sequence","title":"Parcourir une s\u00e9quence","text":"<p>Parcours de s\u00e9quence</p> <p>Le parcours d'une s\u00e9quence peut \u00eatre fait de deux mani\u00e8res diff\u00e9rentes :</p> <ul> <li>par les indices ;</li> <li>par les \u00e9l\u00e9ments.</li> </ul> <p>En python ces deux types de parcours sont effectu\u00e9s par l'interm\u00e9diaire d'une boucle <code>for</code>.</p> <p>Parcours par les indices</p> <pre><code>mon_tuple = (1, 3, 5, 7)\nfor i in range(0,len(mon_tuple)) :\n    print(mon_tuple[i])\n</code></pre> <ul> <li>Pour rappel, la fonction <code>range(a,b)</code> it\u00e8re sur les entiers naturels de \\(a\\) inclus \u00e0 \\(b\\) exclu. Ici, la parcours se fait donc pour \\(i\\) allant de \\(0\\) \u00e0 <code>len(mon\\tuple)</code>, soit \\(4\\).</li> <li>La valeur de d\u00e9part de la fonction <code>range</code> \u00e9tant \\(0\\), on aurait pu l'omettre.</li> </ul> <p>Parcours par les \u00e9l\u00e9ments</p> <p>Le parcours par indice est possible en Python, et parfois n\u00e9cessaire. Mais il existe  une possibilit\u00e9 de parcours de la s\u00e9quence plus directe : </p><pre><code>mon_tuple = (1, 3, 5, 7)\nfor element in mon_tuple :\n    print(element)\n</code></pre> A chaque tour de boucle, le nom <code>element</code> va \u00eatre associ\u00e9 \u00e0 une valeur du tuple. <ul> <li>le nom <code>element</code> n'est qu'un choix de ma part, j'aurais tout aussi bien pu \u00e9crire <code>toto</code>.</li> <li>Ce type de boucle existe aussi dans d'autres langages, et porte souvent le nom de boucle <code>foreach</code>.</li> <li>Un inconv\u00e9nient est que vous n'avez que l'\u00e9l\u00e9ment, et que par cons\u00e9quent il vous manque son indice. Heureusement, une fonction Python (<code>enumerate</code>), peut permettre de combiner les deux types de boucles :     <pre><code>mon_tuple = (1, 3, 5, 7)\nfor indice, element in enumerate(mon_tuple) :\n    print(f\"{indice}-&gt;{element}\")\n</code></pre></li> </ul> <p>Exercice 4</p> Enonc\u00e9Solutions <ol> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (12, 15, 34, 23, 11, 15, 36)\nfor n in mon_tuple :\n    if n%2 == 0 :\n        print(n)\n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (12, 15, 34, 23, 11, 15, 36)\nfor i in range(len(mon_tuple)) :\n    if mon_tuple[i]%2 == 0 :\n        print(mon_tuple[i])\n</code></pre></li> <li>Essayez et commentez le code suivant :     <pre><code>mon_tuple = (12, 15, 34, 23, 11, 15, 36)\nfor i in range(len(mon_tuple)) :\n    if i%2 == 0 :\n        print(mon_tuple[i])\n</code></pre></li> <li>Que faut-il \u00e9crire pour obtenir les termes impairs du tuple ?</li> <li>Que faut-il \u00e9crire pour obtenir les termes de rang impairs du tuple ?</li> </ol> <ol> <li>Le code \u00e9crit les nombres pairs du tuple, en effectuant un parcours par \u00e9l\u00e9ments.</li> <li>Le code \u00e9crit les nombres pairs du tuple, en effectuant un parcours par indices.</li> <li>Le code \u00e9crit les nombres d'indices pairs du tuple, en effectuant un parcours par indice.</li> <li> <p>Il faut \u00e9crire :</p> <pre><code>for n in mon_tuple :\n    if n%2 == 1 :\n        print(n)\n</code></pre> <p>ou </p> <pre><code>for i in range(len(mon_tuple)) :\n    if mon_tuple[i]%2 == 1 :\n        print(mon_tuple[i])\n</code></pre> </li> <li> <p>Il faut \u00e9crire :</p> <pre><code>for i in range(len(mon_tuple)) :\n    if i%2 == 1 :\n        print(mon_tuple[i])\n</code></pre> </li> </ol> <p>Algorithmes de parcours</p> Enonc\u00e9Solution <p>Pour chacune des questions ci-dessous, je vous demande :</p> <ul> <li>de vous mettre par 2;</li> <li>de chercher d'abord \u00e0 la main, sur papier ;</li> <li>de d\u00e9crire l'algorithme demand\u00e9 en langage naturel;</li> <li>enfin d'en proposer une version Python.</li> </ul> <p>Pour chacune des questions suivants, on suppose que les tuples donn\u00e9s sont des tuples de nombres, entiers ou flottants, et que ces tuples sont non vides.</p> <ol> <li>Trouver un algorithme puis \u00e9crire une fonction Python <code>maximum(t)</code> qui prend un tuple en entr\u00e9e et renvoie le plus grand nombre de ce tuple, sans utiliser la fonction built-in <code>max</code>. 2.Trouver un algorithme puis \u00e9crire une fonction Python <code>minimum(t)</code> qui prend un tuple en entr\u00e9e et renvoie le plus petit nombre de ce tuple, sans utiliser la fonction built-in <code>min</code>.</li> <li>Trouver un algorithme puis \u00e9crire une fonction Python <code>somme(t)</code> qui prend un tuple en entr\u00e9e et renvoie la somme des valeurs de ce tuple, sans utiliser la fonction built-in <code>sum</code>.</li> <li>Trouver un algorithme puis \u00e9crire une fonction Python <code>moyenne(t)</code> qui prend un tuple en entr\u00e9e et renvoie la moyenne des valeurs de ce tuple, sans utiliser la fonction built-in <code>sum</code>.</li> <li> <p>Trouver un algorithme puis \u00e9crire une fonction Python <code>palindrome(t)</code> qui prend un tuple en entr\u00e9e et renvoie <code>True</code> si le tuple est un palindrome, et <code>False</code> sinon.</p> <p>Palindrome</p> <p>Un palindrome est une s\u00e9quence qui peut se lire dans les deux sens sans changer ses valeurs :</p> <ul> <li>\\((6, 4, 3, 4, 6)\\) est un palindrome;</li> <li>\\((2, 4, 4, 2)\\) est un palindrome;</li> <li>\\((12)\\) est un palindrome ;</li> <li>\\((3, 4, 5, 3)\\) n'est pas un palindrome.</li> </ul> <p>Si vous le codez suffisamment bien, votre code devrait aussi fonctionner pour les chaines de caract\u00e8res comme : \u00ab \u00e9t\u00e9 \u00bb, \u00ab kayak \u00bb, \u00ab No\u00ebl a trop par rapport \u00e0 L\u00e9on \u00bb ou \u00ab Engage le jeu que je le gagne \u00bb.</p> </li> </ol> <ol> <li>Code :     <pre><code>def maximum(t) :\n    maxi = t[0]\n    for e in t :\n        if e&gt;maxi :\n            maxi = e\n    return e\n</code></pre></li> <li>Code :     <pre><code>def minimum(t) :\n    mini = t[0]\n    for e in t :\n        if e&lt;mini :\n            mini = e\n    return e\n</code></pre></li> <li>Code :     <pre><code>def somme(t) :\n    somme = 0\n    for e in t :\n        somme += e\n    return somme\n</code></pre></li> <li>Code :     <pre><code>def moyenne(t) :\n    return somme(t)/len(t)\n</code></pre></li> <li>Code :     <pre><code>def palindrome(t) :\n    for i in range(len(t)//2) :\n        if t[i] != t[-(i+1)] :\n            return False\n    return True\n</code></pre></li> </ol> <p>Une citation</p> <p>\u00ab Les tentatives de cr\u00e9ation de machines pensantes nous seront d\u2019une grande aide pour     d\u00e9couvrir comment nous pensons nous-m\u00eames. \u00bb</p> <p>De Alan Turing, Conf\u00e9rence \u00e0 la BBC - 15 Mai 1951</p>"},{"location":"NSI/Premiere/C05/Architecture/","title":"Architecture","text":""},{"location":"NSI/Premiere/C05/Architecture/#architecture-materielle","title":"Architecture mat\u00e9rielle","text":""},{"location":"NSI/Premiere/C05/Architecture/#le-modele-de-von-neumann","title":"Le mod\u00e8le de von Neumann","text":""},{"location":"NSI/Premiere/C05/Architecture/#le-principe","title":"Le principe","text":"<p>John Von Neumann (1903-1957) est un ing\u00e9nieur, math\u00e9maticien et physicien  am\u00e9ricano-hongrois.Il a particip\u00e9 au projet Manhattan (premi\u00e8re bombe atomique) et \u00e0 l'ENIAC. Son nom reste attach\u00e9 \u00e0 un mod\u00e8le qu'il propose en 1944,  mod\u00e8le d'architecture novateur qui sert toujours de base \u00e0 nos architectures actuelles.</p> <p></p> <p>Le mod\u00e8le de von Neumann pr\u00e9cise les 4 composants essentiels d'un microprocesseur ainsi que les interactions entre ces diff\u00e9rents composants. Ces composants sont les suivants :</p> <ul> <li>l'unit\u00e9 de commande : contr\u00f4le la s\u00e9quence d'instructions ;</li> <li>l'unit\u00e9 arithm\u00e9tique et logique(UAL ou ALU en anglais) : ex\u00e9cute les instructions ;</li> <li>la m\u00e9moire : contient les donn\u00e9es et les programmes ;</li> <li>l'unit\u00e9 d'entr\u00e9e et sortie.</li> </ul> <p></p> <p>Cette architecture est bien entendu une architecture th\u00e9orique. Elle doit \u00eatre compl\u00e9t\u00e9e par un certain nombre d'autres sous-structures pour \u00eatre effectivement fonctionnelle. On distingue entre autres :</p> <ul> <li>Les bus sont les liaisons entre les diff\u00e9rents \u00e9l\u00e9ments de l'architecture (m\u00e9moire, ALU, E/S,...).</li> <li>L'horloge est le cadenceur qui organise l'accomplissement des instructions, et dont l'unit\u00e9 est appel\u00e9 cycle d'horloge (1 cycle = 1 instuction).</li> </ul>"},{"location":"NSI/Premiere/C05/Architecture/#cadence-dun-processeur","title":"Cadence d'un processeur","text":"<p>La vitesse d'un processeur est exprim\u00e9e en GigaHertz (GHz). Elle exprime le nombre d'op\u00e9rations que peut faire le processeur en une seconde. Ainsi, un processeur \u00e0 3 GigaHerz effectue 3 milliards d'op\u00e9rations \u00e0 la seconde, c'est-\u00e0-dire 3 milliards de cycles par secondes. </p> <p>L'augmentation de la fr\u00e9quence d'horloge a longtemps \u00e9t\u00e9 un attendu des progr\u00e8s de l'informatique, et elle a \u00e9t\u00e9 longtemps corr\u00e9l\u00e9e \u00e0 l'augmentation du nombre de transistors dans les processeurs. Gordon E. Moore \u00e9non\u00e7a en \\(1965\\) une loi empirique pr\u00e9disant un doublement du nombre de processeurs tous les deux ans.</p> <p></p> <p>Mais cette augmentation g\u00e9n\u00e8re une chaleur tr\u00e8s importante au niveau processeur, la dissipation de cette chaleur \u00e9tant rapidement devenue un probl\u00e8me. Depuis \\(2005\\) environ, les fabricants se sont plut\u00f4t tourn\u00e9 vers une augmentation du nombre de c\u0153urs dans leurs processeurs, en comptant sur le parall\u00e9lisme(le fait de pouvoir g\u00e9rer des instructions en simultan\u00e9 sur plusieurs c\u0153urs) pour augmenter le nombre d'instructions trait\u00e9es par seconde, plut\u00f4t qu'une augmentation pure du nombre d'op\u00e9rations par seconde, qui actuellement plafonne aux environs de \\(3,8\\) GHz.</p> <p></p>"},{"location":"NSI/Premiere/C05/Architecture/#cycles-dinstructions-et-parallelisme","title":"Cycles d'instructions et parall\u00e9lisme","text":"<p>Dans un processeur, 5 \u00e9tapes sont n\u00e9cessaires pour traiter une instruction. Chacune de ces 5 \u00e9tapes est ex\u00e9cut\u00e9e :</p> <ul> <li>IF (Instruction Fetch) : charge l'instruction \u00e0 ex\u00e9cuter ;</li> <li>ID (Instruction Decode) : d\u00e9code l'instruction ;</li> <li>EX (Execute) : ex\u00e9cute l'instruction ;</li> <li>MEM (Memory) :  d\u00e9note un transfert depuis un registre vers la m\u00e9moire dans le cas d'une instruction du type STORE (acc\u00e8s en \u00e9criture) et de la m\u00e9moire vers un registre dans le cas d'un LOAD (acc\u00e8s en lecture); </li> <li>WB (Write Back) : stocke le r\u00e9sultat dans un registre. La source de ce r\u00e9sultat peut \u00eatre la m\u00e9moire (suite \u00e0 une instruction LOAD), l'unit\u00e9 de calcul (suite \u00e0 un calcul \u00e0 l'\u00e9tape EX) ou bien un registre (cas d'une instruction MOV).</li> </ul> <p>En supposant que chaque \u00e9tape met 1 cycle d'horloge pour s'ex\u00e9cuter, il faut normalement 5 cycles pour ex\u00e9cuter une instruction, 15 pour 3 instructions : </p> <p></p> <p>Il est cependant possible d'am\u00e9liorer ce syst\u00e8me, notamment par l'utilisation de pipelines dans des processeurs dits superscalaires. Si plusieurs op\u00e9rations d'un m\u00eame programme sont ind\u00e9pendantes, alors le processeur peut contenir plusieurs instructions, chacune \u00e0 une \u00e9tape diff\u00e9rente. Le pipeline ci-dessous est le Classic RISC pipeline, cr\u00e9\u00e9 par David Patterson, inventeur des processeurs RISC et du concept de pipeline, et mis en \u0153uvre d\u00e8s 1961 par IBM :</p> <p></p> <p>Il faut alors seulement 9 cycles pour ex\u00e9cuter 5 instructions. Au cinqui\u00e8me cycle, tous les \u00e9tages du pipeline sont sollicit\u00e9s et les 5 op\u00e9rations ont lieu en m\u00eame temps.</p>"},{"location":"NSI/Premiere/C05/Architecture/#levolution-du-modele-de-von-neumann","title":"L'\u00e9volution du mod\u00e8le de von Neumann","text":"<p>M\u00eame si le mod\u00e8le de von Neumann reste d'actualit\u00e9, il a subi quelques \u00e9volutions r\u00e9cemment :</p> <p></p> <ul> <li>Les Entr\u00e9e-sorties sont contr\u00f4l\u00e9es par des processeurs autonomes.</li> <li>Les CPU sont multiprocesseurs, soit par unit\u00e9s s\u00e9par\u00e9es soit par multiples c\u0153urs dans une m\u00eame puce. On a ainsi une augmentation de la puissance sans augmenter la vitesse des processeurs. </li> <li>La m\u00e9moire est au c\u0153ur du syst\u00e8me, ce qui implique de plus en plus de parall\u00e9lisme.</li> </ul> <p>On peut voir cette \u00e9volution sur les processeurs eux-m\u00eames :</p> <p></p> Nom Ann\u00e9e Nombre de transistors Vitesse d'horloge M\u00e9moire Intel 4004 \\(1971\\) \\(2300\\) 100 KHz 640 o <p></p> Nom Ann\u00e9e Nombre de transistors Vitesse d'horloge M\u00e9moire Intel 8080 \\(1974\\) \\(4500\\) 2 MHz 64 ko <p></p> Nom Ann\u00e9e Nombre de transistors Vitesse d'horloge M\u00e9moire Motorola 68060 \\(1994\\) \\(2,5\\) millions 50 MHz 64 ko <p></p> Nom Ann\u00e9e Nombre de transistors Vitesse d'horloge M\u00e9moire PowerPc 970Fx \\(2003\\) \\(58\\) millions 1,6-2,7 GHz 2Mo Cache L2 <p></p> Nom Ann\u00e9e Nombre de transistors Vitesse d'horloge M\u00e9moire Intel Core I7 LGA1156 \\(2009\\) +de 700 millions 2,3 \u00e0 3,8 GHz 12 Mo de cache L3"},{"location":"NSI/Premiere/C05/Architecture/#les-memoires-informatiques","title":"Les m\u00e9moires informatiques","text":""},{"location":"NSI/Premiere/C05/Architecture/#la-hierarchie-des-memoires","title":"La hi\u00e9rarchie des m\u00e9moires","text":"<p>Dans un ordinateur, le processeur acc\u00e8de aux instructions du programme \u00e0 ex\u00e9cuter ainsi qu'aux donn\u00e9es n\u00e9cessaires \u00e0 son ex\u00e9cution depuis la m\u00e9moire.</p> <p>Il existe une hi\u00e9rarchie des m\u00e9moires informatiques : les plus rapides sont les plus co\u00fbteuses, donc en nombre limit\u00e9, et sont plac\u00e9es le plus pr\u00e8s du processeur (les registres font partie int\u00e9grante du processeur). Les plus lentes sont les moins co\u00fbteuses et sont \u00e9loign\u00e9es du processeur.</p> <p>Le mat\u00e9riel et le syst\u00e8me d'exploitation sont responsables du d\u00e9placement des objets le long de cette hi\u00e9rarchie. </p> <p>A titre d'information, voici une illustration des capacit\u00e9s et du temps d'acc\u00e8s aux diff\u00e9rentes m\u00e9moires (sur un processeur de \\(2012\\)) :</p> Type Capacit\u00e9s Vitese Registre \\(\\simeq 1000 o\\) 1 cycle Cache L1 128 Ko 700 Go/s Cache L2 1 Mo 200 Go/s Cache L3 6 Mo 100 Go/s Cache L4 128 Mo 40 Go/s DRAM \\(\\simeq 8 Go\\) 10 Go/s HDD Plusieurs To 200 Mo/s SSD 500 Mo 600 Mo/s"},{"location":"NSI/Premiere/C05/Architecture/#random-access-memory","title":"Random Access Memory","text":"<p>La m\u00e9moire RAM (random Access Memory, aussi appel\u00e9e m\u00e9moire vive, est un type de m\u00e9moire volatile, ce qui signifie qu'elle perd toutes les donn\u00e9es en m\u00e9moire une fois l'alimentation \u00e9lectrique coup\u00e9e. Elle est caract\u00e9ris\u00e9e par un acc\u00e8s direct aux donn\u00e9es (on acc\u00e8de directement aux \u00ab cases \u00bb contenant les donn\u00e9es), contrairement \u00e0 un disque dur o\u00f9 l'acc\u00e8s se fait de mani\u00e8re s\u00e9quentielle (on parcourt le disque pour arriver aux donn\u00e9es cherch\u00e9es). On distingue deux principaux types de m\u00e9moire <code>RAM</code> :</p> <ul> <li> <p>la <code>SRAM</code> (Static Random Access Memory) : dans la <code>SRAM</code>, les donn\u00e9es sont stock\u00e9es \u00e0 l'aide de l'\u00e9tat d'une cellule m\u00e9moire compos\u00e9e de 6 transistors. La <code>SRAM</code> est g\u00e9n\u00e9ralement utilis\u00e9e en guise de m\u00e9moire cache pour le processeur. La <code>SRAM</code> n'est g\u00e9n\u00e9ralement pas rempla\u00e7able par l'utilisateur.</p> </li> <li> <p><code>DRAM</code> (Dynamic Random Acces Memory) : la <code>DRAM</code> stocke les donn\u00e9es \u00e0 l'aide d'un transistor et d'un accumulateur, qui constituent une cellule de <code>DRAM</code>. La <code>DRAM</code> coute moins cher \u00e0 produire, mais est l\u00e9g\u00e8rement moins rapide que la <code>SRAM</code>. La plupart des modules de m\u00e9moire rempla\u00e7ables par l'utilisateur sont des modules <code>DRAM</code>.</p> </li> </ul> <p>On trouve parfois la m\u00e9moire <code>ECC</code> (Error Correcting Code, pour code correcteur d\u2019erreur), qui est un type de m\u00e9moire qui dispose d\u2019une cellule suppl\u00e9mentaire pour d\u00e9tecter et corriger les erreurs al\u00e9atoires. La m\u00e9moire <code>ECC</code> est rempla\u00e7able par l\u2019utilisateur, mais doit \u00eatre compatible avec les autres composants.</p> <p>Au vu de l'acc\u00e9l\u00e9ration des diff\u00e9rents composants informatiques, il a \u00e9t\u00e9 n\u00e9cessaire d'acc\u00e9l\u00e9rer la m\u00e9moire qui devenait le maillon faible de la chaine de traitement des donn\u00e9es. Le d\u00e9bit de donn\u00e9es double, ou DDR (Double Data Rate) fut alors d\u00e9velopp\u00e9, et la technologie qu'il a remplac\u00e9e fut appel\u00e9e \\\u00ab d\u00e9bit de donn\u00e9es simple \u00bb, ou SDR (Single Data Rate). La m\u00e9moire DDR \u00e9tait \u00e0 la fois plus rapide et moins \u00e9nergivore que la RAM SDR.</p> <p>Les technologies de m\u00e9moire continuent d'\u00e9voluer. La g\u00e9n\u00e9ration de m\u00e9moire suivante, la DDR2, fonctionne \u00e0 des vitesses sup\u00e9rieures et consomme moins d'\u00e9nergie que la DDR originale. La DDR3 et la DDR4 ont \u00e9galement suivi cette tendance. Chaque g\u00e9n\u00e9ration successive est plus rapide et consomme moins d\u2019\u00e9lectricit\u00e9.</p>"},{"location":"NSI/Premiere/C05/Architecture/#read-only-memory","title":"Read-Only Memory","text":"<p>Originellement, l'expression m\u00e9moire morte (en anglais, Read-Only Memory : <code>ROM</code>) d\u00e9signait une m\u00e9moire informatique non volatile (c'est-\u00e0-dire une m\u00e9moire qui ne s'efface pas lorsque l'appareil qui la contient n'est plus aliment\u00e9 en \u00e9lectricit\u00e9) et dont le contenu est fix\u00e9 lors de sa programmation, qui pouvait \u00eatre lue plusieurs fois par l'utilisateur, mais ne pouvait plus \u00eatre modifi\u00e9e.</p> <p>Avec l'\u00e9volution des technologies, la d\u00e9finition du terme m\u00e9moire morte (en fran\u00e7ais) ou read only memory (en anglais) a \u00e9t\u00e9 \u00e9largie pour inclure les m\u00e9moires non volatiles dont le contenu est fix\u00e9 lors de leur fabrication, qui peuvent \u00eatre lues plusieurs fois par l'utilisateur et qui ne sont pas pr\u00e9vues pour \u00eatre modifi\u00e9es. Elles peuvent parfois cependant l'\u00eatre par un utilisateur exp\u00e9riment\u00e9, \u00e9ventuellement avec un mat\u00e9riel sp\u00e9cial. Ces m\u00e9moires sont les <code>UVPROM</code>, les <code>PROM</code>, les <code>EPROM</code> et les <code>EEPROM</code>.</p>"},{"location":"NSI/Premiere/C05/Architecture/#tp-programmer-en-assembleur","title":"TP : programmer en assembleur","text":""},{"location":"NSI/Premiere/C05/Architecture/#lassembleur-kesako","title":"L'assembleur, k\u00e9sako ?","text":"<p>Un programme \u00e9crit dans un langage de haut niveau (comme Python) \u00e9loign\u00e9 du langage machine (dit de bas niveau) d\u00e9pend le moins possible du processeur et du syst\u00e8me d'exploitation.</p> <p>Si on ouvre un fichier ex\u00e9cutable avec un \u00e9diteur hexad\u00e9cimal, on obtient quelque chose du type  </p><pre><code>01ebe814063727473747566662e6305f5f43544f525f4c\n5f05f5f44544f525f4c4953545f5f05f5f4a43525f4c49\n53545f5f05f5f646f5f676c6f62616c5f64746f72735f6\n75780636f6d706c657465642e36353331064746f725f69\n</code></pre> <p>C'est une suite d'instructions comme \\(01ebe814\\) que l\u2019on peut traduire directement de fa\u00e7on plus lisible :</p> <pre><code>add R0, R1 , R2\n</code></pre> <p>C'est ce qu'on appelle de l'assembleur. Par exemple ici l'instruction <code>add</code>, va \u00e9crire dans le registre \\(R0\\) la somme des valeurs des registres \\(R1\\) et \\(R2\\).</p> <p>L'assembleur est donc une repr\u00e9sentation du langage machine, mais qui est d\u00e9pendante directement du processeur (ou de la famille du processeur).  En effet, les diff\u00e9rents processeurs ne reconnaissent pas exactement les m\u00eames types de mots cl\u00e9, ni exactement la m\u00eame syntaxe. De m\u00eame le nombre de registres accessibles est tr\u00e8s diff\u00e9rent selon le processeur utilis\u00e9.</p> <p>On peut distinguer deux grands types de processeurs. Les processeurs RISC' (Reduced instruction set computer ou processeur \u00e0 jeu d'instructions r\u00e9duit) sont des processeurs ou le nombre d'instructions est limit\u00e9 et ces instructions sont g\u00e9n\u00e9ralistes - op\u00e9rations arithm\u00e9tiques, chargement de donn\u00e9es dans/vers les registres, op\u00e9rations binaires de d\u00e9calage de bits, etc. La cons\u00e9quence de ce choix est le nombre restreint de circuits sp\u00e9cifiques sur le processeur, et donc le nombre restreint de transistors.</p> <p>On trouve aussi les processeurs de type CISC ((Complex Instruction Set Computer ou processeurs \u00e0 jeu d'instruction \u00e9tendu). Ce sont les processeurs de type x86, AMD64, Intel64, dont la fabrication a \u00e9t\u00e9 rendue possible par la miniaturisation des transistors et la capacit\u00e9 d'organiser finement les circuits afin d'avoir des circuits sp\u00e9cialis\u00e9s.</p> <p>En pratique, un langage de haut niveau est compil\u00e9 en assembleur puis directement cod\u00e9 en binaire pur. La plupart des programmeuses et programmeur ne touchent jamais \u00e0 l'assembleur, sauf dans des cas tr\u00e8s pr\u00e9cis o\u00f9 il est n\u00e9cessaire d'\u00eatre au plus pr\u00e8s de la machine. Mais pour comprendre le fonctionnement d'un processeur, il est quand m\u00eame important d'avoir quelques notions...</p>"},{"location":"NSI/Premiere/C05/Architecture/#le-m99-un-ordinateur-en-papier","title":"Le M99, un ordinateur en papier","text":"<p>D'apr\u00e8s le travail de Martin Quinson, ENS-Rennes</p> <p>Dans un premier temps, vous aurez besoin du processeur M99.</p> <p>Le <code>M99</code> est dot\u00e9 de 100 cases m\u00e9moire (la grille en haut), et d'un processeur (en bas). La m\u00e9moire est compos\u00e9e de 100 mots m\u00e9moire de 3 chiffres (valeur de 000 \u00e0 999). Chaque mot m\u00e9moire peut \u00eatre d\u00e9sign\u00e9 par une adresse cod\u00e9e sur deux chiffres. Cette m\u00e9moire va contenir donn\u00e9es et instructions.\\</p> <p>L'Unit\u00e9 Arithm\u00e9tique et Logique (ALU) : le processeur dispose de trois registres directement utilisables. <code>A</code> et <code>B</code> sont utilis\u00e9 pour les op\u00e9randes des op\u00e9rations tandis que <code>R</code> est pour le r\u00e9sultat. Ces registres sont de 3 chiffres, mais contrairement \u00e0 la m\u00e9moire, ils ont un signe. Leur \u00e9tendue de valeurs est donc comprise entre \\(-999\\) et \\(999\\).</p> <p>Le processeur dispose aussi d'un quatri\u00e8me registre nomm\u00e9 <code>PC</code> (Program Counter). C'est le pointeur d'instruction, contenant l'adresse m\u00e9moire de la prochaine instruction \u00e0 ex\u00e9cuter. Lorsqu'on utilise le <code>M99</code>, on peut noter le num\u00e9ro de l'instruction \u00e0 ex\u00e9cuter dans la case pr\u00e9vue \u00e0 cet effet, mais en pratique, il est plus simple de le mat\u00e9rialiser avec un \\\u00ab pion\u00bb situ\u00e9 sur une des cases de la grille m\u00e9moire, ou m\u00eame de simplement suivre avec son doigt.</p> <p>Le jeu d'instruction est d\u00e9fini ci-dessous :</p> <p></p> <p>Ainsi on a les codes suivants :</p> <ul> <li>\\(245\\) qui se traduit en <code>LDB 45</code>, soit \u00ab Charger le contenu de la case m\u00e9moire \\(45\\) dans le registre \\(B\\) \u00bb ;</li> <li>\\(312\\) qui se traduit en <code>MOV 12</code>, soit \u00ab Copier le contenu du registre \\(B\\) dans le registre\\(A\\) \u00bb .</li> </ul> <p>Lire et \u00e9crire un programme en assembleur</p> \u00c9nonc\u00e9Solution <p>Sur le processeur <code>M99</code> fourni, deux diff\u00e9rents programmes sont d\u00e9j\u00e0 en m\u00e9moire.</p> <ol> <li>D\u00e9rouler \u00ab \u00e0 la main \u00bb le programme charg\u00e9 \u00e0 l'adresse  \\(00\\). Quel est le r\u00e9sultat obtenu ? Quel est l'objectif de ce programme ?</li> <li>D\u00e9rouler \u00ab \u00e0 la main \u00bb le programme charg\u00e9 \u00e0 l'adresse  \\(13\\). Quel est le r\u00e9sultat obtenu ? Quel est l'objectif de ce programme ?</li> <li>\u00c9crire un programme sur le M99, charg\u00e9 en adresse \\(40\\), qui prend deux nombres  en entr\u00e9e (l'entr\u00e9e \u00e9tant consid\u00e9r\u00e9 comme \u00e9tant tout nombre mis en case \\(99\\)) et renvoie la somme de ces deux nombres en sortie.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C05/Architecture/#utilisation-dun-simulateur-risc","title":"Utilisation d'un simulateur RISC","text":"<p>D'apr\u00e8s le travail de David Roche</p> <p>Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours, nous allons utiliser un simulateur de processeur RISC d\u00e9velopp\u00e9 en <code>Javascript</code> par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur une <code>RAM</code> et un <code>CPU</code>.</p> <p>Une version en fran\u00e7ais de ce simulateur est disponible ici sous la forme d'un dossier compress\u00e9.</p> <p>Voici ce que vous devriez obtenir :</p> <p></p> <p>Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur :</p> <ul> <li>\u00e0 droite, on trouve la m\u00e9moire centrale ;</li> <li>au centre, on trouve le microprocesseur ;</li> <li>\u00e0 gauche on trouve la zone d'\u00e9dition (\u00ab Code assembleur\u00bb), c'est dans cette zone que nous allons saisir nos programmes en assembleur.</li> </ul> <p>Plus sp\u00e9cifiquement :</p> <ul> <li> <p>pour la RAM, par d\u00e9faut le contenu des diff\u00e9rentes cellules de la m\u00e9moire est en base 10 (entier sign\u00e9), mais d'autres options sont possibles : base 10 (entiers non-sign\u00e9s), base 16 (hexad\u00e9cimal), base 2 (binaire). On acc\u00e8de \u00e0 ces options \u00e0 l'aide du bouton <code>OPTIONS</code> situ\u00e9 en bas dans la partie gauche du simulateur.</p> <p>Exercice</p> \u00c9nonc\u00e9R\u00e9ponse <p>\u00c0 l'aide du bouton <code>OPTIONS</code>, passez \u00e0 un affichage en binaire. Quelle est la taille des mots utilis\u00e9s dans ce simulateur ? Combien y-a-t'il de cases m\u00e9moires ?</p> <p>A venir !</p> </li> <li> <p>pour Le CPU, dans la partie centrale du simulateur, nous allons trouver en allant du haut vers le bas :</p> <ul> <li>le bloc \u00ab Registres\u00bb, o\u00f9 nous avons 8 registres (<code>R0</code> \u00e0 <code>R7</code>) + 1 registre (<code>PC</code>) qui contient l'adresse m\u00e9moire de l'instruction en cours d'ex\u00e9cution ;</li> <li>le bloc \u00ab Unit\u00e9 de Contr\u00f4le\u00bb qui contient l'instruction machine en cours d'ex\u00e9cution (au format hexad\u00e9cimal) ;</li> <li>le bloc \u00ab Unit\u00e9 Arithm\u00e9tique et Logique\u00bb, qui effectuera les op\u00e9rations.</li> </ul> <p>Nous ne nous int\u00e9resserons pas aux autres composants de la partie CPU.</p> </li> </ul> <p>Exercice</p> \u00c9nonc\u00e9 <ol> <li> <p>Avec le bouton <code>OPTIONS</code>, repassez en entiers sign\u00e9s, puis, dans la partie \\\u00ab Code assembleur \u00bb, saisissez les lignes de codes suivantes :     </p><pre><code>MOV R0, #42\nSTR R0, 150\n</code></pre>     Cliquez sur le bouton Valider. Que se passe-t-il ? </li> <li> <p>Pour ex\u00e9cuter notre programme, il suffit maintenant de cliquer sur le bouton <code>LANCER</code>. Vous allez voir le CPU \\\u00ab travailler \u00bb en direct gr\u00e2ce \u00e0 de petites animations. Si cela va trop vite (ou trop doucement), vous pouvez r\u00e9gler la vitesse de simulation \u00e0 l'aide des boutons <code>&lt;&lt;</code> et <code>&gt;&gt;</code>. Un appui sur le bouton <code>STOP</code> met en pause la simulation, si vous rappuyez une deuxi\u00e8me fois sur ce m\u00eame bouton <code>STOP</code>, la simulation reprend l\u00e0 o\u00f9 elle s'\u00e9tait arr\u00eat\u00e9e. Vous pouvez aussi lancer la simulation pas \u00e0 pas gr\u00e2ce au bouton <code>PAS</code>, et r\u00e9initialiser avec le bouton <code>REINIT</code>. Attention, la m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton <code>REINIT</code>, pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton <code>OPTIONS</code> et choisir <code>r\u00e9init. m\u00e9moire</code>. Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton <code>ASSEMBLER</code> avant de pouvoir ex\u00e9cuter de nouveau votre programme. </p> </li> </ol> <p>Qu'obtient-on \u00e0 la fin de l'ex\u00e9cution ?</p> <ol> <li> <p>Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre <code>R1</code> \u00e0 la place du registre <code>R0</code>. Testez vos modifications en ex\u00e9cutant la simulation. </p> </li> <li> <p>Saisissez et testez le programme suivant :     </p><pre><code>MOV R0, #4\nSTR R0,30\nMOV R0, #8\nSTR R0,75\nLDR R0,30\nCMP R0, #10\nBNE 10\nMOV R0, #9\nSTR R0,75\nBRA 13\nLDR R0,30\nADD R0, #1\nSTR R0,30\nMOV R0, #6\nSTR R0,23\n</code></pre> <ol> <li>Quels sont les changements apport\u00e9s \u00e0 la m\u00e9moire apr\u00e8s avoir ex\u00e9cut\u00e9 ce code ?</li> <li>Que se passe-t-il apr\u00e8s l'ex\u00e9cution de la ligne <code>BNE 10</code> ? Pourquoi ?</li> <li>Modifier la premi\u00e8re ligne du code avec :     <pre><code>MOV R0, #10\n</code></pre>     Quels sont les changements apport\u00e9s \u00e0 la m\u00e9moire apr\u00e8s avoir ex\u00e9cut\u00e9 ce code ?</li> <li>Que se passe-t-il apr\u00e8s l'ex\u00e9cution de la ligne <code>BNE 10</code> ? Pourquoi ?</li> </ol> </li> <li> <p>Pour les courageux, voici un programme simple en Python :     </p><pre><code>x = 0\nwhile x &lt; 3 :\n    x = x+1\n</code></pre>     Traduisez-le en assembleur. </li> </ol>"},{"location":"NSI/Premiere/C05/Historique/","title":"Historique","text":""},{"location":"NSI/Premiere/C05/Historique/#petit-historique-de-linformatique","title":"Petit historique de l'informatique","text":""},{"location":"NSI/Premiere/C05/Historique/#informatique-une-definition","title":"Informatique : une d\u00e9finition","text":"<p>Informatique</p> <p>En 1957, l'ing\u00e9nieur allemand Karl Steinbuch cr\u00e9e le terme \u00ab Informatik \u00bb pour son essai intitul\u00e9 Informatik: Automatische Informationsverarbeitung, pouvant \u00eatre rendu en fran\u00e7ais par \u00ab Informatique : traitement automatique de l'information \u00bb.</p> <p>En 1966, l'Acad\u00e9mie fran\u00e7aise consacre l'usage officiel du mot pour d\u00e9signer la \u00ab science du traitement de l'information \u00bb. La presse, l'industrie et le milieu universitaire l'adoptent d\u00e8s cette \u00e9poque. </p> <p>D'apr\u00e8s Wikipedia, article Informatique</p> <p>L'informatique est donc, \u00e9tymologiquement, bien ant\u00e9rieure aux ordinateurs. Il s'agit de savoir comment les informations sont stock\u00e9es, sur quels supports, et comment elles sont trait\u00e9es.</p>"},{"location":"NSI/Premiere/C05/Historique/#pre-histoire-de-linformatique","title":"Pr\u00e9-histoire de l'informatique","text":"<p>Les premi\u00e8res traces laiss\u00e9es d\u00e9lib\u00e9r\u00e9ment et nous \u00e9tant parvenues par les \u00eatres humains sont les peintures rupestres. Elles gardent de nombreux myst\u00e8res, mais sont r\u00e9ellement des chefs-d'\u0153uvre de civilisations pass\u00e9es.   Les arch\u00e9o-anthropologues s'accordent actuellement sur le fait que des proto-\u00e9critures ont \u00e9t\u00e9 utilis\u00e9es, mais nous ne disposons actuellement pas de pierres de Rosette permettant de les d\u00e9crypter.  On trouve ensuite les gravures sur rochers, puis rapidement les tablettes d'argiles, etc.</p> <p></p> <p>Ces supports sont particuli\u00e8rement r\u00e9sistants, mais difficiles \u00e0 stocker et ne peuvent contenir que peu d'informations. </p> <p>Les syst\u00e8mes de comptages sont encore tr\u00e8s primitifs et peu optimis\u00e9s, du calculi (petits cailloux en latin), aux syst\u00e8mes de comptages cun\u00e9iformes sexag\u00e9simaux (en base \\(60\\)), dont nous avons h\u00e9rit\u00e9 pour notre d\u00e9compte des heures et des angles en degr\u00e9. On trouve rapidement cependant le syst\u00e8me des bouliers, d\u00e9couvert de mani\u00e8res ind\u00e9pendantes par de multiples civilisations tout autour du globe.</p> <p></p> <p>Les supports de type papyrus, v\u00e9lins (peau) et papiers sont probablement tr\u00e8s anciens, mais ils se d\u00e9gradent facilement, sont sensibles aux incendies, etc. Leurs difficult\u00e9s de conservation sont cependant contrebalanc\u00e9es par la plus grande facilit\u00e9 \u00e0 les travailler. Ils deviennent d\u00e8s l'antiquit\u00e9 le support privil\u00e9gi\u00e9 pour transmettre et conserver des informations, dans toutes les grandes civilisations.</p> <p></p> <p>La machine d'Anticyth\u00e8re, d\u00e9couverte en 1900 et dat\u00e9e de 87 avant J.C. est une machine servant \u00e0 calculer les positions astronomiques, et donc \u00e0 naviguer. Elle nous montre que le calcul a toujours un enjeu capital, et que l'humanit\u00e9 a fait preuve d'une tr\u00e8s grande ing\u00e9niosit\u00e9 pour am\u00e9liorer ses capacit\u00e9s de calculs (une tr\u00e8s bonne vid\u00e9o en anglais est disponible ici).</p> <p></p> <p>Jusqu'\u00e0 la fin de l'\u00e9poque m\u00e9di\u00e9vale, la possibilit\u00e9 la plus r\u00e9pandue pour obtenir un manuscrit \u00e9tait de le recopier \u00e0 la main - d'o\u00f9 la grande importance des moines-copistes et des monast\u00e8res qui s'y consacraient dans la sph\u00e8re d'influence occidentale. Cependant, le proc\u00e9d\u00e9 de xylographie (principe du tampon encreur avec une matrice en bois), ainsi que des proc\u00e9d\u00e9s simplifi\u00e9s de fabrication du papier transitent avec la grande horde mongole par l'interm\u00e9diaire de la route de la soie. Vers 1430, Johannes Gutenberg invente le principe de la presse \u00e0 imprimer \u00e0 caract\u00e8res mobiles, et facilite grandement la copie d'\u0153uvres \u00e9crites. Une nouvelle \u00e8re de d\u00e9veloppement de la science et des id\u00e9es se r\u00e9pand sur l'Europe.</p> <p></p> <p>Les sciences se d\u00e9veloppent rapidement, les chiffres dits arabes remplacent les peu efficaces chiffres romains. Les techniques de calculs \u00e9voluent, mais restent effectu\u00e9es au boulier o\u00f9 \u00e0 la main. Au XVII\u00e8me si\u00e8cle, Blaise Pascal, scientifique et penseur fran\u00e7ais, invente \u00e0 19 ans une machine \u00e0 calculer pour aider son p\u00e8re \u00e0 remettre de l'ordre dans les recettes fiscales d'une province fran\u00e7aise. Cette machine, la pascaline, \u00e9tait capable d'effecteur des op\u00e9rations \u00e9l\u00e9mentaires par l'interm\u00e9diaire d'un ing\u00e9nieux syst\u00e8me d'engrenages. Cependant, la pr\u00e9cision n\u00e9cessaire \u00e0 la r\u00e9alisation de ces engrenages en a rendu la conception extr\u00eamement couteuse, et peu de machines furent produites.</p> <p></p> <p>Gottfried Leibniz est un penseur allemand. Il fait progresser la philosophie, les math\u00e9matiques, la physique et l'ing\u00e9nierie tout autant que son homologue fran\u00e7ais. Il am\u00e9liore la pascaline, et l'utilise pour le calcul diff\u00e9rentiel.</p> <p>En 1725, Basile Bouchon, un Lyonnais, met au point le premier syst\u00e8me de programmation d\u2019un m\u00e9tier \u00e0 tisser gr\u00e2ce \u00e0 un ruban perfor\u00e9. En 1728, Jean-Baptiste Falcon, son assistant, remplace le ruban par une s\u00e9rie de cartes perfor\u00e9es reli\u00e9es entre elles. Jacques de Vaucanson reprend cette id\u00e9e en rempla\u00e7ant ruban et cartes perfor\u00e9es par un cylindre m\u00e9tallique et enfin Joseph Marie Jacquard lie le tout dans son m\u00e9tier \u00e0 tisser qui fut adopt\u00e9 dans le monde entier \u00e0 partir de 1801. </p> <p></p> <p>Ces cartes perfor\u00e9es sont les premiers exemples de supports de stockages permettant de stocker d'autres informations que l'\u00e9crit ou l'image. En effet, ces cartes sont utilis\u00e9es dans les orgues de barbarie pour repr\u00e9senter de la musique, et sur les m\u00e9tiers Jacquard afin d'y repr\u00e9senter des motifs de tissage.</p> <p>Les m\u00e9tiers \u00e0 tisser Jacquard sont la pointe de la technologie. Ils utilisent les cartes perfor\u00e9es pour r\u00e9aliser des motifs complexes, et sont donc \\\u00ab programmables \u00bb par l'introduction de nouvelles cartes.</p> <p></p>"},{"location":"NSI/Premiere/C05/Historique/#les-machines-a-calculer","title":"Les machines \u00e0 calculer","text":"<p>Au XIX\u00e8me si\u00e8cle, l'Empire Britannique est \u00e0 son apog\u00e9e et sa puissance repose sur sa force navale, aussi bien commerciale que militaire. Or \u00e0 bord d'un navire la navigation se fait toujours aux \u00e9toiles et par l'interm\u00e9diaire de cartes marines de plus en plus d\u00e9taill\u00e9es. Un navigateur \u00e0 cette \u00e9poque utilise quotidiennement des tables de navigations, qui ne sont rien d'autre que des tables de trigonom\u00e9trie et de logarithmes. Et ces tables sont \u00e9tablies et calcul\u00e9es \u00e0 la main et sont loin d'\u00eatre exemptes d'erreurs de calcul. En 1833 - 1834, le math\u00e9maticien anglais Charles Babbage imagine une machine utilisant des cartes perfor\u00e9es qui permettrait d'effectuer des calculs scientifiques, la machine analytique (Differential engine). Cette machine ne sera jamais op\u00e9rationnelle du vivant de Babbage.</p> <p>Ada Lovelace (1815 - 1852), est une math\u00e9maticienne anglaise. Travaillant avec Charles Babbage, elle imagine pouvoir faire jouer de la musique, afficher des chiffres et des lettres avec la machine analytique. Elle d\u00e9crit, plus d'un si\u00e8cle avant son invention, l'ordinateur : \u00ab La machine analytique n'a nullement la pr\u00e9tention de cr\u00e9er quelque chose par elle-m\u00eame. Elle peut ex\u00e9cuter tout ce que nous saurons lui ordonner d'ex\u00e9cuter. Elle peut suivre une analyse ; mais elle n'a pas la facult\u00e9 d'imaginer des relations analytiques ou des v\u00e9rit\u00e9s. Son r\u00f4le est de nous aider \u00e0 effectuer ce que nous savons d\u00e9j\u00e0 dominer. \u00bb</p> <p></p> <p>Vers 1842 elle \u00e9crit des algorithmes pour r\u00e9aliser un programme informatique et toutes les instructions \u00e0 donner \u00e0 la machine, jusqu'aux positions des rouages. Elle invente les concepts de boucle et de branchements conditionnels et devient ainsi la premi\u00e8re programmeuse.</p> <p>L'apparition de l'\u00e9lectricit\u00e9 comme source d'\u00e9nergie va rapidement permettre le d\u00e9veloppement de moteurs qui am\u00e9liorent les machines \u00e0 calculer. \u00c0 la fin du XIX\u00e8me si\u00e8cle, Herman Holerith con\u00e7oit une machine utilisant des cartes perfor\u00e9es qui permet de simplifier le recensement de la population arrivant \u00e0 New-York. Il fonde une soci\u00e9t\u00e9 qui prendra rapidement le nom d'IBM. Les machines \u00e0 calculer \u00e9lectromagn\u00e9tiques se d\u00e9veloppent rapidement, et en parall\u00e8le les math\u00e9matiques progressent \u00e0 grand pas. </p> <p></p> <p>Math\u00e9maticien et cryptologue britannique (1912-1954), Alan Turing a d'abord travaill\u00e9 sur l'id\u00e9e de calculabilit\u00e9. Il montre que ce qui est calculable peut se d\u00e9composer en un nombre fini d'\u00e9tapes et peut de ce fait \u00eatre r\u00e9alis\u00e9 par une machine. Il imagine \u00e0 la fin des ann\u00e9es 1930 un calculateur, mais celui-ci ne sera construit que 20 ans plus tard. Il imagine le moyen pour une machine de reproduire certaines actions humaines : \u00ab Je crois que dans une cinquantaine d\u2019ann\u00e9es, il sera possible de programmer des ordinateurs, avec une capacit\u00e9 de m\u00e9moire d\u2019\u00e0 peu pr\u00e8s \\(10^9\\), pour les faire si bien jouer au jeu de l\u2019imitation qu\u2019un interrogateur moyen n\u2019aura pas plus de 70 pour cent de chances de proc\u00e9der \u00e0 l\u2019identification exacte apr\u00e8s cinq minutes d\u2019interrogation. \u00bb</p> <p>Lors de la seconde guerre mondiale, Alan Turing coordonne l'\u00e9quipe charg\u00e9e du d\u00e9codage de la machine Enigma utilis\u00e9e par les Nazis. Il construit une machine, le Colossus Mark II, surnomm\u00e9e \\\u00ab La bombe \u00bb, qui permet le d\u00e9chiffrement rapide des messages allemands. Cette machine peut \u00eatre consid\u00e9r\u00e9e comme le premier ordinateur \u00e9lectronique, mais elle \u00e9tait difficilement reprogrammable, car il fallait re-c\u00e2bler pour changer de programme.</p> <p></p>"},{"location":"NSI/Premiere/C05/Historique/#de-lelectronique-a-la-micro-informatique","title":"De l'\u00e9lectronique \u00e0 la micro-informatique","text":"<p>L'\u00e9lectronique nait de l'invention des tubes \u00e0 vides au d\u00e9but du XX\u00e8me si\u00e8cle. La machine Colossus, cr\u00e9\u00e9e entre 1943 et 1945 (mais dont l'existence ne fur r\u00e9v\u00e9l\u00e9e qu'en 1970) utilise ces tubes \u00e0 vides.</p> <p></p> <p>L'ENIAC est cr\u00e9\u00e9 en 1944 d'une id\u00e9e de John William Mauchly, aid\u00e9 pour la r\u00e9solution des probl\u00e8mes d'ing\u00e9nierie par J. Presper Eckert. Il sert \u00e0 calculer des trajectoires balistiques et est financ\u00e9 par l'arm\u00e9e am\u00e9ricaine, pour un cout important, les tubes \u00e0 vides ayant une f\u00e2cheuse tendance \u00e0 voir leur dur\u00e9e de vie fortement limit\u00e9e. L'ENIAC est surtout connu pour son c\u00f4t\u00e9 colossal : 30 tonnes, \\(167 ~m^2\\) de surface au sol. </p> <p></p> <p>Il est cependant d'un grand secours pour les calculs balistiques dont les calculs sont fastidieux. Par exemple voici le temps de calcul pour une table de tir :</p> Moyen Temps A la main 2,6 j Avec une machine \u00e0 calculer 12 h Model 5 (concurrent de l'ENIAC) 40 min ENIAC 3 s PC moderne &lt;30  \u00b5s <p>Entre \\(1944\\) et \\(1955\\), six femmes, Kathleen Antonelli, Jean Bartik, Betty Holberton, Marlyn Meltzer, Frances Spence et Ruth Teitelbaum sont les premi\u00e8res personnes \u00e0 programmer l'ENIAC, pour un calcul balistique. Elles sont toutes math\u00e9maticiennes. Kathleen Antonelli et Frances Spence sont recrut\u00e9es en 1942 par l\u2019arm\u00e9e am\u00e9ricaine pour calculer manuellement les trajectoires de tir. Marlyn Meltzer et Ruth Teitelbaum sont \u00e9galement calculatrices. Elles travaillent sur l'ENIAC \u00e0 partir de 1944. Il s'agit d'identifier les diff\u00e9rentes \u00e9tapes du calcul et ensuite de c\u00e2bler physiquement la machine. Ruth Teitelbaum, Frances Spence et Kathleen Antonelli poursuivirent leur travail sur l\u2019Eniac lorsque celui-ci est transf\u00e9r\u00e9 \u00e0 Aberdeen en 1947.</p> <p>Le transistor est invent\u00e9 en \\(1947\\), et il remplace rapidement les tubes \u00e0 vides \u00e0 partir du milieu des ann\u00e9es \\(1950\\), le cout de fabrication d'un transistor commen\u00e7ant \u00e0 \u00eatre plus faible que celui d'un tube \u00e0 vide.</p> <p></p> <p>D\u00e8s \\(1958\\) apparaissent les premiers circuits int\u00e9gr\u00e9s, et en \\(1971\\) le premier microprocesseur commercial voit le jour : c'est l'Intel 4004. Les machines sont d\u00e9sormais miniaturis\u00e9es, fiables et leur cout de fabrication d\u00e9croit fortement. L'informatique s'ouvre aux particuliers.</p> <p></p> <p>De multiples machines sont commercialis\u00e9es : l\u2019Altair 8008, l\u2019Apple II (1977), l\u2019IBM PC (1981), le ZX 81 (1981), le commodore 64  (1982), le Macintosh (1984) ... Le ZX 81 est consid\u00e9r\u00e9 \u00e0 son \u00e9poque comme le premier ordinateur familial en kit en France, sa r\u00e9solution et sa capacit\u00e9 m\u00e9moire (1 ko) ne permettait pas \u00e9norm\u00e9ment de prouesses au niveau des jeux.</p> <p>De nombreuses soci\u00e9t\u00e9s se lancent dans la production de machines familiales \u00e0 partir du d\u00e9but des ann\u00e9es \\(1980\\), et l'informatique rentre \u00e0 l'\u00e9cole et commence \u00e0 y \u00eatre enseign\u00e9e, en particulier sur les machines Thomson en France, comme le TO7, le MO5...</p>"},{"location":"NSI/Premiere/C05/Historique/#les-consoles-de-jeu","title":"Les consoles de jeu","text":"<p>Si les consoles de jeu sont pr\u00e9sentes depuis le d\u00e9but des ann\u00e9es 1970 - la console Odyssey est la premi\u00e8re console \u00e0 pouvoir \u00eatre branch\u00e9e sur l'\u00e9cran de la t\u00e9l\u00e9vision d\u00e8s 1972, les jeux vid\u00e9os restent souvent cantonn\u00e9s dans les salles d'arcades, o\u00f9 les bornes fleurissent \u00e0 c\u00f4t\u00e9s des flippers et billards.</p> <p>\u00c0 la fin des ann\u00e9es 1970 et au d\u00e9but des ann\u00e9es 1980, le march\u00e9 des consoles de jeu est florissant, avec pas moins de 744 mod\u00e8les diff\u00e9rents de consoles rien que pour l'ann\u00e9e 1977, dont certaines telles l'Atari 260, la console Vectrex ou bien la console Videopac ont un certain succ\u00e8s en France.</p> <p></p> <p>Le crack du jeu vid\u00e9o de 1983 m\u00e8nera \u00e0 une forte r\u00e9duction du nombre d'acteurs sur le march\u00e9 des consoles, jusqu'\u00e0 l'arriv\u00e9e en 1986 de la console Nintendo NES qui bat tous les records de ventes.</p> <p></p>"},{"location":"NSI/Premiere/C05/Historique/#langages-informatiques","title":"Langages Informatiques","text":""},{"location":"NSI/Premiere/C05/Historique/#histoire-des-langages","title":"Histoire des langages","text":"<p>Les premiers ordinateurs ex\u00e9cutaient d\u00e9j\u00e0 du code binaire et les premiers programmes \u00e9taient \u00e9crits sur des cartes perfor\u00e9es, \u00e0 la main, directement en code binaire. Ils \u00e9taient donc particuli\u00e8rement longs \u00e0 produire et le risque d'erreur \u00e9tait grand.</p> <p>En \\(1954\\), IBM d\u00e9veloppe le premier langage assembleur. Il sert d'interm\u00e9diaire entre l'algorithme (<code>pour i allant de ...</code>) et le langage machine (<code>001011001...</code>). C'est un langage de tr\u00e8s bas niveau (proche de la machine, encore tr\u00e8s complexe \u00e0 comprendre par un humain).</p> <p>Exemple de programmation en assembleur: calcul du PGCD de 56 et 42</p> Programme en assembleur\u00c9quivalent Python <pre><code>main    MOV R1, #56\nPSH R1\nMOV R2, #42\nPSH R2\nPSH R7\nJMS PGCD\nPOP R7\nPOP R2\nPOP R1\nOUT R0,5\nHLT\n\nPGCD    LDR R1,2(SP)\nLDR R2,1(SP)\nPSH R1 PSH R2 MOV R7,LR PSH R7\nMOV R7, SP PSH R7\n\nWhile   POP R7 MOV SP,R7\nPOP R7\nMOV LR,R7\nPOP R2\nPOP R1\nCMP R2,#0\nBNE Corps\nMOV R0,R1\nRET\nCorps   MOD R1,R2\nPSH R2\nPSH R1\nMOV R7,LR PSH R7\nMOV R7, SP PSH R7\nBRA While\n</code></pre> <pre><code>def pgcd(a,b):\n    while b!=0 :\n        r=a%b\n        a,b=b,r\n    return a\n\npgcd(56,42)\n</code></pre> <p>En parall\u00e8le, Gr\u00e2ce Hopper d\u00e9veloppe le premier compilateur(c'est-\u00e0-dire un programme transformant un code source en code binaire) pour le langage informatique FORTRAN d'IBM, et ce langage est finalis\u00e9 en \\(1956\\). Suivent ensuite les langages LISP(\\(1958\\)), ALGOL(\\(1958\\)), COBOL(\\(1959\\)) puis le BASIC en \\(1964\\).</p> <p></p> <p>Puis de \\(1970\\) \u00e0 \\(1980\\) : le C (\\(1972\\)), le ML (\\(1973\\)) dont est issu Caml, Ada (\\(1983\\)) et C++ (\\(1986\\)).</p> <p>Le langage C, invent\u00e9 au cours de l'ann\u00e9e 1972 dans les Laboratoires Bell, en m\u00eame temps qu'Unix par Dennis Ritchie et Ken Thompson puis C++ sont des langages rapidement adopt\u00e9s par la communaut\u00e9 des programmeurs. Rapides, \u00e0 la syntaxe lisibles, ils sont toujours utilis\u00e9s pour la construction d'applications et autres programmes.</p> <p>Exemple de code C</p> <pre><code>#include &lt;stdio.h&gt; /* inclusion en t\u00eate du programme du fichier biblioth\u00e8que \nC/UNIX stdio.h \n*/ int somme(int, int);          /* D\u00e9claration d'une fonction somme */ main() { int a,b,s; scanf(\"%d%d\", &amp;a,&amp;b);  /* lecture des deux entiers */ s = somme (a,b);       /* appel de la fonction somme */ printf(\" Voici leur somme : %d\\n\", s); } /* La fonction somme avec deux param\u00e8tres formels x et y */ int somme (int x, int y) { return (x+y); }\n</code></pre> <p>En \\(1989\\), Guido van Rossum cr\u00e9e \u00e0 partir de C le langage Python, qui devient le langage de script de r\u00e9f\u00e9rence. </p> <p></p> <p>En \\(1995\\), Javascript s'impose dans les navigateurs, et depuis le nombre de langages n'a cess\u00e9 de progresser. Voici d'ailleurs une vid\u00e9o montrant la pr\u00e9valence des langages de 1965 \u00e0 2019 :</p>"},{"location":"NSI/Premiere/C05/Historique/#langages-interpretes-vs-langages-compiles","title":"Langages interpr\u00e9t\u00e9s vs langages compil\u00e9s.","text":"<p>Pour comprendre la diff\u00e9rence entre langages interpr\u00e9t\u00e9s et langages compil\u00e9s, un petit tour sur FranceIOI.</p>"},{"location":"NSI/Premiere/C06/CSV/","title":"Les fichiers CSV","text":""},{"location":"NSI/Premiere/C06/CSV/#fichiers-csv-traitement-des-donnees-en-tables","title":"Fichiers CSV : Traitement des donn\u00e9es en tables","text":""},{"location":"NSI/Premiere/C06/CSV/#donnees-en-tables","title":"Donn\u00e9es en tables","text":"<p>Une des utilisations principales de l\u2019informatique de nos jours est le traitement de quantit\u00e9s importantes de donn\u00e9es dans des domaines tr\u00e8s vari\u00e9s :</p> <ul> <li>un site de commerce en ligne peut avoir \u00e0 g\u00e9rer des bases donn\u00e9es pour des dizaines de milliers d\u2019articles en vente, de clients, de commandes ;</li> <li>un h\u00f4pital doit pouvoir acc\u00e9der efficacement \u00e0 tous les d\u00e9tails de traitements de ses patients ;</li> <li>un \u00e9diteur de jeux vid\u00e9o doit pouvoir stocker les informations relatives \u00e0 chaque joueur et chaque \u00e9l\u00e9ment du jeu ;</li> <li>etc \u2026</li> </ul> <p>De tels traitements requierent souvent des logiciels de gestion de base de donn\u00e9es (SGDB), qui sont des programmes hautement sp\u00e9cialis\u00e9s pour effectuer ce genre de t\u00e2ches le plus efficacement et s\u00fbrement possible. L'\u00e9tude plus d\u00e9taill\u00e9e des SGBD est au programme de terminale. Il est cependant facile de mettre en \u0153uvre les op\u00e9rations de bases sur certaines structures dans un langage de programmation comme Python.</p> <p>Il est en effet possible que de simples jeus de donn\u00e9es soient organis\u00e9s en tables. En informatique, une table de donn\u00e9es correspondent \u00e0 une liste de p-uplets nomm\u00e9s qui partagent les m\u00eames descripteurs. </p> <p>Exemple</p> <p>Par exemple on peut consid\u00e9rer la table suivante :</p> Nom Rang Couleur du sabre Luke Skywalker Apprenti/Maitre Jedi Vert Anakin Skywalker Apprenti Jedi Bleu Yoda Maitre Jedi Vert Conte Dooku Seigneur Sith Ecarlate Darth Vader Apprenti Sith Ecarlate Rey Apprentie Jedi Jaune <p>Chacune des lignes, appel\u00e9e aussi enregistrement, est un  p-uplet nomm\u00e9 de taille 3. Chaque enregistrement correspond donc \u00e0 un dictionnaire en Python. La premi\u00e8re ligne correspond \u00e0 :</p> <pre><code>{'Nom' : 'Luke Skywalker', 'Rang' :'Apprenti/Maitre Jedi', 'Couleur du sabre' : 'Vert'}\n</code></pre>"},{"location":"NSI/Premiere/C06/CSV/#fichiers-csv","title":"Fichiers CSV","text":"<p>Le format CSV (pour Comma Separated Values, soit en fran\u00e7ais valeurs s\u00e9par\u00e9es par des virgules) est un format tr\u00e8s pratique pour repr\u00e9senter des donn\u00e9es structur\u00e9es.</p> <p>Dans ce format, chaque ligne repr\u00e9sente un enregistrement et, sur une m\u00eame ligne, les diff\u00e9rents champs de l\u2019enregistrement sont s\u00e9par\u00e9s par une virgule (d\u2019o\u00f9 le nom).</p> <p>Pour des raisons pratiques, il est possible en fait de sp\u00e9cifier le caract\u00e8re de s\u00e9paration entre chaque champ, qui peut donc \u00eatre <code>:</code>, <code>;</code>, <code>/</code>, etc...</p> <p>Nous allons dans la suite de cette partie utiliser un fichier nomm\u00e9 <code>countries.csv</code>, t\u00e9l\u00e9chargeable ici.</p> <p>Exercice 1</p> <p>Une fois le fichier t\u00e9l\u00e9charg\u00e9, vous pouvez l'ouvrir avec <code>Notepad ++</code>.</p> Enonc\u00e9R\u00e9ponses <ol> <li>Quel est le symbole utilis\u00e9 pour s\u00e9parer les champs ?</li> <li>Combien de champs diff\u00e9rents sont pr\u00e9sents et quesl sont leurs descripteurs ?</li> <li>Il est aussi possible d'utiliser un tableur comme <code>LibreOffice.Calc</code> pour lire un fichier CSV. Vous pourrez constater que <code>LibreOffice.Calc</code> vous demande un certain nombre d'informations sur le contenu du fichier avant de l'ouvrir r\u00e9ellement. Quels int\u00e9r\u00eat voyez-vous \u00e0 l'utilisation d'un tableur ? Quelles en sont les limites ?     </li> </ol> <ol> <li>C'est le point-virgule</li> <li> <p>Il y a 8 champs dont les descripteurs sont :</p> <ul> <li>ISO</li> <li>Name</li> <li>Capital_Id</li> <li>Area</li> <li>Population</li> <li>Continent</li> <li>Currency_Code</li> <li>Currency_Name</li> </ul> </li> <li> <p>Le tableur permet de visualiser rapidement les descripteurs et les donn\u00e9es, quand elles ne sont pas trop nombreuses. Un tableur est limit\u00e9 a 1 000 000 de lignes, alors qu'un fichier CSV n'est pas limit\u00e9 (ce qui n'emp\u00eache pas des probl\u00e8mes li\u00e9es \u00e0 la quantit\u00e9 de m\u00e9moire de l'ordinateur).</p> </li> </ol>"},{"location":"NSI/Premiere/C06/CSV/#module-csv","title":"Module CSV","text":""},{"location":"NSI/Premiere/C06/CSV/#lecture-de-base","title":"Lecture de base","text":"<p>Un fichier <code>csv</code> \u00e9tant un fichier texte, il est tout \u00e0 fait possible de lire les donn\u00e9es gr\u00e2ce aux m\u00e9thodes classiques des fichiers(voir ici) :</p> <pre><code>&gt;&gt;&gt; with open('countries.csv','r',encoding='utf8',newline='') as file:\n        contenu = file.readlines()\n        print(contenu)\n</code></pre> <p>Le r\u00e9sultat est peu lisible, et difficilement exploitable ainsi. Mais il est tout \u00e0 fait possible de reconstituer correctement chaque enregistrement, en utilisant des m\u00e9thodes de chaines de caract\u00e8res (on se limite aux 5 premiers enregistrelments pour des raisons de lisbilit\u00e9s dans l'interpr\u00e9teur) :</p> <p></p><pre><code>&gt;&gt;&gt; formatedContent=[]\n&gt;&gt;&gt; for line in contenu[ :5] :\n        formatedContent.append(line.replace('\\r\\n','').split(';'))\n</code></pre> On peut alors r\u00e9cup\u00e9rer les descripteurs : <pre><code>&gt;&gt;&gt; formatedContent[0]\n['ISO',\n 'Name',\n 'Capital_Id',\n 'Area',\n 'Population',\n 'Continent',\n 'Currency_Code',\n 'Currency_Name']\n</code></pre> <p>Et le premier enregistrement :</p> <pre><code>&gt;&gt;&gt; formatedContent[1]\n['AD', 'Andorra', '3041563', '468', '84000', 'EU', 'EUR', 'Euro']\n</code></pre> <p>Cependant cette solution n'est pas des plus efficace, car le lien entre descripteurs et valeurs n'est pas direct.</p>"},{"location":"NSI/Premiere/C06/CSV/#lire-un-fichier-csv-premiers-traitements","title":"Lire un fichier CSV, premiers traitements","text":"<p>Dans la suite du cours, il sera n\u00e9cessaire d'adapter au fur et \u00e0 mesure un fichier python !</p> <p>Le module <code>csv</code>  est un des modules pr\u00e9sents dans toute installation Python. Comme tout module, il est disponible par import direct :</p> <pre><code>import csv\n</code></pre> <p>Une fois import\u00e9, il offre de nombreuses possibilit\u00e9s, d\u00e9crites dans la doc Python, dont la m\u00e9thode <code>DictReader</code> qui permet der r\u00e9cup\u00e9rer les enregistrements sous la forme d'un dictionnaire ordonn\u00e9 :</p> <pre><code>countries = []\nwith open('countries.csv', 'r', encoding='utf8', newline='') as file :\n    reader = csv.DictReader(file, delimiter=\";\") # L'objet reader est un it\u00e9rable. On pr\u00e9cise le delimiteur \u00e0 l'appel de DictReader\n    for line in reader :\n        countries.append(line)\n</code></pre> <p>La variable <code>countries</code> fait donc r\u00e9f\u00e9rence \u00e0 une liste de dictionnaires, ayant tous les m\u00eames descripteurs. Une fois le programme ex\u00e9cut\u00e9, on peut donc tester dans le shell les comandes suivantes :</p> <pre><code>&gt;&gt;&gt; countries[:5]\n[{    [{'ISO': 'AD',\n  'Name': 'Andorra',\n  'Capital_Id': '3041563',\n  'Area': '468',\n  'Population': '84000',\n  'Continent': 'EU',\n  'Currency_Code': 'EUR',\n  'Currency_Name': 'Euro'},\n {'ISO': 'AE',\n  'Name': 'United Arab Emirates',\n  'Capital_Id': '292968',\n  'Area': '82880',\n  'Population': '4975593',\n  'Continent': 'AS',\n  'Currency_Code': 'AED',\n  'Currency_Name': 'Dirham'},\n {'ISO': 'AF',\n  'Name': 'Afghanistan',\n  'Capital_Id': '1138958',\n  'Area': '647500',\n  'Population': '29121286',\n  'Continent': 'AS',\n  'Currency_Code': 'AFN',\n  'Currency_Name': 'Afghani'},\n {'ISO': 'AG',\n  'Name': 'Antigua and Barbuda',\n  'Capital_Id': '3576022',\n  'Area': '443',\n  'Population': '86754',\n  'Continent': 'NA',\n  'Currency_Code': 'XCD',\n  'Currency_Name': 'Dollar'},\n {'ISO': 'AI',\n  'Name': 'Anguilla',\n  'Capital_Id': '3573374',\n  'Area': '102',\n  'Population': '13254',\n  'Continent': 'NA',\n  'Currency_Code': 'XCD',\n  'Currency_Name': 'Dollar'}]\n</code></pre> <p>On peut bien entendu conna\u00eetre le nombre d'enregistrements contenus dans la variable countries :</p> <pre><code>&gt;&gt;&gt; len(countries)\n243\n</code></pre> <p>On peut alors interroger cette variable \u00e0 partir des descripteurs. Par exemple, nous pouvons chercher \u00e0 obtenir la liste des pays dont la devise est en euro :</p> <pre><code>&gt;&gt;&gt; [c['Name'] for c in countries if c['Currency_Code'] == 'EUR']\n['Andorra',\n 'Austria',\n 'Aland Islands',\n 'Belgium',\n 'Saint Barthelemy',\n 'Cyprus',\n 'Germany',\n 'Estonia',\n 'Spain',\n 'Finland',\n 'France',\n 'French Guiana',\n 'Guadeloupe',\n 'Greece',\n 'Ireland',\n 'Italy',\n 'Kosovo',\n 'Lithuania',\n 'Luxembourg',\n 'Latvia',\n 'Monaco',\n 'Montenegro',\n 'Saint Martin',\n 'Martinique',\n 'Malta',\n 'Netherlands',\n 'Saint Pierre and Miquelon',\n 'Portugal',\n 'Reunion',\n 'Slovenia',\n 'Slovakia',\n 'San Marino',\n 'French Southern Territories',\n 'Vatican',\n 'Mayotte']\n</code></pre> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <ol> <li> <p>\u00c9crire une compr\u00e9hension de listes permettant de lister les codes de toutes les monnaies qui s\u2019appellent <code>\u2018Dollar\u2019</code>.</p> </li> <li> <p>\u00c9crire une compr\u00e9hension de listes permettant de lister les pays du continent Nord-Am\u00e9ricain, sous la forme <code>Nom, Superficie, Population</code></p> </li> </ol> <ol> <li> <p>Le code :</p> <pre><code>&gt;&gt;&gt; [c['Currency_Code'] for c in countries if c['Currency_Name'] == 'Dollar']\n['XCD', 'XCD', 'USD', 'AUD', 'BBD', 'BMD', 'BND', 'BSD', 'BZD','CAD', 'AUD',\n'NZD', 'AUD', 'XCD', 'USD', 'FJD', 'USD', 'XCD', 'USD', 'GYD', 'HKD', 'JMD',\n'AUD', 'XCD', 'KYD', 'XCD', 'LRD', 'USD', 'USD', 'XCD', 'NAD', 'AUD', 'AUD',\n'NZD', 'NZD', 'NZD', 'USD', 'USD', 'SBD', 'SGD', 'SRD', 'USD', 'USD', 'USD',\n'TTD', 'AUD', 'TWD', 'USD', 'XCD', 'USD', 'USD', 'ZWL']\n</code></pre> </li> <li> <p>Le code :     </p><pre><code>&gt;&gt;&gt; [c['Name'] for c in countries if c['Continent']=='NA']\n    ['Antigua and Barbuda',\n 'Anguilla',\n 'Aruba',\n 'Barbados',\n 'Saint Barthelemy',\n 'Bermuda',\n 'Bahamas',\n 'Belize',\n 'Canada',\n 'Costa Rica',\n 'Cuba',\n 'Curacao',\n 'Dominica',\n 'Dominican Republic',\n 'Grenada',\n 'Greenland',\n 'Guadeloupe',\n 'Guatemala',\n 'Honduras',\n 'Haiti',\n 'Jamaica',\n 'Saint Kitts and Nevis',\n 'Cayman Islands',\n 'Saint Lucia',\n 'Saint Martin',\n 'Martinique',\n 'Montserrat',\n 'Mexico',\n 'Nicaragua',\n 'Panama',\n 'Saint Pierre and Miquelon',\n 'Puerto Rico',\n 'El Salvador',\n 'Sint Maarten',\n 'Turks and Caicos Islands',\n 'Trinidad and Tobago',\n 'United States',\n 'Saint Vincent and the Grenadines',\n 'British Virgin Islands',\n 'U.S. Virgin Islands']\n</code></pre> </li> </ol>"},{"location":"NSI/Premiere/C06/CSV/#les-donnees-numeriques","title":"Les donn\u00e9es num\u00e9riques","text":"<p>Comment faire pour lister les pays dont la superficie est inf\u00e9rieure \u00e0 300 km\u00b2 ? On pourrait penser \u00e0 \u00e9crire une compr\u00e9hension de liste identique \u00e0 celles \u00e9crites pr\u00e9c\u00e9dfemment :</p> <pre><code>&gt;&gt;&gt; [(c['Name'],c['Area']) for c in countries if c['Area']&lt;300]\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    &lt;ipython-input-13-6debe1b6bf11&gt; in &lt;module&gt;\n    ----&gt; 1 [(c['Name'],c['Area']) for c in countries if c['Area']&lt;300]\n\n\n    &lt;ipython-input-13-6debe1b6bf11&gt; in &lt;listcomp&gt;(.0)\n    ----&gt; 1 [(c['Name'],c['Area']) for c in countries if c['Area']&lt;300]\n\n\n    TypeError: '&lt;' not supported between instances of 'str' and 'int'\n</code></pre> <p>Mais nous avons un probl\u00e8me : les donn\u00e9es extraites d'un fichier <code>csv</code> sont toutes sous la forme de chaines de caract\u00e8res. Il faut donc transtyper certaines donn\u00e9es pour parvenir au r\u00e9sultat escompt\u00e9. D'apr\u00e8s les 5 premiers enregistrements, la superficie semble \u00eatre sous la forme d'un nombre entier, donc on teste :</p> <pre><code>&gt;&gt;&gt; [(c['Name'],c['Area']) for c in countries if int(c['Area'])&lt;300]\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    &lt;ipython-input-14-d2574c3771d7&gt; in &lt;module&gt;\n    ----&gt; 1 [(c['Name'],c['Area']) for c in countries if int(c['Area'])&lt;300]\n\n\n    &lt;ipython-input-14-d2574c3771d7&gt; in &lt;listcomp&gt;(.0)\n    ----&gt; 1 [(c['Name'],c['Area']) for c in countries if int(c['Area'])&lt;300]\n\n\n    ValueError: invalid literal for int() with base 10: '6.5'\n</code></pre> <p>Mais encore une fois un probl\u00e8me appar\u00e2it : les donn\u00e9es ne sont pas toutes transtypables sous la forme enti\u00e8re, chose que nous ne pouvions savoir avant de traiter. Il faut donc les convertir en flottant :</p> <pre><code>&gt;&gt;&gt; [(c['Name'],c['Area']) for c in countries if float(c['Area'])&lt;300]\n[('Anguilla', '102'),\n     ('American Samoa', '199'),\n     ('Aruba', '193'),\n     ('Saint Barthelemy', '21'),\n     ('Bermuda', '53'),\n     ('Cocos Islands', '14'),\n     ('Cook Islands', '240'),\n     ('Christmas Island', '135'),\n     ('Guernsey', '78'),\n     ('Gibraltar', '6.5'),\n     ('Jersey', '116'),\n     ('Saint Kitts and Nevis', '261'),\n     ('Cayman Islands', '262'),\n     ('Liechtenstein', '160'),\n     ('Monaco', '1.95'),\n     ('Saint Martin', '53'),\n     ('Marshall Islands', '181.3'),\n     ('Macao', '254'),\n     ('Montserrat', '102'),\n     ('Norfolk Island', '34.6'),\n     ('Nauru', '21'),\n     ('Niue', '260'),\n     ('Saint Pierre and Miquelon', '242'),\n     ('Pitcairn', '47'),\n     ('San Marino', '61.2'),\n     ('Sint Maarten', '21'),\n     ('Tuvalu', '26'),\n     ('Vatican', '0.44'),\n     ('British Virgin Islands', '153'),\n     ('Wallis and Futuna', '274')]\n</code></pre> <p>Exercice</p> Enonc\u00e9R\u00e9ponse <p>\u00c9crire une compr\u00e9hension de liste donnant le nom, le continent et la superficie des pays de plus de 100 millions d'habitants</p> <pre><code>&gt;&gt;&gt; [(c['Name'],c['Continent'],c['Area']) for c in countries if float(c['Population'])&gt;10**8]\n[('Bangladesh', 'AS', '144000'),\n('Brazil', 'SA', '8511965'),\n('China', 'AS', '9596960'),\n('Indonesia', 'AS', '1919440'),\n('India', 'AS', '3287590'),\n('Japan', 'AS', '377835'),\n('Mexico', 'NA', '1972550'),\n('Nigeria', 'AF', '923768'),\n('Pakistan', 'AS', '803940'),\n('Russia', 'EU', '17100000'),\n('United States', 'NA', '9629091')]     \n</code></pre>"},{"location":"NSI/Premiere/C06/CSV/#trier-les-donnees","title":"Trier les donn\u00e9es","text":"<p>Les r\u00e9sultats prec\u00e9dents sont encore peu lisibles, il serait pr\u00e9f\u00e9rable que les donn\u00e9es obtenues soient tri\u00e9es. On va utiliser la fonction built-in <code>sorted</code> :</p> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area']) for c in countries if float(c['Area'])&lt;300])\n    [('American Samoa', '199'),\n     ('Anguilla', '102'),\n     ('Aruba', '193'),\n     ('Bermuda', '53'),\n     ('British Virgin Islands', '153'),\n     ('Cayman Islands', '262'),\n     ('Christmas Island', '135'),\n     ('Cocos Islands', '14'),\n     ('Cook Islands', '240'),\n     ('Gibraltar', '6.5'),\n     ('Guernsey', '78'),\n     ('Jersey', '116'),\n     ('Liechtenstein', '160'),\n     ('Macao', '254'),\n     ('Marshall Islands', '181.3'),\n     ('Monaco', '1.95'),\n     ('Montserrat', '102'),\n     ('Nauru', '21'),\n     ('Niue', '260'),\n     ('Norfolk Island', '34.6'),\n     ('Pitcairn', '47'),\n     ('Saint Barthelemy', '21'),\n     ('Saint Kitts and Nevis', '261'),\n     ('Saint Martin', '53'),\n     ('Saint Pierre and Miquelon', '242'),\n     ('San Marino', '61.2'),\n     ('Sint Maarten', '21'),\n     ('Tuvalu', '26'),\n     ('Vatican', '0.44'),\n     ('Wallis and Futuna', '274')]\n</code></pre> <p>On obtient bien une liste tri\u00e9e, mais par ordre alphab\u00e9tique, ce qui est peu pertinent. En effet, pour trier une table, il faut pr\u00e9ciser selon quels crit\u00e8res.</p> <p>On va donc passer un argument suppl\u00e9mentaire \u00e0 la fonction <code>sorted</code> : une cl\u00e9 de tri. Dans Python, la cl\u00e9 doit \u00eatre une fonction permettant d'extraire la valeur \u00e0 trier. On va donc cr\u00e9er une fonction qui va renvoyer la valeur voulue selon l'enrtegistrement pass\u00e9 en param\u00e8tre. Ici on va passer un tuple <code>(Nom;Superficie)</code> et on veut donc trier selon l'\u00e9l\u00e9ment d'indice 1 :</p> <pre><code>def areaKey(c):\n    return float(c[1])\n</code></pre> <p>Puis on va passer cette fonction \u00e0 la fonction <code>sorted</code> :</p> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area']) for c in countries if float(c['Area'])&lt;300],key = areaKey)\n[('Vatican', '0.44'),\n     ('Monaco', '1.95'),\n     ('Gibraltar', '6.5'),\n     ('Cocos Islands', '14'),\n     ('Saint Barthelemy', '21'),\n     ('Nauru', '21'),\n     ('Sint Maarten', '21'),\n     ('Tuvalu', '26'),\n     ('Norfolk Island', '34.6'),\n     ('Pitcairn', '47'),\n     ('Bermuda', '53'),\n     ('Saint Martin', '53'),\n     ('San Marino', '61.2'),\n     ('Guernsey', '78'),\n     ('Anguilla', '102'),\n     ('Montserrat', '102'),\n     ('Jersey', '116'),\n     ('Christmas Island', '135'),\n     ('British Virgin Islands', '153'),\n     ('Liechtenstein', '160'),\n     ('Marshall Islands', '181.3'),\n     ('Aruba', '193'),\n     ('American Samoa', '199'),\n     ('Cook Islands', '240'),\n     ('Saint Pierre and Miquelon', '242'),\n     ('Macao', '254'),\n     ('Niue', '260'),\n     ('Saint Kitts and Nevis', '261'),\n     ('Cayman Islands', '262'),\n     ('Wallis and Futuna', '274')]\n</code></pre> Fonctions anonymes <p>Pour information, il est possible de ne pas d\u00e9clarer la fonction de tri avant de l'utiliser, en utilisant une fonction anonyme :</p> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area']) for c in countries if float(c['Area'])&lt;300],key = lambda x : float(x[1]))\n[('Vatican', '0.44'),\n     ('Monaco', '1.95'),\n     ('Gibraltar', '6.5'),\n     ('Cocos Islands', '14'),\n     ('Saint Barthelemy', '21'),\n     ('Nauru', '21'),\n     ('Sint Maarten', '21'),\n     ('Tuvalu', '26'),\n     ('Norfolk Island', '34.6'),\n     ('Pitcairn', '47'),\n     ('Bermuda', '53'),\n     ('Saint Martin', '53'),\n     ('San Marino', '61.2'),\n     ('Guernsey', '78'),\n     ('Anguilla', '102'),\n     ('Montserrat', '102'),\n     ('Jersey', '116'),\n     ('Christmas Island', '135'),\n     ('British Virgin Islands', '153'),\n     ('Liechtenstein', '160'),\n     ('Marshall Islands', '181.3'),\n     ('Aruba', '193'),\n     ('American Samoa', '199'),\n     ('Cook Islands', '240'),\n     ('Saint Pierre and Miquelon', '242'),\n     ('Macao', '254'),\n     ('Niue', '260'),\n     ('Saint Kitts and Nevis', '261'),\n     ('Cayman Islands', '262'),\n     ('Wallis and Futuna', '274')]\n</code></pre> <p>Il est aussi possible d'inverser l'ordre - donc d'obtenir un r\u00e9sultat par ordre d\u00e9croissant :</p> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area']) for c in countries if float(c['Area'])&lt;300],key = lambda x : float(x[1]),reverse=True)\n[('Wallis and Futuna', '274'),\n     ('Cayman Islands', '262'),\n     ('Saint Kitts and Nevis', '261'),\n     ('Niue', '260'),\n     ('Macao', '254'),\n     ('Saint Pierre and Miquelon', '242'),\n     ('Cook Islands', '240'),\n     ('American Samoa', '199'),\n     ('Aruba', '193'),\n     ('Marshall Islands', '181.3'),\n     ('Liechtenstein', '160'),\n     ('British Virgin Islands', '153'),\n     ('Christmas Island', '135'),\n     ('Jersey', '116'),\n     ('Anguilla', '102'),\n     ('Montserrat', '102'),\n     ('Guernsey', '78'),\n     ('San Marino', '61.2'),\n     ('Bermuda', '53'),\n     ('Saint Martin', '53'),\n     ('Pitcairn', '47'),\n     ('Norfolk Island', '34.6'),\n     ('Tuvalu', '26'),\n     ('Saint Barthelemy', '21'),\n     ('Nauru', '21'),\n     ('Sint Maarten', '21'),\n     ('Cocos Islands', '14'),\n     ('Gibraltar', '6.5'),\n     ('Monaco', '1.95'),\n     ('Vatican', '0.44')]\n</code></pre> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <ol> <li>Ecrire un code qui donne la liste des 5 \u00e9tats ayant la plus grande superficie, sous la forme <code>(Nom, Superficie)</code></li> <li>Ecrire un code qui donne la liste des 5 \u00e9tats ayant la plus petite superficie parmi les 20 \u00e9tats ayant la plus grande population, sous la forme <code>(Nom, population)</code>.</li> <li>\u00c9crire les instructions permettant de d\u2019afficher les 8 pays poss\u00e9dant la plus grande densit\u00e9 de population, dans l\u2019ordre inverse de densit\u00e9, sous la forme <code>(Pays, population,superficie, densit\u00e9)</code>.</li> </ol> <ol> <li>Le code :</li> </ol> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area']) for c in countries],key = lambda x : float(x[1]),reverse =True)[:5]\n[('Russia', '17100000'),\n     ('Canada', '9984670'),\n     ('United States', '9629091'),\n     ('China', '9596960'),\n     ('Brazil', '8511965')]\n</code></pre> <ol> <li> <p>Le code :</p> <pre><code>&gt;&gt;&gt; sorted( sorted(countries,key = lambda x: float(x['Population']),reverse=True )[:20],key=lambda x :x['Area'])[:5]\n        [{'ISO': 'EG',\n  'Name': 'Egypt',\n  'Capital_Id': '360630',\n  'Area': '1001450',\n  'Population': '80471869',\n  'Continent': 'AF',\n  'Currency_Code': 'EGP',\n  'Currency_Name': 'Pound'},\n {'ISO': 'ET',\n  'Name': 'Ethiopia',\n  'Capital_Id': '344979',\n  'Area': '1127127',\n  'Population': '88013491',\n  'Continent': 'AF',\n  'Currency_Code': 'ETB',\n  'Currency_Name': 'Birr'},\n {'ISO': 'BD',\n  'Name': 'Bangladesh',\n  'Capital_Id': '1185241',\n  'Area': '144000',\n  'Population': '156118464',\n  'Continent': 'AS',\n  'Currency_Code': 'BDT',\n  'Currency_Name': 'Taka'},\n {'ISO': 'IR',\n  'Name': 'Iran',\n  'Capital_Id': '112931',\n  'Area': '1648000',\n  'Population': '76923300',\n  'Continent': 'AS',\n  'Currency_Code': 'IRR',\n  'Currency_Name': 'Rial'},\n {'ISO': 'RU',\n  'Name': 'Russia',\n  'Capital_Id': '524901',\n  'Area': '17100000',\n  'Population': '140702000',\n  'Continent': 'EU',\n  'Currency_Code': 'RUB',\n  'Currency_Name': 'Ruble'}]\n</code></pre> </li> <li> <p>Le code :</p> <pre><code>&gt;&gt;&gt; sorted([(c['Name'],c['Area'], float(c['Population'])/float(c['Area'])) for c in countries], key = lambda x : x[2], reverse=True)[:8]\n[('Monaco', '1.95', 16905.128205128207),\n ('Singapore', '692.7', 6786.5872672152445),\n ('Hong Kong', '1092', 6317.478021978022),\n ('Gibraltar', '6.5', 4289.846153846154),\n ('Vatican', '0.44', 2093.181818181818),\n ('Sint Maarten', '21', 1782.3333333333333),\n ('Macao', '254', 1768.4960629921259),\n ('Maldives', '300', 1318.8333333333333)]\n</code></pre> </li> </ol>"},{"location":"NSI/Premiere/C06/CSV/#fusions-de-tables","title":"Fusions de tables","text":"<p>Le fichier <code>cities.csv</code> t\u00e9l\u00e9chargeable ici contient une table des principales villes au niveayu mondial.</p> <p>Exercice : exploration du fichier <code>cities.csv</code></p> Enonc\u00e9R\u00e9ponses <ol> <li>Quels sont les descripteurs de ce fichier ?</li> <li>Ecrire un code sauvant dans une variable <code>cities</code> les enregistrements du fichiers <code>cities.csv</code>.</li> <li>Ecrire une compr\u00e9hension de liste donnant les villes fran\u00e7aises sous la forme <code>(Nom, population)</code></li> </ol> <ol> <li><code>Id;Name;Latitude;Longitude;Country_ISO;Population</code></li> <li> <p>Le code :</p> <pre><code>cities = []\nwith open('cities.csv', 'r', encoding='utf8', newline='') as file :\n    reader = csv.DictReader(file, delimiter=\";\") \n    for line in reader :\n        cities.append(line)\n</code></pre> </li> <li> <p>Le code :</p> <pre><code>[c for c in cities if c['Country_ISO']=='FR']\n</code></pre> </li> </ol> <p>Un des descripteurs est commun \u00e0 la fois au fichier <code>countries.csv</code> et au fichier <code>cities.csv</code>. Il s'agit, dans <code>countries.csv</code> de <code>Capital_Id</code>, qui correspond au descripteur <code>Id</code> de <code>cities.csv</code>. Il est donc possible de joindre des donn\u00e9es des deux tables, comme dans l'exemple ci-dessous :</p> <pre><code>&gt;&gt;&gt; [(co['Name'],co['Population'],co['Area'],ci['Name'], ci['Population']\n) for co in countries for ci in cities if int(co['Population'])&gt; 50*10**6 and co['Capital_Id']==ci['Id'] ]\n\n    [('Bangladesh', '156118464', '144000', 'Dhaka', '10356500'),\n     ('Brazil', '201103330', '8511965', 'Bras\u00edlia', '2207718'),\n     ('Democratic Republic of the Congo', '70916439', '2345410', 'Kinshasa', '7785965'),\n     ('China', '1330044000', '9596960', 'Beijing', '11716620'),\n     ('Germany', '81802257', '357021', 'Berlin', '3426354'),\n     ('Egypt', '80471869', '1001450', 'Cairo', '7734614'),\n     ('Ethiopia', '88013491', '1127127', 'Addis Ababa', '2757729'),\n     ('France', '64768389', '547030', 'Paris', '2138551'),\n     ('United Kingdom', '62348447', '244820', 'London', '7556900'),\n     ('Indonesia', '242968342', '1919440', 'Jakarta', '8540121'),\n     ('India', '1173108018', '3287590', 'Delhi', '10927986'),\n     ('Iran', '76923300', '1648000', 'Tehran', '7153309'),\n     ('Italy', '60340328', '301230', 'Rome', '2318895'),\n     ('Japan', '127288000', '377835', 'Tokyo', '8336599'),\n     ('Myanmar', '53414374', '678500', 'Nay Pyi Taw', '925000'),\n     ('Mexico', '112468855', '1972550', 'Mexico City', '12294193'),\n     ('Nigeria', '154000000', '923768', 'Abuja', '590400'),\n     ('Philippines', '99900177', '300000', 'Manila', '1600000'),\n     ('Pakistan', '184404791', '803940', 'Islamabad', '601600'),\n     ('Russia', '140702000', '17100000', 'Moscow', '10381222'),\n     ('Thailand', '67089500', '514000', 'Bangkok', '5104476'),\n     ('Turkey', '77804122', '780580', 'Ankara', '3517182'),\n     ('United States', '310232863', '9629091', 'Washington, D.C.', '601723'),\n     ('Vietnam', '89571130', '329560', 'Hanoi', '1431270')]\n</code></pre> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <ol> <li>Ecrire une compr\u00e9hension donnant les pays dont la population de la capitale est sup\u00e9rieure \u00e0 100 000.</li> <li>Ecrire un code donnant les pays dont la capitale poss\u00e8de une latitude sup\u00e9rieure \u00e0 60\u00b0.</li> <li>Ecrire un code donnant les pays dont la capitale poss\u00e8de une latitude inf\u00e9rieure \u00e0 -50\u00b0.</li> </ol> <ol> <li> <p>Le code :</p> <p></p><pre><code>&gt;&gt;&gt; [co['Name'] for co in countries for ci in cities if co['Capital_Id']==ci['Id'] and int(ci['Population'])&gt; 10**5]\n</code></pre> (La sortie est bien trop longue pour \u00eatre affich\u00e9e ici) </li> <li> <p>Le code :</p> <pre><code>&gt;&gt;&gt; [(co['Name'],co['Population'],co['Area'],ci['Name'], ci['Population']) for co in countries for ci in cities if co['Capital_Id']==ci['Id'] and float(ci['Latitude'])&gt; 60]\n[('Aland Islands', '26711', '1580', 'Mariehamn', '10682'),\n('Finland', '5244000', '337030', 'Helsinki', '558457'),\n('Faroe Islands', '48228', '1399', 'T\u00f3rshavn', '13200'),\n('Greenland', '56375', '2166086', 'Nuuk', '14798'),\n('Iceland', '308910', '103000', 'Reykjav\u00edk', '118918'),\n('Svalbard and Jan Mayen', '2550', '62049', 'Longyearbyen', '2060')]\n</code></pre> </li> <li> <p>Le code :</p> <pre><code>&gt;&gt;&gt; [(co['Name'],co['Population'],co['Area'],ci['Name'], ci['Population']) for co in countries for ci in cities if co['Capital_Id']==ci['Id'] and float(ci['Latitude'])&lt;- 50]\n[('Falkland Islands', '2638', '12173', 'Stanley', '2213'),\n('South Georgia and the South Sandwich Islands',\n'30',\n'3903',\n'Grytviken',\n'2')]\n</code></pre> </li> </ol> <p>Pour les cracks : Attention !</p> <p>La technique de fusion montr\u00e9e ci-dessus n'est vraiment pas tr\u00e8s efficace ! En effet il s'agit d'un parcours double de boucle : \u00e0 chaque tour de la boucle parcourant <code>countries</code>, on parcoure toute la liste  <code>cities</code>. </p> <p>C'est absolument horrible !</p> <p>En effet, si <code>countries</code> est une liste de longueur \\(1~000~000\\) et que <code>cities</code> est une liste de taille \\(1~000\\), alors le nombre de comparaison sera de \\(1~000~000 \\times 1~000 = 1~000~000~000\\) ! </p> <p>En termes math\u00e9matiques, si <code>countries</code> est de taille \\(n\\) et <code>cities</code> de taille \\(m\\), alors cet algorithme aura un co\u00fbt temporel en \\(\\mathbb{O}(n\\times m)\\).</p> <p>Pour acc\u00e9l\u00e9rer une telle fusion de liste, il peut-\u00eatre judicieux de transformer ces listes en des dictionnaires, avec un choix judicieux de cl\u00e9s !. </p> <p>Par exemple, ici on pourrait transformer la liste <code>cities</code> en un dictionnaire dont la cl\u00e9 est l'<code>Id</code>, puis effectuer une boucle sur la liste.</p> <pre><code>dicCities = {}\nfor ci in cities :\n        dicCities[ci['Id']] = ci\nresult = []\nfor co in countries :\n    if int(co['Population'])&gt; 50*10**6 :\n        result.append([(co['Name'], \n                        co['Population'], \n                        co['Area'], \n                        dicCities[co['Capital_Id']]['Name'], \n                        dicCities[co['Capital_Id']]['Population']))     \n</code></pre> <p>Certes le code para\u00eet plus complexe. Mais en terme de co\u00fbt temporel :</p> <ul> <li>Il n'y a qu'un seul parcours de la liste <code>cities</code> ;</li> <li>A chaque tour de boucle parcourant <code>countries</code>, on ne fera appel qu'\u00e0 des actions en temps constant (en \\(\\mathbb{O}(1)\\)) sur le dictionnaire <code>dicCities</code>.</li> </ul> <p>En reprenant les donn\u00e9es pr\u00e9c\u00e9dentes :</p> <ul> <li>on fait \\(1~000\\) tours de boucles pour la construction du dictionnaire ;</li> <li>on fait \\(1~000~000\\) de tours de boucles sur la liste <code>countries</code>.</li> </ul> <p>En ordre de grandeur, on reste sur environ \\(1~000~000\\) d'op\u00e9rations, soit \\(1~000\\) fois moins que pr\u00e9c\u00e9demment !</p> <p>En termes math\u00e9matiques, le co\u00fbt en temps est \\(\\mathbb{O}(max(m,n))\\).</p> <p>Pour \u00eatre encore plus clair, voici un ordre de comparaison en temps d\u00e9pendant des tailles \\(n\\) et \\(m\\) des deux listes fusionn\u00e9es, le contenu d'une case donne la comparaison en temps entre \\(\\mathbb{O}(m \\times n)\\) et \\(\\mathbb{O}(max(m,n))\\), avec le principe de \\(1~000\\) op\u00e9rations par secondes.</p> n\\m \\(1\\) \\(10^3\\) \\(10^6\\) \\(10^9\\) \\(1\\) \\(0,001''~/~0,001''\\) \\(1''~/~1''\\) \\(16'40''~/~16'40''\\) \\(11j13h46'40''~/~11j13h46'40''\\) \\(10^3\\) ... \\(16'40''~/~1''\\) \\(277h46'40''~/~16'40''\\) \\(\\simeq 31~ans/~11j13h46'40''\\) \\(10^6\\) ... ... \\(\\simeq 31~ans/~16'40''\\) \\(\\simeq 31~000~ann\u00e9es~/~11j13h46'40''\\) \\(10^9\\) ... ... ... \\(\\simeq 31~000~000~ann\u00e9es~/~11j13h46'40''\\) <p>Il y a 30 millions d'ann\u00e9es, apparaissaient seulement les grands singes, l'Himalaya n'\u00e9tait pas totalement form\u00e9...</p> <p>Oui, direz-vous, mais les ordinateurs actuels sont 1 million de fois plus rapides !</p> <p>Certes, mais alors combien de temps faudrait-il dans les deux cas pour traiter deux listes de 1 milliard de donn\u00e9es chacune ?</p>"},{"location":"NSI/Premiere/C06/CSV/#ecrire-un-nouveau-fichier-csv","title":"Ecrire un nouveau fichier csv","text":"<p>Apr\u00e8s avoir extrait, modifi\u00e9 et fusionn\u00e9 des fichiers de type <code>.csv</code>, il est normal de vouloir en cr\u00e9er de nouveaux \u00e0 partir de donn\u00e9es existantes. Le module <code>csv</code> propose une m\u00e9thode <code>.DictWriter</code> dont l'utilisation est la suivante : </p> <pre><code>with open(\"capitales.csv\", \"w\", encoding=\"utf8\",newline=\"\") as file :\n    ##On definit les descripteurs du nouveau fichier\n    descripteurs = ['Pays', 'Population_pays', 'Superficie', 'Densite', 'Capitale', 'Population_capitale']\n    writer = csv.DictWriter(file, fieldnames=descripteurs,delimiter=\";\")\n\n    writer.writeheader()##Ecrit les descripteurs en premi\u00e8re ligne\n    for co in countries :\n        for ci in cities :\n            if co['Capital_Id'] == ci['Id'] :\n                writer.writerow({'Pays' : co['Name'],\n                                 'Population_pays' : co['Population'],\n                                 'Superficie' : co['Area'],\n                                 'Densite' : float(co['Population'])/float(co['Area']),\n                                 'Capitale' : ci['Name'],\n                                 'Population_capitale' : ci['Population']\n\n                                }\n                )\n</code></pre>"},{"location":"NSI/Premiere/C06/CSV/#tp-explorer-imdb","title":"TP : Explorer IMDB","text":"<p>Le TP se fait sur Capytale par ce lien.</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/","title":"Les dictionnaires","text":""},{"location":"NSI/Premiere/C06/Dictionnaires/#les-dictionnaires-en-python","title":"Les dictionnaires en Python","text":""},{"location":"NSI/Premiere/C06/Dictionnaires/#avant-de-commencer-tableaux-simultanes","title":"Avant de commencer : tableaux simultan\u00e9s","text":""},{"location":"NSI/Premiere/C06/Dictionnaires/#des-listes-avec-le-meme-index","title":"Des listes avec le m\u00eame index","text":"<p>Premier exemple</p><p>On consid\u00e8re les deux listes suivantes :</p> <pre><code>animaux = ['Vache', 'Chien', 'Chat', 'Poule', 'Ane', 'Cochon', 'Paon']\ncris = ['Meuh', 'Wouf', 'Miaou', 'Cot-cot', 'Hi-Han', 'Gruik', 'Leon']\n</code></pre> \u00c9nonc\u00e9R\u00e9ponse <p>\u00c9crire une fonction <code>afficheCri</code>  qui prend comme argument le nom d'un animal, et renvoie : </p> <ul> <li> <p>soit une chaine de caract\u00e8re telle que  dans l'exemple ci-dessous :</p> <pre><code>&gt;&gt;&gt; afficheCri(\"Vache\")\n\"Le cri de l'animal Vache est Meuh !\" \n</code></pre> </li> <li> <p>soit la chaine <code>\"Je ne connais pas le cri de Vache\"</code> dans le cas o\u00f9 l'animal n'est pas dans la liste <code>animaux</code>.</p> </li> </ul> <p>Le principe est de parcourir par indice la liste <code>animaux</code> , et de comparer avec l'animal cherch\u00e9. Comme les indices correspondent entre les listes <code>animaux</code> et <code>cris</code>, il suffira alors de renvoyer le cri correspondant \u00e0 l'indice trouv\u00e9. Si la boucle se termine, c'est que l'animal ne se retrouve pas dans cette liste, et qu'on renvoie alors la phrase correspondante :</p> <pre><code>def afficheCri(animal) :\n    for i in range(len(animaux)) :\n        if animaux[i] == animal :\n            return cris[i]\n    return f\"Je ne connais pas le cri de {animal}\"      \n</code></pre> <p>Si cette m\u00e9thode est fonctionnelle, il faut quand m\u00eame se poser la question de son efficacit\u00e9, et plus particuli\u00e8rement de son efficacit\u00e9 en temps.         </p> <p>Mesurer un temps d'ex\u00e9cution avec <code>timeit</code></p> <p>Le module <code>timeit</code> est un module particuli\u00e8rement utile pour mesurer des temps d'ex\u00e9cution. Il peut \u00eatre import\u00e9 par la commande suivante, que je vous conseille de mettre dans l'ent\u00eate de votre fichier :</p> <pre><code>import timeit\n</code></pre> <p>Une fois import\u00e9, nous allons utiliser la fonction <code>timeit</code> du module pour calculer le temps d'ex\u00e9cution d'une instruction par la commande suivante :</p> <pre><code>timeit.timeit(lambda : afficheCri('Vache'), number = 1000)\n</code></pre> <p>L'instruction <code>afficheCri('Vache')</code> sera alors ex\u00e9cut\u00e9e 1000 fois, et le temps moyen d'ex\u00e9cution sera affich\u00e9 (mais sans le r\u00e9sultat d'ex\u00e9cution de la fonction...).</p> <p>Mesurer le temps</p> <p>Quel est le temps d'ex\u00e9cution de la fonction <code>afficheCri</code> ? Testez sur plusieurs animaux.</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/#et-avec-plus-de-donnees","title":"Et avec plus de donn\u00e9es ?","text":"<p>Que se passe-t-il si les tableaux sont plus long ? </p> <p>Deuxi\u00e8me exemple</p> Enonc\u00e9 <ol> <li>T\u00e9l\u00e9chargez le fichier suivant, et sauvegardez le dans le m\u00eame dossier que votre code Python actuel.</li> <li> <p>Copiez-collez la fonction <code>makebigArray</code> suivante.</p> <pre><code>def makeBigArray() :\n    import csv\n    with open(\"Long_Dico.csv\",\"r\",encoding = \"utf8\") as file :\n        dicReader = csv.DictReader(file, delimiter=';')\n        etablissements =[]\n        GPS = []\n        for line in dicReader :\n            etablissements.append(line['Nom'])\n            GPS.append(line['GPS'])\n    return etablissements, GPS\n</code></pre> </li> <li> <p>Copiez-collez ensuite la ligne suivante dans votre code, apr\u00e8s la fonction pr\u00e9c\u00e9dente :</p> <pre><code>etablissements, GPS = makeBigArray()\n</code></pre> <p>Le code ci-dessous cr\u00e9e deux listes :      * la premi\u00e8re contient tous les diff\u00e9rents \u00e9tablissements pr\u00e9sents sur ParcourSup,     * la deuxi\u00e8me contient les coordonn\u00e9es GPS de chacun de ces \u00e9tablissements.</p> </li> <li> <p>V\u00e9rifiez que les listes <code>etablissements</code> et <code>GPS</code> sont bien de la m\u00eame dimension.</p> </li> <li> <p>A partir de la fonction <code>afficheCri</code>, cr\u00e9ez une fonction <code>afficheGPS</code> afin qu'elle permette de r\u00e9cup\u00e9rer les coordonn\u00e9es GPS  d'un \u00e9tablissement dont on a saisi le nom, et qu'elle renvoie <code>None</code> si l'\u00e9tablissement n'est pas pr\u00e9sent.</p> </li> <li> <p>Testez ensuite la ligne suivante :</p> <pre><code>timeit.timeit(lambda : afficheGPS('Lyc\u00e9e Auguste Pavie (Guingamp - 22)'), number = 1000)\n</code></pre> <p>Quel est le temps d'ex\u00e9cution ?</p> </li> <li> <p>Testez ensuite la ligne suivante : </p> <pre><code> timeit.timeit(lambda : afficheGPS('Pavie'), number = 1000)\n</code></pre> <p>Quel est le temps d'ex\u00e9cution ? Pourquoi est-il plus long que pr\u00e9c\u00e9demment ?</p> </li> </ol> <p>Limite des listes</p> <p>Les listes sont des objets tr\u00e8s pratiques, mais poss\u00e9dant des limites, en particulier concernant la recherche d'\u00e9l\u00e9ments :</p> <ul> <li>si la liste n'est pas tri\u00e9e, la recherche se fait en \\(\\mathbb{O}(n)\\), ce qui signifie que la recherche prend un temps proportionnel \u00e0 la longueur de la liste ;</li> <li>si la liste est tri\u00e9e, il est possible d'utiliser des algorithmes de recherches rapides, comme la recherche dichotomique (au programme de terminale), qui permettent de rechercher en un temps plus court, en \\(\\mathbb{O}(log(n))\\).</li> </ul> <p>Quoi qu'il en soit, ce temps est tr\u00e8s long comparativement au temps d'acc\u00e8s \u00e0 un \u00e9l\u00e9ment, quand on connait son indice ! En effet, peu importe la taille de la liste, le temps d'acc\u00e8s \u00e0 un \u00e9l\u00e9ment reste constant, il est en \\(\\mathbb{O}(1)\\).</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/#les-dictionnaires-en-python_1","title":"Les dictionnaires en Python","text":""},{"location":"NSI/Premiere/C06/Dictionnaires/#premiers-apercus-des-dictionnaires","title":"Premiers aper\u00e7us des dictionnaires","text":"<p>Dictionnaires en Python</p> <p>Un dictionnaire est une structure d\u00e9clar\u00e9e entre accolades, o\u00f9 chaque d\u00e9claration est une paire de type <code>cl\u00e9 : valeur</code>. La seule limite impos\u00e9e dans les types des objets <code>cl\u00e9</code> et <code>valeurs</code> est que la <code>cl\u00e9</code> doit \u00eatre d'un type non-mutable (un entier, une cha\u00eene de caract\u00e8res, un tuple, ... mais par contre pas une liste !).</p> <p>exemple</p> <p>On consid\u00e8re le code suivant :</p> <pre><code>cris = {\"Vache\" : \"Meuh\",\n           \"Chien\" : \"Wouf\",\n           \"Chat\" : \"Miaou\",\n           \"Poule\" : \"Cot-cot\",\n           \"Ane\" : \"Hi-Han\",\n           \"Cochon\" : \"Gruik\",\n           \"Paon\" : \"Leon\"\n           } \n</code></pre> <p>La variable <code>cris</code> est associ\u00e9e \u00e0 un objet de type dictionnaire, ce qu'on peut v\u00e9rifier en testant :</p> <pre><code>type(cris)\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;  <p>Par exemple dans le dictionnaire <code>cris</code>, on trouve la paire <code>\"Chat\" : \"Miaou\"</code> o\u00f9 :</p> <ul> <li><code>\"Chat\"</code> est la cl\u00e9 (de type chaine de caract\u00e8res <code>str</code>) ;</li> <li><code>\"Miaou\"</code> est la valeur (aussi de type chaine de caract\u00e8res <code>str</code>).</li> </ul> <p>Acc\u00e8s \u00e0 un \u00e9l\u00e9ment</p> <p>Pour acc\u00e9der \u00e0 une valeur <code>v</code>\u00e0 partir de la cl\u00e9 <code>c</code> d'un dictionnaire <code>d</code>, il suffit d'utiliser la notation suivante :</p> <pre><code>&gt;&gt;&gt; d[c]\nv   \n</code></pre> <p>Ce qui signifie que l'appel <code>d[c]</code> renvoie la valeur <code>v</code>.</p> <p>Exemple</p> <ol> <li> <p>Pour obtenir le cri de la vache, il suffit d'utiliser :</p> <pre><code>&gt;&gt;&gt; cris[\"Vache\"]\n'Meuh'\n</code></pre> </li> <li> <p>Pour obtenir le cri du cochon, il suffit d'utiliser :</p> <pre><code>&gt;&gt;&gt; cris[\"Cochon\"]\n'Gruik'     \n</code></pre> </li> <li> <p>Par contre, si on utilise une cl\u00e9 qui n'existe pas, on obtient l'erreur de type <code>KeyError</code> suivante :</p> <p></p><pre><code>&gt;&gt;&gt; cris['Perroquet']\n\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nKeyError: 'Perroquet'\n</code></pre> ce qui signifie que <code>\"Perroquet\"</code> n'est pas une cl\u00e9 valide du dictionnaire. </li> </ol> Terminal de test <p></p>&gt;&gt;&gt;"},{"location":"NSI/Premiere/C06/Dictionnaires/#manipulation-des-dictionnaires","title":"Manipulation des dictionnaires","text":""},{"location":"NSI/Premiere/C06/Dictionnaires/#creation-dun-dictionnaire-vide","title":"Cr\u00e9ation d'un  dictionnaire vide","text":"<p>Il existe deux possibilit\u00e9s pour cr\u00e9er un dictionnaire vide :</p> <pre><code>&gt;&gt;&gt; dico1 = {}\n&gt;&gt;&gt; dico2 = dict()\n</code></pre>"},{"location":"NSI/Premiere/C06/Dictionnaires/#ajout-dun-element","title":"Ajout d'un \u00e9l\u00e9ment","text":"<p>Pour ajouter un couple cl\u00e9/valeur \u00e0 un dictionnaire, rien de plus simple :</p> <pre><code>&gt;&gt;&gt; cris['Girafe'] = 'Tic-Tic'\n&gt;&gt;&gt; cris\n{'Vache': 'Meuh', 'Chien': 'Wouf', 'Chat': 'Miaou', 'Poule': 'Cot-cot', 'Ane': 'Hi-Han', 'Cochon': 'Gruik', 'Paon': 'Leon', 'Girafe': 'Tic-Tic'}\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;"},{"location":"NSI/Premiere/C06/Dictionnaires/#supprimer-un-element","title":"Supprimer un \u00e9l\u00e9ment","text":"<p>On supprime le couple <code>cl\u00e9/valeur</code> d'un dictionnaire gr\u00e2ce au mot-cl\u00e9 <code>del</code> :</p> <pre><code>&gt;&gt;&gt; del cris['Girafe']\n&gt;&gt;&gt; cris\n{'Vache': 'Meuh', 'Chien': 'Wouf', 'Chat': 'Miaou', 'Poule': 'Cot-cot', 'Ane': 'Hi-Han', 'Cochon': 'Gruik', 'Paon': 'Leon'} \n</code></pre>"},{"location":"NSI/Premiere/C06/Dictionnaires/#longueur-dun-dictionnaire","title":"Longueur d'un dictionnaire","text":"<p>Un dictionnaire poss\u00e8de une longueur : le nombre de cl\u00e9s disponibles. Cette longueur est accessible avec la fonction built-in <code>len()</code> :</p> <pre><code>&gt;&gt;&gt; len(cris) \n7\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;"},{"location":"NSI/Premiere/C06/Dictionnaires/#test-de-presence-de-cles","title":"Test de pr\u00e9sence de cl\u00e9s","text":"<p>Il est possible de tester l'existence d'une cl\u00e9 dans le dictionnaire gr\u00e2ce \u00e0 l'op\u00e9rateur <code>\u00ecn</code> :</p> <pre><code>&gt;&gt;&gt; 'Vache' in cris\nTrue\n&gt;&gt;&gt; `vache` in cris\nFalse\n</code></pre> <p>Par contre, cet op\u00e9rateur ne permet pas de tester l'existence d'une valeur :</p> <pre><code>&gt;&gt;&gt; 'Meuh' in cris\nFalse\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;"},{"location":"NSI/Premiere/C06/Dictionnaires/#parcourir-un-dictionnaire","title":"Parcourir un dictionnaire","text":"<p>Pour parcourir un dictionnaire, on utilise une boucle <code>for</code> comme pour un parcours par \u00e9l\u00e9ment d'une liste :</p> <pre><code>&gt;&gt;&gt; for animal in cris :\n    print(animal)\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;  <p>On peut remarquer que la variable <code>animal</code> fait alors r\u00e9f\u00e9rence \u00e0 une cl\u00e9.</p> <p>Pour obtenir la valeur associ\u00e9e on peut faire comme ci-dessous :</p> <pre><code>&gt;&gt;&gt; for animal in cris :\n    print(animal, \" =&gt; \", cris[animal])\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;  <p>Ordre d'un dictionnaire</p> <p>Attention ! Selon les versions de Python, l'ordre obtenu par un parcours du dictionnaire ne respecte pas forc\u00e9ment l'ordre d'introduction ou de cr\u00e9ation des \u00e9l\u00e9ments dans le dictionnaire. Dans les versions sup\u00e9rieures \u00e0 3.6, l'impl\u00e9mentation des dictionnaires permet de conserver l'ordre d'introduction des \u00e9l\u00e9ments.</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/#liste-des-cles-des-valeurs-et-des-couples","title":"Liste des cl\u00e9s, des valeurs et des couples","text":"<p>Le type dictionnaire poss\u00e8de plusieurs m\u00e9thodes, permettant d'obtenir les cl\u00e9s, les valeurs et les paires cl\u00e9s/valeurs :</p> <ul> <li> <p>Pour obtenir la liste des cl\u00e9s, on utilise la m\u00e9thode <code>keys()</code>, qui renvoie un objet de type <code>dict_keys</code>, assimilable \u00e0 une liste.</p> <pre><code>&gt;&gt;&gt; cris.keys()\n dict_keys(['Vache', 'Chien', 'Chat', 'Poule', 'Ane', 'Cochon', 'Paon'])\n</code></pre> </li> <li> <p>Pour obtenir la liste des valeurs, on utilise la m\u00e9thode <code>values()</code>.</p> <pre><code>&gt;&gt;&gt; cris.values()\ndict_values(['Meuh', 'Wouf', 'Miaou', 'Cot-cot', 'Hi-Han', 'Gruik', 'Leon'])\n</code></pre> </li> <li> <p>On peut aussi obtenir le couple cl\u00e9/valeurs  sous la forme d'un tuple par l'interm\u00e9diaire de la m\u00e9thode <code>items()</code> :</p> <p></p><pre><code>&gt;&gt;&gt; cris.items()\ndict_items([('Vache', 'Meuh'), ('Chien', 'Wouf'), ('Chat', 'Miaou'), ('Poule', 'Cot-cot'), ('Ane', 'Hi-Han'), ('Cochon', 'Gruik'), ('Paon', 'Leon')])\n</code></pre> Et on peut encore it\u00e9rer sur cet objet : <pre><code>for item in cris.items() :\n    print(f\"{item[1]} est le cri de {item[0]}\") \n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;  <p>Attention \u00e0 l'utilisation de la m\u00e9thode <code>items</code> </p> <p>Comme nous le verrons plus loin, l'objectif de l'utilisation des dictionnaires est entre autre d'acc\u00e9l\u00e9rer certaines op\u00e9rations par rapport \u00e0 l'utilisation de listes ou de tuples. La m\u00e9thode <code>items</code> renvoyant une liste de tuples \u00e0 partir du dictionnaire, il est parfois peu judicieux de l'utiliser (voir la partie sur les tables de hachages ci-dessous). </p> <p>Tuple unpacking</p> <p>On peut aussi utiliser la technique du tuple unpacking pour extraire chaque \u00e9l\u00e9ment cl\u00e9 et valeur gr\u00e2ce \u00e0 la m\u00e9thode <code>items</code>, en utilisant la technique suivante (mais elle est encore une fois moins rapide...): </p><pre><code>for animal, cri in cris.items() :\n    print(f\"L'animal {animal} fait {cri} !\")\n</code></pre> </li> </ul> <p>Am\u00e9liorer avec les dictionnaires</p> \u00c9nonc\u00e9R\u00e9ponses <p>Reconstruisez une nouvelle fonction <code>afficheCri2</code> sur le m\u00eame mod\u00e8le que la premi\u00e8re, mais en utilisant la structure de dictionnaire, puis testez la vitesse d'ex\u00e9cution de cette nouvelle fonction.</p> <p>Le code :</p> <pre><code>def afficheCri2(animal) :\n    if animal in cris :\n        return cris[animal]\n    return f\"Je ne connais pas le cri de {animal}\"  \n</code></pre> <p>Sur une petite structure comme celle-ci, le temps d'ex\u00e9cution n'est pas sensiblement diff\u00e9rent (sauf dans le cas o\u00f9 la cl\u00e9 n'est pas dans le dictionnaire).</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/#et-avec-plus-de-donnees_1","title":"Et avec plus de donn\u00e9es ?","text":"<p>Recr\u00e9ons \u00e0 partir du m\u00eame fichier Parcoursup <code>Long_Dico.csv</code> un dictionnaire contenant les \u00e9tablissements et leurs coordonn\u00e9es GPS :</p> <pre><code>def makeBigDict() :\n    import csv\n    with open(\"Long_Dico.csv\",\"r\",encoding = \"utf8\") as file :\n        dicReader = csv.DictReader(file, delimiter=';')\n        etablissements=dict()\n        for line in dicReader : # pour chaque ligne\n            etablissements[line['Nom']] = line['GPS'] # on cr\u00e9e une nouvelle paire cl\u00e9/valeur dans le dictionnaire\n    return etablissements\n\ndicEtablissements = makeBigDict()\n</code></pre> <p>Et v\u00e9rifions que sa taille st bien coh\u00e9rente :</p> <pre><code>&gt;&gt;&gt; len(dicEtablissements)\n6183 \n</code></pre> <p>Un gain de vitesse ?</p> Enonc\u00e9R\u00e9ponses <ol> <li>Adaptez de nouveau la fonction <code>afficheCri2</code> en une fonction <code>afficheGPS2</code>afin qu'elle permette de r\u00e9cup\u00e9rer les coordonn\u00e9es GPS  d'un \u00e9tablissement dont on a saisi le nom, et qu'elle renvoie <code>None</code> si l'\u00e9tablissement n'est pas pr\u00e9sent.</li> <li>Comparez le temps d'ex\u00e9cution avec la fonction <code>afficheGPS</code>.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C06/Dictionnaires/#les-dictionnaires-des-tables-de-hachage","title":"Les dictionnaires : des tables de hachage","text":"<p>Cette partie est hors programme. Mais elle n'en demeure pas moins int\u00e9ressante !</p> <p>Si la structure de dictionnaire est plus rapide que celle d'un tableau simple, c'est parce qu'elle est construite sur le principe d'une table de hachage, \u00e0 l'aide d'une fonction de hachage.</p> <p>Une fonction de hachage est une fonction qui va renvoyer une valeur qui d\u00e9pendra de l'objet qui lui est pass\u00e9 en argument.</p> <p>A la cr\u00e9ation d'un dictionnaire, un tableau vide est cr\u00e9\u00e9. Ce tableau est un tableau classique, index\u00e9 par des entiers. Lors de l'ajout d'un \u00e9l\u00e9ment dans un dictionnaire, la fonction de hachage calcule l'image de la cl\u00e9, donc un nombre, et range dans la case correspondante du tableau nomm\u00e9e alv\u00e9ole (ou bucket ou slot) la paire cl\u00e9/valeur.</p> <p>Prenons comme exemple de fonction de hachage la fonction \\(f\\) qui renvoie le nombre de lettres de la chaine de caract\u00e8re de la cl\u00e9. Avec cet exemple :</p> <ul> <li>\\(f('Vache') = 5\\), donc le couple <code>(\"Vache\", \"Meuh\")</code> est rang\u00e9 dans la case d'indice 5 du tableau.</li> <li>\\(f('Cochon') = 6\\), donc le couple <code>(\"Cochon\", \"Gruik\")</code> est rang\u00e9 dans la case d'indice 6 du tableau.</li> <li>\\(f('Ane') = 3\\), donc le couple <code>(\"Ane\", \"Hi-Han\")</code> est rang\u00e9 dans la case d'indice 3 du tableau.</li> <li>\\(f('Chat') = 4\\), donc le couple <code>(\"Chat\", \"Miaou\")</code> est rang\u00e9 dans la case d'indice 4 du tableau.</li> </ul> <p></p> <p>Cette m\u00e9thode de construction apporte un net avantage dans le temps d'acc\u00e8s aux \u00e9l\u00e9ments. En effet, comme dans un tableau normal, acc\u00e9der \u00e0 un  \u00e9l\u00e9ment avec son indice est une op\u00e9ration en temps constant ( en \\(\\mathcal{O}(1)\\)). Et pour tester si une cl\u00e9 est bien dans le dictionnaire, il suffit de calculer son hash et de regarder dans le tableau si la case contient quelque chose.</p> <p>Cependant, elle implique un certain nombre de r\u00e8gles et de contraintes pouvant \u00eatre assez g\u00eanantes :</p> <ol> <li> <p>La cl\u00e9 d'un objet doit \u00eatre non mutable. En effet, si la cl\u00e9 change, la valeur de hash renvoy\u00e9e par la fonction ne sera plus la m\u00eame et l'objet serait perdu. Ainsi Python impose d'utiliser des objets non mutables comme cl\u00e9, comme des entiers, des chaines de caract\u00e8res, ou m\u00eame des tuples :     </p><pre><code>newDic = {(0,0) : 0, (0,1) : 5 , (0,2) : 3 , (0,1,2,3) :4}\n</code></pre> <p>Remarquez que les cl\u00e9s peuvent \u00eatre de types diff\u00e9rents - tant que la fonction de hachage est capable de calculer, il n'y a pas de probl\u00e8mes.</p> <p>Mais il est impossible d'utiliser des listes comme cl\u00e9 :</p> <pre><code>&gt;&gt;&gt; newDic[[1,0]] = 0\n</code></pre> Terminal de test <p></p>&gt;&gt;&gt;  </li> <li> <p>Comme pour tous les tableaux, une taille de base est fix\u00e9e au d\u00e9part. Si jamais l'ajout d'un nouveau couple cl\u00e9/valeur am\u00e8ne \u00e0 d\u00e9passer la taille du tableau initial, un nouveau tableau 2 fois plus grand est cr\u00e9\u00e9 et l'ensemble de l'ancien tableau est copi\u00e9 dans ce nouveau qui devient le nouvel objet de r\u00e9f\u00e9rence. Cette copie peut \u00eatre couteuse en temps et en m\u00e9moire.</p> </li> <li> <p>Avec certaines fonctions de hachage, plusieurs cl\u00e9s peuvent avoir la m\u00eame image. Par exemple avec la fonction utilisant la longueur des chaines :</p> <ul> <li>\\(f('Vache') =5\\)</li> <li>\\(f('Chien') =5\\)</li> </ul> <p>On obtient alors une collision.</p> <p>Dans ce cas les deux couples <code>(\"Vache\",\"Meuh\")</code> et <code>(\"Chien\",\"Wouf\")</code> seront rang\u00e9s dans la m\u00eame alv\u00e9ole, sous la forme d'une liste, ce qui risque de diminuer l'efficacit\u00e9 de la recherche, dans le cas d'alv\u00e9oles trop remplies. </p> <p>Par exemple, collisions comprises, avec cette fonction de hachage on obtiendrait la table de hachage suivante :</p> <p></p> </li> </ol> <p>C'est pourquoi il est n\u00e9cessaire d'avoir une bonne fonction de hachage qui limite les possibilit\u00e9s de collision !!!</p> <p>Heureusement pour nous, Python fait bien son travail et utilise une fonction de hachage bien impl\u00e9ment\u00e9e, dont on peut voir quelques exemples dans les cellules ci-dessous :</p> <pre><code>&gt;&gt;&gt; hash(\"Vache\")\n3804037224742576468\n&gt;&gt;&gt; hash((0,1))\n-1950498447580522560\n&gt;&gt;&gt; hash(35)\n35\n&gt;&gt;&gt; hash(-41.2)\n-461168601842745385\n</code></pre>"},{"location":"NSI/Premiere/C06/Dictionnaires/#exercices-sur-les-dictionnaires","title":"Exercices sur les dictionnaires","text":"<p>Exercice 1</p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>\u00c9crire un dictionnaire <code>mois</code> dont les cl\u00e9s seront les mois de l'ann\u00e9e et les valeurs seront le nombre de jours du mois correspondant (ann\u00e9e non-bissextiles).</li> <li>Cr\u00e9er une fonction <code>quelMois</code> donnant les mois dont le nombre de jours est pass\u00e9 en argument.    </li> </ol> <p>A venir !</p> <p>Exercice 2</p> \u00c9nonceR\u00e9ponses <ol> <li> <p>\u00c9crire une fonction <code>occurrence(chaine : str)</code> qui prend une chaine de caract\u00e8res en argument, et qui renvoie un dictionnaire contenant le nombre d'occurrences de chaque caract\u00e8re.</p> <pre><code>    def occurrence(chaine :str ) -&gt;dict :\n\"\"\"\n        Prend en argument une chaine de caract\u00e8re quelconque mais non vide, et renvoi\n        un dictionnaire du nombre d'occurrence de chaque caract\u00e8re de la chaine,\n        y compris les espaces et caract\u00e8res sp\u00e9ciaux.\n        Par exemple :\n        &gt;&gt;&gt; occurrence(\"abc\")\n        {'a': 1, 'b': 1, 'c': 1}\n        &gt;&gt;&gt; occurrence(\"abaacc\")\n        {'a': 3, 'b': 1, 'c': 2}\n        &gt;&gt;&gt; occurrence(\"ab ! bc ! \")\n        {'a': 1, 'b': 2, ' ': 4, '!': 2, 'c': 1}\n        \"\"\"\n        ...    \n</code></pre> </li> <li> <p>\u00c9crire une fonction <code>occurrenceMot(chaine :str)</code> qui prend en argument une chaine de caract\u00e8re, et renvoie un dictionnaire contenant le nombre d'occurrence de chaque mot de la chaine .</p> <pre><code>def occurenceMot(chaine :str ) -&gt;dict :\n\"\"\"\n    Prend en argument une chaine de caract\u00e8re quelconque mais non vide,\n     et renvoie un dictionnaire du nombre d'occurrence de chaque mot\n     de la chaine, en minuscule. On ne passera en argument que des \n     chaines sans caract\u00e8res de ponctuation.\n    Par exemple :\n    &gt;&gt;&gt; occurenceMot(\"Le petit chien\")\n    {'le': 1, 'petit': 1, 'chien': 1}\n    &gt;&gt;&gt; occurence(\"Le petit chien joue avec le petit chat\")\n    {'le': 2, 'petit': 2, 'chien': 1, \"joue\" : 1, \"avec\" : 1, \"chat\" : 1 }\n        \"\"\"\n    ...    \n</code></pre> <p>Indice :  on pourra utiliser la m\u00e9thode de chaine <code>split(separateur)</code> qui renvoie une liste de sous chaines cr\u00e9\u00e9 \u00e0 partir du s\u00e9parateur pass\u00e9 en argument :</p> <pre><code>&gt;&gt;&gt; \"Martine va \u00e0 la plage\". split(\" \")\n[\"Martine\", \"va\", \"\u00e0\", \"la\", \"plage\"]\n</code></pre> </li> </ol> <p>A venir !</p> <p>Exercice 3</p> <p>(D'apr\u00e8s Romain Tavenard, Universit\u00e9 de Rennes 2)</p> \u00c9nonc\u00e9R\u00e9ponses <p>On dispose d'un dictionnaire associant \u00e0 des noms de commerciaux d'une soci\u00e9t\u00e9 le nombre de ventes qu'ils ont r\u00e9alis\u00e9es. Par exemple :</p> <pre><code>ventes={\"Dupont\" : 14, \"Hervy\" : 19, \"Geoffroy\" : 15, \"Layec\" : 21}\n</code></pre> <ol> <li>\u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nombre total de ventes dans la soci\u00e9t\u00e9.</li> <li>\u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nom du vendeur ayant r\u00e9alis\u00e9 le plus de ventes. Si plusieurs vendeurs sont ex-\u00e6quo sur ce crit\u00e8re, la fonction devra retourner le nom de l'un d'entre eux.et</li> </ol> <p>A venir !</p>"},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/","title":"Algorithmes Gloutons","text":""},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#algorithmes-gloutons","title":"Algorithmes Gloutons","text":"<p>D'apr\u00e8s pixees.fr</p>"},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#problemes-doptimisations","title":"Probl\u00e8mes d'optimisations","text":""},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#le-probleme-du-sac-a-dos","title":"Le probl\u00e8me du sac \u00e0 dos","text":"<p>Le probl\u00e8me du sac \u00e0 dos (<code>KP</code> ou Knapsack Problem)</p> <p>Un cambrioleur poss\u00e8de un sac \u00e0 dos d'une contenance maximum de 30 Kg. Au cours d'un de ses cambriolages, il a la possibilit\u00e9 de d\u00e9rober 4 objets A, B, C et D. Voici un tableau qui r\u00e9sume les caract\u00e9ristiques de ces objets : </p> Objet A B C D Masse 13 Kg 22 Kg 8 Kg 10 Kg Valeur 700 \u20ac 400 \u20ac 300  \u20ac 300 \u20ac <ol> <li>D\u00e9terminez les objets que le cambrioleur aura int\u00e9r\u00eat \u00e0 d\u00e9rober, sachant que :<ul> <li>tous les objets d\u00e9rob\u00e9s devront tenir dans le sac \u00e0 dos (30 Kg maxi) ;</li> <li>le cambrioleur cherche \u00e0 obtenir un gain maximum.</li> </ul> </li> <li>Existe-t-il d'autres solutions ?</li> </ol> <p>Optimisation</p> <p>Ce genre de probl\u00e8me est un grand classique en informatique, on parle de probl\u00e8mes d'optimisation. Il existe souvent plusieurs solutions possibles \u00e0 un probl\u00e8me d'optimisation, mais toutes ne sont pas \u00e9quivalentes. En effet on cherche une solution dite optimale (dans notre exemple on cherche le plus grand gain possible). Souvent, dans les probl\u00e8mes d'optimisation, il n'existe pas une solution optimale, mais plusieurs solutions optimales, et  r\u00e9soudre un probl\u00e8me d'optimisation c'est donc trouver une des solutions optimales. </p> <p>Solution na\u00efve</p> <p>En apparence, la solution la plus simple dans le cas du sac \u00e0 dos serait d'\u00e9crire un algorithme qui teste toutes les combinaisons d'objets possibles et qui retient les solutions qui offrent un gain maximum.</p> <p>Dans notre cas pr\u00e9cis, avec seulement 4 objets, cette solution pourrait \u00eatre envisag\u00e9e, mais avec un plus grand nombre d'objets, le temps de calcul, m\u00eame pour un ordinateur tr\u00e8s puissant, deviendrait trop important. En effet l'algorithme qui testerait toutes les combinaisons possibles aurait une complexit\u00e9 en temps en \\(\\mathrm{O}(a^n)\\) avec \\(a\\) une constante et \\(n\\) le nombre d'objets.</p> <p>On parle dans ce cas d'une complexit\u00e9 exponentielle (en temps), ce qu'on peut voir dans le graphique suivant (ex\u00e9cut\u00e9 sur mon ordinateur personnel).</p> <p></p> <p>Les algorithmes \u00e0 complexit\u00e9 exponentielle ne sont pas efficaces pour r\u00e9soudre des probl\u00e8mes, le temps de calcul devient beaucoup trop important quand \\(n\\) devient tr\u00e8s grand. </p> Pour les cracks Coder la solution na\u00efveUne solution hors programme <p>Cette question est vraiment difficile !</p> <p>Comment faire pour tester toutes les solutions possibles, sachant que la liste des objets est donn\u00e9e sous la forme d'un dictionnaire (ou d'une liste de dictionnaire), o\u00f9 chaque objet est repr\u00e9sent\u00e9 par deux cl\u00e9s <code>masse</code> et <code>valeur</code> ?</p> <p>La solution est de cr\u00e9er une liste de tous les sous-ensembles possibles \u00e0 partir d'une donn\u00e9e d'objets, puis de calculer pour chacun de ces sous-ensemble la masse et la valeur totale...mais c'est complexe surtout sans ma\u00eetrise pas la r\u00e9cursivit\u00e9 (au programme de Terminale).</p> <p>Vous pouvez toujours chercher, une solution \u00e9tant propos\u00e9e dans l'onglet suivant.</p> <pre><code>def makeTree(T : list)  -&gt;list :\n\"\"\"fonction r\u00e9cursive renvoyant l'ensemble des sous-ensembles non vides d'un ensemble\nde d\u00e9part donn\u00e9 sous la forme d'une liste. L'ensemble de d\u00e9part doit \u00eatre non vide\"\"\"\n    #Cas de base : la liste ne contient qu'un seul \u00e9l\u00e9ment\n    if len(T) == 1 :\n        return [T]\n    else :\n        comp = [] # Sinon cr\u00e9ation de la liste des sous-ensembles\n        nT = T[:] #on cr\u00e9\u00e9 une copie locale de la liste de d\u00e9part\n        for e in T : # Pour chaque \u00e9l\u00e9ment de la liste de d\u00e9part\n            comp.append([e]) # On ajoute le singleton correspondant\n            nT.remove(e) #On le supprime de la liste locale\n            for ne in makeTree(nT) : # On ex\u00e9cute r\u00e9cursivemment la fonction makeTree\n                #et pour chaque sous-ensemble obtenu, on rajoute l'\u00e9l\u00e9ment e\n                comp.append([e]+ne)\n        return comp\n\ndef sacADosNaif(listeObj : dict, masseMax : int) -&gt; list :\n\"\"\" Calcule la solution optimale pour le probl\u00e8me du sac \u00e0 dos\"\"\"\n    optimale = []\n    valeurOptimale = 0\n    for se in makeTree([ name for name in listeObj.keys()]) :\n        masseLocale = sum([listeObj[nom]['masse'] for nom in se])\n        valeurLocale = sum([listeObj[nom]['valeur'] for nom in se])\n        if valeurLocale &gt;valeurOptimale  and masseLocale&lt;=masseMax :\n            valeurOptimale = valeurLocale\n            optimale = se\n    return optimale, valeurOptimale\n</code></pre>"},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#une-solution-gloutonne","title":"Une solution gloutonne","text":"<p>Solution \u00ab Gloutonne \u00bb</p> <p>La r\u00e9solution d'un probl\u00e8me d'optimisation se fait g\u00e9n\u00e9ralement par \u00e9tapes : \u00e0 chaque \u00e9tape on doit faire un choix. Par exemple, dans le probl\u00e8me du sac \u00e0 dos, nous ajoutons les objets un par un, chaque ajout d'un objet constitue une \u00e9tape : \u00e0 chaque \u00e9tape on doit choisir un objet \u00e0 mettre dans le sac.</p> <p>Le principe de la m\u00e9thode gloutonne(greedy en anglais) est de, \u00e0 chaque \u00e9tape de la r\u00e9solution du probl\u00e8me, faire le choix qui semble le plus pertinent sur le moment, avec l'espoir qu'au bout du compte, cela nous conduira vers une solution optimale du probl\u00e8me \u00e0 r\u00e9soudre. Autrement dit, on fait des choix localement optimaux, ce qui signifie de faire le choix qui semble le plus pertinent \u00e0 chaque \u00e9tape, dans l'espoir que ces choix m\u00e8neront \u00e0 une solution globalement optimale. </p> <p>M\u00e9thode gloutonne</p> Enonc\u00e9Solutions <p>Comme on cherche \u00e0 optimiser au maximum le gain, on va s'int\u00e9resser \u00e0 la \u00ab valeur massique \u00bb de chaque objet.</p> <ol> <li> <p>Compl\u00e9ter le tableau suivant :</p> Objet A B C D Valeur Massique (en \u20ac/Kg) </li> <li> <p>Trier le tableau par valeur d\u00e9croissante de la valeur massique.</p> </li> <li>Enfin, on remplit le sac en prenant les objets dans l'ordre et en s'arr\u00eatant d\u00e8s que la masse limite est atteinte.\\</li> <li>Quelle est la composition du sac ?</li> <li>Est-elle optimale ?</li> </ol> <p>A venir</p> <p>Comparaison des temps d'ex\u00e9cution entre algorithme na\u00eff et algorithme glouton</p> <p>Sur les m\u00eames valeurs, voici une comparaison entre les temps d'\u00e9x\u00e9cution des deux algorithmes :</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>ATTENTION Il faut bien comprendre que l'algorithme glouton ne donne pas forc\u00e9ment la m\u00eame r\u00e9ponse que l'algorithme na\u00eff, c'est-\u00e0-dire la solution optimale ! Cependant les diff\u00e9rences de temps d'ex\u00e9cution lorsque \\(n\\) est suffisamment grand sont telles que la solution approch\u00e9e donn\u00e9e par une m\u00e9thode gloutonne est bien souvent acceptable.</p> <p>Code en Python</p> Enonc\u00e9 <p>La liste des objets et leur poids est donn\u00e9 par un dictionnaire nom : (masse; valeur). </p><pre><code>objets = {\n\"A\" : {'masse' : 13, 'valeur' : 700},\n\"B\" : {'masse' : 12, 'valeur' : 400},\n\"C\" : {'masse' : 8, 'valeur' : 300},\n\"D\" : {'masse' : 10, 'valeur' : 300},\n        }\n</code></pre> <ol> <li>Ecrire une fonction Python qui renvoie un taleau de tuples <code>(nom ; valeur_massique)</code> \u00e0 partir du dictionnaire pass\u00e9 en argument.</li> <li>Trier ce tableau par ordre d\u00e9croissant des valeurs massiques.</li> <li>Ecrire une fonction Python qui finalise l'algorithme glouton.</li> </ol>"},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#probleme-du-rendu-de-monnaie","title":"Probl\u00e8me du rendu de monnaie","text":""},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#la-situation","title":"La situation","text":"<p>Le probl\u00e8me du rendu de monnaie</p> <p>Nous sommes des commer\u00e7ants, nous avons \u00e0 notre disposition un nombre illimit\u00e9 de pi\u00e8ces de : </p> <ul> <li>1 centime</li> <li>2 centimes</li> <li>5 centimes</li> <li>10 centimes</li> <li>20 centimes</li> <li>50 centimes</li> <li>1 euro</li> <li>2 euros</li> </ul> <p>Nous devons rendre la monnaie \u00e0 un client \u00e0 l'aide de ces pi\u00e8ces. La contrainte est d'utiliser le moins de pi\u00e8ces possible. </p> <p>L'algorithme</p> Enonc\u00e9 <ol> <li>Trouvez une m\u00e9thode gloutonne permettant d'effectuer un rendu de monnaie (en utilisant le moins possible de pi\u00e8ces).</li> <li>Vous devez rendre la somme de 2,63 \u20ac.<ol> <li>Appliquez la m\u00e9thode que vous venez de mettre au point.</li> <li>Combien de pi\u00e8ces avez-vous utilis\u00e9es ? </li> <li>La solution trouv\u00e9e est-elle optimale ?</li> </ol> </li> <li>Vous devez rendre la somme de 4,05 \u20ac.<ol> <li>Appliquez la m\u00e9thode que vous venez de mettre au point.</li> <li>Combien de pi\u00e8ces avez-vous utilis\u00e9es ? </li> <li>La solution trouv\u00e9e est-elle optimale ?</li> </ol> </li> </ol>"},{"location":"NSI/Premiere/C07/Algorithmes_Gloutons/#le-code","title":"Le code","text":"<p>\u00c0 partir de la m\u00e9thode gloutonne que vous avez \u00e9labor\u00e9e ci-dessus, \u00e9crivez un algorithme glouton qui permettra de d\u00e9terminer le nombre minimal de pi\u00e8ces \u00e0 utiliser pour une somme donn\u00e9e. Vous proposerez ensuite une impl\u00e9mentation en Python de votre algorithme. Vous testerez votre programme avec une somme \u00e0 rendre de 2 euros et 63 centimes. </p> <p>Autres syst\u00e8mes de monnaie</p> <p>Le probl\u00e8me du rendu de monnaie est NP-complet dans le cas g\u00e9n\u00e9ral, c'est-\u00e0-dire tr\u00e8s difficile \u00e0 r\u00e9soudre. Cependant pour certains syst\u00e8mes de monnaie dits canoniques, l'algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques.</p> <p>Dans un syst\u00e8me de monnaie non-canonique ne poss\u00e9dant que 3 pi\u00e8ces de valeurs 1, 3 et 4, quelle est la solution optimale du probl\u00e8me du rendu de monnaie pourt une valeur de 6 ? Que donne l'algorithme glouton ?</p> Pour les cracks <p>Pour ceux int\u00e9ress\u00e9s, voici les fichiers permettant de visualiser la comparaison entre les m\u00e9thodes :</p> <ul> <li> <p>sacADos_Naif_Glouton.py :</p> <ul> <li><code>NREP</code> correspond au nombre maximum d'objets test\u00e9s ;</li> <li><code>LISSAGE</code> correspond au nombre de r\u00e9p\u00e9titions effectu\u00e9es pour lisser les r\u00e9sultats</li> <li><code>FACTEUR_TAILLE</code> correspond \u00e0 la taille du sac \u00e0 dos (d\u00e9pend du nombnre d'objets).</li> </ul> <p>Ce fichier cr\u00e9e un fichier binaire <code>compareGreedyNatural.dat</code> qui contient les donn\u00e9es de temps des m\u00e9thodes naives et gloutonnes, utilis\u00e9es par le fichier suivant.</p> </li> <li> <p>plotCompare.py permet d'obtenir une animation matplotlib comparant les m\u00e9thodes.</p> </li> </ul>"},{"location":"NSI/Premiere/C08/Client_Serveur/","title":"Transmission Client-Serveur","text":""},{"location":"NSI/Premiere/C08/Client_Serveur/#transmissions-client-serveur","title":"Transmissions client-serveur","text":"<p>Tr\u00e8s fortement inspir\u00e9, voir carr\u00e9ment recopi\u00e9 depuis : http://lesmathsduyeti.fr/fr/lycee/nsi-premiere/interactions-client-serveur-flask</p> <p>Mod\u00e8le client-serveur</p> <p>Pour simplifier, le mod\u00e8le client-serveur d\u00e9signe un mode de communication entre logiciels : l'un qualifi\u00e9 de client envoie des requ\u00eates; l'autre, le serveur, y r\u00e9pond.</p> <p>Dans le cas du web, le logiciel client est le navigateur et le protocole utilis\u00e9 pour communiquer avec le logiciel serveur est HTTP (ou HTTPS). Le logiciel serveur est un logiciel sp\u00e9cialis\u00e9 dans le traitement des requ\u00eates HTTP, comme <code>Apache</code> ou <code>NGinx</code>. Ces logiciels sont \u00e9paul\u00e9s par des programmes qui peuvent \u00eatre \u00e9crits dans diff\u00e9rents langages, comme PHP ou Python.</p> <p></p> <p>Pour ce TP, nous allons \u00eatre dans une situation particuli\u00e8re : le logiciel client et le logiciel serveur seront sur la m\u00eame machine.</p>"},{"location":"NSI/Premiere/C08/Client_Serveur/#installation-de-flask-et-premiers-tests","title":"Installation de Flask et premiers tests","text":""},{"location":"NSI/Premiere/C08/Client_Serveur/#installation-de-flask-et-demarrage-du-serveur","title":"Installation de Flask et d\u00e9marrage du serveur","text":"<p>Flask</p> <p>Flask est un micro framework (ou micro infrastructure logicielle) open-source de d\u00e9veloppement web en Python. Il est class\u00e9 comme micro framework, car il est tr\u00e8s l\u00e9ger. Flask a pour objectif de garder un noyau simple, mais extensible. Il n'int\u00e8gre pas de syst\u00e8me d'authentification, pas de couche d'abstraction de base de donn\u00e9es, ni d'outil de validation de formulaires. Cependant, de nombreuses extensions permettent d'ajouter facilement des fonctionnalit\u00e9s.</p> <p>M\u00e9thodologie</p> <ol> <li>Installer <code>Flask</code> par l'interm\u00e9diaire du gestionnaire de modules de <code>Thonny</code> <code>Tools &gt; Manage packages</code>. La derni\u00e8re version est la <code>2.1.2</code> (au 06 juin 2022).</li> <li> <p>Cr\u00e9er un fichier <code>Tuto_Flask.py</code> dans <code>Thonny</code>, puis taper les lignes suivantes et sauvegardez le fichier.</p> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index() :\n    return \"Hello World !\"\n\nif __name__ == \"__main__\" :\n    app.run(debug=True)\n</code></pre> </li> <li> <p>Pour une raison qui m'est pour l'instant inconnue, Thonny arr\u00eate pr\u00e9matur\u00e9ment l'ex\u00e9cution du programme, si on le lance par l'interm\u00e9diaire de la commande <code>run</code>. Il est donc n\u00e9cessaire de le lancer par la ligne de commande.</p> <ol> <li>Ouvrir la ligne de commande de <code>Thonny</code> : <code>Tools &gt; Open system shell...</code></li> <li> <p>Ex\u00e9cuter la commande      </p><pre><code>python Tuto_Flask.py\n</code></pre>     Patientez jusqu'\u00e0 avoir la derni\u00e8re ligne du code ci-dessous : <p></p> <p>NE FERMEZ SURTOUT PAS LA CONSOLE !</p> <p>Bravo !</p> <p>Bravo, vous avez maintenant un serveur web local qui fonctionne sur votre ordinateur ! Celui-ci \u00e9coute toutes les entr\u00e9es \u00e0 destination de <code>localhost</code> ( ou <code>h\u00f4te local</code>), qui est le nom DNS correspondant \u00e0 l'adresse IP <code>127.0.0.1</code>. ce serveur acceptera les requ\u00eates qui lui sont envoy\u00e9es sur le port TCP 5000.</p> </li> </ol> </li> <li> <p>Dans <code>Firefox</code>, tapez l'adresse <code>127.0.0.1:5000</code>.</p> <p>On obtient donc... une page web, certes sommaire, mais elle a bien \u00e9t\u00e9 renvoy\u00e9e par le serveur. On peut le voir dans la console par la ligne :</p> <pre><code>127.0.0.1 - - [06/Jun/2022 21:26:21] \"GET / HTTP/1.1\" 200 -\n</code></pre> <p>Nous voyons ainsi l'adresse du client (ici <code>127.0.0.1</code>) qui effectue une requ\u00eate <code>HTTP</code> ( version 1.1)  de type GET. Le code 200 signifie le succ\u00e8s de la requ\u00eate .</p> </li> <li> <p>Dans <code>Firefox</code>, tapez l'adresse <code>127.0.0.1:5000/Accueil</code>.</p> <p>On obtient donc... une page web <code>Not Found</code> </p> <pre><code>127.0.0.1 - - [06/Jun/2022 21:27:11] \"GET /Accueil HTTP/1.1\" 404 -\n</code></pre> <p>C'est donc que le chemin vers la page <code>Accueil</code> n'a pas \u00e9t\u00e9 trouv\u00e9. Le serveur renvoie donc la classique erreur 404.</p> </li> </ol>"},{"location":"NSI/Premiere/C08/Client_Serveur/#analyse-du-code-flask","title":"Analyse du code Flask","text":"<p>Comment comprendre le code que vous avez utilis\u00e9 ? Rassurez-vous, vous devez le comprendre, mais pas savoir le produire en partant de rien !</p> <p>Allons-y \u00e9tape par \u00e9tape :</p> <p></p><pre><code>from flask import Flask\n</code></pre> Cette ligne permet d'importer, parmi les m\u00e9thodes et fonctions du module <code>flask</code>, l'objet <code>Flask</code> qui permet de cr\u00e9er une application web. <p></p><pre><code>app = Flask(__name__)\n</code></pre> Cr\u00e9er une instance d'objet <code>app</code> \u00e0 l'aide du constructeur <code>Flask</code>. <p></p><pre><code>@app.route('/')\n</code></pre> Nous utilisons ici un d\u00e9corateur gr\u00e2ce \u00e0 la commande @ (cette notion de d\u00e9corateur ne sera pas trait\u00e9e en NSI). Vous devez juste comprendre la fonction qui suit ce d\u00e9corateur (c'est-\u00e0-dire la fonction <code>index</code>), sera ex\u00e9cut\u00e9e dans le cas o\u00f9 le serveur web recevra une requ\u00eate HTTP avec une URL correspondant \u00e0 la racine du site (<code>/</code>), c'est-\u00e0-dire, dans notre exemple, le cas o\u00f9 on saisie dans la barre d'adresse <code>127.0.0.1:5000/</code> ou <code>localhost:5000/</code> ou m\u00eame simplement <code>localhost:5000</code>. <pre><code>def index():\n    return \"Hello World !\"\n</code></pre> <p>C'est la fonction qui sera appel\u00e9e lorsqu'un client demandera l'adresse <code>localhost:5000/</code>. Elle renvoie toujours le m\u00eame contenu, on parlera de contenu statique. Plus tard nous verrons comment faire \u00e9voluer ce contenu en fonction de param\u00e8tres.</p> <pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>Ces 2 lignes permettent de d\u00e9marrer le serveur et l'instance de l'application web, en mode <code>debug</code>. C'est un tr\u00e8s bon moyen de visualiser les requ\u00eates vers le serveur. </p>"},{"location":"NSI/Premiere/C08/Client_Serveur/#ajouter-une-page","title":"Ajouter une page","text":"<p>L'objectif est de cr\u00e9er une nouvelle page <code>contact</code>, qui sera donc accessible par l'URL <code>localhost:5000/contact</code>.</p> <p>M\u00e9thodologie</p> <ol> <li> <p>Apr\u00e8s la fonction <code>index</code>, mais avant l'instruction <code>if __name__ ...</code>, ins\u00e9rez le code suivant, en modifiant les informations pour y mettre les v\u00f4tres :</p> <pre><code>@app.route('/contact')\ndef presentation():\n    message = \"&lt;h1&gt; Pr\u00e9sentation du webmaster &lt;/h1&gt;\"\n    message += \"&lt;h2&gt; Kakashi Hatake &lt;/h2&gt;\"\n    message += \"&lt;p&gt;  J\u00f4nin du village cach\u00e9 de Konoha, Sixi\u00e8me Hokage &lt;/p&gt;\"\n    message += \"\"\"&lt;a href=\"mailto:kakashihatake@konoha.jp\"&gt;Mon mail&lt;/a&gt; \"\"\"\n    return message\n</code></pre> </li> <li> <p>Sauvegardez le fichier. Normalement, le serveur \u00e9tant en mode <code>debug</code>, il devrait red\u00e9marrer et prendre en compte imm\u00e9diatement vos changements (dans le cas contraire, il suffit de relancer le script Python). Rendez-vous \u00e0 l'adresse de la page de contact.</p> <p>Le code renvoy\u00e9 par une fonction d\u00e9cor\u00e9e par une route peut donc \u00eatre du code HTML. Il peut \u00eatre charg\u00e9 depuis un fichier ext\u00e9rieur, comme nous avons d\u00e9j\u00e0 vu avec la fonction <code>open()</code> par exemple... Mais les cr\u00e9atrices et cr\u00e9ateurs de Flask ont pr\u00e9vu bien plus simple !</p> </li> <li> <p>Cr\u00e9er une page accessible depuis l'adresse <code>127.0.0.1:5000/loisirs</code> pr\u00e9sentant en quelques mots sur vos loisirs.</p> </li> </ol>"},{"location":"NSI/Premiere/C08/Client_Serveur/#le-modele-mvc","title":"Le mod\u00e8le MVC","text":""},{"location":"NSI/Premiere/C08/Client_Serveur/#modele-vue-controleur","title":"Mod\u00e8le Vue Contr\u00f4leur","text":"<p>Pour l'instant tout fonctionne, mais il y a encore des choses que l'on peut am\u00e9liorer :</p> <ul> <li>il n'y a pas d'interaction avec l'utilisateur, nous verrons cela avec les param\u00e8tres des fonctions et les formulaires ;</li> <li>taper du code HTML dans une fonction python, ce n'est pas tr\u00e8s propre ! </li> </ul> <p>Pour cette derni\u00e8re remarque, nous allons parler des templates (ou gabarits en fran\u00e7ais). Mais avant, un peu de th\u00e9orie sur le mod\u00e8le MVC.</p> <p>MVC</p> <p>Nous parlons souvent de l'architecture MVC (ce n'est pas uniquement li\u00e9 \u00e0 Flask). Il s'agit d'un mod\u00e8le distinguant plusieurs r\u00f4les pr\u00e9cis d'une application, qui doivent \u00eatre accomplis. Comme son nom l'indique, l'architecture Mod\u00e8le-Vue-Contr\u00f4leur est compos\u00e9e de trois entit\u00e9s distinctes, chacune ayant son propre r\u00f4le \u00e0 remplir. Voici un sch\u00e9ma qui r\u00e9sume cela :</p> <p></p> <p>Le mod\u00e8le MVC permet de bien organiser son code source. Il va vous aider \u00e0 savoir quels fichiers cr\u00e9er, mais surtout \u00e0 d\u00e9finir leur r\u00f4le. Le but de MVC est justement de s\u00e9parer la logique du code en trois parties que l'on retrouve dans des fichiers distincts :</p> <ul> <li> <p>Mod\u00e8le : cette partie g\u00e8re les donn\u00e9es de votre site. Son r\u00f4le est d'aller r\u00e9cup\u00e9rer les informations \u00ab brutes \u00bb dans la base de donn\u00e9es (nom, pr\u00e9nom, derni\u00e8re connexion d'un utilisateur inscrit d'un site, par exemple) de les organiser et de les assembler pour qu'elles puissent ensuite \u00eatre trait\u00e9es par le contr\u00f4leur. On y trouve donc entre autres les requ\u00eates aux bases de donn\u00e9es (programme de Terminale NSI).</p> </li> <li> <p>Vue : cette partie se concentre sur l'affichage. Elle ne fait presque aucun calcul et se contente de r\u00e9cup\u00e9rer des variables pour savoir ce qu'elle doit afficher. On y trouve essentiellement du code HTML mais aussi quelques boucles et conditions python tr\u00e8s simples, pour afficher par exemple une liste de messages. Elle utilise en particulier des templates, c'est-\u00e0-dire des mod\u00e8les de pages HTML qui seront utilis\u00e9s par la vue pour g\u00e9n\u00e9rer les pages HTML envoy\u00e9es au client. On peut concevoir ces templates comme des textes \u00e0 trous dans lesquels seront ins\u00e9r\u00e9es les donn\u00e9es calcul\u00e9es par le contr\u00f4leur.</p> </li> <li> <p>Contr\u00f4leur : cette partie g\u00e8re la logique du code qui prend des d\u00e9cisions. C'est en quelque sorte l'interm\u00e9diaire entre le mod\u00e8le et la vue : le contr\u00f4leur va demander au mod\u00e8le les donn\u00e9es, les analyser, prendre des d\u00e9cisions et renvoyer le texte \u00e0 afficher \u00e0 la vue. Le contr\u00f4leur contient exclusivement du python (dans notre cas). C'est notamment lui qui d\u00e9termine si le visiteur a le droit de voir la page ou non (gestion des droits d'acc\u00e8s).</p> </li> </ul>"},{"location":"NSI/Premiere/C08/Client_Serveur/#un-exemple-de-template","title":"Un exemple de template","text":"<p>Notre objectif est de cr\u00e9er une page d'accueil plus sympathique. Nous allons donc modifier la fonction <code>index</code>.</p> <p>M\u00e9thodologie</p> <ol> <li>Cr\u00e9er un dossier <code>templates</code> dans le dossier contenant le fichier <code>Tuto_Flask.py</code>.</li> <li> <p>Dans ce dossier, cr\u00e9er un fichier <code>index.html</code> avec le code suivant :</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Ma page d'accueil&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;h1&gt;Un site qui d\u00e9chire.&lt;/h1&gt;\n      &lt;h2&gt;Bonjour cher visiteur !&lt;/h2&gt;\n      &lt;p&gt;Vous voici sur mon site \u00e0 moi.&lt;/p&gt;\n      &lt;a href=\"http://127.0.0.1:5000/contact\"&gt;Lien vers les contacts.&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Nous allons maintenant modifier le fichier <code>Tuto_Flask.py</code>, pour lui permettre d'utiliser ce template. </p> <ol> <li> <p>Modifier la premi\u00e8re ligne par :</p> <pre><code>from flask import Flask,render_template\n</code></pre> </li> <li> <p>Modifiez la fonction <code>index</code> comme suit :</p> <pre><code>@app.route('/')\ndef index():\n    return render_template(\"index.html\")\n</code></pre> </li> <li> <p>Visualisez le r\u00e9sultat dans votre navigateur.</p> </li> </ol> </li> <li> <p>Modifiez la  fonction qui permet l'affichage de la page de contact de mani\u00e8re \u00e0 ce qu'elle utilise un template.</p> </li> </ol>"},{"location":"NSI/Premiere/C08/Client_Serveur/#dynamiser-les-pages","title":"Dynamiser les pages","text":""},{"location":"NSI/Premiere/C08/Client_Serveur/#introduire-des-variables","title":"Introduire des variables","text":"<p>Pour l'instant, le serveur Flask produit toujours les m\u00eames pages. Mais Flask permet de g\u00e9n\u00e9rer des vues (pages HTML) en fonction de param\u00e8tres, de formulaires ...</p> <p>Commen\u00e7ons par am\u00e9liorer l'affichage de notre page d'accueil en personnalisant l'affichage de la salutation.</p> <p>M\u00e9thodologie</p> <ol> <li> <p>Modifiez la page <code>index.html</code> comme cela :</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Ma page d'accueil&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;h1&gt;Un site qui d\u00e9chire.&lt;/h1&gt;\n      &lt;h2&gt;Bonjour {{prenom}} {{nom}} !&lt;/h2&gt;\n      &lt;p&gt;Vous voici sur mon site \u00e0 moi.&lt;/p&gt;\n      &lt;a href=\"./contact\"&gt;Lien vers les contacts.&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Modifiez la fonction <code>index</code> du fichier <code>Tuto_Flask.py</code> comme suit :</p> <pre><code>@app.route('/')\ndef index():\n    p = \"Kakashi\"\n    n = \"Hatake\"\n    return render_template(\"index.html\",prenom = p, nom = n)\n</code></pre> </li> <li> <p>Enregistrez et allez voir le r\u00e9sultat dans votre navigateur. </p> <p>Moteur de Template Jinja</p> <p>Remarquez le code <code>{{prenom}} {{nom}}</code> dans le template. Il s'agit de syntaxe <code>Jinja</code>. Le contr\u00f4leur de Flask utilise <code>Jinja</code> pour remplacer ces variables par celles qui sont fournies par la fonction <code>index</code>.</p> <p><code>Jinja</code> permet bien d'autres actions, et est particuli\u00e8rement adapt\u00e9 pour la cr\u00e9ation de grosses applications web.</p> <p>Pour l'instant, il faut changer \u00e0 la main les variables pour que le nom affich\u00e9 soit le bon, MAIS ce n'est que le d\u00e9but. Nous verrons plus tard comment, avec un formulaire, nous pourrons adapter la page \u00e0 l'utilisateur.</p> </li> <li> <p>Modifiez le d\u00e9but du fichier <code>Tuto_Flask.py</code>  avec :     </p><pre><code>from flask import Flask,render_template\nimport datetime\nfrom math import pi\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    p = \"Kakashi\"\n    n = \"Hatake\"\n    date = datetime.datetime.now()\n    heure = date.hour\n    minute = date.minute\n    seconde = date.second\n    return render_template(\"index.html\",prenom = p,\n     nom = n, heure = heure, minute=minute, seconde=seconde)\n</code></pre> </li> <li> <p>Modifiez le fichier <code>index.html</code> en ajoutant la ligne suivante entre les balises <code>&lt;body&gt;</code> et <code>&lt;/body&gt;</code> :</p> <pre><code>&lt;p&gt; Il est {{heure}} h {{minute}} m {{seconde}} s (heure du serveur !)&lt;/p&gt;\n</code></pre> <p>Testez l'affichage dans votre navigateur.</p> </li> <li> <p>Modifiez la fonction <code>contact</code> et le template associ\u00e9 pour qu'il affiche une phrase du genre \u00ab Je suis n\u00e9 le xx/xx/xxxx cela fait xxxx jours \u00bb.</p> <p>Quelques indices</p> <p>Quelques indices :</p> <ul> <li><code>datetime.datetime(a,m,j)</code> permet de cr\u00e9er un objet <code>date</code> de l'ann\u00e9e <code>a</code>, mois <code>m</code> et jours <code>j</code> ;</li> <li>Pour r\u00e9cup\u00e9rer le nombre de jour d'un objet date, if faut ajouter l'attribut <code>.day</code> \u00e0 la suite de l'objet <code>date</code>.</li> </ul> </li> </ol>"},{"location":"NSI/Premiere/C08/Client_Serveur/#utilisation-dun-formulaire-avec-la-methode-get","title":"Utilisation d'un formulaire avec la m\u00e9thode GET","text":"<p>M\u00e9thodologie</p> <ol> <li> <p>Modifiez le fichier <code>index.html</code> en introduisant le formulaire suivant juste avant la balise <code>&lt;/body&gt;</code> :</p> <pre><code>&lt;form action=\"./resultat\" method=\"get\"&gt;\n    &lt;label&gt;Nom&lt;/label&gt; : &lt;input type=\"text\" name=\"nom\" /&gt;\n    &lt;label&gt;Pr\u00e9nom&lt;/label&gt; : &lt;input type=\"text\" name=\"prenom\" /&gt;\n    &lt;input type=\"submit\" value=\"Envoyer\" /&gt;\n&lt;/form&gt;\n</code></pre> </li> <li> <p>Actualisez ou affichez la page d'accueil, et compl\u00e9tez le formulaire. Que se passe-t-il quand vous cliquez sur le bouton <code>Envoyer</code> ?</p> <p>C'est tout-\u00e0-fait normal ! En effet le code  :</p> <pre><code>&lt;form action=\"./resultat\" method=\"get\"&gt;\n</code></pre> <p>signifie que l'envoi du formulaire se fait avec la m\u00e9thode <code>GET</code> et que la page affich\u00e9e ensuite sera celle de l'adresse <code>127.0.0.1/resultat</code>. Or il n'y a pas de route associ\u00e9e \u00e0 cette adresse, et encore moins de template.</p> <p>Cependant vous pouvez observer que l'adresse obtenue dans la barre d'adresse est du type </p> <pre><code>http://localhost:5000/resultat?nom=HATAKE&amp;prenom=Kakashi\n</code></pre> <p>Les donn\u00e9es envoy\u00e9es apparaissent dans l'URL. C'est la m\u00e9thode <code>GET</code> - qui est une m\u00e9thode g\u00e9n\u00e9rale de HTTP, qui veut cela.</p> <p>Avec cette m\u00e9thode, les donn\u00e9es du formulaire seront encod\u00e9es dans une URL. Celle-ci est compos\u00e9e du nom de la page ou du script \u00e0 charger avec les donn\u00e9es de formulaire empaquet\u00e9e dans une chaine. Les donn\u00e9es sont s\u00e9par\u00e9es de l'adresse de la page par le code <code>?</code> et entre elles par le code <code>&amp;</code>.</p> <p>Imaginez si Facebook faisait \u00e7a quand vous entre votre login et votre mot de passe...</p> <p>M\u00e9thode GET</p> <p>La m\u00e9thode <code>GET</code> est limit\u00e9e :</p> <ul> <li>Elle ne s\u00e9curise pas du tout l'envoi de donn\u00e9es ;</li> <li>Les donn\u00e9es de formulaire doivent \u00eatre uniquement des codes ASCII.</li> <li>La taille d'une URL est limit\u00e9e \u00e0 par le serveur, souvent un peu plus de 2000 caract\u00e8res, en comprenant les codes d'\u00e9chappement.</li> <li>Il est recommand\u00e9 d'utiliser cette m\u00e9thode dans des cas o\u00f9 l'on ne modifie pas de base de donn\u00e9es pour des raisons \u00e9videntes de s\u00e9curit\u00e9. Dans un cas comme le notre cela suffira car nous allons simplement lire les donn\u00e9es pour faire un affichage.</li> </ul> </li> <li> <p>Dans le fichier <code>Tuto_Flask.py</code>, ajoutez l'import </p> <pre><code>from flask import Flask,render_template,request\n</code></pre> </li> <li> <p>Ajoutez la route et la fonction suivante :</p> <pre><code>@app.route('/resultat',methods = ['GET','POST'])\ndef salutation():\n    if request.method == 'GET':\n        return request.args\n    else: \n        return \"post\"\n</code></pre> </li> <li> <p>Actualisez et remplissez \u00e0 nouveau le formulaire.</p> <p><code>request.args</code> va s'afficher, et vous pouvez constater que c'est un objet de type dictionnaire. Pour acc\u00e9der au nom il va falloir utiliser la syntaxe des dictionnaires : <code>request.args['nom']</code></p> </li> <li> <p>Cr\u00e9er un fichier <code>resultat.html</code> dans le dossier <code>templates</code>, contenant le code HTML suivant :</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Salutations !&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;Bonjour, en fait vous vous nommez {{prenom}} {{nom}} !&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Modifiez le fichier <code>Tuto_Flask.py</code>  comme ceci :</p> <pre><code>@app.route('/resultat',methods = ['GET','POST'])\ndef salutation():\n    if request.method == 'GET':\n        prenom_visiteur = request.args['prenom']\n        nom_visiteur = request.args['nom']\n        return render_template('resultat.html',\n            prenom=prenom_visiteur,nom=nom_visiteur)\n    elif request.method == 'POST':\n        return \"post\"\n</code></pre> </li> <li> <p>Testez \u00e0 nouveau. Vous devriez avoir un affichage correct.</p> </li> </ol>"},{"location":"NSI/Premiere/C08/Client_Serveur/#utilisation-dun-formulaire-avec-la-methode-post","title":"Utilisation d'un formulaire avec la m\u00e9thode POST","text":"<p>M\u00e9thodologie</p> <ol> <li> <p>Modifiez la m\u00e9thode d'envoi du formulaire  par :</p> <pre><code>&lt;form action=\"http://127.0.0.1:5000/resultat\" method=\"post\"&gt;\n</code></pre> <p>Actualisez, remplissez le formulaire et cliquez sur envoyer.</p> <p>C'est tout-\u00e0-fait normal de voir juste \u00e9crit \u00ab post\u00bb sur la page finale, car nous n'avons pas modifi\u00e9 la fonction <code>salutation</code>. Par contre vous devez observer que les donn\u00e9es ont bien disparu de l'URL. Mais heureusement elles sont quand m\u00eame transmises.</p> </li> <li> <p>Modifiez dans la fonction <code>salutation</code> les deux derni\u00e8res lignes par :</p> <pre><code>elif request.method == 'POST':\n    return request.form\n</code></pre> <p>Actualisez, remplissez le formulaire, etc...</p> <p><code>request.form</code> va s'afficher, et vous pouvez constater que rien n'a chang\u00e9 par rapport \u00e0 la m\u00e9thode POST, mis \u00e0 part la m\u00e9thode <code>.args</code> remplac\u00e9e par <code>.form</code>.</p> </li> <li> <p>Modifiez enfin la fonction <code>salutation</code> ainsi :</p> <pre><code>@app.route('/resultat',methods = ['GET','POST'])\ndef salutation():\n    if request.method == 'GET':\n        prenom_visiteur = request.args['prenom']\n        nom_visiteur = request.args['nom']\n    elif request.method == 'POST':\n        prenom_visiteur = request.form['prenom']\n        nom_visiteur = request.form['nom']\n    return render_template('resultat.html',prenom=prenom_visiteur,nom=nom_visiteur)\n</code></pre> </li> </ol> <p>M\u00e9thode POST</p> <p>La m\u00e9thode <code>POST</code> est indispensable pour :</p> <ul> <li>des codes non ASCII,</li> <li>des donn\u00e9es de taille importante,</li> <li>et elle est recommand\u00e9e pour modifier les donn\u00e9es sur le serveur, et pour les donn\u00e9es sensible comme expliqu\u00e9 par le W3C.</li> </ul>"},{"location":"NSI/Premiere/C08/Client_Serveur/#une-application-chiffre-de-cesar","title":"Une application : chiffre de C\u00e9sar","text":"<p>Vous devez cr\u00e9er une application web qui pourra coder ou d\u00e9coder un texte cod\u00e9 avec la m\u00e9thode de C\u00e9sar. La m\u00e9thode de C\u00e9sar est expliqu\u00e9e ici.</p> <p>Pour r\u00e9aliser cet exercice, il faut :</p> <ul> <li>une page <code>cesar.html</code> avec un formulaire pour saisir le texte \u00e0 coder et pour saisir la cl\u00e9 de codage ;</li> <li>une page <code>codage.html</code> qui sera appel\u00e9e apr\u00e8s l'envoi du formulaire et qui affichera le texte cod\u00e9.</li> </ul> <p>Voici le code d'une fonction permettant de coder une chaine de caract\u00e8re selon le code de C\u00e9sar : </p><pre><code>def cesar(texte, cle):\n\"\"\"\n    Fonction de codage par d\u00e9calage (c\u00e9sar)\n    Entr\u00e9es : une chaine de caract\u00e8res et un entier\n    Sortie : une chaine de caract\u00e8re\n    \"\"\"\n    texte_code = \"\"\n    for char in texte:\n        if char.isalpha(): #si le caract\u00e8re est une lettre on d\u00e9cale\n            nouvelIndice = ord(char) + cle\n            #Pour rester dans l'aplphabet, on d\u00e9cale de 26 en arri\u00e8re si besoin\n            if ord(char) &lt;= ord('z') &lt; nouvelIndice or ord(char) &lt;= ord('Z') &lt; nouvelIndice: \n                nouvelIndice -= 26\n            lettrefinale = chr(nouvelIndice)\n            texte_code += lettrefinale\n        else: #si le caract\u00e8re n'est pas une lettre, on n'y touche pas\n            texte_code += char\n    return texte_code\n</code></pre> <p>Quelques liens</p> <ul> <li>Le m\u00e9ga tutoriel Flask de Miguel Grinberg (en anglais)</li> <li>La chaine Youtube Pretty Printed (en anglais), qui offre d'excellentes vid\u00e9os sur Flask, mais aussi sur son concurrent Django.</li> </ul>"},{"location":"NSI/Premiere/C08/Histoire/","title":"Internet : historique","text":""},{"location":"NSI/Premiere/C08/Histoire/#notions-historiques-arpanet-et-internet","title":"Notions historiques : Arpanet et internet","text":"<p>Il existe beaucoup de r\u00e9seaux dans le monde, souvent compos\u00e9s de mat\u00e9riels et de logiciels diff\u00e9rents. Les personnes connect\u00e9es \u00e0 un r\u00e9seau souhaitent fr\u00e9quemment communiquer avec d'autres personnes reli\u00e9es \u00e0 d'autres r\u00e9seaux. Pour satisfaire \u00e0 cette demande, les divers r\u00e9seaux, souvent incompatibles entre eux, doivent \u00eatre interconnect\u00e9s. Un ensemble de r\u00e9seaux ainsi reli\u00e9s s'appelle un interr\u00e9seau (inter-network), l'Internet en \u00e9tant l'exemple le plus connu aujourd'hui. Il utilise des r\u00e9seaux de FAI pour connecter des r\u00e9seaux d'entreprise, des r\u00e9seaux domestiques et bien d'autres r\u00e9seaux.</p> <p>L'Internet n'est donc pas v\u00e9ritablement un r\u00e9seau mais un immense regroupement de diff\u00e9rents r\u00e9seaux qui ont en commun diff\u00e9rents protocoles et offrent certains services similaires. C'est un syst\u00e8me qui n'a pas \u00e9t\u00e9 planifi\u00e9 par quiconque et que personne ne contr\u00f4le. Pour mieux le comprendre, voyons comment il s'est d\u00e9velopp\u00e9 et pour quelles raisons.</p> <p>Les textes et illustrations ci-dessous sont extraits du livre R\u00e9seaux, Andrew Tanenbaum et David Wetherall, 5\u00e8me \u00e9dition, Pearson.</p>"},{"location":"NSI/Premiere/C08/Histoire/#att-et-paul-baran","title":"AT&amp;T et Paul Baran","text":"<p>Tout commence \u00e0 la fin des ann\u00e9es 1950, au plus fort de la Guerre Froide. Le minist\u00e8re de la d\u00e9fense dse Etats-Unis (DoD : Department of Defense) souhaitait disposer d'un r\u00e9seau de communication capable de r\u00e9sister \u00e0 une attaque nucl\u00e9aire. A l'\u00e9poque, le r\u00e9seau t\u00e9l\u00e9phonique des Etats-Unis \u00e9tait connect\u00e9 comme sur le sch\u00e9ma ci-dessous.</p> <p></p> <p>Chaque point noir repr\u00e9sente un commutateur t\u00e9l\u00e9phonique, auquel \u00e9taient reli\u00e9s des milliers de t\u00e9l\u00e9phones. Ces commutateurs locaux \u00e9taient eux-m\u00eames connect\u00e9s \u00e0 des commutateurs centraux pour former une hi\u00e9rarchie nationale, avec une redondance minimale (c'est-\u00e0-dire sans duplication de syst\u00e8mes ou de mat\u00e9riels). Le probl\u00e8me \u00e9tait que la destruction de quelques-uns seulement de ces centres pouvait conduire \u00e0 l'\u00e9clatement du syst\u00e8me, qui serait alors fragment\u00e9 en de nombreux \u00eelots isol\u00e9s.</p> <p>Vers 1960, le DoD passa un contrat avec la RAND Corporation pour trouver une solution. L'un de ses employ\u00e9s, Paul Baran, alors \u00e2g\u00e9 d'environ 35 ans, imagina une architecture hautement distribu\u00e9e et tol\u00e9rante aux pannes, illustr\u00e9e ci-dessous. La distance entre deux commutateurs \u00e9tant trop importante pour que les signaux analogiques puissent la parcourir sans distorsion, Baran proposa d'employer une technologie num\u00e9rique de commutation de paquets. Il r\u00e9digea plusieurs rapports \u00e0 l'intention du DoD, d\u00e9crivant en d\u00e9tail son id\u00e9e.</p> <p></p> <p>Le Pentagone la trouva int\u00e9ressante et demanda \u00e0 AT&amp;T, entreprise qui d\u00e9tenait \u00e0 l'\u00e9poque le monopole des communications t\u00e9l\u00e9phoniques sur le territoire des \u00c9tats-Unis, de d\u00e9velopper un prototype. AT&amp;T rejeta d'embl\u00e9e le concept de Baran. Ce n'\u00e9tait pas un jeune employ\u00e9 qui allait apprendre \u00e0 l'entreprise la plus grande et la plus riche du monde \u00e0 concevoir un syst\u00e8me t\u00e9l\u00e9phonique. Baran s'entendit finalement dire que son id\u00e9e de r\u00e9seau n'\u00e9tait pas r\u00e9alisable, et elle fut donc abandonn\u00e9e.</p>"},{"location":"NSI/Premiere/C08/Histoire/#arpa-et-arpanet","title":"ARPA et ARPAnet","text":"<p>Parall\u00e8lement, en octobre 1957, l'Union Sovi\u00e9tique prend une avance consid\u00e9rable sur les Etats-Unis dans la course vers l'espace, avec le lancement du premier satellite artificiel, Spoutnik. Le pr\u00e9sident am\u00e9ricain Eisenhower, en tentant de d\u00e9terminer les causes de ce retard, fut constern\u00e9 de constater que les arm\u00e9es de terre, de l'air et la marine am\u00e9ricaine se disputaient le budget de la recherche du Pentagone. Il r\u00e9agit imm\u00e9diatement avec la cr\u00e9ation d'une seule unit\u00e9 de recherche de la D\u00e9fense, l'ARPA (Advanced Research Projects Agency). Cette agence n'employait aucun scientifique et ne poss\u00e9dait pas non plus de laboratoires : en fait, elle ne disposait que d'un bureau et d'un budget modeste (selon les standards du Pentagone).</p> <p>Sa t\u00e2che consistait \u00e0 octroyer des subventions et des contrats aux universit\u00e9s et aux entreprises dont les projets lui semblaient prometteurs.</p> <p>Au cours de ses premi\u00e8res ann\u00e9es d'existence, l'ARPA tenta de mieux d\u00e9finir quelle devait \u00eatre sa mission.En 1962 l'ARPA soutient le projet du professeur Licklider qui a pour but de mettre en r\u00e9seau les ordinateurs des universit\u00e9s am\u00e9ricaines afin que ces derni\u00e8res puissent \u00e9changer des informations plus rapidement (m\u00eame \u00e0 des milliers de kilom\u00e8tres de distance). En 1967, l'attention de Larry Roberts, un directeur de programme de l'ARPA, se tourna vers les r\u00e9seaux. Parmi les diff\u00e9rents experts contact\u00e9s se trouvait Wesley Clark qui sugg\u00e9ra de cr\u00e9er un sous-r\u00e9seau \u00e0 commutation de paquets.</p> <p>Apr\u00e8s quelques h\u00e9sitations, Roberts accepta l'id\u00e9e et pr\u00e9senta un projet assez vague \u00e0 ce sujet lors d'un colloque de l'ACM (Association for Computing Machinery) \u00e0 Gatlinburg dans le Tennessee, fin 1967. \u00c0 sa grande surprise, une autre communication pr\u00e9sent\u00e9e \u00e0 cette conf\u00e9rence d\u00e9crivait un syst\u00e8me similaire, qui avait \u00e9t\u00e9 non seulement con\u00e7u mais encore enti\u00e8rement impl\u00e9ment\u00e9 au Royaume-Uni, sous la direction de Donald Davies du NPL (National Physical Laboratory), et qui se r\u00e9f\u00e9rait en outre au travail de Baran. Ce syst\u00e8me n'\u00e9tait pas d\u00e9velopp\u00e9 \u00e0 l'\u00e9chelle nationale (il connectait seulement quelques ordinateurs du campus du NPL), mais il d\u00e9montrait la faisabilit\u00e9 d'un r\u00e9seau \u00e0 commutation de paquets. Roberts revint de Gatlinburg bien d\u00e9cid\u00e9 \u00e0 mettre en \u0153uvre ce qui allait devenir l'ARPAnet.</p> <p>Le sous-r\u00e9seau serait form\u00e9 de mini-ordinateurs appel\u00e9s IMP (Interface Message Processor), reli\u00e9s par des lignes de transmission \u00e0 56 kbit/s (ce qui \u00e9tait ce qui ce faisait de mieux \u00e0 l'\u00e9poque). Pour une fiabilit\u00e9 maximale, chaque IMP serait connect\u00e9 au moins \u00e0 deux autres IMP.</p> <p>Chaque n\u0153ud du r\u00e9seau consisterait en un IMP et un h\u00f4te, situ\u00e9s dans la m\u00eame pi\u00e8ce et reli\u00e9s par un c\u00e2ble court. L'h\u00f4te pourrait envoyer des messages de 8 063 bits maximum \u00e0 son IMP, qui les diviserait alors en paquets de 1 008 bits maximum et les transmettrait ind\u00e9pendamment vers leur destination. Chaque paquet serait enti\u00e8rement re\u00e7u par un n\u0153ud avant d'\u00eatre retransmis.</p> <p></p> <p>Il s'av\u00e9ra que la soci\u00e9t\u00e9 d\u00e9sign\u00e9e pour concevoir le syst\u00e8me s'\u00e9tait born\u00e9e au niveau logiciel \u00e0 ne concevoir que les liaisons IMP, et laissa de c\u00f4t\u00e9 le protocole h\u00f4te.</p> <p>Pour r\u00e9soudre ce probl\u00e8me de logiciel du c\u00f4t\u00e9 h\u00f4te, Larry Roberts (de l'ARPA) convia des chercheurs en r\u00e9seau, pour la plupart des \u00e9tudiants en troisi\u00e8me cycle, \u00e0 se r\u00e9unir durant l'\u00e9t\u00e9 1969. Ceux-ci s'attendaient \u00e0 ce qu'un expert leur d\u00e9crive la conception du r\u00e9seau et de son logiciel puis demande \u00e0 chacun d'en impl\u00e9menter une partie. \u00c0 leur grande surprise, ils constat\u00e8rent qu'il n'y avait ni expert ni conception pour les guider, et qu'il leur faudrait d\u00e9terminer eux-m\u00eames comment proc\u00e9der.</p> <p>Le 29 octobre 1969, le premier message (le mot <code>login</code>) est envoy\u00e9 depuis l'UCLA vers le SRI, les 2 universit\u00e9s \u00e9tant environ distantes de 500 Km. C'est un demi-succ\u00e8s, puisque seules les lettres <code>l</code> et <code>o</code> arriveront \u00e0 bon port.</p> <p>C'est ainsi qu'un r\u00e9seau exp\u00e9rimental vit le jour en d\u00e9cembre 1969, form\u00e9 de quatre n\u0153uds situ\u00e9s \u00e0 l'universit\u00e9 de Californie \u00e0 Los Angeles (UCLA), \u00e0 l'universit\u00e9 de Californie \u00e0 Santa Barbara (UCSB), au Stanford Research Institute (SRI) et \u00e0 l'universit\u00e9 d'Utah. Ces quatre institutions furent choisies en raison du grand nombre de contrats pass\u00e9s par chacune avec l'ARPA, mais aussi pour la diversit\u00e9 et l'incompatibilt\u00e9 de leurs ordinateurs respectifs (ce qui accentuait le d\u00e9fi). Le r\u00e9seau se d\u00e9veloppa rapidement comme le montre le sch\u00e9ma suivant.</p> <p></p>"},{"location":"NSI/Premiere/C08/Histoire/#darpanet-a-internet","title":"D'ARPAnet \u00e0 Internet","text":"<p>En plus de soutenir la croissance du tout jeune r\u00e9seau ARPAnet, l'ARPA a aussi financ\u00e9 des recherches sur les r\u00e9seaux satellitaires et les r\u00e9seaux radio mobiles par paquets. Dans l'une de ses exp\u00e9riences devenue c\u00e9l\u00e8bre, un chercheur parcourant la Californie \u00e0 bord d'un camion utilisait un r\u00e9seau radio par paquets pour envoyer des messages au SRI, qui les transmettait \u00e0 travers l'ARPAnet vers la c\u00f4te est, apr\u00e8s quoi ils \u00e9taient achemin\u00e9s vers l'University College de Londres via un satellite. Le chercheur pouvait ainsi utiliser un ordinateur situ\u00e9 \u00e0 Londres pendant que lui-m\u00eame se d\u00e9pla\u00e7ait de l'autre c\u00f4t\u00e9 de l'Atlantique.</p> <p>Cette exp\u00e9rience a \u00e9galement d\u00e9montr\u00e9 que les protocoles ARPAnet existants n'\u00e9taient pas adapt\u00e9s aux transmissions entre r\u00e9seaux diff\u00e9rents. Cette observation a entra\u00een\u00e9 la poursuite des recherches sur les protocoles, conduisant notamment \u00e0 l'invention du mod\u00e8le TCP/IP et de ses protocoles par Vinton Cerf et Robert Elliot Kahn.  Ce mod\u00e8le a \u00e9t\u00e9 Con\u00e7u pr\u00e9cis\u00e9ment pour g\u00e9rer les communications sur des interr\u00e9seaux, r\u00e9pondant \u00e0 une n\u00e9cessit\u00e9 croissante due au raccordement de r\u00e9seaux toujours plus nombreux \u00e0 l'ARPAnet.</p> <p>Au cours des ann\u00e9es 1980, davantage de r\u00e9seaux, surtout des LAN, furent raccord\u00e9s \u00e0 l'ARPAnet. Mais plus celui-ci s'\u00e9tendait, plus il devenait co\u00fbteux de localiser ses h\u00f4tes. En r\u00e9ponse \u00e0 ce probl\u00e8me, le syst\u00e8me de gestion des noms de domaine, DNS (Domain Name System), fut d\u00e9velopp\u00e9 de fa\u00e7on \u00e0 organiser les machines en domaines et \u00e0 associer des noms d'h\u00f4tes aux adresses IP.</p> <p>Parall\u00e8lement, \u00e0 la fin des ann\u00e9es 1970, la NSF (National Science Foundation) constata \u00e0 quel point l'impact de l'ARPAnet sur la recherche universitaire \u00e9tait important, puisqu'il permettait aux scientifiques de partager des donn\u00e9es et de travailler sur des projets communs \u00e0 travers tout le pays. Toutefois, pour pouvoir participer \u00e0 ce r\u00e9seau, une universit\u00e9 devait \u00eatre sous contrat de recherche avec le DoD, ce qui n'\u00e9tait pas le cas pour beaucoup d'entre elles. La r\u00e9ponse initiale de la NSF fut de financer le CSNET (Computer Science Network) en 1981. Celui-ci connectait des d\u00e9partements d'informatique et des laboratoires de recherche appliqu\u00e9e \u00e0 l'ARPAnet via des connexions par modem et des lignes lou\u00e9es. \u00c0 la fin des ann\u00e9es 1980, la NSF alla plus loin et d\u00e9cida de construire un successeur de l'ARPAnet qui serait ouvert \u00e0 toutes les instances de recherche universitaire.</p> <p>La NSF d\u00e9cida donc de cr\u00e9er un r\u00e9seau f\u00e9d\u00e9rateur pour connecter ses six centres de calcul bas\u00e9s \u00e0 San Diego, Boulder, Champaign, Pittsburgh, Ithaca et Princeton.</p> <p>\u00c0 chacun des six supercalculateurs \u00e9tait associ\u00e9 un micro-ordinateur surnomm\u00e9 fuzzball. Ces fuzzballs \u00e9taient reli\u00e9s au moyen de lignes lou\u00e9es \u00e0 56 kbit/s et formaient le sous-r\u00e9seau, \u00e0 l'image de la technologie mat\u00e9rielle utilis\u00e9e par l'ARPAnet. Toutefois, la technologie logicielle \u00e9tait diff\u00e9rente : les fuzzballs supportaient d\u00e8s le d\u00e9part TCP/IP.</p> <p>La NSF finan\u00e7a \u00e9galement plusieurs r\u00e9seaux r\u00e9gionaux (une vingtaine au total), qui furent reli\u00e9s \u00e0 l'\u00e9pine dorsale pour permettre aux utilisateurs de milliers d'universit\u00e9s, de laboratoires de recherche, de biblioth\u00e8ques et de mus\u00e9es d'acc\u00e9der \u00e0 n'importe quel supercalculateur et de communiquer entre eux. Le r\u00e9seau complet, incluant l'\u00e9pine dorsale et les r\u00e9seaux r\u00e9gionaux, fut nomm\u00e9 NSFNET et raccord\u00e9 \u00e0 l'ARPAnet au moyen d'une liaison entre un IMP et un fuzzball dans la salle des machines de l'universit\u00e9 Carnegie-Mellon.</p> <p>Victime de son succ\u00e8s, NSFNET fut surcharg\u00e9 d\u00e8s le d\u00e9but, et du s'adapter en passant \u00e0 la fibre optique. \u00c0 mesure que l'expansion du r\u00e9seau continuait, la NSF se rendit compte que le gouvernement ne pourrait pas la financer ind\u00e9finiment. En outre, les statuts de la fondation emp\u00eachaient les entreprises commerciales d'utiliser un r\u00e9seau dont elle assurait seule le financement. En cons\u00e9quence, elle encouragea ces entreprises \u00e0 cr\u00e9er une organisation \u00e0 but non lucratif, l'ANS (Advanced Networks and Services), qui serait la premi\u00e8re \u00e9tape sur la voie de la commercialisation.</p> <p>Pour faciliter la transition et s'assurer que tous les r\u00e9seaux r\u00e9gionaux pourraient communiquer entre eux, la NSF signa des contrats avec quatre op\u00e9rateurs diff\u00e9rents en vue d'\u00e9tablir des points d'acc\u00e8s au r\u00e9seau ou NAP (Network Access Point).</p> <p>Chaque op\u00e9rateur devait se raccorder \u00e0 tous les NAP pour pouvoir offrir des services d'\u00e9pine dorsale aux r\u00e9seaux r\u00e9gionaux. Cela signifiait qu'un paquet provenant de n'importe lequel de ces r\u00e9seaux avait le choix entre plusieurs op\u00e9rateurs pour aller du NAP source vers le NAP de destination. Les op\u00e9rateurs se disput\u00e8rent donc les march\u00e9s r\u00e9gionaux \u00e0 coups d'offres de services et de prix, ce qui \u00e9tait bien entendu l'effet recherch\u00e9. Le concept d'une seule \u00e9pine dorsale par d\u00e9faut fut ainsi remplac\u00e9 par une infrastructure commerciale o\u00f9 la concurrence \u00e9tait vive.</p> <p>Au cours des ann\u00e9es 1990, de nombreux autres pays et r\u00e9gions du monde mirent en place des r\u00e9seaux de recherche nationaux, souvent inspir\u00e9s des mod\u00e8les ARPAnet et NSFNET. EuropaNET et EBONE sont des exemples europ\u00e9ens. En Europe, l'infrastructure de r\u00e9seau a fini elle aussi par passer aux mains de l'industrie.</p> <p>Le sch\u00e9ma suivant donne une vision simplifi\u00e9e de ce qu'est internet aujourd'hui :</p> <p></p>"},{"location":"NSI/Premiere/C08/Trames/","title":"R\u00e9seaux, Trames, Paquets","text":""},{"location":"NSI/Premiere/C08/Trames/#reseaux-trames-et-paquets","title":"R\u00e9seaux, Trames et Paquets","text":"<p>Les textes et illustrations sont extraites de pixees.fr.</p> <p>Un bon point de d\u00e9part est de conna\u00eetre le oprincipe de <code>TCP/IP</code> et le vocabulaire de base du r\u00e9seau, qu'on peut retrouver, ainsi que la manipulation du logiciel <code>Filius</code>, dans la partie du site sur le r\u00e9seau en SNT</p>"},{"location":"NSI/Premiere/C08/Trames/#le-principe-dencapsulation","title":"Le principe d'encapsulation","text":"<p>Nous avons eu l'occasion de voir avec les protocoles TCP et IP le processus d'encapsulation des donn\u00e9es :  \u00ab IP encapsule TCP \u00bb. On parle alors de communication en couches.</p> <p>Pour mieux comprendre ce que repr\u00e9sente la communication en couches, imaginez la situation suivante. Deux philosophes (couche 3) souhaitent s'entretenir, mais l'un parle ourdou et anglais, et l'autre chinois et fran\u00e7ais. Faute de pouvoir partager une langue commune, ils engagent chacun un traducteur (couche 2), qui fait appel \u00e0 son tour \u00e0 une secr\u00e9taire (couche 1).</p> <p></p> <p>Le premier philosophe souhaite communiquer \u00e0 son homologue distant sa passion pour Oryctolagus cuniculus. Il transmet un message (en anglais) \u00e0 son traducteur de vive voix (interface \u2154), en indiquant \u00ab I like rabbits \u00bb. Comme les traducteurs se sont accord\u00e9s sur une langue commune, en l'occurrence le n\u00e9erlandais, le message est converti en \u00ab Ik vind konijnen leuk \u00bb.Le choix de cette langue fait partie du protocole de couche 2 et appartient aux seulement aux traducteurs.</p> <p>Le traducteur \u00e9crit le message et le passe \u00e0 sa secr\u00e9taire (interface \u00bd) pour transmission. de la m\u00eame mani\u00e8re les secr\u00e9taires se sont entendues pour correspondre par email (protocole de couche 1).</p> <p>Quand le message parvient \u00e0 l'autre secr\u00e9taire, il est transmis au traducteur local, qui le traduit en fran\u00e7ais et le transmet au deuxi\u00e8me philosophe.</p> <p>Notez que les protocoles sont compl\u00e8tement ind\u00e9pendants les uns des autres tant que les interfaces ne sont pas chang\u00e9es. Les traducteurs pourraient passer au finnois, pourvu qu'ils soient tous les deux d'accord et qu'aucun ne change ses interfaces avec les couches 1 et 3. De m\u00eame, les secr\u00e9taires pourraient choisir le t\u00e9l\u00e9phone ou les signaux de fum\u00e9es, sans d\u00e9ranger, ni m\u00eame aviser, les autres couches. Chaque processus peut ajouter certaines informations \u00e0 l'intention du processus pair uniquement, et celles-ci ne seront pas transmises \u00e0 la couche sup\u00e9rieure.</p>"},{"location":"NSI/Premiere/C08/Trames/#trames-ethernet","title":"Trames Ethernet","text":"<p>Les paquets IP ne peuvent pas transiter sur un r\u00e9seau tel quel, ils vont eux aussi \u00eatre encapsul\u00e9s avant de pouvoir \u00ab voyager\u00bb sur le r\u00e9seau. L'encapsulation des paquets IP produit ce que l'on appelle une trame. Il n'est pas question d'\u00e9tudier en d\u00e9tail ce qu'est une trame, vous devez juste savoir qu'il existe de nombreux types de trames : ATM, token ring, PPP, Ethernet, Wifi... Nous allons uniquement \u00e9voquer la derni\u00e8re : la trame Ethernet (en sachant que la trame Wifi ressemble beaucoup \u00e0 la trame Ethernet).</p> <p>Nous avons vu que le paquet IP contient les adresses IP de l'\u00e9metteur et du r\u00e9cepteur :</p> <p></p> <p>Le paquet IP \u00e9tant encapsul\u00e9 par la trame Ethernet, les adresses IP ne sont plus directement disponibles (il faut d\u00e9sencapsuler le paquet IP pour pouvoir lire ces adresses IP), nous allons donc trouver un autre type d'adresse qui permet d'identifier l'\u00e9metteur et le r\u00e9cepteur : l'adresse MAC (Media Access Control) aussi appel\u00e9e adresse physique.</p> <p></p> <p>Une adresse MAC est cod\u00e9e sur 6 octets,et est \u00e9crite traditionnellement hexad\u00e9cimal, chaque octet \u00e9tant s\u00e9par\u00e9s par 2 points (exemple d'adresse MAC : <code>00:E0:4C:68:02:11</code>).</p> <p>L'adresse MAC est li\u00e9e au mat\u00e9riel, chaque carte r\u00e9seau (Ethernet ou Wifi) poss\u00e8de sa propre adresse MAC, il n'existe pas dans le monde, 2 cartes r\u00e9seau (Ethernet ou Wifi) qui poss\u00e8dent la m\u00eame adresse MAC. Les 3 premiers octets d'une adresse MAC (<code>00:E0:4C</code> dans l'exemple ci-dessus) d\u00e9signent le constructeur du mat\u00e9riel, par exemple, <code>00:E0:4C</code> d\u00e9signe le constructeur \u00ab Realtek semiconductor corp\u00bb.</p> <p>Au moment de l'encapsulation d'un paquet IP, l'ordinateur \u00e9metteur va utiliser un protocole nomm\u00e9 ARP (Address Resolution Protocol) qui va permettre de d\u00e9terminer l'adresse MAC de l'ordinateur destinataire, en effectuant une requ\u00eate de type broadcast (requ\u00eate destin\u00e9e \u00e0 tous les ordinateurs du r\u00e9seau) du type :  \u00ab j'aimerais connaitre l'adresse MAC de l'ordinateur ayant pour IP <code>XXX.XXX.XXX.XXX</code> \u00bb. Une fois qu'il a obtenu une r\u00e9ponse \u00e0 cette requ\u00eate ARP, l'ordinateur \u00e9metteur encapsule le paquet IP dans une trame Ethernet et envoie cette trame sur le r\u00e9seau. </p>"},{"location":"NSI/Premiere/C08/Trames/#lencapsulation-tcp","title":"L'encapsulation TCP","text":"<p>En fait, TCP effectue lui aussi une encapsulation, les donn\u00e9es encapsul\u00e9es par TCP peuvent \u00eatre de plusieurs natures : requ\u00eates et r\u00e9ponses HTTP, ou FTP (File Transfer Protocol), SMTP (Send Message Transfert Protocol), DNS, etc...</p> <p>En conservant l'exemple d'une requ\u00eate HTTP, on a donc :</p> <p></p>"},{"location":"NSI/Premiere/C08/Trames/#le-modele-des-couches-tcpip","title":"Le mod\u00e8le des couches TCP/IP","text":"<p>Le mod\u00e8le TCP/IP est donc un mod\u00e8le en couches :</p> <p></p> <p>La couche du \u00ab dessous \u00bb encapsule la couche situ\u00e9e \u00ab au dessus \u00bb.On nomme ce syst\u00e8me de couche \u00ab mod\u00e8le de couches TCP/IP\u00bb car ce mod\u00e8le repose principalement sur TCP et IP.</p> <p>Il existe aussi un mod\u00e8le th\u00e9orique, dit mod\u00e8le OSI (Open System Interconnectioon), qui est un mod\u00e8le con\u00e7u \u00e0 la demande de l'ISO comme une premi\u00e8re \u00e9tape vers la normalisation internationale des protocoles utilis\u00e9s dans les diverses couches. Une description en est donn\u00e9e dans la figure ci-dessous :</p> <p></p>"},{"location":"NSI/Premiere/C08/Trames/#une-veritable-trame","title":"Une v\u00e9ritable trame","text":"<p>Le logiciel libre <code>Wireshark</code> permet la capture et l'analyse de toutes les trames pasant par les diverses interfaces r\u00e9seau d'un ordinateur. Voici une copie d'\u00e9cran d'une capture :</p> <p></p> <p>Voici les donn\u00e9es pr\u00e9sentes dans chaque onglet :</p> EthernetIPTCPHTTP <pre><code>Ethernet II, Src: FreeboxS_81:53:dc (68:a3:78:81:53:dc), Dst: Giga-Byt_dd:1c:1b (90:2b:34:dd:1c:1b)\nDestination: Giga-Byt_dd:1c:1b (90:2b:34:dd:1c:1b)\nAddress: Giga-Byt_dd:1c:1b (90:2b:34:dd:1c:1b)\n.... ..0. .... .... .... .... = LG bit: Globally unique address (factory default)\n.... ...0 .... .... .... .... = IG bit: Individual address (unicast)\nSource: FreeboxS_81:53:dc (68:a3:78:81:53:dc)\nAddress: FreeboxS_81:53:dc (68:a3:78:81:53:dc)\n.... ..0. .... .... .... .... = LG bit: Globally unique address (factory default)\n.... ...0 .... .... .... .... = IG bit: Individual address (unicast)\nType: IPv4 (0x0800)\n</code></pre> <pre><code>Internet Protocol Version 4, Src: 195.221.67.112, Dst: 192.168.1.35\n    0100 .... = Version: 4\n.... 0101 = Header Length: 20 bytes (5)\nDifferentiated Services Field: 0x00 (DSCP: CS0, ECN: Not-ECT)\n0000 00.. = Differentiated Services Codepoint: Default (0)\n.... ..00 = Explicit Congestion Notification: Not ECN-Capable Transport (0)\nTotal Length: 176\nIdentification: 0x4f14 (20244)\nFlags: 0x40, Don't fragment\n        0... .... = Reserved bit: Not set\n        .1.. .... = Don't fragment: Set\n        ..0. .... = More fragments: Not set\nFragment Offset: 0\nTime to Live: 247\nProtocol: TCP (6)\nHeader Checksum: 0x6b1a [validation disabled]\n[Header checksum status: Unverified]\nSource Address: 195.221.67.112\n    Destination Address: 192.168.1.35\n</code></pre> <pre><code>Transmission Control Protocol, Src Port: 80, Dst Port: 59676, Seq: 1, Ack: 497, Len: 136\nSource Port: 80\nDestination Port: 59676\n[Stream index: 6]\n[TCP Segment Len: 136]\nSequence Number: 1    (relative sequence number)\nSequence Number (raw): 2717814275\n[Next Sequence Number: 137    (relative sequence number)]\nAcknowledgment Number: 497    (relative ack number)\nAcknowledgment number (raw): 3656933230\n0101 .... = Header Length: 20 bytes (5)\nFlags: 0x018 (PSH, ACK)\n000. .... .... = Reserved: Not set\n...0 .... .... = Nonce: Not set\n.... 0... .... = Congestion Window Reduced (CWR): Not set\n.... .0.. .... = ECN-Echo: Not set\n.... ..0. .... = Urgent: Not set\n.... ...1 .... = Acknowledgment: Set\n        .... .... 1... = Push: Set\n        .... .... .0.. = Reset: Not set\n.... .... ..0. = Syn: Not set\n.... .... ...0 = Fin: Not set\n[TCP Flags: \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7AP\u00b7\u00b7\u00b7]\nWindow: 4380\n[Calculated window size: 4380]\n[Window size scaling factor: -2 (no window scaling used)]\nChecksum: 0x26e8 [unverified]\n[Checksum Status: Unverified]\nUrgent Pointer: 0\n[SEQ/ACK analysis]\n[This is an ACK to the segment in frame: 105]\n[The RTT to ACK the segment was: 0.025245000 seconds]\n[iRTT: 0.021163000 seconds]\n[Bytes in flight: 136]\n[Bytes sent since last PSH flag: 136]\n[Timestamps]\n[Time since first frame in this TCP stream: 0.049359000 seconds]\n[Time since previous frame in this TCP stream: 0.025245000 seconds]\nTCP payload (136 bytes)\n</code></pre> <pre><code>Hypertext Transfer Protocol\n    HTTP/1.0 302 Moved Temporarily\n        [Expert Info (Chat/Sequence): HTTP/1.0 302 Moved Temporarily]\n[HTTP/1.0 302 Moved Temporarily]\n[Severity level: Chat]\n[Group: Sequence]\nResponse Version: HTTP/1.0\n        Status Code: 302\n[Status Code Description: Found]\nResponse Phrase: Moved Temporarily\n    Location: https://www.toutatice.fr/portail\n    Server: BigIP\n    Connection: Keep-Alive\n    Content-Length: 0\n[Content length: 0]\n\n[HTTP response 1/1]\n[Time since request: 0.025245000 seconds]\n[Request in frame: 105]\n[Request URI: http://www.toutatice.fr/portail]\n</code></pre> <p>Exercice</p> <ol> <li>Identifier chacun des \u00e9l\u00e9ments par sa couche.</li> <li>Quel est l'\u00e9metteur de cette trame ?</li> <li>Qui est le r\u00e9cepteur de cette trame ?</li> <li>Quel protocole d'application a \u00e9t\u00e9 utilis\u00e9 ?</li> <li>Quand cette trame a-t-elle \u00e9t\u00e9 \u00e9mise ?</li> </ol>"},{"location":"NSI/Premiere/C08/Trames/#protocole-du-bit-alterne","title":"Protocole du bit altern\u00e9","text":""},{"location":"NSI/Premiere/C08/Trames/#le-principe","title":"Le principe","text":"<p>Nous avons vu que le protocole TCP propose un m\u00e9canisme d'accus\u00e9s de r\u00e9ception afin de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. On parle plus g\u00e9n\u00e9ralement de processus d'acquittement. Ces processus d'acquittement permettent de d\u00e9tecter les pertes de paquets au sein d'un r\u00e9seau, l'id\u00e9e \u00e9tant qu'en cas de perte, l'\u00e9metteur du paquet renvoie le paquet perdu au destinataire. Nous allons ici \u00e9tudier un protocole simple de r\u00e9cup\u00e9ration de perte de paquet : le protocole de bit altern\u00e9.</p> <p>Le protocole de bit altern\u00e9 est impl\u00e9ment\u00e9 au niveau de la couche de liaison de donn\u00e9es du mod\u00e8le OSI (couche 2), il ne concerne donc pas les paquets, mais les trames.</p> <p>Le principe de ce protocole est simple, consid\u00e9rons 2 ordinateurs en r\u00e9seau : un ordinateur A qui sera l'\u00e9metteur des trames et un ordinateur B qui sera le destinataire des trames. Au moment d'\u00e9mettre une trame, A va ajouter \u00e0 cette trame un bit (1 ou 0) appel\u00e9 drapeau (flag en anglais). B va envoyer un accus\u00e9 de r\u00e9ception (acknowledge en anglais souvent not\u00e9 ACK) \u00e0 destination de A d\u00e8s qu'il a re\u00e7u une trame en provenance de A. \u00c0 cet accus\u00e9 de r\u00e9ception on associe aussi un bit drapeau (1 ou 0).</p> <p>La r\u00e8gle est relativement simple : la premi\u00e8re trame envoy\u00e9e par A aura pour drapeau 0, d\u00e8s cette trame re\u00e7ue par B, ce dernier va envoyer un accus\u00e9 de r\u00e9ception avec le drapeau 1 (ce 1 signifie \u00ab la prochaine trame que A va m'envoyer devra avoir son drapeau \u00e0 1\u00bb). D\u00e8s que A re\u00e7oit l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il envoie la 2\u00e8me trame avec un drapeau \u00e0 1, et ainsi de suite... </p> <p></p> <p>Le syst\u00e8me de drapeau est compl\u00e9t\u00e9 avec un syst\u00e8me d'horloge c\u00f4t\u00e9 \u00e9metteur. Un \u00abchronom\u00e8tre\u00bb est d\u00e9clench\u00e9 \u00e0 chaque envoi de trame, si au bout d'un certain temps, l'\u00e9metteur n'a pas re\u00e7u un acquittement correct (avec le bon drapeau), la trame pr\u00e9c\u00e9demment envoy\u00e9e par l'\u00e9metteur est consid\u00e9r\u00e9e comme perdue et est de nouveau envoy\u00e9e. </p>"},{"location":"NSI/Premiere/C08/Trames/#exemples-derreur","title":"Exemples d'erreur","text":"<ul> <li> <p>La trame est perdue :</p> <p>)</p> <p>Au bout d'un certain temps (<code>TIME OUT</code>) A n'a pas re\u00e7u d'accus\u00e9 de r\u00e9ception, la trame est consid\u00e9r\u00e9e comme perdue, elle est donc renvoy\u00e9e. </p> </li> <li> <p>L'accus\u00e9 de r\u00e9ception est perdu :</p> <p>)</p> <p>A ne re\u00e7oit pas d'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il renvoie donc la trame 1 avec le drapeau 0. B re\u00e7oit donc cette trame avec un drapeau \u00e0 0 alors qu'il attend une trame avec un drapeau \u00e0 1 (puisqu'il a envoy\u00e9 un accus\u00e9 de r\u00e9ception avec un drapeau 1), il \"en d\u00e9duit\" que l'accus\u00e9 de r\u00e9ception pr\u00e9c\u00e9dent n'est pas arriv\u00e9 \u00e0 destination : il ne tient pas compte de la trame re\u00e7ue et renvoie l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1. Ensuite, le processus peut se poursuivre normalement. </p> </li> </ul> <p>Exercice</p> <p>Dans certaines situations, le protocole de bit altern\u00e9 ne permet pas de r\u00e9cup\u00e9rer les trames perdues, c'est pour cela que ce protocole est aujourd'hui remplac\u00e9 par des protocoles plus efficaces, mais aussi plus complexes.</p> <p>Essayez de d\u00e9terminer une ou plusieurs situations o\u00f9 le protocole de bit altern\u00e9 est inefficace. </p>"},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/","title":"Projet : Bandit-Manchot","text":""},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/#projet-bandit-manchot","title":"Projet : Bandit Manchot","text":"<p>Principes du projet</p> <ul> <li>LA NOTE MAXIMALE DE CE PROJET EST DE 18 SANS LA PARTIE FACULTATIVE ! </li> <li>Vous travaillerez par binomes sur ce projet (ou exceptionnellement par trinome).</li> <li>Vous rendrez le code complet pour le 09 novembre 2022 au plus tard.</li> <li>Vous aurez un temps en classe pour r\u00e9aliser le projet, mais ce temps  ne sera pas suffisant ! Vous devrez vous coordonner pour arriver \u00e0 vos fins !</li> </ul>"},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/#description-du-projet","title":"Description du projet","text":"<p>L'objectif est de simuler une partie de machine \u00e0 sous de casino de type Bandit Manchot.</p> <ol> <li>Le ou la joueur\u00b7euse commence la partie avec 500 \u20ac.</li> <li>Il ou elle parie une somme comprise entre 10 \u20ac et son pot actuel.</li> <li>Le bandit-manchot tire alors al\u00e9atoirement une s\u00e9rie de trois symboles, qui donnent ou non un gain selon le tirage.</li> <li>Si le pot n'est pas \u00e9gal \u00e0 z\u00e9ro, le ou la joueur\u00b7euse peut rejouer si il ou elle le souhaite.</li> <li>Facultatif : Le joueur/la joueuse peut se voir proposer de sauvegarder son nom et son score. Sule les 10 meilleusr scores sont sauvegard\u00e9s.</li> </ol> <p>Exemple de r\u00e9alisation</p> <p></p> <p>Table des gains</p> <p>Il existe de nombreuses tables de gains pour une machine \u00e0 sous. Vous devrez cependant utiliser la table ci-dessous pour passer tous les tests :</p> Cha\u00eene Gain D\u00e9tails <code>777</code> 100 fois la mise <code>\u03a9\u03a9\u03a9</code> 50 fois la mise <code>\u2665\u2665\u2665</code> 20 fois la mise On aura de m\u00eame pour les autres symboles <code>\u2660</code>, <code>\u2666</code> et <code>\u2663</code> <code>\u03a97\u03a9</code> 10 fois la mise On aura de m\u00eame si l'ordre des symboles change <code>\u2660\u26607</code> 5 fois la mise On aura de m\u00eame si l'ordre des symboles change, et avec les symboles,<code>\u2665</code> <code>\u2666</code> et <code>\u2663</code> <code>\u2660\u03a97</code> 2 fois la mise ou pour toute autre s\u00e9rie de trois symboles diff\u00e9rents"},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/#les-fonctions-necessaires","title":"Les fonctions n\u00e9cessaires","text":"<p>Base de travail</p> <p>Vous trouverez ici une base de code \u00e0 utiliser pour r\u00e9aliser le jeu.</p> <p>Fonctions <code>get_score</code> et <code>sauve_score</code></p> <p>Ces fonctions ne sont pas \u00e0 modifier, ni m\u00eame \u00e0 comprendre... Elles sont n\u00e9cessaires pour la partie facultative du projet !</p>"},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/#plan-de-travail","title":"Plan de travail","text":"<p>Voii quelques \u00e9l\u00e9ments sur le code, dont un plan de travail :</p> <ol> <li>Une variable globale <code>symboles = \"\u2660\u2665\u2666\u26637\u03a9\"</code> donne les 6 symboles utilis\u00e9s dans le bandit-manchot.</li> <li>Vous devrez concevoir une fonction <code>choisir_symbole</code> qui prend en argument la cha\u00eene de caract\u00e8res <code>symboles</code>, et renvoie une chaine de caract\u00e8re contenant un seul de ces symboles al\u00e9atoirement.</li> <li>La fonction <code>fabriquer_chaine</code> doit fournir une cha\u00eene de caract\u00e8res de taille <code>taille</code> (par d\u00e9faut 3), dont tous les caract\u00e8res sont al\u00e9atoirement choisis parmi une liste de caract\u00e8res <code>symboles</code>. Inutile de r\u00e9i\u00e7nventer l'eau chaude, puisque vous avez d\u00e9j\u00e0 fait la question pr\u00e9c\u00e9dente.</li> <li>Vous impl\u00e9menterez ensuite une fonction <code>compte_symboles_identiques</code>, qui prend en argument un caract\u00e8re <code>s</code>, et qui cherche le nombre d'occurence de ce caract\u00e8re dans la chaine <code>chaine</code> pass\u00e9e en argument. Les exemples donn\u00e9s dans la docstring doivent vous aider.</li> <li>Vous pourrez ensuite impl\u00e9menter la fonction <code>presence_symboles_identiques_multiples</code> (p\u00e9nible \u00e0 taper ce nom... mais ne le changez pas !) qui prend en argument une liste de symboles <code>symboles</code>, et une chaine de caract\u00e8res <code>chaine</code>, et qui renvoie <code>True</code> si un des symboles est pr\u00e9sent plusieurs fois dans la chaine, ou <code>False</code> si ce n'est pas le cas.</li> <li>En parall\u00e8le (c'est-\u00e0-dire que vous pouvez faire cette fonction ind\u00e9pendamment des autres), vous pourrez impl\u00e9menter la fonction <code>table_gain</code> qui renvoie le gain associ\u00e9 \u00e0 la chaine pass\u00e9e en argument, en fonction de la mise de d\u00e9part.</li> <li>En parall\u00e8le, vous pourrez impl\u00e9menter la fonction <code>saisir_mise</code> qui prend en argument une valeur (le pot actuel du joueur/de la joueuse), et renvoie la mise saisie par le joueur/la joueuse.</li> <li>En parall\u00e8le, vous impl\u00e9menterez la fonction <code>demander_continuer</code>, qui demande \u00e0 l'utilisateur\u00b7trice si il souhaite refaire une nouvelle manche de jeu, et renvoie un bool\u00e9en correspondant \u00e0 la r\u00e9ponse.</li> <li>En parall\u00e8le, vous impl\u00e9menterez une fonction <code>afficher_bandit</code> sans valeur de retour, qui affiche dans la console le bandit-manchot ainsi que le gain correspondant. Vous pouvez vous inspirer de la fonction <code>presentation</code> qui vous est fournie.</li> <li>Une fois toutes les \u00e9tapes pr\u00e9c\u00e9dentes termin\u00e9es, vous impl\u00e9menterez une fonction <code>main_game</code> qui repr\u00e9sente la totalit\u00e9 du jeu d'un joueur/d'une joueuse, jusqu'\u00e0 ce qu'il/elle abandonne ou qu'il/elle s'arr\u00eate. La fonction renverra le gain r\u00e9el du joueur/de la joueuse, qui pourra servir \u00e0 la phase suivante.</li> <li>Facultatif : en utilisant les fonctions <code>sauve_score</code> et <code>get_score</code>, ins\u00e9rez \u00e0 la fin du jeu la possibilt\u00e9 d'enregistrer son score, puis qui affiche les 10 meilleurs scores enregistr\u00e9s.</li> </ol>"},{"location":"NSI/Premiere/Projets/BanditManchot/Projet_Bandit_Manchot/#grille-de-notation","title":"Grille de notation","text":"intitul\u00e9 bar\u00eame D\u00e9tails fonction <code>choisir_symbole</code> 1 pt assertions efficaces fonction <code>fabriquer_chaine</code> 1 pt assertions efficaces fonction <code>compte_symboles_identiques</code> 1 pt passage de tous les tests unitaires fonction <code>presence_symboles_identiques_multiples</code> 2 pt fonction <code>table_gain</code> 1 pt passage de tous les tests unitaires fonction <code>saisir_mise</code> 1 pt dumbproof fonction <code>demander_continuer</code> 1 pt dumbproof fonction <code>afficher_bandit</code> 1 pt Affichage correct fonction <code>main_game</code> 4 pts On attend un jeu a minima fonctionnel Noms des variables clairs 2 pts On proscrira les noms de variable d'un seul caract\u00e8re, sauf compteurs pr\u00e9cis Code comment\u00e9 et clair 2 pts Des explications minimales doivent \u00eatre \u00e9crites pour expliquer votre code Am\u00e9liorations,   qualit\u00e9 du code, etc... 1 pts Partie facultative 2 pts Avec un affichage correct et une bonne saisie"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/","title":"Projet Jeu Textuel en JS","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#projet-jeu-daventure-textuel","title":"Projet Jeu d'aventure textuel","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#principe-du-projet","title":"Principe du projet","text":"<p>Le principe est de r\u00e9aliser un jeu d'aventure textuel, bas\u00e9 sur le principe des \u00ab\u00a0Livres dont vous \u00eates le h\u00e9ro \u00bb : dans une unique page html, on progressera \u00e0 travers une aventure o\u00f9 le/la joueur\u00d7euse devra effectuer divers choix qui influenceront la suite de l'aventure. </p> <p>La page devra contenir une zone dans laquelle le texte \u00e9voluera en fonction de choix effectu\u00e9s par le/la joueur\u00d7euse. Les actions seront repr\u00e9sent\u00e9es sous la forme de boutons. Par ailleurs, selon les actions, certaines caract\u00e9ristiques chiffr\u00e9es du personnage principal de l'histoire (Points de vie, niveau, etc.) varieront, et ces caract\u00e9ristiques seront affich\u00e9es \u00e0 l'\u00e9cran.</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#un-exemple-de-debut-de-jeu-dungeon-of-death","title":"Un exemple de d\u00e9but de jeu : Dungeon of death","text":"<p>Vous trouverez ici un d\u00e9but d'exemple de ce que peut donner le projet. Vous avez ainsi acc\u00e8s non seulement aux codes HTML et CSS, mais aussi \u00e0 un exemple de code Javascript.</p> <p>Attention !</p> <p>Vous n'\u00eates pas tenus d'avoir une illustration graphique de votre histoire ! Cependant, si vous le souhaitez je vous d\u00e9conseille d'utiliser la m\u00eame technique que celle que j'ai utilis\u00e9e, car \u00e0 la fois trop complexe et peu adapt\u00e9e pour certaines histoires.</p> <p>Une id\u00e9e plus int\u00e9ressante serait de charger une image diff\u00e9rente \u00e0 chaque \u00e9tape de votre histoire.</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#quelques-tutoriels-utiles","title":"Quelques tutoriels utiles","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#utiliser-des-boutons-pour-modifier-des-variables-en-javascript","title":"Utiliser des boutons pour modifier des variables en Javascript","text":"<p>Les fichiers d'exemples sont visibles sur Capytale par le code f7fa-2705601</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#creation-et-modification-dobjets-ayant-plusieurs-caracteristiques-en-javascript","title":"Cr\u00e9ation et modification d'objets ayant plusieurs caract\u00e9ristiques en Javascript","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#premiere-partie-creation-dun-objet-utilisation-dun-champ-input","title":"Premi\u00e8re partie : cr\u00e9ation d'un objet, utilisation d'un champ input","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#deuxieme-partie-utiliser-laleatoire","title":"Deuxi\u00e8me partie : utiliser l'al\u00e9atoire","text":"<p>Les fichiers d'exemples pour les deux parties sont visibles sur Capytale par le code 4764-2707919</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#utilisation-dobjets-partageant-des-descripteurs-communs","title":"Utilisation d'objets partageant des descripteurs communs","text":""},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#partie-1-les-bases","title":"Partie 1 : les bases","text":"<p>Les fichiers d'exemples sont visibles sur Capytale par le code 8702-2709067</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#partie-2-utilisation-avancee-facultative","title":"Partie 2 : utilisation avanc\u00e9e (facultative)","text":"<p>Les fichiers d'exemples sont visibles sur Capytale par le code 331d-2710811</p>"},{"location":"NSI/Premiere/Projets/DungeonJS/Dungeon/#grille-de-notation","title":"Grille de notation","text":"intitul\u00e9 bar\u00eame D\u00e9tails Jeu fonctionnel 5 pts L'histoire peut \u00eatre suivie et se termine (en bien ou en mal) Code HTML 3 pts Code HTML correct ne renvoyant pas d'erreurs sur W3C Validator Code CSS 2 pts Code correct ne renvoyant pas d'erreurs sur W3C CSS Validator Code Javascript 5 pts Le code doit \u00eatre lisible et comment\u00e9. Passage d'\u00e9tapes 2 pts Passage d'\u00e9tapes sans erreurs (bonne utilisation de boutons) Caract\u00e9ristiques \u00e9volutives 3 pts Des caract\u00e9ristiques (variables num\u00e9riques) \u00e9voluent en fonction des actions et influencent l'histoire"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/","title":"Projet Rover Curiosity Nasa","text":""},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#projet-rover-curiosity-nasa","title":"Projet Rover Curiosity Nasa","text":"<p>L'objectif est de cr\u00e9er une page web permettant d'afficher les photos prises par le rover Curiosity de la plan\u00e8te Mars, en choisissant la date de prise de vue et la cam\u00e9ra \u00e0 partir d'un formulaire, et avec des boutons permettant de naviguer d'une photo \u00e0 l'autre.</p>"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#lapi-de-la-nasa","title":"L'API de la NASA","text":"<p>Notion d'API</p> <p>*D'apr\u00e8s wikipedia</p> <p>Une API (application programming interface ou \u00ab interface de programmation d'application \u00bb) est un ensemble normalis\u00e9 de classes, de m\u00e9thodes, de fonctions et de constantes qui sert de fa\u00e7ade par laquelle un logiciel offre des services \u00e0 d'autres logiciels. </p> <p>Elle est offerte par une biblioth\u00e8que logicielle ou un service web, le plus souvent accompagn\u00e9e d'une description qui sp\u00e9cifie comment des programmes \u00ab\u00a0consommateurs\u00a0\u00bb peuvent se servir des fonctionnalit\u00e9s du programme \u00ab\u00a0fournisseur\u00a0\u00bb. </p> <p>La NASA offre des API libres d'acc\u00e8s (avec une cl\u00e9 personnelle) permettant de parcourir des donn\u00e9es collect\u00e9es par des satellites, des t\u00e9l\u00e9scopes, des robots, etc...</p> <p>Nous nous interesserons \u00e0 l'API Mars Rover Photos. Cette API permet de consulter les photos prises par les diff\u00e9rents Rovers sur Mars, \u00e0 diff\u00e9rentes dates. Par exemple, en utilisant l'url suivante :</p> <p> https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=2015-6-3&amp;camera=FHAZ&amp;api_key=DEMO_KEY </p> <p>on r\u00e9cup\u00e8re des donn\u00e9es au format <code>JSON</code> donnant toutes les informations sur les images prises par la cam\u00e9ra avant (<code>FHAZ</code>) du rover Curiosity le 3 juin 2016.</p> <pre><code>{\n\n\"photos\": [\n{\n\"id\": 102685,\n\"sol\": 1004,\n\"camera\": {\n\"id\": 20,\n\"name\": \"FHAZ\",\n\"rover_id\": 5,\n\"full_name\": \"Front Hazard Avoidance Camera\"\n},\n\"img_src\": \"http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01004/opgs/edr/fcam/FLB_486615455EDR_F0481570FHAZ00323M_.JPG\",\n\"earth_date\": \"2015-06-03\",\n\"rover\": {\n\"id\": 5,\n\"name\": \"Curiosity\",\n\"landing_date\": \"2012-08-06\",\n\"launch_date\": \"2011-11-26\",\n\"status\": \"active\"\n}\n},\n{\n\"id\": 102686,\n\"sol\": 1004,\n\"camera\": {\n\"id\": 20,\n\"name\": \"FHAZ\",\n\"rover_id\": 5,\n\"full_name\": \"Front Hazard Avoidance Camera\"\n},\n\"img_src\": \"http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01004/opgs/edr/fcam/FRB_486615455EDR_F0481570FHAZ00323M_.JPG\",\n\"earth_date\": \"2015-06-03\",\n\"rover\": {\n\"id\": 5,\n\"name\": \"Curiosity\",\n\"landing_date\": \"2012-08-06\",\n\"launch_date\": \"2011-11-26\",\n\"status\": \"active\"\n}\n}\n]\n\n}\n</code></pre>"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#le-format-json-et-les-types-de-donnees","title":"Le format JSON et les types de donn\u00e9es","text":"<p>Format JSON</p> <p><code>JSON</code> (JavaScript Object Notation \u2013 Notation Objet issue de JavaScript) est un format l\u00e9ger d'\u00e9change de donn\u00e9es. Il est facile \u00e0 lire ou \u00e0 \u00e9crire pour des humains. Il est ais\u00e9ment analysable ou g\u00e9n\u00e9rable par des machines, et il utilise des notations famili\u00e8res aux langages descendant du langage <code>C</code>, comme <code>C, C++, java, Javascript, Python...</code></p> <p><code>JSON</code> se base sur deux structures:</p> <ul> <li>Une liste de valeurs ordonn\u00e9es, qui correspond au type <code>list</code> de Python, donc encadr\u00e9 par des crochets <code>[</code> et <code>]</code>. Les valeurs sont accessibles par leur indice ;</li> <li>Une collection de couples nom/valeur, qui correspond au type <code>dict</code> (dictionnaire) de Python, c'est-\u00e0-dire encadr\u00e9 par des accolades <code>{</code> et <code>}</code>. Les valeurs sont accessibles par leur cl\u00e9.</li> </ul> <p>Aper\u00e7u rapide des dictionnaires de Python / Collections en Javascript</p> <p>Le but ici n'est pas de d\u00e9taill\u00e9 le fonctionnement des dictionnaires/collections, chose que nous ferons plus tard dans un chapitre d\u00e9di\u00e9, mais de vous donner un aper\u00e7u de l'utilisation de ces dictionnaires. Consid\u00e9rons le code suivant</p> <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderperso1 = {'nom' : 'DarkVador', bksl-nl'Age' : 41,bksl-nl'Pilote' : 'Tie Fighter',bksl-nl'Sabre' : 'Rouge', bksl-nl'enfants' : ['Luke Skywalker', 'Leia Organa']}bksl-nlbksl-nlperso2 = {'nom' : 'Luke Skywalker', bksl-nl'Age' : 19,bksl-nl'Pilote' : 'X-Wing',bksl-nl'Sabre' : 'Vert', bksl-nl'enfants' : None }bksl-nl <ul> <li> <p>Pour le dictionnaire <code>perso1</code>, l'appel \u00e0 la cl\u00e9 <code>\"nom\"</code> renverra la cha\u00eene de caract\u00e8re <code>\"Dark Vador\"</code> :</p> <pre><code>&gt;&gt;&gt; perso1[\"nom\"]\n\"Dark Vador\"\n</code></pre> </li> <li> <p>Pour le dictionnaire <code>perso2</code>, l'appel \u00e0 la cl\u00e9 <code>\"Sabre\"</code> renverra la cha\u00eene de caract\u00e8re <code>\"Vert\"</code> :</p> <pre><code>&gt;&gt;&gt; perso2[\"Sabre\"]\n\"Vert\"\n</code></pre> </li> <li> <p>Pour le dictionnaire <code>perso1</code>, l'appel \u00e0 la cl\u00e9 <code>\"enfants\"</code> renverra la liste  <code>['Luke Skywalker', 'Leia Organa']</code> :</p> <p></p><pre><code>&gt;&gt;&gt; perso1[\"enfants\"]\n['Luke Skywalker', 'Leia Organa']\n</code></pre> Il sera alors possible d'atteindre  la cha\u00eene <code>'Leia Organa'</code> en utilisant l'indice de celle-ci dans la liste : <pre><code>&gt;&gt;&gt; perso1[\"enfants\"][1]\n'Leia Organa'\n</code></pre> </li> </ul>"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#analyse-des-donnees-recues-par-une-requete","title":"Analyse des donn\u00e9es re\u00e7ues par une requ\u00eate","text":"<p>La requ\u00eate  https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=2015-6-3&amp;camera=FHAZ&amp;api_key=DEMO_KEY renvoie les donn\u00e9es <code>JSON</code> suivantes :</p> <p></p><pre><code>{\n\n\"photos\": [\n{\n\"id\": 102685,\n\"sol\": 1004,\n\"camera\": {\n\"id\": 20,\n\"name\": \"FHAZ\",\n\"rover_id\": 5,\n\"full_name\": \"Front Hazard Avoidance Camera\"\n},\n\"img_src\": \"http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01004/opgs/edr/fcam/FLB_486615455EDR_F0481570FHAZ00323M_.JPG\",\n\"earth_date\": \"2015-06-03\",\n\"rover\": {\n\"id\": 5,\n\"name\": \"Curiosity\",\n\"landing_date\": \"2012-08-06\",\n\"launch_date\": \"2011-11-26\",\n\"status\": \"active\"\n}\n},\n{\n\"id\": 102686,\n\"sol\": 1004,\n\"camera\": {\n\"id\": 20,\n\"name\": \"FHAZ\",\n\"rover_id\": 5,\n\"full_name\": \"Front Hazard Avoidance Camera\"\n},\n\"img_src\": \"http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01004/opgs/edr/fcam/FRB_486615455EDR_F0481570FHAZ00323M_.JPG\",\n\"earth_date\": \"2015-06-03\",\n\"rover\": {\n\"id\": 5,\n\"name\": \"Curiosity\",\n\"landing_date\": \"2012-08-06\",\n\"launch_date\": \"2011-11-26\",\n\"status\": \"active\"\n}\n}\n]\n\n}\n</code></pre> Qu'on peut analyser ainsi : <ol> <li>Le r\u00e9sultat est un dictionnaire, ayant une unique cl\u00e9 <code>\"Photos\"</code>, auquel la valeur associ\u00e9e est de type liste.</li> <li>La liste contient deux \u00e9l\u00e9ments de type dictionnaire.</li> <li>Les deux dictionnaires poss\u00e8dent les m\u00eames cl\u00e9s <ul> <li><code>\"id\"</code> : l'identifiant de la photo, un entier ;</li> <li><code>\"sol\"</code> : le nombre de jour depuis l'aterrissage du rover \u00e0 la date donn\u00e9e ;</li> <li><code>\"camera\"</code> : un dictionnaire contenant les informations sur la cam\u00e9ra utilis\u00e9e pour prendre la photo</li> <li><code>\"img_src\"</code> : l'URL de la photo ;</li> <li><code>\"earth_date\"</code> : la date terrienne \u00e0 laquelle a \u00e9t\u00e9 prise la photo ;</li> <li><code>\"rover\"</code> : un dictionnaire contenant les informations sur le rover qui a pris cette photo.</li> </ul> </li> </ol>"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#applications","title":"Applications","text":""},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#applications-en-python","title":"Applications en Python","text":"<p>Exercice</p> <ol> <li> <p>En utilisant la cl\u00e9 <code>API</code> que je vous fournirais en classe, copiez-collez le code suivant dans un nouveau fichier de Thonny :</p> <pre><code>nasa_key= ...\n# importation du module webbrowser\nimport webbrowser\n# importation du sous-module MarsRovers du module nasaapi\nfrom nasaapi import MarsRovers\n# initialisation de la connexion avec l\u2019API et cr\u00e9ation de l\u2019objet rovers\nrovers = MarsRovers(nasa_key, 50 , \"NAVCAM\")\n# r\u00e9cup\u00e9ration des donn\u00e9es de Curiosity (dictionnaire)\ncur = rovers.curiosity()\n\n# acc\u00e8s \u00e0 l\u2019URL de la quatri\u00e8me photo\n\nurl= cur['photos'][3]['img_src']\n\n# envoi de l\u2019URL dans le navigateur\nwebbrowser.open_new_tab(url)\n</code></pre> </li> <li> <p>Installez les modules <code>webbrowser</code>, <code>python-nasa-api</code>et <code>requests</code> dans Thonny, en utilisant le menu <code>Outils &gt; G\u00e9rer les paquets</code>.</p> </li> <li>Ex\u00e9cutez le code. Que se passe-t-il ?</li> <li>Modifiez le code pour recevoir la premi\u00e8re photo prise par la cam\u00e9ra <code>FHAZ</code> (Front Hazard Avoidance Camera).</li> <li>Combien de photos ont \u00e9t\u00e9 prises par la cam\u00e9ra panoramique le 30\u00e8me jour par Opportunity ? Les afficher toutes !</li> <li>Combien de photos ont \u00e9t\u00e9 prises par toutes les cam\u00e9ras de Curiosity le 100\u00e8me jour ? Les afficher toutes !</li> </ol>"},{"location":"NSI/Premiere/Projets/NasaWeb/Nasa_Web/#application-en-html","title":"Application en HTML","text":"<p>Le projet individuel</p> <p>L'objectif est de constuire un ensemble de pages web permettant de s\u00e9lectionner un rover, une cam\u00e9ra et une date ou un sol afin d'obtenir un carroussel des photos correspondantes, comme par exemple sur la capture d'\u00e9cran suivante :</p> <p></p> <p>Afin de simplifier votre travail de r\u00e9cup\u00e9ration des donn\u00e9es, un fichier javascript nasa_js.js vous est fourni, comprenant :</p> <ul> <li>une constante <code>MY_NASA_KEY</code> devant contenir la cl\u00e9 de connexion \u00e0 la NASA ;</li> <li>une variable <code>imgArray</code> servant \u00e0 contenir les r\u00e9sultats de r\u00e9qu\u00eates sur l'API de la NASA ;</li> <li>un objet de <code>request_parameters</code> de type <code>Map</code> (dictionnaire/collection), servant \u00e0 contenir les param\u00e8tres de la requ\u00eate ;</li> <li>une fonction <code>request_to_nasa</code> qui, une fois appel\u00e9e avec les bons param\u00e8tres, peuple la variable <code>imgArray</code> des r\u00e9sultats de la requ\u00eate.</li> </ul> <p>Le projet est individuel, et doit contenir :</p> <ul> <li>une ou pluseiurs fichiers <code>HTML</code> ;</li> <li>un ou plusieurs fichiers <code>CSS</code> (mais un seul suffit) ;</li> <li>le fichier <code>nasa_js.js</code> compl\u00e9t\u00e9 avec vos propres fonctions si n\u00e9cessaires ;</li> </ul> <p>Le bar\u00eame est le suivant :</p> <ul> <li>10 points pour un site fonctionnel, plus particuli\u00e8rement :<ul> <li>5 points pour une(des) page(s) contenant un formulaire de s\u00e9lection des options ;</li> <li>5 points pour une m\u00e9thode de visualisation des photos obtenues ;</li> </ul> </li> <li>4 points pour l'esth\u00e9tique du site (fichier <code>CSS</code> coh\u00e9rent et ergonomie du site ) ;</li> <li>3 points pour un code sans erreur HTML/CSS (v\u00e9rifier sur W3C);</li> <li>3 points bonus, selon les am\u00e9liorations  que vous apporterez !</li> </ul>"},{"location":"NSI/Premiere/Projets/PFC/PFC/","title":"Projet : Pierre-Feuille-Ciseaux","text":""},{"location":"NSI/Premiere/Projets/PFC/PFC/#projet-pierre-feuille-ciseau","title":"Projet Pierre-Feuille-Ciseau","text":"<p>principe du projet</p> <ul> <li>LA NOTE MAXIMALE DE CE PROJET EST DE 13 SANS LA PARTIE FACULTATIVE ! </li> <li>Vous travaillerez par binomes sur ce projet (ou exceptionnellement par trinome).</li> <li>Vous rendrez le code complet + votre dossier personnel pour le 09 novembre 2022 au plus tard.</li> <li>Vous aurez un temps en classe pour r\u00e9aliser le projet, mais ce temps  ne sera pas suffisant ! Vous devrez vous coordonner pour arriver \u00e0 vos fins !</li> </ul>"},{"location":"NSI/Premiere/Projets/PFC/PFC/#description-du-projet","title":"Description du projet","text":"<p>L'objectifv est d'impl\u00e9menter un jeude \u00ab Pierre - Feuille- Ciseaux \u00bb entre un joueur/une joueuse humaine et l'ordinateur.</p> <p>Le joueur/la joueuse choisit parmi les trois possibilit\u00e9s, puis l'ordinateur choisit au hasard une des trois possibilit\u00e9s. </p> <p>Le gagnant gagne 1 point, si il y a \u00e9galit\u00e9 aucun ne marque.</p> <p>Le jeu se termine d\u00e8s qu'un des participant\u00b7e\u00b7s atteint 5 points.</p>"},{"location":"NSI/Premiere/Projets/PFC/PFC/#plan-de-travail","title":"Plan de travail","text":"<p>Le jeu \u00e9tant tr\u00e8s simple \u00e0 cr\u00e9er, le plan de travail est moins avanc\u00e9 que pour les projets <code>Pendu</code> ou <code>Bandit Manchot</code>. Il faudra cependant cr\u00e9er les assertions et/ou les tests n\u00e9cessaires pour chacune des fonctions suivantes.</p> <p>Il faudra cr\u00e9er :</p> <ul> <li>une fonction <code>choix_joueur</code>, qui renvoie le choix du joueur / de la joueuse ;</li> <li>une fonction <code>choix_ordinateur</code>, qui renvoie le choix de l'ordinateur ;</li> <li>une fonction <code>qui_gagne</code>, qui renvoie l'indice du joueur/ de la joueuse gagnant\u00b7e, selon les deux arguments pass\u00e9s. Par exemple <code>qui_gagne('Feuille', 'Ciseaux')</code> renvoie <code>1</code>, alors que <code>qui_gagne('Pierre', 'Ciseaux')</code> renvoie <code>0</code> ;</li> <li>une fonction <code>une_manche</code> qui g\u00e8re une manche de jeu ;</li> <li>une fonction <code>main_game</code> qui g\u00e8re une partie compl\u00e8te.</li> </ul> <p>Partie facultative</p> <p>Il est possible de complexifier le jeu avec 5 possibilit\u00e9s, comme dans le jeu de <code>Pierre - Feuille - Ciseaux - Lezard - Spock</code>, pr\u00e9sent\u00e9 ici par Sheldon Cooper.</p> <p>Pour les allergiques \u00e0 l'audio en anglais, le voici en explication texte</p>"},{"location":"NSI/Premiere/Projets/PFC/PFC/#grille-de-notation","title":"Grille de notation","text":"intitul\u00e9 bar\u00eame D\u00e9tails fonction <code>choix_joueur</code> 2 pts Les assertions sont explicites fonction <code>choix_ordinateur</code> 2 pts Les assertions sont explicites fonction <code>qui_gagne</code> 2 pts Des tests exhaustifs sont \u00e9crits fonction <code>une_manche</code> 1 pt L'ensemble est coh\u00e9rent fonction <code>main_game</code> 1 pt Une partie est jouable Code clair et comment\u00e9 2 pts Coh\u00e9rence des choix de noms de variables 2 pts Esth\u00e9tique du jeu 1 pt RCPLS 2pts Jeu selon les r\u00e8glmes TBBT"},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/","title":"Projet : Jeu du Pendu","text":""},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/#projet-jeu-du-pendu","title":"Projet : Jeu du Pendu","text":"<p>principe du projet</p> <ul> <li>Vous travaillerez par binomes sur ce projet (ou exceptionnellement par trinome).</li> <li>Vous rendrez le code complet + votre dossier personnel pour le 09 novembre 2022 au plus tard.</li> <li>Vous aurez un temps en classe pour r\u00e9aliser le projet, mais ce temps  ne sera pas suffisant ! Vous devrez vous coordonner pour arriver \u00e0 vos fins !</li> </ul>"},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/#description-du-projet","title":"Description du projet","text":"<p>jeu du Pendu</p> <p>Le principe retenu pour le jeu est le suivant :</p> <ol> <li>Un mot fran\u00e7ais est tir\u00e9 al\u00e9atoirement depuis un fichier externe.</li> <li>Ce mot est nettoy\u00e9 des accents et autres signes diacritiques fran\u00e7ais (<code>\u00e7</code>, <code>\u0153</code>, <code>\u00e6</code>, ...) puis converti en majuscules. Les tirets des mots  compos\u00e9s sont conserv\u00e9s !</li> <li>On affiche une s\u00e9rie de tirets correspondant aux emplacements des lettres ainsi que la potence de d\u00e9part du pendu.</li> <li>On demande \u00e0 l'utilisateur\u00b7trice une lettre saisie au clavier, et on v\u00e9rifie que : <ul> <li>c'est bien une unique lettre ;</li> <li>elle n'a pas d\u00e9j\u00e0 \u00e9t\u00e9 propos\u00e9e.</li> </ul> </li> <li>Si la lettre fait partie du mot cherch\u00e9, les tirets correspondants sont remplac\u00e9s par la lettre. Sinon on ajoute un \u00e9l\u00e9ment au dessin du pendu.</li> <li>On reprend \u00e0 l'\u00e9tape 4 tant que :<ul> <li>soit il reste des lettres \u00e0 trouver ;</li> <li>soit le pendu est compl\u00e8tement dessin\u00e9 (6 \u00e9checs).</li> </ul> </li> <li>Une fois la partie termin\u00e9e, le joueur/la joueuse\" peut alors choisir de recommencer ou non une nouvelle partie.</li> </ol> <p>Le rendu final devrait ressembler si possible \u00e0 celui de la vid\u00e9o suivante  :</p> <p></p><p> </p>"},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/#les-fichiers-necessaires","title":"Les fichiers n\u00e9cessaires","text":"<p>Fichier de mots</p> <p>Pour mener \u00e0 bien le projet, vous aurez d'abord besoin du fichier des mots fran\u00e7ais..</p> <p>Vous t\u00e9l\u00e9chargerez celui-ci et le copierez dans votre dossier de travail, \u00e0 c\u00f4t\u00e9 du fichier python utilis\u00e9.</p> <p>J'ai retir\u00e9 de celui-ci tous les mots contenant des signes diacritiques autres que :</p> <ul> <li>les lettres accentu\u00e9es ;</li> <li>les tirets ;</li> <li>les c\u00e9dilles ;</li> <li>les lettres combin\u00e9es (e dans l'o,...)</li> </ul> <p>Les mots peuvent \u00eatre en majuscule, en minuscule, ou toute autre combinaison de casse.</p> <p>Base de code Python</p> <p>Je vous donne ici le code qui doit \u00eatre votre base de travail.</p> <p>fonction <code>choix_mot(adresseFichier)</code></p> <p>Cette fonction ne doit pas \u00eatre modifi\u00e9e !</p> <p>Elle prend en argument l'adresse relative ou absolue d'un fichier texte, et renvoie la chaine de caract\u00e8res correspondant \u00e0 une ligne de ce fichier, o\u00f9 :</p> <ul> <li>les \u00e9ventuels espaces de d\u00e9but et de fin de ligne sont supprim\u00e9s ;</li> <li>les caract\u00e8res retour chariot (sauts de lignes) <code>\\n</code> sont supprim\u00e9s.</li> </ul> <p>Dans le cadre de ce projet, le fichier <code>liste_francais_modifiee.txt</code> doit normalement \u00eatre situ\u00e9 dans le m\u00eame r\u00e9pertoire que <code>ProjetPendu.py</code>. Donc vous pouvez utiliser cette fonction de la mani\u00e8re suivante :</p> <p></p><pre><code>mot = choix_mot(\"liste_francais_modifiee.txt\")\n</code></pre> Ainsi la variable <code>mot</code> contiendra un mot extrait al\u00e9atoirement du fichier."},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/#plan-de-travail","title":"Plan de travail","text":"<ol> <li> <p>Vous commencerez par compl\u00e9ter la fonction <code>formate_mot(mot)</code>, afin qu'elle renvoie  une cha\u00eene de caract\u00e8res en majuscule dans laquelle tous les signes diacritiques ont \u00e9t\u00e9 supprim\u00e9s (\u00e0 par les tirets des mots compos\u00e9s). Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres.</p> </li> <li> <p>Vous compl\u00e8terez ensuite la fonction <code>genere_tirets(mot_a_trouver,lettres_utilisees)</code>, qui  renvoie une cha\u00eene de caract\u00e8res correspondant \u00e0 celle pass\u00e9e en premier argument <code>mot_a_trouver</code>, pour laquelle les lettres non pr\u00e9sentes dans la cha\u00eene de caract\u00e8re <code>lettres_utilisees</code>. De plus, chaque caract\u00e8re de la cha\u00eene finale devra \u00eatre suivi d'un espace. Des tests unitaires sont donn\u00e9s \u00e0 titre d'exemple Vous pouvez \u00e9ventuellement rajouter les votres.</p> </li> <li> <p>Vous compl\u00e8terez la fonction <code>compte_restantes(mot_a_trouver,lettres_utilisees)</code> qui renvoie un entier correspondant au nombre de lettres restant \u00e0 trouver dans <code>mot_a_trouver</code> sachant la cha\u00eene de lettres d\u00e9j\u00e0 utilis\u00e9es <code>lettres_utilisees</code>.</p> </li> <li> <p>Vous compl\u00e8terez ensuite la fonction <code>demande_joueur_lettre()</code> et la rendrez dumbproof : cette fonction doit  continuer \u00e0 redemander au joueur de saisir une lettre tant que celle-ci n'est pas compatible avec les r\u00e8gles du jeu.</p> </li> <li> <p>Vous compl\u00e8terez ensuite la fonction <code>affiche_pendu(mot_a_trouver, lettres_utilisees, nb_echecs)</code> qui affiche non seulement la potence,  amis aussi le mot \u00e0 trouver sous sa forme de tirets. Pour construire cette fonction, vous utiliserez une f-string multi-lignes telle que :</p> </li> </ol> <p></p><pre><code>f\"\"\"\n\n   _ _ _\n  o     |\n/ | \\   |\n / \\    |\n        |\n _______|__ \n\"\"\"\n</code></pre> 6. A partir de toutes les fonctions pr\u00e9c\u00e9dentes, vous finaliserez le jeu en compl\u00e9tant la fonction <code>une_manche()</code>. <ol> <li>Une fois le jeu compl\u00e9t\u00e9, vous devrez en outre compl\u00e9ter un dossier personnel d'une ou  deux pages pr\u00e9sentant : </li> <li>ce que vous avez r\u00e9alis\u00e9 individuellement dans ce projet ;</li> <li>les difficult\u00e9s rencontr\u00e9es et/ou les probl\u00e8mes que vous n'avez pas pu r\u00e9soudre ;</li> <li> <p>les aides qui vous on \u00e9t\u00e9 apport\u00e9es.</p> </li> <li> <p>Vous pourrez enfin apporter des modifications et/ou am\u00e9liorations au code, par exemple en :</p> <ul> <li>ajoutant un compteur de score qui donne le nombre de r\u00e9ussites par rapport au nombre de parties jou\u00e9es.</li> <li>ajouter un niveau de difficult\u00e9, en changeant le nombre d'erreurs possibles ;</li> <li>etc...</li> </ul> </li> </ol>"},{"location":"NSI/Premiere/Projets/Pendu/ProjetPendu/#grille-de-notation","title":"Grille de notation","text":"intitul\u00e9 bar\u00eame D\u00e9tails fonction <code>formate_mot</code> 3 pt passage de tous les tests unitaires fonction <code>genere_tirets</code> 2 pt passage de tous les tests unitaires fonction <code>compte_restantes</code> 2 pt passage de tous les tests unitaires fonction <code>demande_joueur_lettre</code> 1 pt dumbproof fonction <code>affiche_pendu</code> 3 pt Affichage correct fonction <code>une_manche</code> 3 pts On attend un jeu a minima fonctionnel Noms des variables clairs 2 pts On proscrira les noms de variable d'un seul caract\u00e8re, sauf compteurs pr\u00e9cis Code comment\u00e9 et clair 3 pts Des explications minimales doivent \u00eatre \u00e9crites pour expliquer votre code Am\u00e9liorations,   qualit\u00e9 du code, etc... 2 pts"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/","title":"Projet : D\u00e9mineur","text":""},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#projet-demineur","title":"Projet D\u00e9mineur","text":""},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#presentation-du-jeu","title":"Pr\u00e9sentation du jeu","text":"<p>Le jeu du d\u00e9mineur (Minesweeper en anglais) est un classique des jeux vid\u00e9o, dont les principes sont pr\u00e9sent\u00e9s ci-dessous :</p> <p>]</p> <ul> <li>Une grille carr\u00e9e de taille quelconque (en g\u00e9n\u00e9ral 9 ou 10) est pr\u00e9sent\u00e9e, o\u00f9 toutes les cases sont couvertes (le contenu est cach\u00e9).</li> <li>Dans cette grille, on trouve un certain nombre de bombes, ce nombre d\u00e9pendant de la difficult\u00e9 choisie :<ul> <li><code>easy</code> : le nombre de bombes est <code>taille + 1</code> ;</li> <li><code>\u01f9ormal</code> : le nombre de bombes est <code>taille + taille//4</code> ;</li> <li><code>hard</code>: le nombre de bombes est <code>taille + taille//2</code>.</li> </ul> </li> <li>Une case peut-alors :<ul> <li>soit contenir une bombe ;</li> <li>soit contenir un nombre qui correspond au nombre de bombes pr\u00e9sentes dans les 8 cases qui lui sont adjacentes ;</li> <li>soit \u00eatre vide - ce qui signifie qu'elle ne contient pas de bombe et n'est adjacente \u00e0 aucune.</li> </ul> </li> <li>le/la joueur\u00b7euse doit d\u00e9couvrir (au sens d'enlever la couverture) toutes les cases ne contenant pas de bombes et perd d\u00e8s qu'une bombe est d\u00e9couverte.</li> <li>le/la joueur\u00b7euse peut placer des drapeaux (flags) sur les cases qu'il soup\u00e7onne contenir une bombe (les cases bleues dans la capture d'\u00e9cran).</li> <li>Lorsqu'il clique sur une case, le/la joueur\u00b7euse voit donc trois possibilit\u00e9s :<ul> <li>soit la case contient une bombe, et il a alors perdu ;</li> <li>soit la case est adjacente \u00e0 une bombe, et donc **seule cette case est d\u00e9couverte\" ;</li> <li>soit la case n'est pas adjacente \u00e0 une bombe, et alors la case est d\u00e9couverte, ainsi que toutes ses voisines et leurs voisines etc..., comme si le/la joueur\u00b7euse avait cliqu\u00e9 dessus. La propagation s'arr\u00eate donc aux cases adjacentes \u00e0 une bombe, qui sont d\u00e9couvertes, mais pas leurs voisines.</li> </ul> </li> </ul> <p>Ainsi sur la capture, le/la joueur\u00b7euse a perdu<sup>1</sup> ! Il a plac\u00e9 8 drapeaux au bon endroit, mais a cliqu\u00e9 sur la case enti\u00e8rement rouge qui contenait une bombe, et n'a pas vu les deux bombes restantes dans les cases ayant le petit carr\u00e9 rouge.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#les-fichiers-et-fonctions-du-projet","title":"Les fichiers et fonctions du projet","text":""},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fichier-demineurpy","title":"Fichier <code>demineur.py</code>","text":""},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#imports","title":"Imports","text":"<p>On importe le module <code>random</code> pour g\u00e9rer l'al\u00e9atoire, ainsi que la classe <code>Fore</code> du module <code>colorama</code> pour g\u00e9rer la couleur dans la console.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#classe-cell","title":"Classe <code>Cell</code>","text":"<p>Sans rentrer dans les d\u00e9tails, il s'agit de programmation orient\u00e9e objet (POO), qui est au programme de terminale, mais vous n'aurez rien \u00e0 changer dans cette partie du programme, qui est l\u00e0 pour vous simplifier le travail au sein du projet.</p> <p>Cette classe permet \u00ab d'\u00e9tendre \u00bb l'ensemble des objets possibles dans Python, en permettant de cr\u00e9er des objets de type <code>Cell</code>. De tels objets poss\u00e8deront trois attributs :</p> <ul> <li><code>value</code> : la valeur de la cellule (de type <code>int</code>), initialis\u00e9e \u00e0 <code>0</code> ;</li> <li><code>flag</code> : un bool\u00e9en prenant pour valeur <code>True</code> si la case poss\u00e8de un drapeau, et <code>False</code> sinon. Par d\u00e9faut initialis\u00e9e \u00e0 <code>False</code> ;</li> <li><code>covered</code> : un bool\u00e9en prenant pour valeur <code>True</code>si la case est d\u00e9couverte, et <code>False</code>sinon. Par d\u00e9faut initialis\u00e9e \u00e0 <code>False</code>.</li> </ul> <p>On utilise un objet de type <code>Cell</code>de la mani\u00e8re suivante :</p> <p></p><pre><code>&gt;&gt;&gt; c = Cell()\n&gt;&gt;&gt; c.value\n0\n&gt;&gt;&gt; c.value = 20\n&gt;&gt;&gt; c.value\n20\n&gt;&gt;&gt; c.flag = True\n&gt;&gt;&gt; c.flag\nTrue\n&gt;&gt;&gt; c.covered\nFalse\n</code></pre> Pour cr\u00e9er un tableau de 5 cellules, on utilise la compr\u00e9hension suivante : <p></p><pre><code>&gt;&gt;&gt; t = [Cell() for _ in range(5)]\n</code></pre> Pour ensuite modifier un des objets de type <code>Cell</code>, il faudra l'appeler :  <ul> <li> <p>soit gr\u00e2ce \u00e0 son indice :</p> <pre><code>&gt;&gt;&gt; t[2].value = 3\n</code></pre> </li> <li> <p>soit en utilisant un parcours par \u00e9l\u00e9ments :</p> <p></p><pre><code>&gt;&gt;&gt; for elem in t :\n        elem.covered = True\n</code></pre> valeur` </li> </ul>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-init_gridtaille","title":"Fonction <code>init_grid(taille)</code>","text":"<p>Cette fonction doit cr\u00e9er et renvoyer une grille carr\u00e9e de dimension <code>taille x taille</code>, contenant un objet de type <code>Cell</code> dans chaque case.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-compute_cellgrid-x-y","title":"Fonction <code>compute_cell(grid, x, y)</code>","text":"<p>Cette fonction doit mettre \u00e0 jour la valeur de la cellule de la ligne <code>x</code> et de la colonne <code>y</code> de la grille <code>grid</code>, en fonction du nombre de cases voisines contenant des bombes.</p> <p>On utilisera le code suivant :</p> <ul> <li>une cellule ayant pour valeur <code>-1</code> repr\u00e9sentera une bombe ;</li> <li>une cellule ayant pour valeur <code>0</code> repr\u00e9sentera une case non-adjacente \u00e0 une bombe ;</li> <li>une cellule adjacente \u00e0 une ou des bombes portera une valeur \u00e9gale au nombre de bombes \u00e0 laquellle elle est adjacente.</li> </ul> <p>Sur une grille <code>5x5</code>en mode <code>easy</code>, on pourra par exemple avoir la configuration suivante :</p> <p></p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-make_gridgrid-nb_bombes","title":"Fonction <code>make_grid(grid, nb_bombes)</code>","text":"<p>Cette fonction doit modifier en place la grille <code>grid</code> pour \u00e0 la fois placer al\u00e9atoirement <code>nb_bombes</code> bombes (sans que deux bombes soient sur la m\u00eame case), et mettre \u00e0 jour l'ensemble des cases de la grille.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-affichegridgrid-colors-false-detonate-false","title":"Fonction <code>affichegrid(grid, colors= False, detonate= False)</code>","text":"<p>Cette fonction permet d'afficher dans la console la grille de jeu de la mani\u00e8re suivante :</p> <ul> <li> <p>en jeu la grille est affich\u00e9e ainsi :</p> <p></p> </li> <li> <p>\u00e0 la fin de la partie, on utilise des couleurs (vert pour bon placement, rouge pour erreur) comme dans la capture ci-dessous :</p> <p></p> </li> </ul> <p>Afin de rendre l'interface agr\u00e9able, vous devrez utiliser une police <code>mono</code>dans la console (comme <code>courrier</code>), et pourrez utiliser les caract\u00e8res utf-8 suivants : </p> <ul> <li> <p>\u2550 et \u2551 ;</p> </li> <li> <p>\u2554, \u2566, et \u2557 ;</p> </li> <li> <p>\u2560, \u256c, et \u2563 ;</p> </li> <li> <p>\u255a, \u2569 et \u255d</p> </li> <li> <p>\u2588, \u25d5 et \u25d8</p> </li> </ul> <p>Les arguments <code>colors</code> et <code>detonate</code> sont des bool\u00e9ens signifiants respectivement que des couleurs doivent \u00eatre utilis\u00e9es, et qu'une bombe a explos\u00e9e (= que la partie est perdue).</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-ask_positiongrid","title":"Fonction <code>ask_position(grid)</code>","text":"<p>Fonction demandant au joueur son prochain coup, sous la forme d'une chaine de caract\u00e8res de la forme <code>B3</code>ou <code>fB3</code>, selon que le/la joueur\u00b7euse souhaite  d\u00e9couvrir ou flaguer une case (ou m\u00eame supprimer un drapeau), et qui renvoie un tuple sous la forme <code>(flag, indice_ligne, indice_colonne)</code>, o\u00f9 <code>flag</code> est un bool\u00e9en donnant la nature du coup, <code>indice_ligne</code> est l'indice de la ligne de la grille correspondant au coup jou\u00e9, et de m\u00eame pour <code>indice_colonne</code>.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-propagategrid-x-y","title":"fonction <code>propagate(grid, x, y)</code>","text":"<p>Il s'agit d'une des fonctions essentielles du jeu. Si le/la joueur\u00b7euse clique sur une case vide(d'attribut <code>valeur</code>\u00e9gal \u00e0 <code>0</code>) de la grille <code>grid</code> d'indice de ligne <code>x</code>et de colonne <code>y</code>, il d\u00e9couvre toutes les cases qui lui sont adjacentes ayant pour valeur <code>0</code>, <code>1</code>, ou plus, ainsi que les voisines de celles de valeur <code>0</code>, et la d\u00e9couverte se propage ainsi de proche en proche.</p> <p>L'algorithme \u00e0 utiliser pour permettre cette propagation est le suivant :</p> <p>Algorithme de propagation</p> <ul> <li>on cr\u00e9e deux listes <code>to_uncover</code>et <code>to_compute</code> qui contiennent respectivement les coordonn\u00e9es des cellules \u00e0 d\u00e9couvrir et de celles \u00e0 traiter, qui sont toutes les deux initialis\u00e9es avec le tuple <code>(x,y)</code> o\u00f9 <code>x</code> et <code>y</code> sont les arguments fournis \u00e0 la fonction.</li> <li>tant que la liste <code>to_compute</code> n'est pas vide, on effectue alors es op\u00e9rations suivantes :<ul> <li>on \u00abpop\u00bb de la liste <code>to_compute</code> son dernier \u00e9l\u00e9ment, qui donne les coordonn\u00e9es de la cellule qui va \u00eatre \u00e9tudi\u00e9e, et on change l'attribut <code>covered</code> de cette cellule \u00e0 <code>False</code> ;</li> <li>si la cellule a pour valeur 0, alors on ajoute toutes ses voisines \u00e0 la fois \u00e0 la liste <code>to_compute</code> et \u00e0 la liste <code>to_uncover</code>, si elles n'y sont pas d\u00e9j\u00e0 pr\u00e9sentes.</li> </ul> </li> </ul>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-apply_positiongrid-flag-x-y","title":"Fonction <code>apply_position(grid, flag, x, y)</code>","text":"<p>Cette fonction applique l'effet d'un coup du joueur sur la grille :</p> <ul> <li>en pla\u00e7ant un drapeau sur la cellule de coordonn\u00e9es  <code>(x, y)</code> si l'argument <code>flag</code>est <code>True</code>;</li> <li>en d\u00e9couvrant une bombe si le/la joueur\u00b7euse a jou\u00e9 sur une case en contenant une ;</li> <li>en appliquant la fonction <code>propagate</code> dans le cas o\u00f9 le/la joueur\u00b7euse joue sur une case ne contenant pas de bombes.</li> </ul> <p>Cette fonction renvoie un bool\u00e9en qui vaut <code>True</code>si le jeu se poursuit, et <code>False</code>si le/la joueur\u00b7euse a jou\u00e9 sur une bombe.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-count_uncoveredgrid","title":"Fonction <code>count_uncovered(grid)</code>","text":"<p>Cette fonction renvoie le nombre de cases d\u00e9couvertes sur la grille (elle aidera \u00e0 savoir si le /la joueur\u00b7euse a gagn\u00e9).</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-count_flaggedgrid","title":"Fonction <code>count_flagged(grid)</code>","text":"<p>Cette fonction renvoie le nombre de cases contenant un drapeau, utile pour l'interface graphique.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fonction-main_consolegrid-difficulte-1","title":"Fonction <code>main_console(grid, difficulte = 1)</code>","text":"<p>Cette fonction permet de lancer une partie de d\u00e9mineur dans la console, avec une difficult\u00e9 qui repr\u00e9sente le nombre de bombes suppl\u00e9mentaires (en plus de <code>taille</code>) \u00e0 ajouter \u00e0 la grille.</p> <p>Cette fonction traite tous les cas, et affiche donc au joueur s'il a gagn\u00e9 ou perdu.</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#fichier-demineurp5py","title":"Fichier <code>demineurP5.py</code>","text":"<p>Ce fichier utilise le module <code>P5</code>, qui est un portage en Python du module <code>p5</code>de javascript, qui permet de cr\u00e9er des interfaces graphiques.</p> <p>Pour utiliser <code>P5</code>avec Thonny, vous pouvez suivre ce tutoriel</p> <p>Vous n'avez rien \u00e0 changer dans ce module, sauf am\u00e9lioration souhait\u00e9e, mais si vos fonctions respectent les sp\u00e9cifications donn\u00e9es ci-dessus, le jeu devrait raisonnablement fonctionner (mais il peut \u00eatre potentiellement tr\u00e8s lent...).</p>"},{"location":"NSI/Premiere/Projets/demineurP5/projet_demineur/#bareme-du-projet","title":"Bar\u00e8me du projet","text":"<ul> <li>Un jeu en console fonctionnel (c'est-\u00e0-dire permettant de faire une partie) vous apporte 7 pts ;</li> <li>Un code correctement comment\u00e9 vous apporte 3 pts ;</li> <li>Si toutes les sp\u00e9cifications sont correctes, vous gagnez 2 pts ;</li> <li>Un code lisible, donc avec des noms de variables parlants et des sauts de lignes ad\u00e9quats, vous rapporte 3 pts ;</li> <li>Les 5 points restants correspondent aux am\u00e9liorations possibles, soit dans la console, soit dans l'interface graphique, par exemple :<ul> <li>la possibilit\u00e9 de choisir une taille de grille diff\u00e9rente ;</li> <li>l'introduction d'un chronom\u00e8tre ;</li> <li>une sauvegarde du score possible (s'inspirer par exemple du projet de Bandit Manchot...)</li> <li>...</li> </ul> </li> </ul> <ol> <li> <p>C'est fait expr\u00e8s... Je suis bien meilleur que \u00e7a \u00e0 ce jeu... Des ann\u00e9es de pratique !\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI/Terminale/home/","title":"Pr\u00e9sentation","text":""},{"location":"NSI/Terminale/home/#le-programme","title":"Le programme","text":""},{"location":"NSI/Terminale/home/#documents-officiels","title":"Documents officiels","text":"<p>Le programme de Terminale NSI se trouve ici.</p> <p>Cependant certains ajustements ont \u00e9t\u00e9 effectu\u00e9s dans le BO du 29 juillet 2021.</p>"},{"location":"NSI/Terminale/home/#prevision-de-progression-annuelle-2022-2023","title":"Pr\u00e9vision de progression annuelle 2022-2023","text":"<p>Cette progression n'est valable que pour les \u00e9l\u00e8ves du Lyc\u00e9e Pavie de Guingamp, et est sujette \u00e0 modifications au cours de l'ann\u00e9e...</p> Th\u00e8me Chapitre Dur\u00e9e Estim\u00e9e Dates pr\u00e9vues Dates effectives Remarques Structures de donn\u00e9es Modularit\u00e9 et POO 2 semaine Langages et programmation R\u00e9cursivit\u00e9 2 semaines"},{"location":"NSI/Terminale/home/#les-epreuves","title":"Les \u00e9preuves","text":""},{"location":"NSI/Terminale/home/#epreuve-ecrite","title":"Epreuve \u00e9crite","text":"<p>Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve \u00e9crite de NSI pour la session de Bac 2023. Nous pouvons cependant- supposer qu'elle aura lieu en Mars.</p> <p>Les sujets et corrig\u00e9s de l'\u00e9preuve \u00e9crite 2022 peuvent \u00eatre trouv\u00e9s ici</p>"},{"location":"NSI/Terminale/home/#epreuve-pratique","title":"Epreuve pratique","text":"<p>Pour l'instant, aucune date officielle n'est tomb\u00e9e concernant l'\u00e9preuve pratique de NSI pour la session de Bac 2023. Nous pouvons cependant- supposer qu'elle aura lieu en Mai. La base de donn\u00e9e des sujets d'Epreuve Pratique NSI est disponible ici.</p>"},{"location":"NSI/Terminale/C01/Exceptions/","title":"Exceptions","text":""},{"location":"NSI/Terminale/C01/Exceptions/#gestion-des-exceptions","title":"Gestion des exceptions","text":""},{"location":"NSI/Terminale/C01/Exceptions/#un-exemple-derreur-a-ne-pas-commettre","title":"Un exemple d'erreur \u00e0 ne pas commettre","text":"<p>Utilisation malheureuse d'un module</p> <p>Reprenons le module <code>secondDegre.py</code> de la partie pr\u00e9c\u00e9dente, mais cette fois ci en temps qu'utilisateur\u00b7trice. Nous connaissons l'interface qui nous a \u00e9t\u00e9 fournie par l'auteur\u00b7trice. Pour tester le module nous lan\u00e7ons le script suivant, nomm\u00e9 <code>testModule.py</code>, et situ\u00e9 dans le m\u00eame dossier que <code>secondDegre.py</code> :</p> <pre><code>    import secondDegre as sD\n\n    p = input(\"Donnez les coefficients du polynome s\u00e9par\u00e9s par des virgules :\")\n    p = tuple(map(float,p.split(\",\")))\n\n    p = sD.polynome(p)\n    print(sD.tangente(p,3))\n</code></pre> <p>Un probl\u00e8me ?</p> <p>Copiez-collez le code ci-dessus dans un fichier <code>testModule.py</code>, puis ex\u00e9cutez-le en saisissant :</p> <ol> <li><code>3,4,5</code> ;</li> <li><code>3,4,5,6</code> </li> <li><code>0,3,4</code></li> </ol> <p>Dans chacun des cas, qu'obtient-on en sortie ? Pourquoi ?</p> Solution <code>3,4,5</code><code>3,4,5,6</code><code>0,3,4</code> <p>La sortie est :</p> <pre><code>`y = 22.0(x-3) + 44.0`\n</code></pre> <p>qui est correcte.</p> <p>La sortie renvoie une erreur de type <code>ValueError</code>, qui d'apr\u00e8s la pile d'erreur est relev\u00e9e dans la fonction <code>polynome</code>, et qui est assez explicite : <code>ValueError: too many values to unpack (expected 3)</code>. On constate que le programme attend 3 valeurs en entr\u00e9e, et qu'il en a re\u00e7u trop.</p> <p>La sortie renvoie une erreur de type <code>TypeError</code>, caus\u00e9e dans la fonction <code>polynome</code>, mais qui l\u00e0 est plus sibylline : <code>TypeError: cannot unpack non-iterable NoneType object</code>. Nous allons devoir passer un certain temps \u00e0 debugger, afin de comprendre ce qui s'est pass\u00e9...</p> <p>Lever les bonnes erreurs</p> <p>Dans l'exemple pr\u00e9c\u00e9dent, les deux erreurs, tr\u00e8s diff\u00e9rentes, sont signal\u00e9es par leur type, accompagn\u00e9 d'un message plus ou moins clair. L'utilisateur\u00b7trice, qui ne connait pas l'impl\u00e9mentation,   ne peut parfois pas savoir d'o\u00f9 provient son erreur (ce qui peut donner des s\u00e9ances de d\u00e9buggage particuli\u00e8rement frustrantes). Il est donc n\u00e9cessaire de pr\u00e9ciser mieux les erreurs commises par l'utilisateur\u00b7trice, pour qu'il ou elle n'ait pas \u00e0 ses pr\u00e9occuper des d\u00e9tails d'impl\u00e9mentation.</p> <p>Il est par exemple possible de rajouter un message lorsque l'erreur est lev\u00e9e, en la passant en param\u00e8tre directement dans l'instruction <code>ValueError()</code> ou <code>TypeError()</code>. On peut en outre am\u00e9liorer le code en s'assurant que les \u00e9l\u00e9ments du tuple <code>t</code> sont bien <code>int</code> ou <code>float</code> : </p><pre><code>    def polynome(t) :\n        if len(t)&gt;3 :\n            raise ValueError(\"length of tuple argument greater than 3\")\n            a, b, c = t\n        if not(isinstance(a,(int, float))\n        ) or not(isinstance(b,(int, float))\n        ) or not(isinstance(c,(int, float))) :\n                raise TypeError(\"argument Error : argument must be a tuple integers or float\")\n            if a == 0 :\n            raise ValueError(\"First element of tuple must not be 0\")\n        return t\n</code></pre>"},{"location":"NSI/Terminale/C01/Exceptions/#tyes-dexceptions","title":"Tyes d'exceptions","text":"<p>Voici quelques exceptions courantes ainsi que leurs utilisations</p> Exception Contexte <code>NameError</code> acc\u00e8s \u00e0 une variable inexistante dans l'espace de nom courant <code>IndexError</code> acc\u00e8s \u00e0 un indice invalide d'une liste, d'un tuple, d'une chaine de caract\u00e8res... <code>KeyError</code> acc\u00e8s \u00e0 une cl\u00e9 inexistante d'un dictionnaire <code>ZeroDivisionError</code> division par z\u00e9ro <code>TypeError</code> op\u00e9ration appliqu\u00e9e \u00e0 un ou des objets incompatibles <p>Lever des exceptions</p> <p>Une exception peut \u00eatre lev\u00e9e (c'est-\u00e0-dire volontairement d\u00e9clench\u00e9e) par l'interm\u00e9diaire de l'instruction <code>raise</code>.</p> <p>Dans ce cas le programme est interrompu, et la pile d'erreurs est renvoy\u00e9es dans le terminal \u00e0 l'utilisateur.</p> <p>Corriger le code\"\"</p> <p>Malgr\u00e9 nos corrections, il reste plusieurs possibilit\u00e9s d'erreurs dans l'utilisation de la fonction <code>polynome(t)</code>.</p> <p>Quelles sont-elles et comment les corriger pour lever une exception explicite ?</p> Solution Ex\u00e9cution de <code>polynome((2,3))</code> ou <code>polynome((4))</code>Ex\u00e9cution de <code>polynome(3,4,5)</code>Une correction possible <p>Que se passe-t-il lorsqu'on utilise la fonction <code>polynome</code> avec un tuple de 1 ou 2 \u00e9l\u00e9ments ?</p> <p>Dans le cas d'un seul \u00e9l\u00e9ment, l'erreur ressortie est :</p> <pre><code>a, b, c = t\nTypeError: cannot unpack non-iterable int object\n</code></pre> <p>Dans le cas de deux \u00e9l\u00e9ments, l'erreur lev\u00e9e est  :</p> <pre><code>a,b,c = t\nValueError: not enough values to unpack (expected 3, got 2)\n</code></pre> <p>Dans les deux cas, on voit apparaitre les d\u00e9tails d'impl\u00e9mentation du code de la fonction, qui sont peu clairs en particulier pour le cas n\u00b02.</p> <p>Une erreur possible, et que vous avez probablement commise, est celle de passer non pas un seul argument sous la forme d'un tuple (ou d'une liste) mais de multiples param\u00e8tres.</p> <p>Cette erreur d\u00e9clenche alors l'exception <code>TypeError</code> car les trois arguments pass\u00e9s ne sont pas du bon type.</p> <p>Le code suivant  est une solution possible (certainement perfectible) \u00e0 la lev\u00e9e d'erreurs plus explicites :</p> <pre><code>def polynome(*t) :\n    try :\n        if len(t) == 1 :# si on passe un tuple ou un tableau (1,2,3),\n            # *t le convertit en [(1,2,3)]\n            t = t[0] # d'o\u00f9 cette ligne\n        a, b, *c  = t #Puis on unpack, c \u00e9tant un tuple \u00e9ventuellement vide\n    except TypeError :\n        raise TypeError(\"Must pass three argument or a tuple of 3 element.\")\n    if len(c) !=1 : # si c est vide ou contient au moins 2 \u00e9l\u00e9ments\n        raise ValueError(\"Bad Number of argument.\")\n    if not(isinstance(a,(int, float))\n    ) or not(isinstance(b,(int, float))\n    ) or not(isinstance(*c,(int, float))) :\n            raise TypeError(\"argment Error : argument must be a tuple of integers or floats.\")\n    if a == 0 :\n        raise ValueError(\"First element of tuple must not be 0.\")\n    return t\n</code></pre>"},{"location":"NSI/Terminale/C01/Exceptions/#intercepter-des-exceptions","title":"Intercepter des exceptions","text":"<p>Vous avez constat\u00e9 dans la solution pr\u00e9c\u00e9dente un bloc que nous n'avons encore jamais utilis\u00e9 :</p> <p></p><pre><code>try :\n    if len(t) == 1 :    \n        t = t[0]\n    a, b, *c  = t\nexcept TypeError :\n    raise TypeError(\"Must pass three argument or a tuple of 3 element.\")\n</code></pre> On a ici l'utilisation d'une structure sp\u00e9ciale : l'interception d'erreurs.  <p>Interception des exceptions</p> <p>Il arrive souvent en programmation que l'on doive utiliser une instructions ou une s\u00e9rie d'instruction dont on sait \u00e0 l'avance qu'elle peuvent g\u00e9n\u00e9rer des erreurs. La structure suivante est l\u00e0 pour \u00e7a : </p><pre><code>try :\n    # Bloc try\nexcept error :\n    # Bloc except\n</code></pre> Le code du bloc <code>try</code> va \u00eatre ex\u00e9cut\u00e9, et si une erreur du type fournie en argument de l'instruction <code>except</code> est lev\u00e9e, alors le code du bloc <code>except</code> est ex\u00e9cut\u00e9.  <p>Exemple :</p> <p>En premi\u00e8re nous avons vu l'importance de rendre parfois un code dumbproof, et que cela g\u00e9n\u00e9rais parfois de nombreuses difficult\u00e9s. Le simple fait de coder une fonction demandant \u00e0 un utilisateur de saisir un nombre entier entre 1 et 10 inclus pouvait rapidement p\u00e9nible \u00e0 \u00e9crire. Les deux onglets ci-dessous donnent deux versions d'une fonction permettant de r\u00e9aliser cette fonction, la version utilis\u00e9e en premi\u00e8re, et celle levant des exceptions.</p> Version avec des structures conditionnellesVersion avec interception d'erreurs <pre><code>def askIntFrom1To10() :\n    while True :\n        nb = input(\"Entrez un entier entre 1 et 10 :\")\n        if nb.isnumeric() and \".\" not in (nb) :\n            nb = int(nb)\n            if 1&lt;=nb and nb&lt;=10 :\n                return nb\n            else :\n                print(\"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\")\n        else :\n            print(\"Ce n'est pas un entier, veuillez recommencer !\")\n</code></pre> <pre><code>def askIntFrom1To10() :\n    while True :\n        try :\n            nb = int(input(\"Entrez un entier entre 1 et 10 :\"))\n            if 1&lt;=nb and nb&lt;=10 :\n                return nb\n            else :\n                print(\"L'entier saisi n'est pas entre 1 et 10. Veuillez recommencer\")\n        except ValueError :\n            print(\"Ce n'est pas un entier, veuillez recommencer !\")\n</code></pre> <p>Exercice</p> <p>Evidemment, la diff\u00e9rence ne saute pas vraiment aux yeux... Pourquoi faire tout un plat d'une seule ligne gagn\u00e9e ?</p> <p>Essayez donc, pour chacune des 2 fonctions pr\u00e9c\u00e9dentes, avec les chaines de caract\u00e8res suivantes (\u00e0 copier-coller) :</p> <ul> <li><code>\u00bd</code></li> <li><code>3\u00b2</code></li> </ul> R\u00e9ponse <p>En fait le probl\u00e8me provient de la m\u00e9thode <code>isnumeric()</code>, dont on ne contr\u00f4le pas vraiment le fonctionnement. On sait que cette m\u00e9thode permet de v\u00e9rifier si une chaine de caract\u00e8res est bien constitu\u00e9e uniquement de caract\u00e8res num\u00e9riques. Mais sans lire r\u00e9ellement la documentation, qui peut se douter que les fractions d\u00e9finies dans la table utf8, ainsi que les caract\u00e8res en exposant et en indice, sont consid\u00e9r\u00e9s comme des valeurs num\u00e9riques.</p> <p>L'int\u00e9r\u00eat du bloc <code>try</code> est qu'il se d\u00e9clenchera d\u00e8s qu'il y aura une exception lev\u00e9e. Et cette exception a peu de chance de se produire dans le bloc <code>if / else</code>. La fonction devient dumbproof (mais si vous r\u00e9ussissez \u00e0 d\u00e9clencher une erreur bloquante, signalez-le moi !!).</p> <p>Plus prosa\u00efquement, une erreur lev\u00e9e et correctement trait\u00e9e avec une structure <code>try/except</code> permet au programme de ne pas s'arr\u00eater lors d'un cas particulier.</p> <p>Enchainer les interceptions</p> <p>Il est aussi possible d'avoir plusieurs blocs <code>except</code> successifs, en utilisant : </p><pre><code>    try :\n        # Bloc try\n    except error1 :\n        # Bloc except1\n    except error2 :\n        # Bloc except2\n    ...\n</code></pre> <p>Etendre la gestion des exceptions</p> <p>Il existe de nombreuses autres possibilit\u00e9s utilisant la lev\u00e9e d'exceptions, mais elles d\u00e9passent largement le programme de Terminale.</p> <p>Les plus curieux parmi vous pourront toujours aller lire la doc Python\", qui reste la r\u00e9f\u00e9rence absolue...</p>"},{"location":"NSI/Terminale/C01/Exceptions/#les-assertions","title":"Les assertions","text":"<p>Une autre m\u00e9thode pour interrompre explicitement un programme est d'utiliser des assertions cr\u00e9\u00e9es avec l'instruction <code>assert</code>, sous la forme suivante :</p> <pre><code>assert expression bool\u00e9enne, chaine de caract\u00e8re avec message d'erreur\n</code></pre> <p>Cette instruction l\u00e8vera alors une <code>AssertionError</code>, avec le message pass\u00e9 entre parenth\u00e8se. Mais attention, le programme sera alors interrompu !</p> <p>Les assertions sont souvent utilis\u00e9es pour s'assurer que les pr\u00e9conditions d'une fonction sont bien remplies, c'est-\u00e0-dire que les arguments fournis correspondent bien aux exigences du programme.</p> <p>Exemple</p> <p>Dans le cadre d'une application graphique, on veut pouvoir d\u00e9placer un point \\(M(x;y)\\) avec un vecteur \\(\\vec{u} (a,b)\\) avec \\(x,y,a,b\\) entiers. On veut cr\u00e9er une fonction <code>translation(p : tuple,v :tuple) -&gt; tuple</code> qui prend en argument deux tuples de dimension 2, et qui renvoie le tuple obtenu en additionnant les \u00e9l\u00e9ments de m\u00eame indice. Cependant, pour que la fonction soit utilisable, il faut imp\u00e9rativement que l'utilisateur ait bien fourni deux tuples de dimension 2 et d'entiers.</p> <pre><code>def translation(t : tuple , v : tuple) -&gt; tuple :\n    assert type(t) == tuple and len(t) == 2, \"bad t argument, is not a tuple of length 2\"\n    assert type(v) == tuple and len(v) == 2, \"bad v argument, is not a tuple of length 2\"\n    assert type(t[0]) == int and type(t[1]) == int, \"tuple t must only contains integers\"\n    assert type(v[0]) == int and type(v[1]) == int, \"tuple v must only contains integers\"\n    return (t[0]+v[0], t[1]+v[1])\n</code></pre>"},{"location":"NSI/Terminale/C01/Intro/","title":"Introduction","text":""},{"location":"NSI/Terminale/C01/Intro/#modularite-et-initiation-a-la-programmation-orientee-objet","title":"Modularit\u00e9 et initiation \u00e0 la Programmation Orient\u00e9e Objet","text":"<p>Quand nous utilisons certaines fonctions o\u00f9 certains objets Python, qu'ils soient built-in ou bien import\u00e9s \u00e0 partir de modules, nous nous posons rarement la question de savoir quelle est leur impl\u00e9mentation, c'est-\u00e0-dire la mani\u00e8re dont-ils ont \u00e9t\u00e9 con\u00e7u et programm\u00e9. Nous faisons globalement confiance aux concepteurs du langage ou du module. </p> <p>Ce qui nous importe est plut\u00f4t l'interface de ces objets, c'est-\u00e0-dire la fa\u00e7on dont nous pouvons interagir avec ces objets : les cr\u00e9er, les affecter, les additionner, les supprimer...</p> <p>Dans cette partie nous verrons comment cr\u00e9er un module, le documenter,et d\u00e9finir une interface claire. Nous verrons les pr\u00e9mices d'un nouveau paradigme de programmation : la Programmation Orient\u00e9e Objet(POO).</p> <p>La suite de cette partie est grandement inspir\u00e9e de Num\u00e9riques et Sciences Informatique, 24 le\u00e7ons avec exercices corrig\u00e9, Ellipse</p>"},{"location":"NSI/Terminale/C01/Intro/#un-premier-probleme","title":"Un premier probl\u00e8me","text":"<p>Abstract</p> <p>Voici une propri\u00e9t\u00e9 probabiliste peu intuitive : il suffit d'avoir un groupe de 23 personnes pour que la probabilit\u00e9 que deux personnes aient la m\u00eame date d'anniversaire soit sup\u00e9rieure \u00e0 50%.</p> <p>Nous allons construire un programme Python qui permettra de v\u00e9rifier exp\u00e9rimentalement cette propri\u00e9t\u00e9.</p> <p>Pour mod\u00e9liser le probl\u00e8me :</p> <ul> <li>plut\u00f4t que d'utiliser des dates, nous allons utiliser des entiers de 1 \u00e0 365 ;</li> <li>nous allons cr\u00e9er une fonction sans param\u00e8tres <code>genere_groupe() -&gt; list</code> qui renvoie un tableau al\u00e9atoire de 23 entiers de 1 \u00e0 365 ;</li> <li>nous allons cr\u00e9er une fonction <code>contient_doublon(t : list) -&gt; bool</code> qui renverra <code>True</code> si le tableau contient un doublon, et <code>False</code> sinon ;</li> <li>puis nous cr\u00e9erons une fonction <code>teste_hypothese(n : int) -&gt; float</code> qui testera sur un \u00e9chantillon de <code>n</code> groupes la pr\u00e9sence d'un doublon ou non, et renverra le taux de groupes ayant eu des doublons sous la forme d'un pourcentage.</li> </ul> <p>Exercice</p> <p>Cr\u00e9er un fichier <code>recherchesDates.py</code> et impl\u00e9menter les fonctions pr\u00e9c\u00e9dentes. Des solutions sont propos\u00e9es dans les parties ci-dessous, mais vous devez d'abord tester par vous-m\u00eames. Vous pouvez cependant utiliser les indices ci-dessous pour vous aider</p> Proc\u00e9dure <code>genere_groupe() -&gt; list</code> <ol> <li>Utiliser la fonction <code>randint</code> du module <code>random</code> (voir la doc)</li> <li>Utiliser les m\u00e9thodes de listes (voir la doc)</li> </ol> Fonction <code>contient_doublon(t:list) -&gt; bool</code> <p>Une possibilit\u00e9 est de cr\u00e9er d'abord une liste vide <code>vus</code>, dans laquelle on ajoutera les valeurs d\u00e9j\u00e0 vue lors du parcours de la liste <code>t</code>.</p> <p>Ainsi, on parcourt la liste <code>t</code></p> <ol> <li>si l'\u00e9l\u00e9ment est dans <code>vus</code>, c'est qu'il y a un doublon, donc on arr\u00eate la fonction en renvoyant <code>True</code></li> <li>si l'\u00e9l\u00e9ment n'est pas dans <code>vus</code>, c'est donc la premi\u00e8re fois qu'on le voit, et on l'ajoute \u00e0 <code>vus</code>.</li> <li>Si on atteint la fin de la liste, c'est qu'il n'y a pas de doublons.</li> </ol> fonction <code>teste_hypothese(n : int) -&gt; float</code> <p>Il faut :</p> <ol> <li>Initialiser une variable comptant le nombre de doublons \u00e0 0.</li> <li>Effectuer <code>n</code> fois une boucle qui :<ol> <li>G\u00e9n\u00e8re un groupe al\u00e9atoire.</li> <li>Incr\u00e9mente de 1 le compteur si ce groupe contient un doublon</li> </ol> </li> <li>Renvoie le compteur.</li> </ol> Solution <p></p>###LancerT\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderfrom random import randintbksl-nl        bksl-nldef generepy-undgroupe() -&gt; list :bksl-nl    \"\"\"fonction renvoyant un tableau de 23 nombres al\u00e9atoires entre 1 et 365\"\"\"bksl-nl    return [randint(1,365) for py-und in range(23)]bksl-nlbksl-nldef contientpy-unddoublon(t : list) -&gt; bool :bksl-nl    \"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"bksl-nl    s = [] # s est un tableau temporaire contenant les valeurs test\u00e9esbksl-nl    for data in t :bksl-nl        if data in s : # si data est d\u00e9j\u00e0 dans s, alors c'est un doublonbksl-nl            return Truebksl-nl        else : # sinon on ajoute data \u00e0 la liste des valeurs test\u00e9es.bksl-nl            s.append(data)bksl-nl    return Falsebksl-nl    bksl-nldef testepy-undhypothese(n : int) -&gt; int:bksl-nl    \"\"\"fonction renvoyant le nombre de groupes contenant un doublonbksl-nl    sur un \u00e9chantillon de n groupes\"\"\"bksl-nl    nbDoublons = 0 bksl-nl    for py-und in range(n) :bksl-nl        t = generepy-undgroupe()bksl-nl        if contientpy-unddoublon(t) :bksl-nl            nbDoublons +=1bksl-nl    return nbDoublons/npy-str100bksl-nl Preuve math\u00e9matique <p>Cette preuve est donn\u00e9e \u00e0 titre indicatif, et n'a ni \u00e0 \u00eatre connue, ni m\u00eame \u00e0 \u00eatre comprise.</p> <p>Consid\u00e9rons notre groupe de 23 personnes, et cherchons la probabilit\u00e9 que les 23 personnes n'aient pas la m\u00eame date anniversaire :</p> <ul> <li>la premi\u00e8re peut avoir n'importe quel date anniversaire, donc 365 possibilit\u00e9 sur 365 dates possibles.</li> <li>La deuxi\u00e8me ne peut pas avoir la m\u00eame date que les deux premiers, donc 364 possibilit\u00e9s sur 365.</li> <li>La troisi\u00e8me ne peut avoir la m\u00eame date que les deux premiers, donc 363 possibilit\u00e9s sur 365.</li> <li>...</li> <li>La \\(n-i\u00e8me\\) ne peut avoir la m\u00eame date que les \\(n-1\\) pr\u00e9c\u00e9dents, donc \\(365-(n-1)\\) possibilit\u00e9s.</li> <li>...</li> <li>La 23\u00e8me ne peut avoir la m\u00eame date que les 22 pr\u00e9c\u00e9dents, donc \\(365-22 = 343\\) possibilit\u00e9s.</li> </ul> <p>La probabilit\u00e9 cherch\u00e9e est donc \\(p = \\dfrac{365}{365} \\times \\dfrac{364}{365} \\times ... \\times \\dfrac{343}{365} = \\dfrac{365~!}{342~!\\times 365^{23}}\\) o\u00f9 \\(365~!\\) est la factorielle de 365, soit la multiplication \\(365 \\times 364 \\times 363 \\times ... \\times 2 \\times 1\\).</p> <p>Or l\u2019\u00e9v\u00e8nement contraire de \"les 23 personnes n'ont pas la m\u00eame date anniversaire\" est l\u2019\u00e9v\u00e8nement \"au moins 2 personnes parmi les 23 ont la m\u00eame date d'anniversaire\". Donc sa probabilit\u00e9 est \\(p' = 1-p\\) soit en calculant environ \\(0,5073\\), soit \\(50,73\\) %.</p> <p>Plus d'informations peuvent \u00eatre trouv\u00e9es sur l'article correspondant de wikipedia.</p>"},{"location":"NSI/Terminale/C01/Intro/#differentes-solutions","title":"Diff\u00e9rentes solutions ?","text":"<p>Bien entendu, les solutions propos\u00e9es ci-dessus ne sont pas uniques. Elles sont m\u00eames non optimales (en tout cas pour la fonction <code>contient_doublon</code>). Il est tout \u00e0 fait possible de proposer d'autres impl\u00e9mentations du code, c'est-\u00e0-dire d'autres fa\u00e7ons de coder la fonctionnalit\u00e9 voulue. Ainsi on pourrait regarder les impl\u00e9mentations suivantes, et les comparer entre elles :</p> <p>Exercice : autres impl\u00e9mentations de <code>contient_doublon(t)</code></p> Tableau de bool\u00e9ensTableau de bitsTable de hachage <p></p><pre><code>def contient_doublon(t : list) -&gt; bool :\n\"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"\n    s = [False]*365 # s est un tableau temporaire contenant false pour chaque date\n    for data in t :\n        if s[data] : # si s[data] est vrai (True), alors il y a doublon\n            return True\n        else : # sinon on bascule s[data] \u00e0 True\n            s[data] = True\n    return False\n</code></pre> C'est une solution simple. Mais que dire de ses avantages et de ses inconv\u00e9nients ?  <p></p><pre><code>def contient_doublon(t : list) -&gt; bool :\n\"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"\n    s = 0\n    for data in t :\n        if s&amp;(1&lt;&lt;data) !=0 : \n            return True\n        else : \n            s = s| (1&lt;&lt;data)\n    return False\n</code></pre> C'est une solution beaucoup plus complexe (et hors programme de Terminale dans sa conception). Quels sont ses avantages et ses inconv\u00e9nients ?  <pre><code>def contient_doublon(t : list) -&gt; bool :\n\"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"\n    s = [[] for _ in range(23)]\n    for data in t :\n        if data in s[data%23] : \n            return True\n        else : \n            s[data%23].append(data)\n    return False\n</code></pre> Solution Solution originaleSolution tableau de bool\u00e9ensSolution tableau de bitsSolution table de hachage <p>L'avantage est la simplicit\u00e9 du code, et c'est \u00e0 peu pr\u00e8s tout... Par contre les inconv\u00e9nients sont nombreux, en particulier le co\u00fbt en temps : en effet \u00e0 chaque tour de boucle <code>for data in t</code>, on ex\u00e9cute l'instruction <code>data in s</code>, qui parcoure tout le tableau <code>s</code>... On a donc une complexit\u00e9 en temps en \\(\\mathscr{O}(n^2)\\) (au pire). Pour un tableau de 23 \u00e9l\u00e9ments, c'est acceptable, mais dans l'hypoth\u00e8se d'un tableau de plus grande taille, c'est absolument \u00e0 \u00e9viter !</p> <p>Un des avantages est que la complexit\u00e9 en temps est bien meilleure que pour la premi\u00e8re solution. Il n'y a plus les deux boucles imbriqu\u00e9es, d'o\u00f9 un gain consid\u00e9rable. Cependant on peut avoir un probl\u00e8me de co\u00fbt en m\u00e9moire, car on utilise un tableau de taille 365 pour uniquement v\u00e9rifier 23 dates. Dans le cadre d'une comparaison sur un ensemble de valeurs possibles sup\u00e9rieures \u00e0 365, le co\u00fbt en m\u00e9moire peut vite devenir probl\u00e9matique.</p> <p>La solution est tr\u00e8s complexe, mais elle a un grand m\u00e9rite : un bool\u00e9en, en python, est en fait un entier (0 ou 1), donc stock\u00e9 sur... 8 octets ! (source ici) Or il n'est pas n\u00e9cessaire d'utiliser 8 octets, soit 64 bits, pour stocker un bool\u00e9en... En fait il suffit d'un seul bit ! Cette solution divise donc par  64  la taille m\u00e9moire par rapport \u00e0 la solution pr\u00e9c\u00e9dente ! </p> <p>C'est globalement un bon avantage dans cette situation,; mais cela reste rapidement insuffisant si le nombre d'\u00e9l\u00e9ments auquel on s\u2019int\u00e9resse est bien plus grand que 365.</p> <p>Il faut noter que le tableau de bits (ou bit set ou bit array) est une structure compacte qui permet de repr\u00e9senter facilement des tableaux de bool\u00e9ens. Elle permet une meilleure utilisation des ressources m\u00e9moires dans les cas o\u00f9 celle-ci est limit\u00e9e, comme par exemple dans la m\u00e9moire cache du processeur.</p> <p>Comme nous l'avons vu en classe de premi\u00e8re, la table de hachage est une solution efficace et \u00e9l\u00e9gante qui permet de gagner \u00e0 la fois du co\u00fbt en temps (on ne parcourt pas un tableau, on atteint directement l'objet par sa cl\u00e9, ou en tout on parcourt un sous-ensemble beaucoup plus petit), et du co\u00fbt en m\u00e9moire (le tableau des cl\u00e9s est de la taille strictement n\u00e9cessaire).</p>"},{"location":"NSI/Terminale/C01/Intro/#une-meme-interface","title":"Une m\u00eame interface","text":"<p>Exercice</p> <p>Quand on observe les 4 propositions de codes pour la fonction <code>contient_doublon(t)</code>, on peut constater que ces 4 codes sont quasiment identiques. Quelles sont ces parties identiques ?</p> Solution <pre><code>def contient_doublon(t : list) -&gt; bool :\n\"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"\n        s = ...\n        for data in t :\n            if ... : \n                return True\n            else : \n                ...\n        return False\n</code></pre> <p>Les parties en pointill\u00e9 de la solution pr\u00e9c\u00e9dente v\u00e9rifient les conditions suivantes :</p> <ul> <li><code>s</code> repr\u00e9sente un ensemble de date et le premier trou correspond \u00e0 la cr\u00e9ation de cette structure.</li> <li>Le deuxi\u00e8me trou consiste \u00e0 v\u00e9rifier si <code>data</code> est contenu dans <code>s</code>.</li> <li>le troisi\u00e8me trou consiste \u00e0 ajouter <code>data</code> \u00e0 <code>s</code></li> </ul> <p>Seules ces trois parties changent dans les 4 programmes.</p> <p>On pourrait alors isoler ces trois aspects dans trois fonctions diff\u00e9rentes et obtenir le code factoris\u00e9 suivant :</p> <p>Code factoris\u00e9</p> <pre><code>def contient_doublon(t : list) -&gt; bool :\n\"\"\"fonction renvoyant un bool\u00e9en signalant la pr\u00e9sence ou non d'un doublon dans le tableau\"\"\"\n        s = cree()\n        for data in t :\n            if contient(data,s) : \n                return True\n            else : \n                ajoute(data,s)\n        return False\n</code></pre> <p>On d\u00e9finit ainsi une fonction <code>contient_doublon(t)</code>  compl\u00e8tement s\u00e9par\u00e9e  de la repr\u00e9sentation de la structure <code>s</code>.</p> <p>Le/la programmeur\u00b7euse qui souhaite simplement utiliser la structure de donn\u00e9e <code>s</code>  n'a pas \u00e0 se pr\u00e9occuper  de la fa\u00e7on dont elle a \u00e9t\u00e9  impl\u00e9ment\u00e9e . Il ou elle n'a besoin que de connaitre son  interface :</p> <ul> <li>la fonction <code>cree()</code> sert \u00e0 construire une structure ;</li> <li>la fonction <code>contient(data,s)</code> sert \u00e0 regarder si <code>data</code> est contenu dans la structure <code>s</code> ;</li> <li>La fonction <code>ajoute(data,s)</code> ajoute l'\u00e9l\u00e9ment <code>data</code> \u00e0 la structure <code>s</code>.</li> </ul> <p>C'est exactement ce qui se passe quand on utilise des modules python : on ne cherche pas \u00e0 savoir comment sont programm\u00e9s les fonctions du module(c'est-\u00e0-dire  l'impl\u00e9mentation du module ) - car on fait confiance aux programmeur\u00b7euse\u00b7s de ce module, mais juste \u00e0 savoir comment utiliser ces fonctions(= l'interface du module).</p> <p>Encore mieux, le ou la programmeur\u00b7euse du module peut, si il ou elle ne change pas l'interface (c'est-\u00e0-dire la mani\u00e8re d'utiliser les fonctions), am\u00e9liorer ces fonctions (en temps, en m\u00e9moire, etc) sans m\u00eame que l'utilisateur\u00b7trice n'ait \u00e0 changer quoi que ce soit \u00e0 son propre programme, qui continuera \u00e0 fonctionner (mieux, du moins on esp\u00e8re...).</p>"},{"location":"NSI/Terminale/C01/IntroPOO/","title":"Introduction \u00e0 la POO","text":""},{"location":"NSI/Terminale/C01/IntroPOO/#introduction-a-la-programmation-orientee-objet","title":"Introduction \u00e0 la programmation orient\u00e9e objet","text":""},{"location":"NSI/Terminale/C01/IntroPOO/#un-premier-exemple-issu-de-scratch","title":"Un premier exemple issu de Scratch","text":"<p>Observons ce jeu assez minable en Scratch (non, mais vraiment, allez voir sur le site...).</p> <p> </p> <p>Le lien ici</p> <p>Ce jeu sommaire est construit autour de trois \u00e9l\u00e9ments :</p> <ul> <li>la chauve-souris ;</li> <li>l'\u00e9clair ;</li> <li>le chat.</li> </ul> <p>Chacun de ces trois \u00e9l\u00e9ments poss\u00e8de : </p> <ul> <li>sa propre zone de script;</li> <li>ses propres caract\u00e9ristiques (nom, taille, costumes, position de d\u00e9part, orientation...).</li> </ul> <p>Et ces trois \u00e9l\u00e9ments r\u00e9agissent en fonction d'\u00e9v\u00e9nements li\u00e9s soit \u00e0 l'action du joueur, soit \u00e0 leurs propres interactions.</p> <p>L'\u00e9clair et le chat ont la possibilit\u00e9 d'exister sous la forme de clones, chacun des clones ayant ses propres caract\u00e9ristiques bien que partageant le m\u00eame comportement.</p> <p>Aussi simpliste que Scratch paraisse, il n'en est n\u00e9anmoins pas un v\u00e9ritable langage de programmation, qui plus est multiparadigme : il est en effet con\u00e7u pour g\u00e9rer la programmation imp\u00e9rative, la programmation orient\u00e9e objet ainsi que la programmation \u00e9v\u00e9nementielle.</p> <p>Paradigmes de programmation</p> <p>Un paradigme est \u00ab une repr\u00e9sentation du monde, une mani\u00e8re de voir les choses, un mod\u00e8le coh\u00e9rent du monde qui repose sur un fondement d\u00e9fini \u00bb .Wkipedia.</p> <p>En programmation, plus pr\u00e9cis\u00e9ment, on parle de paradigmes de programmation pour exprimer la mani\u00e8re dont sont con\u00e7us et envisag\u00e9s les programmes. On distingue entre autres :</p> <ul> <li>le paradigme de la programmation imp\u00e9rative, qui est celui que nous avons utilis\u00e9 jusqu'ici : on d\u00e9crit les op\u00e9rations en s\u00e9quences d'instructions ex\u00e9cut\u00e9es par l'ordinateur dans un ordre pr\u00e9cis (que le langage soit compil\u00e9 ou interpr\u00e9t\u00e9). C'est le paradigme classique, celui auquel tout le monde pense quand on parle de programme informatique.</li> <li>le paradigme de la programmation orient\u00e9 objet, qui \u00ab consiste en la d\u00e9finition et l'interaction de briques logicielles appel\u00e9es objets ; un objet repr\u00e9sente un concept, une id\u00e9e ou toute entit\u00e9 du monde physique, comme une voiture, une personne ou encore une page d'un livre. Il poss\u00e8de une structure interne et un comportement, et il sait interagir avec ses pairs. Il s'agit donc de repr\u00e9senter ces objets et leurs relation[...] \u00bb. Wikipedia.   </li> <li>le paradigme de la programmation fonctionnelle, qui consid\u00e8re le calcul en tant qu'\u00e9valuation de fonctions math\u00e9matiques.</li> <li>le paradigme de la programmation \u00e9v\u00e9nementielle, qui est fond\u00e9 sur la notion d'\u00e9v\u00e9nements. Le programme sera principalement d\u00e9fini par ses r\u00e9actions aux diff\u00e9rents \u00e9v\u00e9nements qui peuvent se produire, c'est-\u00e0-dire des changements d'\u00e9tat de variable, par exemple l'incr\u00e9mentation d'une liste, un d\u00e9placement ou un clic de souris, une saisie au clavier... </li> <li>et bien d'autres...</li> </ul> <p>Les diff\u00e9rents langages de programmation peuvent \u00eatre plus ou moins sp\u00e9cialis\u00e9 selon un certain nombre de paradigmes. Quasiment tous respectent le paradigme originel imp\u00e9ratif. Certains langages ne d\u00e9passent pas ce paradigme (assembleur, Fortran, Algol, BASIC,... ). D'autres sont sp\u00e9cialis\u00e9s sur un paradigme sp\u00e9cifique ( comme Lisp, ML, OCaml en programmation fonctionnelle, Ada, Smalltalk, C++, Ruby, C# Swift... en POO). Mais en g\u00e9n\u00e9ral tous les langages cit\u00e9s poss\u00e8dent des composantes multiparadigmes.</p> <p>C'est le cas de Python, qui supporte la programmation :</p> <ul> <li>imp\u00e9rative ;</li> <li>fonctionnelle ;</li> <li>proc\u00e9durale ;</li> <li>orient\u00e9e objet ;</li> <li>et en partie \u00e9v\u00e9nementielle.</li> </ul>"},{"location":"NSI/Terminale/C01/IntroPOO/#principes","title":"Principes","text":"<p>Le concept principal de la programmation orient\u00e9e objet (POO) est celui d' objet. Nous avons d\u00e9j\u00e0 rencontr\u00e9 un certain nombres d'objets pr\u00e9d\u00e9finis dans Python :</p> <ul> <li>la classe <code>int</code>, pour repr\u00e9senter les entiers relatifs ;</li> <li>la classe <code>float</code>, pour repr\u00e9senter les nombre \u00e0 virgule flottante (une partie des d\u00e9cimaux) ;</li> <li>la classe <code>str</code> pour repr\u00e9senter les cha\u00eenes de caract\u00e8res ;</li> <li>la classe <code>list</code>, pour repr\u00e9senter un ensemble ordonn\u00e9 et mutable de toute autre collection d'objets ;</li> <li>la classe <code>tuple</code>, pour repr\u00e9senter un ensemble ordonn\u00e9 et non-mutable de toute autre collection d'objets ;</li> <li>la classe <code>set</code>, pour repr\u00e9senter un ensemble non ordonn\u00e9 et sans doublons ;</li> <li>la classe <code>dict</code>, pour repr\u00e9senter une collection non ordonn\u00e9e index\u00e9e par des cl\u00e9s.</li> </ul> <p>Chacun de ces types pr\u00e9c\u00e9dents poss\u00e8de ses propres attributs et ses propres m\u00e9thodes :</p> <ul> <li>un objet de la classe <code>str</code> poss\u00e8de une longueur, donn\u00e9 par la fonction built-in <code>len()</code>,  et plusieurs m\u00e9thodes associ\u00e9es comme <code>lower()</code>, <code>upper()</code>, etc... </li> <li>un objet de la classe <code>list</code> poss\u00e8de lui aussi une longueur, et ses propres m\u00e9thodes  comme  <code>append()</code>, <code>pop()</code>, etc...</li> </ul> A lire quand vous avez fini la page !!! <p>Je raconte n'importe quoi ci-dessus...</p> <p>Je voulais prendre l'exemple de la longueur comme \u00e9tant un attribut des types <code>str</code> et <code>list</code>.</p> <p>En fait la valeur renvoy\u00e9e par la fonction built-in <code>len()</code> correspond \u00e0 celle calcul\u00e9e par le DUNDERS <code>__len__(self)</code>. Il ne s'agit donc pas r\u00e9ellement d'un attribut, mais du r\u00e9sultat renvoy\u00e9 par une m\u00e9thode. </p> <p>Comme quoi m\u00eame apr\u00e8s 30 ans de programmation on en apprend encore...</p> <p>Classes et constructeurs d'objets</p> <p>En Programmation Orient\u00e9e Objet, on va construire de nouvelles classes d'objets plus ou moins complexes, poss\u00e9dant :</p> <ul> <li>des attributs, c'est-\u00e0-dire des variables sp\u00e9cifiques qui lui sont directement associ\u00e9es ;</li> <li>des m\u00e9thodes, c'est-\u00e0-dire des fonctions modifiant l'objet, ou interagissant avec l'environnement ext\u00e9rieur \u00e0 cet objet.</li> </ul>"},{"location":"NSI/Terminale/C01/IntroPOO/#application-a-un-exemple","title":"Application \u00e0 un exemple","text":"<p>Personnages de JDR/MMORPG</p> <p>Prenons un JDR ou MMORPG lambda, dont les personnages sont constitu\u00e9s ainsi :</p> <ul> <li>ils ont 4 caract\u00e9ristiques num\u00e9riques entre \\(1\\) et \\(40\\), \u00e0 savoir <code>force, endurance, rapidit\u00e9, intelligence</code> ;</li> <li>ils ont un nombre de points de vie de d\u00e9part calcul\u00e9 \u00e0 partir des caract\u00e9ristiques <code>endurance + force//2</code> ;</li> <li>ils poss\u00e8dent bien s\u00fbr un <code>nom</code> ;</li> <li>leur nombre de <code>points d'exp\u00e9rience</code> au d\u00e9part est de \\(0\\), et leur <code>niveau</code> est de \\(1\\) ;</li> <li>Chaque personnage peut mener une attaque, qui consiste \u00e0 ajouter un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa force ;</li> <li>Chaque personnage peut se d\u00e9fendre d'une attaque qui lui est lanc\u00e9e en ajoutant un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 son endurance. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au  niveau d'attaque, l'attaque a \u00e9chou\u00e9e, sinon le personnage perd un nombre de points  de vie  \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense.</li> </ul> <p>Pour construire un tel personnage, on va devoir renseigner son nom,  et ses 4 caract\u00e9ristiques. Ses PV, Pex et son niveau sont automatiquement calcul\u00e9s.  Tous sont cependant des attributs du personnage.</p> <p>Abstract</p> <p>On va donc d\u00e9crire un personnage par l'interm\u00e9diaire de l'interface suivante :</p> <p></p><p> </p>"},{"location":"NSI/Terminale/C01/IntroPOO/#creation-de-la-classe-et-des-attributs","title":"Cr\u00e9ation de la classe et des attributs","text":"<p>Info</p> <p>Nous d\u00e9taillerons beaucoup plus dans un chapitre sp\u00e9cifique le fonctionnement de la POO.  Pour l'instant vous devrez vous contenter des explications ci-dessus.</p> <p>D\u00e9crire une classe en Python</p> <p>Le code suivant permet de d\u00e9finir une nouvelle classe d'objets de type  <code>Personnage</code> :</p> <pre><code>class Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        self.force = force\n        self.endurance = endurance\n        self.rapidite = rapidite\n        self.intelligence = intelligence\n        self.pv = self.endurance + self.force//2\n        self.pex = 0\n        self.niveau = 1\n</code></pre> <p>La d\u00e9finition d'une classe d'objet est effectu\u00e9e par le mot-cl\u00e9 <code>class</code>,  suivi du nom de la classe (commen\u00e7ant par une majuscule par convention) et du symbole <code>:</code>.  Comme toujours en Python le symbole <code>:</code> d\u00e9clenche l'attente d'un bloc indent\u00e9, qui   correspondra \u00e0 la d\u00e9finition de l'objet.</p> <p>On trouve ensuite une <code>docstring</code> d\u00e9crivant la classe, puis la d\u00e9finition  d'une <code>m\u00e9thode</code> de la classe, la m\u00e9thode <code>__init__()</code>, appel\u00e9e m\u00e9thode constructeur de la classe.</p> <p>Cette m\u00e9thode prend plusieurs param\u00e8tres :</p> <ol> <li>le param\u00e8tre <code>self</code>, obligatoire, qui repr\u00e9sente 'l'instance de l'objet cr\u00e9\u00e9 (c'est une notion importante, qui est pour l'instant difficile d'expliquer).</li> <li>une s\u00e9rie de param\u00e8tres qui correspondent aux param\u00e8tres d\u00e9finis dans l'interface de l'objet <code>Personnage</code>.</li> </ol> <p>Puis dans cette m\u00e9thode, on affecte aux attributs de l'objet les valeurs pass\u00e9es en argument, puis on calcule l'attribut <code>pv</code> \u00e0 partir des valeurs d\u00e9j\u00e0 connues.  Enfin on d\u00e9fini les deux attributs de valeurs fixes.</p> <p>Un oubli ?</p> <p>Attention ! Ici nous ne respectons pas vraiment l'interface, puisque nous ne v\u00e9rifions pas que les attributs pass\u00e9s en argument sont bien des entiers entre 1 et 40 ! Ce probl\u00e8me sera r\u00e9gl\u00e9 plus tard.</p>"},{"location":"NSI/Terminale/C01/IntroPOO/#instanciation-dobjets","title":"Instanciation d'objets","text":"<p>Pour cr\u00e9er des personnages, il suffit maintenant d'utiliser une expression de la forme :<code>Personnage( nom, f, e, r, i)</code>.  Vous noterez que l'argument <code>self</code> n'est pas renseign\u00e9 ! On appelle cet argument un argument implicite.</p> <p>Ainsi pour cr\u00e9er un objet de type <code>Personnage</code> nomm\u00e9 Bob, et ayant les attributs  20 en force, 25 en endurance, 10 en rapidit\u00e9 et 30 en intelligence, on utilise l'instruction suivante :</p> <pre><code>&gt;&gt;&gt; Personnage(\"Bob\", 20, 25, 10, 30)\n&lt;__main__.Personnage object at 0x7fb674844e48&gt;\n</code></pre> <p>On constate donc bien qu'un objet de type <code>Personnage</code> est cr\u00e9e. Bien s\u00fbr, l'objet n'\u00e9tant pas affect\u00e9 \u00e0 un nom, il est imm\u00e9diatement nettoy\u00e9   par le garbage collector. On cr\u00e9e donc une variable <code>firstPlayer</code> comme r\u00e9f\u00e9rence \u00e0 l'objet :</p> <pre><code>&gt;&gt;&gt; firstPlayer = Personnage(\"Bob\", 20, 25, 10, 30)\n</code></pre> <p>Abstract</p> <p>On peut sch\u00e9matiser avec le dessin suivant : </p> <p></p><p> </p> <p>L'appel au nom de la classe <code>Personnage</code> fait en r\u00e9alit\u00e9 appel \u00e0 la m\u00e9thode constructeur, qui va permettre de cr\u00e9er un nouvel objet de type <code>Personnage</code>. On peut le v\u00e9rifier avec la ligne suivante :</p> <pre><code>&gt;&gt;&gt; type(firstPlayer)\n&lt;class '__main__.Personnage'&gt;\n</code></pre>"},{"location":"NSI/Terminale/C01/IntroPOO/#acceder-aux-attributs-et-les-modifier","title":"Acc\u00e9der aux attributs et les modifier","text":"<p>Pour acc\u00e9der \u00e0 l'attribut <code>pv</code> de l'objet <code>firstPayer</code>, il suffit d'utiliser la notation</p> <pre><code>&gt;&gt;&gt; firstPlayer.pv\n35\n</code></pre> <p>Il devient d\u00e8s lors possible de modifier la valeur d'un attribut comme lors de toute modification classique des variables :</p> <pre><code>&gt;&gt;&gt; firstPlayer.force = 18\n&gt;&gt;&gt; firstPlayer.force\n18\n&gt;&gt;&gt; firstPlayer.rapidite = firstPlayer.rapidite + 2\n&gt;&gt;&gt; firstPlayer.rapidite\n12\n</code></pre>"},{"location":"NSI/Terminale/C01/IntroPOO/#deux-objets","title":"Deux objets","text":"<p>Nous souhaitons maintenant cr\u00e9er un deuxi\u00e8me personnage du nom de Bill :</p> <pre><code>&gt;&gt;&gt; secondPlayer = Personnage('Bill', 34, 10, 20, 12)\n</code></pre> <p>Abstract</p> <p>Cette seconde instance     de type <code>Personnage</code> poss\u00e8de aussi ses propres attributs, comme montr\u00e9 dans le sch\u00e9ma suivant :</p> <p></p><p> </p> <p>Espace de nommage</p> <p>Chaque instance d'objet poss\u00e8de son propre espace de nommage. </p> <p>Ici m\u00eame si les deux objets de type <code>Personnage</code> ont le m\u00eame nom d'attribut <code>force</code>, ils ne  repr\u00e9sentent pas le m\u00eame objet.</p> <p>C'est exactement la signification de <code>self</code>, qui signifie bien que chacun des objets <code>Personnage</code> aura bien son propre attribut <code>force</code>, son propre attribut <code>intelligence</code>, etc...</p>"},{"location":"NSI/Terminale/C01/IntroPOO/#definitions-de-methodes","title":"D\u00e9finitions de m\u00e9thodes","text":"<p>Afficher les personnage</p> <p>Essayons maintenant d'afficher une cha\u00eene de caract\u00e8res nous donne toutes les caract\u00e9ristiques d'un personnage.</p> Test de <code>print</code>Sortie et commentaires <p>Essayons d'abord avec la fonction built-in <code>print()</code> :</p> <pre><code>&gt;&gt;&gt; print(firstPlayer)\n</code></pre> <p>La sortie sur la console Python  est :</p> <pre><code>&lt;__main__.Personnage object at 0x7fb6748590f0&gt;\n</code></pre> <p>C'est peu parlant !  La fonction <code>print</code> ne renvoie que l'adresse m\u00e9moire et le type de l'objet que nous venons de lui passer.</p> <p>Nous allons donc devoir am\u00e9liorer cet affichage, en construisant notre propre m\u00e9thode, que nous nommerons <code>affiche</code>. Cette m\u00e9thode devra avoir le comportement suivant :</p> <pre><code>&gt;&gt;&gt; firstPlayer.affiche()\n\n    \"Bonjour, je suis Bob, de niveau 1. J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 35 Points de Vie\"\n</code></pre> <p>M\u00e9thodes et attributs</p> <p>Si les attributs  d'une classe sont comme des variables sp\u00e9cifiques \u00e0 une classe, les m\u00e9thodes sont des fonctions : elles peuvent prendre ou non des arguments, et ont des valeurs de retour (qui peuvent \u00eatre parfois implicites : la m\u00e9thode <code>__init__</code> renvoie le nouvel objet cr\u00e9\u00e9.)</p> <p>Pour cr\u00e9er cette m\u00e9thode, nous allons compl\u00e9ter la classe <code>Personnage</code> de la mani\u00e8re suivante :</p> <pre><code>class Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        ...\n\n\n    def affiche(self) :\n        print(f\"Bonjour, je suis {self.nom}, de niveau {self.niveau}.\"\n         f\"J'ai {self.force} en force, {self.endurance} en endurance, {self.rapidite}\"\n          f\" en rapidit\u00e9 et {self.intelligence} en intelligence. J'ai {self.pv} Points de Vie\")\n</code></pre> <p>Vous constatez que :</p> <ol> <li>Dans la construction de la m\u00e9thode <code>affiche</code>, appara\u00eet l'argument implicite <code>self</code>, qu'il est imp\u00e9ratif d'utiliser pour avoir acc\u00e8s aux attributs de l'objet.</li> <li>Dans l'appel de la m\u00e9thode aucun argument n'est pass\u00e9.</li> </ol> <p>En rechargeant le module, puis en recr\u00e9ant les objets <code>secondPlayer</code> puis <code>firstPlayer</code>, on obtient alors les affichages suivants :</p> <pre><code>&gt;&gt;&gt; firstPlayer.affiche()\n\"Bonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12 en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie\"\n&gt;&gt;&gt; secondPlayer.affiche()\n\"Bonjour, je suis Bill, de niveau 1.J'ai 34 en force, 10 en endurance, 20 en rapidit\u00e9 et 12 en intelligence. J'ai 27 Points de Vie\"\n</code></pre> <p>Impl\u00e9menter la m\u00e9thode <code>attaque</code></p> <p>Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode <code>attaque()</code> qui renvoie un entier \u00e9gal \u00e0 la valeur  de force du personnage auquel on ajoute un nombre al\u00e9atoire entre 1 et 20.</p> <p>Comment impl\u00e9menter une telle m\u00e9thode ?</p> Une impl\u00e9mentation possible <pre><code>from random import randint \n\nclass Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        ...\n\n\n    def affiche(self) :\n        ...\n\n    def attaque(self) :\n        return self.force + randint(1,20)\n</code></pre> <p>Cette m\u00e9thode peut alors \u00eatre utilis\u00e9e comme dans les exemples ci-dessous :</p> <pre><code>&gt;&gt;&gt; firstPlayer.attaque()\n22\n&gt;&gt;&gt; firstPlayer.attaque()\n27\n&gt;&gt;&gt; secondPlayer.attaque()\n38\n</code></pre> <p>Impl\u00e9menter la m\u00e9thode <code>defense(valeurAttaque)</code></p> <p>Dans notre interface de d\u00e9part, nous avions pr\u00e9vu une m\u00e9thode <code>defense(valeurAttaque)</code>  qui ajoute un nombre al\u00e9atoire de 1 \u00e0 20 \u00e0 l'endurance du personnage. Si ce r\u00e9sultat est sup\u00e9rieur ou \u00e9gal au niveau d'attaque, l'attaque a \u00e9chou\u00e9e et la m\u00e9thode renvoie <code>True</code>. Sinon le personnage perd un nombre de points de vie  \u00e9gal \u00e0 la diff\u00e9rence entre le niveau d'attaque et le niveau de d\u00e9fense, et la m\u00e9thode renvoie <code>False</code>.</p> <p>Comment impl\u00e9menter une telle m\u00e9thode ?</p> Une impl\u00e9mentation possible <pre><code>from random import randint \n\nclass Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        ...\n\n\n    def affiche(self) :\n        ...\n\n    def attaque(self) :\n        return self.force + randint(1,20)\n\n    def defense(self, valeurAttaque) :\n        valeurDefense = self.endurance + randint(1,20)\n        if valeurAttaque&gt; valeurDefense :\n            self.pv -=  valeurAttaque-valeurDefense\n            return False\n        return True\n</code></pre> <p>cette m\u00e9thode peut alors \u00eatre utilis\u00e9e ainsi :</p> <pre><code>&gt;&gt;&gt; secondPlayer.defense(firstPlayer.attaque())\nFalse\n&gt;&gt;&gt; secondPlayer.pv\n18\n</code></pre>"},{"location":"NSI/Terminale/C01/IntroPOO/#methodes-specifiques","title":"M\u00e9thodes sp\u00e9cifiques","text":"<p>Info</p> <p>La liste de toutes les m\u00e9thodes d'une classe, y compris des DUNDERS,  peut-\u00eatre obtenue par l'interm\u00e9diaire de la commande suivante :</p> <pre><code>&gt;&gt;&gt; dir(Personnage)\n['__class__', '__delattr__', '__dict__', '__dir__', '__doc__',\n    '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__',\n    '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__',\n    '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__',\n    '__repr__', '__setattr__', '__sizeof__', '__str__',\n        '__subclasshook__', '__weakref__',\n        'affiche', 'attaque', 'defense']\n</code></pre> <p>DUNDERS</p> <p>Il existe plusieurs m\u00e9thodes sp\u00e9cifiques d\u00e9finies automatiquement d\u00e8s qu'on cr\u00e9e une classe d'objets. Ces m\u00e9thodes sont toutes  de la forme <code>__truc__()</code> (c'est-\u00e0-dire que le nom de la classe est pr\u00e9fix\u00e9 par un double tiret du bas, soit Double UNDERScore, ce qui a donn\u00e9 le nom  de m\u00e9thodes DUNDERS).</p> <p>Ce sont des m\u00e9thodes universelles que poss\u00e8dent toute classe en Python, et qui permettent de g\u00e9rer  un certain nombre  d'actions. Par exemple l'instruction <code>Personnage('Bob', 18, 25, 12, 30)</code>  fait appel \u00e0 la m\u00e9thode DUNDERS <code>__init__()</code> que nous avons d\u00e9finie.</p> <p>Il est ainsi possible de red\u00e9finir un certain nombre de ces m\u00e9thodes selon nos utilisations.</p> <p>Le tableau ci-dessous vous pr\u00e9sente quelques-uns de ces DUNDERS, applicables \u00e0 des objets <code>t</code> et <code>other</code>  instances de la classe :</p> m\u00e9thode Appel Int\u00e9r\u00eat <code>__str__(self)</code> <code>str(t)</code> renvoie une cha\u00eene de caract\u00e8res d\u00e9crivant l'objet <code>t</code> <code>__lt__(self,other)</code> <code>t &lt; other</code> permet de d\u00e9finir la relation plus petit que entre deux objets, renvoie <code>True</code> ou <code>False</code> selon la d\u00e9finition propos\u00e9e <code>__len__(self)</code> <code>len(t)</code> permet de d\u00e9finir la longueur de l'objet <code>t</code> <code>__contains__(self,x)</code> <code>x in t</code> permet de d\u00e9finir l'appartenance de <code>x</code> \u00e0 <code>t</code> <code>__eq__(self, other)</code> <code>t == other</code> permet de d\u00e9finir l'\u00e9galit\u00e9 entre deux objets <code>t</code> et <code>other</code> <code>__add__(self, other)</code> <code>t + other</code> d\u00e9finit l'addition de deux objets <code>t</code> et <code>other</code> <code>__mul__(self, other)</code> <code>t * other</code> d\u00e9finit la multiplication de deux objets <code>t</code> et <code>other</code> <p>red\u00e9finition de la m\u00e9thode <code>__str__(self)</code></p> <p>Il est assez facile de red\u00e9finir la m\u00e9thode <code>__str__(self)</code>, puisque nous avons d\u00e9j\u00e0 une cha\u00eene de caract\u00e8re qui nous convient : celle de la m\u00e9thode <code>affiche(self)</code>. Nous allons alors  changer la m\u00e9thode <code>affiche(self)</code> qui renverra la cha\u00eene de caract\u00e8re g\u00e9n\u00e9r\u00e9e par la m\u00e9thode <code>__str__(self)</code> (pour des raisons pratiques, la cha\u00eene sera multi-ligne):</p> <pre><code>from random import randint \n\nclass Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        ...\n\n    def __str__(self) :\n        return  f\"\"\"Bonjour, je suis {self.nom}, de niveau {self.niveau}.\n     J'ai {self.force} en force, {self.endurance} en endurance, {self.rapidite}\n       en rapidit\u00e9 et {self.intelligence} en intelligence. J'ai {self.pv} Points de Vie\"\"\"\n\n    def affiche(self) :\n        print(str(self))\n\n    ...\n</code></pre> <p>On a alors la possibilit\u00e9 d'utiliser les commandes suivantes :</p> <pre><code>&gt;&gt;&gt; str(firstPlayer)\n\"Bonjour, je suis Bob, de niveau 1.\\n         J'ai 18 en force, 25 en endurance, 12\\n           en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie\"\n&gt;&gt;&gt; firstPlayer.affiche()\nBonjour, je suis Bob, de niveau 1.J'ai 18 en force, 25 en endurance, 12en rapidit\u00e9 et 30 en intelligence. J'ai 34 Points de Vie\n</code></pre> <p>D\u00e9finir l'\u00e9galit\u00e9 entre deux personnages</p> <p>On consid\u00e8re que deux personnages sont \u00e9gaux quand ils poss\u00e8dent les m\u00eames caract\u00e9ristiques num\u00e9riques de bases (<code>force</code>, <code>endurance</code>, <code>rapidite</code> et <code>intelligence</code>).</p> <p>Red\u00e9finir  la m\u00e9thode DUNDERS <code>__eq__(self, u)</code> pour qu'elle corresponde \u00e0 cette d\u00e9finition.</p> Solution <pre><code>from random import randint \n\nclass Personnage :\n\"\"\" une classe pour repr\u00e9senter un personnage g\u00e9n\u00e9rique du MMORPG \"\"\"\n    def __init__(self, nom, force, endurance, rapidite, intelligence) :\n        self.nom = nom\n        ...\n\n    def __eq__(self, other) :\n        return (self.force == other.force) and (\n        self.endurance == other.endurance) and (\n        self. rapidite == other.rapidite) and (\n        self.intelligence == other.intelligence)\n\n    ...\n</code></pre> <p>On a alors l'utilisation :</p> <pre><code>&gt;&gt;&gt; firstPlayer == secondPlayer\nFalse\n&gt;&gt;&gt; firstPlayer == Personnage('Marty', 18, 25, 12, 30)\nTrue\n</code></pre> <p>Fight !</p> <p>Un combat de ce MMORPG se d\u00e9roule selon le sch\u00e9ma suivant :</p> <ol> <li>Chaque personnage tire son initiative en ajoutant un nombre al\u00e9atoire entre 1 et 20 \u00e0 sa valeur de rapidite.</li> <li>Le joueur ayant l'initiative la plus \u00e9lev\u00e9e effectue son attaque en premier, et le second se d\u00e9fend. En cas d'\u00e9galit\u00e9 d'initiative, le tour se termine. Si un joueur attaque, on compare le jet d'attaque (JA) du personnage attaquant avec le jet de d\u00e9fense (JD) du personnage d\u00e9fenseur. Si \\(JA&gt; JD\\), alors le d\u00e9fenseur perd un nombre de points de vie \u00e9gal \u00e0 \\(JA-JD\\).</li> <li>Si le deuxi\u00e8me joueur est toujours vivant (ses points de vie sont sup\u00e9rieurs \u00e0 0), il effectue son attaque, et le premier se d\u00e9fend.</li> <li>Si les deux joueurs sont toujours vivants, on recommence un nouveau tour en reprenant en 1. Sinon on affiche le vainqueur.</li> <li> <p>Le vainqueur r\u00e9colte un nombre de points d'exp\u00e9rience \u00e9gal \u00e0 :</p> <pre><code>nombre d'attaque r\u00e9ussie * 2 + nombre de defense r\u00e9ussie\n</code></pre> </li> </ol> <p>Vous devrez impl\u00e9menter un programme simulant un combat entre <code>Bob</code> et <code>Bill</code>, dont la sortie console sera sous la forme suivante :</p> <pre><code>Round 1\nBob a l'initiative et attaque avec 28\nBill r\u00e9ussit sa d\u00e9fense\nBill attaque avec 40\nBob rate sa d\u00e9fense et n'a plus que 25 points de vie\n\nRound 2\n...\n\n\nRound n\nLe vainqueur est ..., il lui reste ... points de vie. Il gagne ... points d'exp\u00e9riences.\n</code></pre> <p>Pour r\u00e9aliser ce programme, vopus devrez :</p> <ol> <li> <p>Compl\u00e9ter le fichier <code>personnage.py</code> contenant la classe <code>Personnage</code> de la mani\u00e8re suivante :</p> <ol> <li>La m\u00e9thode constructeur <code>__init__()</code> devra lever des exceptions de type <code>TypeError</code> explicites, si <code>nom</code> n'est pas de type <code>str</code>, ou bien si les 4 autres attributs de construction ne sont pas de type <code>int</code>. ** L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche !**</li> <li>La m\u00e9thode constructeur <code>__init__()</code> devra lever des exceptions de type <code>ValueError</code> explicites si les valeurs fournies pour les 4 attributs num\u00e9riques ne sont pas entre 1 et 40. ** L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche !**</li> <li>La m\u00e9thode constructeur <code>__init__()</code> devra lever des exceptions de type <code>ValueError</code> explicites si la cha\u00eene de caract\u00e8re <code>nom</code> est vide. ** L'erreur devra interrompre l'ex\u00e9cution du programme qui la d\u00e9clenche !**</li> </ol> </li> <li> <p>Vous devrez pour r\u00e9ussir construire une m\u00e9thode suppl\u00e9mentaire pour la classe <code>Personnage</code> : la m\u00e9thode <code>initiative(self)</code> qui renvoie un entier repr\u00e9sentant le score d'initiative du personnage.</p> </li> <li> <p>Le programme permettant le combat devra \u00eatre dans un fichier <code>combat.py</code> s\u00e9par\u00e9 de celui contenant la classe <code>Personnage</code> (la classe <code>Personnage</code> \u00e9tant import\u00e9e depuis le module <code>personnage.py</code> par la commande suivante :</p> <pre><code>from personnage import Personnage\n</code></pre> </li> <li> <p>Un fichier compress\u00e9 <code>.zip</code> ou <code>.7z</code> contenant les deux fichiers (celui du programme et le module contenant  la classe <code>Personnage</code>) sera rendu via le cahier de texte de pronote, dans la partie Travail \u00e0 rendre.</p> </li> </ol>"},{"location":"NSI/Terminale/C01/Modularite/","title":"Modules, interfaces, encapsulation","text":""},{"location":"NSI/Terminale/C01/Modularite/#modules-interfaces-et-encapsulation","title":"Modules, Interfaces et Encapsulation","text":""},{"location":"NSI/Terminale/C01/Modularite/#retour-sur-les-modules","title":"Retour sur les modules","text":"<p>Un module python est un fichier python contenant des fonctions, des constantes (et des constructeurs d'objets, mais nous verrons \u00e7a un peu plus tard) regroup\u00e9es dans ce fichier, car elles traitent de la m\u00eame structure de donn\u00e9es.</p> <p>Un exemple</p> <p>Par exemple, dans un logiciel de g\u00e9om\u00e9trie dynamique tel que GeoGebra, on pourrait avoir :</p> <ul> <li>un module qui s'occupera exclusivement de la partie graphique, c'est-\u00e0-dire du trac\u00e9 des formes ;</li> <li>un module qui s'occupera des interactions avec l'utilisateurs - ce qu'on appelle la GUI (Graphic User Interface) ;</li> <li>un ou des modules pour calculer les intersections entre des formes g\u00e9om\u00e9triques ;</li> <li>bien d'autres possibilit\u00e9s...</li> <li>et le programme principal qui lui importera les modules pr\u00e9c\u00e9dents et g\u00e8rera les \u00e9v\u00e8nements liant tous les objets math\u00e9matiques et les \u00e9v\u00e8nements de l'utilisateurs. On dira que ce programme d\u00e9pend des autres modules.</li> </ul> <p>Importer un module</p> <p>Il existe plusieurs possibilit\u00e9s pour importer un module. Dans la suite des exemples, le module <code>toto</code>, contenant les fonctions <code>bidule()</code> et <code>truc()</code> est situ\u00e9 :</p> <ul> <li>soit dans le m\u00eame dossier que le fichier qui l'importe ;</li> <li>soit dans un dossier accessible par le syst\u00e8me ( dossier faisant partie de la variable <code>PATH</code> de windows par exemple).</li> </ul> Import completImport complet avec aliasImport partiel dans le namespace courantImport complet dans le namespace courant <p></p><pre><code>import toto\n\ntoto.bidule()\ntoto.truc()\n</code></pre> Toutes les fonctions du module <code>toto</code> sont import\u00e9es, et elles le sont dans un namespace (espace de nommage) sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant par le nom du module (<code>toto.</code>).  <p></p><pre><code>import toto as to\n\nto.bidule()\nto.truc()\n</code></pre> Comme pour l'import complet, toutes les fonctions du module <code>toto</code> sont import\u00e9es, et elles le sont dans un namespace (espace de nommage) sp\u00e9cifique. Les fonctions sont alors appel\u00e9es en les pr\u00e9fixant par l'alias du module ( <code>to1.</code>).  <p></p><pre><code>from toto import bidule\n\nbidule()\n</code></pre> Ici, seul la fonction <code>bidule()</code> est import\u00e9e, mais elle l'est directement dans le namespace principal (autrement dit main) du fichier effectuant l'import. La fonction <code>truc()</code> n'est pas appelable (elle n'existe pas pour l'interpr\u00e9teur).  <p></p><pre><code>from toto import *\n\nbidule()\ntruc()\n</code></pre> Toutes les fonctions sont appel\u00e9es directement dans l'espace de nom principal (soit le namespace de main) du fichier effectuant l'import.  <p>\u26a0\ufe0f C'est une pratique p\u00e9rilleuse ! Si une fonction du module porte le m\u00eame nom qu'une fonction du fichier appelant, celle import\u00e9e \u00e9crasera celle du fichier courant. C'est parfois utile lorsqu'on veut modifier le comportement d'une fonction(voir l'exemple ci-dessous), mais attention on peut alors rencontrer des erreurs majeures !</p> Fichier principalFichier mon_module.pySortie attendueSortie r\u00e9elle <pre><code>from mon_module import *\n\nprint(\"Pain \")\n</code></pre> <pre><code>def print(truc) :\n    print(truc*3+\"Tarte Tatin\"*2)\n</code></pre> <p>Probablement, ce qui est attendu par la sortie du fichier principal est juste la cha\u00eene de caract\u00e8res <code>\"Pain \"</code>. Mais la fonction built-in <code>print()</code> a \u00e9t\u00e9 \u00e9cras\u00e9e par celle du module <code>mon_module.py</code>.</p> <p></p><pre><code>\"Pain Pain Pain Tarte Tatin Tarte Tatin\u00a8\n</code></pre> La v\u00e9ritable fonction appel\u00e9e est celle du module <code>mon_module.py</code>. <p>(Pour ceux qui ont en t\u00eate la marche imp\u00e9riale, c'est normal...)</p> <p>Remarque</p> <p>Il est toutefois possible d'importer un fichier pr\u00e9sent dans un autre dossier :</p> <ul> <li>soit en utilisant une adresse absolue <code>import 'C:\\Mes_Programmes\\Python\\toto.py'</code> ;</li> <li>soit en utilisant une adresse relative <code>import '..\\toto.py'</code> ( si <code>toto.py</code> est situ\u00e9 dans le dossier parent du fichier qui importe).</li> </ul>"},{"location":"NSI/Terminale/C01/Modularite/#interfaces","title":"Interfaces","text":"<p>Conception logicielle</p> <p>Dans la conception de logiciels \u00e0 grande \u00e9chelle, ou \u00e0 plusieurs programmeur\u00b7euse\u00b7s (et \u00e0 l'heure actuelle il est fr\u00e9quent d'avoir plusieurs milliers de programmeur\u00b7euse\u00b7s concevant un logiciel), il est important de pouvoir s\u00e9parer les diff\u00e9rents \u00e9l\u00e9ments du programme en sous-ensembles coh\u00e9rents et ayant le minimum d'interactions entre eux. En particulier, ils se doivent d'\u00eatre le plus \u00e9tanches possibles quant \u00e0 leur fonctionnement - c'est-\u00e0-dire les plus ind\u00e9pendants possible. On retrouve ici que la notion d'interface est essentielle.</p> <p>Pour chaque module, on peut donc distinguer :</p> <ul> <li>une interface, c'est-\u00e0-dire la description des diff\u00e9rentes fonctions du module et de leurs arguments (obligatoires ou facultatifs). Il s'agit donc d'une documentation la plus claire possible sur la mani\u00e8re d'utiliser le module.</li> <li>une impl\u00e9mentation, c'est-\u00e0-dire la mani\u00e8re dont sont cod\u00e9es ces fonctions (choix de structures, nom des variables interm\u00e9diaires, etc).</li> </ul> <p>Un exemple d'interface</p> <p>Un module utilisable pour la fonction factoris\u00e9e <code>contient_doublon(t)</code> aura pour interface :</p> fonction Description <code>cree()</code> cr\u00e9e et renvoie un ensemble de date vide <code>contient(data,s)</code> renvoie <code>True</code> si la structure <code>s</code> contient la donn\u00e9e <code>data</code> <code>ajoute(data,s)</code> ajoute la donn\u00e9e <code>data</code> \u00e0 la structure <code>s</code> <p>Vous constaterez que dans cette description, il n'est nul part fait mention de la nature de la structure. Il pourrait s'agir aussi bien de liste, de tableau de bits, de tables de hachage...</p> <p>Exercice : r\u00e9alisation de modules</p> <p>Dans chacun des cas suivants, construire un module r\u00e9alisant l'interface ci-dessus, et le tester en l'important dans le fichier <code>rechercheDates.py</code> o\u00f9 vous aurez modifi\u00e9 la fonction <code>contient_doublon(t)</code> par la version factoris\u00e9e de celle-ci.</p> <ol> <li>un module <code>dateTab</code>, dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau.</li> <li>un module <code>dateBool</code>, dont la structure est impl\u00e9ment\u00e9e sous la forme d'un tableau de bool\u00e9en.</li> <li>un module <code>dateHash</code>, dont la structure est impl\u00e9ment\u00e9e sous la forme d'une table de hachage.</li> </ol> <p>\ud83e\udde9 Il est bien entendu essentiel de s'inspirer des exemples donn\u00e9 dans la page d'introduction.</p>"},{"location":"NSI/Terminale/C01/Modularite/#notions-dencapsulation","title":"Notions d'encapsulation","text":"<p>Notion d'encapsulation</p> <p>Le contrat qu'une interface \u00e9tablit entre l'utilisateur\u00b7trice et l'auteur\u00b7trice d'un module ne porte pas sur les moyens, mais sur les r\u00e9sultats : l'auteur\u00b7trice s'engage \u00e0 ce que les r\u00e9sultats produits par l'utilisation de ses fonctions soient bien ceux d\u00e9crits dans l'interface, mais il ou elle est libre de s'y prendre comme il ou elle le souhaite.</p> <p>En particulier il ou elle est libre d'introduire des fonctions, variables, constantes, ..., qui ne sont pas incluses dans l'interface. On parle alors de fonctions, variables, constantes encapsul\u00e9es dans le module.</p> <p>Le contrat explicite est que l'utilisateur\u00b7trice  ne doit en aucun cas utiliser ces donn\u00e9es encapsul\u00e9es. Dans le cas contraire, si l'auteur\u00b7trice du module change son approche et modifie ces donn\u00e9es internes, le programme du ou de la  client\u00b7e risque de devenir non fonctionnel.</p> <p>Norme en Python</p> <p>En Python, l'auteur\u00b7trice d'un module peut indiquer que certains \u00e9l\u00e9ments sont priv\u00e9s (c'est-\u00e0-dire encapsul\u00e9es) en faisant commencer leur nom par un caract\u00e8re underscore <code>_</code>.</p> <p>Exemple</p> <p>Imaginons un module <code>secondDegre.py</code> dont l'interface est d\u00e9finie ainsi :</p> fonction Description <code>polynome(t)</code> V\u00e9rifie que le tuple <code>t</code>  sous la forme <code>(a,b,c)</code> repr\u00e9sente bien un polyn\u00f4me de degr\u00e9 2, et renvoie <code>t</code> dans ce cas, et <code>None</code> sinon <code>valeursRacines(p)</code> Renvoie les valeurs des racines, et <code>None</code> si il n'existe pas de racines r\u00e9elles <code>convexite(p)</code> Renvoie la convexit\u00e9 de la courbe repr\u00e9sentative du polyn\u00f4me sous la forme d'une cha\u00eene de caract\u00e8re en minuscule <code>tangente(p,x0)</code> Renvoie l'\u00e9quation de la tangente \u00e0 la courbe du polyn\u00f4me <code>p</code> en <code>x0</code> <p>Dans l'interface de ce module, on consid\u00e8re que le calcul du discriminant est une op\u00e9ration priv\u00e9e.</p> <p>On aurait alors comme possibilit\u00e9 d'impl\u00e9mentation (non compl\u00e8te):</p> <pre><code>from math import sqrt\n\ndef polynome(t) :\n    a, b, c = t\n    if a == 0 :\n        return None\n    return t\n\ndef _discriminant(p) :\n    if polynome(p) is not None :\n        a,b,c = polynome(p)\n        return b**2 - 4*a*c\n    return None\n\ndef _nombreRacines(p) :\n    ...\n\ndef valeursracines(p) :\n    ...\n\ndef convexite(p) :\n    ...\n\ndef _calcule(p,x) :\n    ...\n\ndef _nombreDerive(p, x0) :\n    ...\n\ndef tangente(p, x0) :\n    ...\n</code></pre> <p>Dans ce module, les fonctions pr\u00e9fix\u00e9es par <code>_</code> sont consid\u00e9r\u00e9es comme priv\u00e9es, et ne faisant pas partie de l'interface.</p> <p>Exercice</p> <p>Cr\u00e9er un module <code>secondDegre.py</code> contenant a minima la totalit\u00e9 des fonctions pr\u00e9c\u00e9dentes et impl\u00e9menter toutes ces fonctions.</p> <p>Encapsulation dans d'autres langages</p> <p>Il faut noter que la notion de fonction ou variable priv\u00e9e en <code>Python</code> n'est qu'une convention. Rien n'emp\u00eache r\u00e9ellement l'utilisateur\u00b7trice du module d'utiliser ces fonctions priv\u00e9es.</p> <p>C'est loin d'\u00eatre le cas dans d'autres langages (comme <code>C++</code> ou <code>Java</code>), qui introduisent un contr\u00f4le strict de l'encapsulation en rendant l'acc\u00e8s aux \u00e9l\u00e9ments priv\u00e9s impossible.</p>"},{"location":"NSI/Terminale/C02/Recursivite/","title":"Notion de r\u00e9cursivit\u00e9","text":""},{"location":"NSI/Terminale/C02/Recursivite/#notion-de-fonctions-recursive","title":"Notion de fonctions r\u00e9cursive","text":""},{"location":"NSI/Terminale/C02/Recursivite/#activite-dintroduction-de-literatif-au-recursif","title":"Activit\u00e9 d'introduction : de l'it\u00e9ratif au r\u00e9cursif","text":"<p>Un peu de maths :  les suites arithm\u00e9tiques</p> <p>On rappelle qu'une suite \\((u_n)\\), de premier terme \\(u_0\\) est dite arithm\u00e9tique si et seulement si</p> \\[ u_{n+1} = u_n +r \\] <p>o\u00f9 \\(r \\in \\mathbb{R}\\).</p> <p>La d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence, c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\).</p> <p></p><p> </p> <p>Cette suite peut-\u00eatre d\u00e9finie par une formule explicite :</p> \\[ u_n = u_0 + n \\times r \\] <p>Exercice</p> Enonc\u00e9Une solution <p>Construire une fonction <code>maSuiteArithmetique(n)</code> qui  calcule le \\(n\\)-i\u00e8me terme de la suite arithm\u00e9tique de premier terme <code>3</code> et de raison <code>7</code>. Quelle formule avez-vous utilis\u00e9e ?</p> <p>Au vu de l'\u00e9nonc\u00e9, je prends le pari que la majorit\u00e9 d'entre vous avez utilis\u00e9 la formule explicite avec un code de la forme suivante :</p> <p></p><pre><code>def maSuiteArithmetique(n) :\n    return 3 + n*7\n</code></pre> C'est \u00e9videmment la solution la plus simple. Dans ce cas, tout comme pour les suites  g\u00e9om\u00e9trique, il est inutile de compliquer le code, nous obtenons directement la solution par un simple calcul alg\u00e9brique.  <p>Encore des maths :  les suites arithm\u00e9tico-g\u00e9om\u00e9triques</p> <p>Une suite \\((u_n)\\), de premier terme \\(u_0\\) est dite arithm\u00e9tico-g\u00e9om\u00e9trique si et seulement si</p> \\[ u_{n+1} = a\\times u_n +b \\] <p>o\u00f9 \\(a,b \\in \\mathbb{R}\\).</p> <p>Encore une fois, la d\u00e9finition donn\u00e9e ci-dessus est une d\u00e9finition dite par r\u00e9currence, c'est-\u00e0-dire qu'on d\u00e9finit le terme de rang \\(n+1\\) \u00e0 partir du terme de rang \\(n\\). </p> <p>Exercice</p> Enonc\u00e9Une solution probable <p>Construire une fonction <code>maSuiteAG(n)</code> qui  calcule le \\(n\\)-i\u00e8me terme de la suite arithm\u00e9tico-g\u00e9om\u00e9triqueq de premier terme <code>7</code> et d\u00e9finie par :</p> \\[ u_{n+1} = -2\\times u_n +5 \\] <p>Quelle formule avez-vous utilis\u00e9e ?</p> <p>Ici nous n'avons qu'une formule - sauf pour les petits malins qui seront all\u00e9 voir sur wikipedia - donc on doit utiliser un processus de r\u00e9p\u00e9tition des op\u00e9rations \u00e0 partir de <code>7</code>.</p> <p>On peut bien s\u00fbr appliquer une  boucle <code>pour</code> dans notre fonction :</p> <p></p><pre><code>def maSuiteAG(n) :\n    u = 7 \n    for i in range(1,n+1) : # j'utilise ce range plut\u00f4t que range(n) car le i utilis\u00e9 correspond au terme du rang calcul\u00e9.\n        u = -2*u + 5\n    return u\n</code></pre> Deux remarques : <ul> <li>dans ce code, je ne v\u00e9rifie pas que \\(n \\in \\mathbb{N}\\), et il faudrait... ;</li> <li>dans le cas o\u00f9 \\(n=0\\), la boucle <code>for</code> n'est pas effectu\u00e9e.</li> </ul> <p>Une version plus correcte serait donc celle-ci :</p> <pre><code>def maSuiteAG(n) :\n    if not(isinstance(n, int)) or n&lt;0 : \n        raise ValueError(\"n must be a non negativ integer\")\n    u = 7 \n    for i in range(1,n+1) : # j'utilise ce range plut\u00f4t que range(n) car le i utilis\u00e9 correspond au terme du rang calcul\u00e9.\n        u = -2*u + 5\n    return u\n</code></pre> <p>Une telle fonction est dite it\u00e9rative, car elle utilise une boucle de r\u00e9p\u00e9titions pour parvenir au r\u00e9sultat souhait\u00e9.</p> <p>C'est vraiment dommage, dans le premier exercice, on utilise simplement la formule explicite, alors que dans le deuxi\u00e8me cas, on est oblig\u00e9 de r\u00e9fl\u00e9chir \u00e0 l'algorithme. Ce serait si simple de pouvoir utiliser directement la formule r\u00e9cursive, comme dans le code ci-dessous :</p> <p></p><pre><code>def maSuiteAGR(n) :\n    return -2*maSuiteAGR(n-1) + 5\n</code></pre> Ca vaudrait peut-\u00eatre le coup de tester, en prenant \\(n=3\\) par exemple...  K\u00e9sako ? <p>Quand on teste la fonction <code>maSuiteAGR(3)</code>, python ... calcule... puis nous renvoie une erreur :</p> <p><code>RecursionError: maximum recursion depth exceeded</code></p> <p>Le mot important dans la phrase pr\u00e9c\u00e9dente, c'est que python CALCULE ! Donc il doit a minima comprendre la fonction <code>maSuiteAGR</code> !</p>"},{"location":"NSI/Terminale/C02/Recursivite/#principe-de-recursivite","title":"Principe de r\u00e9cursivit\u00e9","text":"<p>Fonction r\u00e9cursive</p> <p>Une fonction est dite r\u00e9cursive quand elle s'appelle elle-m\u00eame, une ou plusieurs fois.</p> <p>Des probl\u00e8mes</p> <p>D\u00e9composons l'instruction l'appel \u00e0 <code>maSuiteAGR(3)</code>  : </p> <ul> <li><code>maSuiteAGR(3)</code> doit calculer <code>-2*maSuiteAGR(2) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(2)</code>, qui doit calculer <code>-2*maSuiteAGR(1) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(1)</code>, qui doit calculer <code>-2*maSuiteAGR(0) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(0)</code>, qui doit calculer <code>-2*maSuiteAGR(-1) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(-1)</code>, qui doit calculer <code>-2*maSuiteAGR(-2) +5</code>, et donc doit calculer :<ul> <li>...</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>\"HELP ! Mais \u00e7a s'arr\u00eate quand !\" me direz-vous !</p> <p>Et bien jamais, en th\u00e9orie, car nous n'avons pas pr\u00e9cis\u00e9 de condition d'arr\u00eat.</p> <p></p><p> </p> <p>Mais en r\u00e9alit\u00e9 cette instruction s'arr\u00eatera quand python aura lev\u00e9 une erreur de type <code>RecursionError</code>,  qui signifie qu'une limite aura \u00e9t\u00e9 atteinte (nous en parlerons plus tard pour lever toute ambiguit\u00e9).</p> <p>Supprimer le probl\u00e8me : le cas d'arr\u00eat</p> <p>Pour supprimer le probl\u00e8me pr\u00e9c\u00e9dent, revenons aux maths : dans une d\u00e9finition par r\u00e9currence de suite, on signale toujours la valeur du premier terme (qui peut \u00eatre \\(u_0\\), ou \\(u_1\\), ou m\u00eame \\(u_{42}\\) selon le probl\u00e8me et la d\u00e9finition de l'indice). Or dans notre fonction <code>maSuiteAGR</code>, jamais nous ne pr\u00e9cisons ce cas, c'est-\u00e0-dire que quand \\(n=0\\), alors la suite vaut \\(7\\). Rajoutons-donc cette condition dans la fonction :</p> <pre><code>def maSuiteAGR(n) :\n    if n== 0 :\n        return 7\n    else :\n        return -2* maSuiteAGR(n-1) + 5\n</code></pre> <p>Et testons de nouveau <code>maSuiteAGR(3)</code> :</p> <ul> <li><code>maSuiteAGR(3)</code> doit calculer <code>-2*maSuiteAGR(2) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(2)</code>, qui doit calculer <code>-2*maSuiteAGR(1) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(1)</code>, qui doit calculer <code>-2*maSuiteAGR(0) +5</code>, et donc doit calculer :<ul> <li><code>maSuiteAGR(0)</code>, qui maintenant renvoie 7 !</li> </ul> </li> <li>donc <code>maSuiteAGR(1)</code> renvoie <code>-2*7+5</code> soit <code>-9</code> ;</li> </ul> </li> <li>donc <code>maSuiteAGR(2)</code> renvoie <code>-2*(-9)+5</code> soit <code>23</code> ;</li> </ul> </li> <li>donc <code>maSuiteAGR(3)</code> renvoie <code>-2*23+5</code> soit <code>-41</code>.</li> </ul> <p>Non seulement la fonction s'arr\u00eate, mais en plus elle renvoie la bonne valeur, c'est-\u00e0-dire \\(u_3 = -41\\).</p> <p>R\u00e9capitulons</p> <p>Pour utiliser une fonction r\u00e9cursive correctement, il faudra distinguer :</p> <ul> <li>le ou les cas d'arr\u00eats (ou cas de base), c'est-\u00e0-dire des cas particuliers pour lesquels la valeur (ou l'objet) renvoy\u00e9 par la fonction est connu ;</li> <li>le cas r\u00e9cursif, pour lequel la fonction s'appelle elle-m\u00eame, une ou plusieurs fois.</li> </ul> <p>Exemple comment\u00e9</p> <p>La somme des \\(n\\) premiers entiers est la somme :</p> \\[ 0+1+2+3+...+n \\] <p>Comment faire pour construire une fonction r\u00e9cursive <code>sommeR(n)</code> qui effectue la somme des \\(n\\) premiers entiers, avec \\(n\\) pass\u00e9 en argument.</p> <ul> <li> <p>Quel est le cas r\u00e9cursif ?       On a \\(0+1+2+3+...+n = (0+1+2+3+ ...+ (n-1) ) + n\\),</p> <p>donc le cas r\u00e9cursif est <code>sommeR(n) = sommeR(n-1) + n</code></p> </li> <li> <p>Quel est le cas de base ?        Il y a plusieurs possibilit\u00e9s, soit en partant de l'indice 0 car <code>sommeR(0)=0</code>, soit en partant de l'indice 1, car <code>sommeR(1) = 1</code>.</p> </li> </ul> <p>Une impl\u00e9mentation r\u00e9cursive possible est alors :</p> <pre><code>def sommeR(n) :\n    if n== 0 :\n        return 0\n    else :\n        return sommeR(n-1) + n\n</code></pre>"},{"location":"NSI/Terminale/C02/Recursivite/#applications-directes","title":"Applications directes","text":"<p>Exercice : factorielle</p> Enonc\u00e9Solution It\u00e9rativeSolution r\u00e9cursive <p>On rappelle que la factorielle d'un entier naturel \\(n\\) est donn\u00e9 par :</p> \\[ \\left\\lbrace \\begin{array}{rcl} n! &amp;=&amp; n \\times (n-1) \\times ... \\times 3 \\times 2 \\times 1\\\\ 1! &amp;=&amp; 1\\\\ 0! &amp;=&amp; 1 \\end{array}\\right. \\] <ol> <li>Ecrire une fonction it\u00e9rative <code>factorielle(n)</code> qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une <code>ValueError</code> si \\(n\\) n'est pas entier ou est n\u00e9gatif.</li> <li>Ecrire une fonction r\u00e9cursive <code>factorielleR(n)</code> qui renvoie la factorielle d'un entier naturel \\(n\\) donn\u00e9, et l\u00e8ve une <code>ValueError</code> si \\(n\\) n'est pas entier ou est n\u00e9gatif.</li> </ol> <pre><code>def factorielle(n) :\n    if not(isinstance(n, int)) or n&lt;0 :\n        raise valueError(\"n must be a positiv integer\")\n    produit = 1\n    for i in range(1,n+1) :# On peut effectivemment partir de 2, et gagner un tour de boucle.\n        produit =produit*i\n    return produit\n</code></pre> <pre><code>def factorielleR(n) :\n    if not(isinstance(n, int)) or n&lt;0 :\n        raise valueError(\"n must be a positiv integer\")\n    if n==0 or n==1 :\n        return 1\n    else :\n        return factorielleR(n-1)*n              \n</code></pre> <p>Exercice : \u00e9toiles</p> Enonc\u00e9Solution It\u00e9rativeSolution r\u00e9cursive <ol> <li>Impl\u00e9menter une fonction it\u00e9rative <code>etoile(n)</code> qui \u00e9crit dans le Shell Python un triangle form\u00e9 de caract\u00e8res <code>*</code> tels que dans l'exemple suivant :</li> </ol> <p></p><pre><code>&gt;&gt;&gt; etoileR(5)\n*\n**\n***\n****\n*****\n</code></pre> 2. Impl\u00e9menter une fonction r\u00e9cursive <code>etoileR(n)</code> qui effectue le m\u00eame travail.  <pre><code>def etoile(n) :\n    if not(isinstance(n, int)) or n&lt;=0 :\n        raise valueError(\"n must be a positiv integer\")\n    for i in range(1, n+1) :\n        print(\"*\"*i)                \n</code></pre> <pre><code>def etoileR(n) :\n    if not(isinstance(n, int)) or n&lt;=0 :\n        raise valueError(\"n must be a non null positiv integer\")\n    if n == 1 :\n        print(\"*\")\n    else :\n        etoileR(n-1)\n        print(\"*\"*n)\n</code></pre> <p>Coefficients binomiaux et triangle de Pascal</p> <ol> <li> <p>Soient \\(a\\) et \\(b\\) deux r\u00e9els quelconques.</p> <p>D\u00e9veloppez les expressions suivantes :</p> <ol> <li>\\(A = (a+b)^0\\)</li> <li>\\(B = (a+b)^1\\)</li> <li>\\(C = (a+b)^2\\)</li> <li>\\(D = (a+b)^3\\)</li> <li>\\(E = (a+b)^4\\)</li> </ol> Solution <p>A venir</p> </li> <li> <p>Compl\u00e9tez deux lignes suppl\u00e9mentaires du tableau suivant, nomm\u00e9 Triangle de Pascal:</p> \\[ \\begin{array}{|l|c|c|c|c|c|c|} \\hline p=&gt;&amp;0&amp;1&amp;2&amp;3&amp;4&amp;5\\\\\\hline n=0&amp;1&amp;&amp;&amp;&amp;&amp;\\\\\\hline n=1&amp;1&amp;1&amp;&amp;&amp;&amp;\\\\\\hline n=2&amp;1&amp;2&amp;1&amp;&amp;&amp;\\\\\\hline n=3&amp;1&amp;3&amp;3&amp;1&amp;&amp;\\\\\\hline n=4&amp;1&amp;4&amp;6&amp;4&amp;1&amp;\\\\\\hline n=5&amp;1&amp;5&amp;10&amp;10&amp;5&amp;1\\\\\\hline \\end{array} \\] Solution <p>Pour construire un nombre, il suffit d'utiliser la ligne pr\u00e9c\u00e9dente, en ajoutant le nombre situ\u00e9 juste au dessus de lui et celui situ\u00e9 \u00e0 la gauche de ce dernier.</p> \\[ \\begin{array}{|l|c|c|c|c|c|c|c|c|} \\hline p=&gt;&amp;0&amp;1&amp;2&amp;3&amp;4&amp;5&amp;6&amp;7\\\\\\hline n=0&amp;1&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\\\\\hline n=1&amp;1&amp;1&amp;&amp;&amp;&amp;&amp;&amp;\\\\\\hline n=2&amp;1&amp;2&amp;1&amp;&amp;&amp;&amp;&amp;\\\\\\hline n=3&amp;1&amp;3&amp;3&amp;1&amp;&amp;&amp;&amp;\\\\\\hline n=4&amp;1&amp;4&amp;6&amp;4&amp;1&amp;&amp;&amp;\\\\\\hline n=5&amp;1&amp;5&amp;10&amp;10&amp;5&amp;1&amp;&amp;\\\\\\hline n=6&amp;1&amp;6&amp;15&amp;20&amp;15&amp;6&amp;1&amp;\\\\\\hline n=7&amp;1&amp;7&amp;21&amp;35&amp;35&amp;21&amp;7&amp;1\\\\\\hline \\end{array} \\] </li> <li> <p>On appelle coefficient binomial de rang \\(p\\) et de degr\u00e9 \\(n\\) le nombre du Triangle de Pascal correspondant \u00e0 la \\(n\\)-i\u00e8me ligne et \u00e0 la \\(p\\)_i\u00e8me colonne. Ce nombre est not\u00e9 \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\).</p> <p>Comment exprimer r\u00e9cursivemment ce coefficient ?</p> Solution <p>A venir</p> </li> <li> <p>Impl\u00e9menter une fonction <code>binomeR(n, p)</code> qui renvoie la valeur du coefficient binomial \\(\\left(\\begin{array}{c} n\\\\ p\\\\ \\end{array}\\right)\\) du triangle de Pascal.</p> Solution <p>A venir</p> </li> <li> <p>Facultatif :  Impl\u00e9menter une fonction <code>developpe(n)</code> qui renvoie la cha\u00eene de caract\u00e8res correspondant au d\u00e9veloppement de \\((a+b)^n\\).</p> Solution <p>A venir</p> </li> </ol>"},{"location":"NSI/Terminale/C02/RecursiviteFractales/","title":"Applications : Fractales","text":""},{"location":"NSI/Terminale/C02/RecursiviteFractales/#applications-de-la-recursivite-dessiner-des-fractales-avec-turtle","title":"Applications de la r\u00e9cursivit\u00e9 :  Dessiner des fractales avec <code>turtle</code>","text":"<p>Commen\u00e7ons par cr\u00e9er un fichier <code>fractales.py</code> qui nous servira pour la totalit\u00e9 des exercices.</p>"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#presentation-de-turtle","title":"Pr\u00e9sentation de <code>turtle</code>","text":"<p>Le module <code>turtle</code></p> <p>Le module <code>turtle</code> est un module faisant partie de toute distribution <code>python</code>.  Son int\u00e9r\u00eat repose sur la simplicit\u00e9 (relative) des commandes utilis\u00e9es pour dessiner.</p> <p>Un objet de classe <code>Turtle</code> se comporte comme un crayon de table tra\u00e7ante sur une feuille de papier munie d'un rep\u00e8re orthonorm\u00e9. </p> <p> </p> <p> </p> <p>Exemple : premi\u00e8re fen\u00eatre et premi\u00e8re tortue</p> <p>Consid\u00e9rons le code suivant , ainsi que le r\u00e9sultat de son ex\u00e9cution : </p> <pre><code>import turtle\n\ndef testTurtle() :\n    screen = turtle.Screen()\n    screen.bgcolor('lightgray')\n    donatello = turtle.Turtle()\n\n\n\nif __name__ == \"__main__\" :\n   testTurtle()\n</code></pre> <ul> <li>en ligne 1 on importe le module <code>turtle</code> compl\u00e8tement ;</li> <li>en ligne 4, on cr\u00e9e un objet <code>Screen()</code> sur lequel la tortue dessinera, cet objet \u00e9tant affect\u00e9 au nom <code>screen</code> ;</li> <li>en ligne 5, on fait appel \u00e0 la m\u00e9thode <code>bgcolor</code> des objets <code>Screen</code> afin de basculer la couleur de fond sur <code>lightgray</code> ;</li> <li>en ligne 6, on cr\u00e9e un objet <code>Turtle</code> affect\u00e9 au nom <code>donatello</code>. </li></ul> <p>Vous observerez que la tortue est repr\u00e9sent\u00e9e par une pointe de fl\u00e8che, pointant vers la droite.</p> <p>Par d\u00e9faut, la tortue appara\u00eet au centre du rep\u00e8re, c'est-\u00e0-dire au centre de la fen\u00eatre de dessin, donc aux coordonn\u00e9es \\((0; 0)\\).</p> <p>Nous allons maintenant rajouter au code les instructions suivantes en lignes 7 \u00e0 11, puis ex\u00e9cuter le code : </p> <pre><code>donatello.forward(100)\ndonatello.left(90)\ndonatello.forward(50)\ndonatello.right(45)\ndonatello.backward(80)\n</code></pre> Avec ces lignes : <ul> <li>la tortue avance de 100 pixels dans la direction o\u00f9 elle pointe ;</li> <li>elle tourne vers sa gauche de 90\u00b0 ;</li> <li>elle avance de 50 pixels dans la nouvelle direction ;</li> <li>elle tourne vers sa droite de 45\u00b0 ;</li> <li>et enfin elle recule de 80 pixels.</li> </ul> <p></p> <p>M\u00e9thodes de la classe <code>Turtle</code></p> <p>Comme toujours, la doc python est tr\u00e8s claire sur le module <code>turtle</code>, mais voici quelques m\u00e9thodes des objets de classe <code>Turle</code> :</p> <ul> <li><code>forward(d)</code> : d\u00e9place l'objet <code>Turtle</code> de \\(d\\) pixels dans la direction o\u00f9 pointe la t\u00eate de la tortue. A mettre en parall\u00e8le avec la m\u00e9thode <code>backward(d)</code>.</li> <li><code>left(a)</code> : tourne la t\u00eate de la tortue vers sa gauche de \\(a\\)\u00b0. A mettre en parall\u00e8le avec la m\u00e9thode <code>right(a)</code>.</li> <li><code>goto(x,y)</code> ou <code>setx(v)</code> ou <code>sety(v)</code> : d\u00e9place la tortue vers une position donn\u00e9e dans le rep\u00e8re.</li> <li><code>setheading(a)</code> : tourne la t\u00eate de la tortue \u00e0 un angle de \\(a\\)\u00b0 par rapport \u00e0 l'horizontale, dans le sens trigonom\u00e9trique.</li> <li><code>circle(r)</code> : trace \u00e0 partir de la position courante un cercle de rayon \\(r\\), le centre \u00e9tant situ\u00e9 sur la gauche de la t\u00eate de la tortue.</li> <li><code>speed(v)</code> : change la vitesse de d\u00e9placement de la tortue. L'argument est un entier de 0 \u00e0 10 tel que :<ul> <li>\u00ab le plus rapide \u00bb : 0</li> <li>\u00ab rapide \u00bb : 10</li> <li>\u00ab vitesse normale \u00bb : 6</li> <li>\u00ab lent \u00bb : 3</li> <li>\u00ab le plus lent \u00bb : 1</li> </ul> </li> <li><code>pendown()</code> et <code>penup()</code> : respectivement baisse ou l\u00e8ve le crayon. Si le crayon est lev\u00e9, rien n'est trac\u00e9 \u00e0 l'\u00e9cran.</li> <li><code>pensize(t)</code> :  r\u00e8gle l'\u00e9paisseur de trac\u00e9 \u00e0 \\(t\\) pixels.</li> <li><code>pencolor(*args)</code> :  r\u00e8gle la couleur du stylo. L'argument peut-\u00eatre :<ul> <li>une cha\u00eene de caract\u00e8res : <code>red</code>, <code>gray</code>, ou <code>#33cc8c</code>, etc...</li> <li>un triplet RGB : <code>(255, 100, 50)</code>,...</li> </ul> </li> <li><code>fillcolor(*args)</code> : d\u00e9finit la couleur de remplissage.</li> <li><code>begin_fill()</code> et <code>end_fill()</code> : d\u00e9but et fin de la d\u00e9finition d'une zone de remplissage.</li> </ul> <p>Je ne d\u00e9taillerai pas ici les m\u00e9thodes des objets <code>Screen</code>.</p> <p>Prise en main de <code>turtle</code></p> \u00c9nonc\u00e9Solutions <p>En partant d'un fichier <code>sandbox_turtle.py</code> contenant les lignes suivantes :</p> <pre><code>import turtle\n\ndef triangleEquilateral(c) :\n...\n\ndef pentagramme(c, color=\"red\") :\n...\n\ndef hexagone(c, diag = False) :\n...\n\n\n\nif __name__ == \"__main__\" :\n    screen = turtle.Screen()\n    screen.bgcolor('lightgray')\n    donatello = turtle.Turtle()\n</code></pre> <ol> <li>Cr\u00e9er une proc\u00e9dure (fonction sans <code>return</code> explicite) <code>triangleEquilateral(c)</code> qui trace un triangle \u00e9quilat\u00e9ral de longueur \\(c\\) \u00e0 partir de  la position courante.</li> <li>Cr\u00e9er une proc\u00e9dure <code>pentagramme(c, color=\"red\")</code> qui trace un pentagramme (une \u00e9toile \u00e0 5 branches) et le remplit  avec la couleur pass\u00e9e en argument.</li> <li>Cr\u00e9er une proc\u00e9dure <code>hexagone(c, diag = False)</code> qui trace un hexagone de c\u00f4t\u00e9 \\(c\\) et qui trace en outre ses diagonales si le param\u00e8tre optionnel <code>diag</code> est pass\u00e9 \u00e0 <code>True</code>.</li> </ol> <p>Toutes les solutions suivantes supposent qu'un \u00e9cran et qu'une tortue nomm\u00e9e <code>t</code> existent dans l'espace de nom g\u00e9n\u00e9ral.</p> <code>triangleEquilateral(c)</code><code>pentagramme(c, color=\"red\")</code><code>hexagone(c, diag = False)</code> <pre><code>def triangleEquilateral(c) :\n    for _ in range(3):\n        t.forward(c)\n        t.left(120)\n</code></pre> <pre><code>def pentagramme(t, c, color=\"red\") :\n    t.fillcolor(color)\n    t.begin_fill()\n    for _ in range(5):\n        t.forward(c)\n        t.right(144)\n    t.end_fill()\n</code></pre> <pre><code>def hexagone(t, c, diag = False) :\n    for _ in range(6):\n        t.forward(c)\n        t.right(60)\n    if diag :\n        for _ in range(3) :\n            t.right(60)\n            t.forward(2*c)\n            t.right(120)\n            t.forward(c)\n            t.right(60)\n</code></pre>"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#flocon-de-von-koch","title":"Flocon de Von Koch","text":"<p>Le Flocon de Von Koch</p> <p>Le flocon de Von Koch, invent\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Helge von Koch, est une des premi\u00e8res courbes fractales d\u00e9crites, avant m\u00eame l'invention du terme fractale par Benoit Mandelbrot en 1967.</p> <p></p><p> </p> <p>Cette courbe est obtenue par la d\u00e9composition r\u00e9cursive d'un segment en une ligne bris\u00e9e : </p> <p> </p> <p>Construction du flocon</p> <ol> <li> <p>Avant de passer \u00e0 une d\u00e9finition r\u00e9cursive de la construction, essayons de faire une \u00e9tape de cette construction.</p> \u00c9nonc\u00e9Solution <p>a. Cr\u00e9er une fonction <code>segment(long)</code> qui trace une it\u00e9ration de la construction du segment de Von Koch (c'est-\u00e0-dire  tra\u00e7ant l'\u00e9tape 3 de l'image ci-dessus.).</p> <p>b. Tester cette fonction en pla\u00e7ant la tortue dans diff\u00e9rentes positions de d\u00e9part.</p> <pre><code>def segment(long) :\n    t.forward(long//3)\n    t.left(60)\n    t.forward(long//3)\n    t.right(120)\n    t.forward(long//3)\n    t.left(60)\n    t.forward(long//3)\n</code></pre> </li> <li> <p>Passons \u00e0 la construction r\u00e9cursive d'un segment :</p> \u00c9nonc\u00e9Solution <p>En se basant sur la fonction pr\u00e9c\u00e9dente, impl\u00e9menter une fonction <code>segmentR(long, n)</code> qui tracera le r\u00e9sultat de \\(n\\) it\u00e9rations de la m\u00e9thode sur un segment de longueur <code>long</code>.</p> <ul> <li>Pour \\(n=0\\), on obtiendra <p> </p></li> <li>Pour \\(n=1\\), on obtiendra <p> </p></li> <li>Pour \\(n=2\\), on obtiendra <p> </p></li> </ul> <pre><code>def segmentR( long, n) :\n    if n == 0 :\n        t.forward(long)\n    else :\n        segmentR(long/3, n-1)\n        t.left(60)\n        segmentR(long/3, n-1)\n        t.right(120)\n        segmentR(long/3, n-1)\n        t.left(60)\n        segmentR(long/3, n-1)\n</code></pre> </li> <li> <p>Terminer la construction en tra\u00e7ant le flocon sur une base de triangle \u00e9quilat\u00e9ral.</p> Solution <p>Avec changement de couleurs : </p><pre><code>def floconVK(long,n) :\n    t.pencolor(random.choice(couleurs))\n    t.begin_fill()\n    for _ in range(3) :\n        segmentR(long, n)\n        t.right(120)\n    t.end_fill()\n</code></pre> o\u00f9  <pre><code>couleurs=[\"black\",\"white\",\"grey\",\"red\",\"orange\",\"green\",\n  \"blue\",\"navy\",\"yellow\",\"gold\",\"tan\",\"brown\",\n  \"sienna\",\"wheat\",\"cyan\",\"pink\",\"salmon\",\"violet\",\"purple\"]\n</code></pre> </li> </ol>"},{"location":"NSI/Terminale/C02/RecursiviteFractales/#le-triangle-de-sierpinski","title":"Le triangle de Sierpinski","text":"<p>Triangle de Sierpinski</p> <p>Le Triangle (ou napperon) de Sierpinski, aussi connu sous le nom de joint de culasse (nom donn\u00e9 par Mandelbrot), est une autre figure fractale d\u00e9crite au d\u00e9but du XX\u00e8me si\u00e8cle.</p> <p>Il peut s'obtenir \u00e0 partir d'un triangle \u00ab plein \u00bb, par une infinit\u00e9 de r\u00e9p\u00e9titions consistant \u00e0 diviser par deux la taille du triangle puis \u00e0 les accoler en trois exemplaires par leurs sommets pour former un nouveau triangle. </p><p> </p> \u00c0 chaque r\u00e9p\u00e9tition le triangle est donc de m\u00eame taille, mais \u00ab de moins en moins plein \u00bb.   <p>A coder</p> <p>En partant du principe de l'exercice sur le flocon de Von Koch, impl\u00e9menter une fonction <code>Sierpinski(long, n)</code> qui trace le r\u00e9sultat de \\(n\\) it\u00e9rations sur un triangle de c\u00f4t\u00e9 \\(n\\).</p> Solution <p>A venir !</p> <p>Remarque</p> <p>Le triangle de Sierpinski correspond \u00e0 une propri\u00e9t\u00e9 particuli\u00e8re du triangle de Pascal. En effet, le triangle de Sierpinski appara\u00eet dans le triangle de Pascal lorsque'on supprime tous les coefficients pairs. Vous pouvez en voir plus ici</p>"},{"location":"NSI/Terminale/C02/RecursiviteTris/","title":"Applications : Tris","text":""},{"location":"NSI/Terminale/C02/RecursiviteTris/#applications-de-la-recursivite-tris-de-tableaux","title":"Applications de la r\u00e9cursivit\u00e9 :  Tris de tableaux","text":""},{"location":"NSI/Terminale/C02/RecursiviteTris/#rappels-sur-les-algorithmes-de-tris-vus-en-classe-de-premiere","title":"Rappels sur les algorithmes de tris vus en classe de premi\u00e8re","text":"<p>Principe du tri par insertion</p> <p>Le principe du tri par insertion est le suivant : au moment o\u00f9 on consid\u00e8re un \u00e9l\u00e9ment du tableau \u00e0 trier, les \u00e9l\u00e9ments qui le pr\u00e9c\u00e8dent sont d\u00e9j\u00e0 tri\u00e9s, tandis que les \u00e9l\u00e9ments qui le suivent ne sont pas encore tri\u00e9s. </p> <p>On peut voir sur l'animation suivante extraite de wikipedia :</p> <p></p><p> </p> <p>La complexit\u00e9 du tri par insertion est quadratique (en \\(\\mathbb{O}(n^2)\\)) dans le pire cas et en moyenne, et lin\u00e9aire (en $\\(\\mathbb{O}(n)\\))dans le meilleur cas (tableau presque tri\u00e9). C'est donc un tri dont la vitesse d'ex\u00e9cution d\u00e9pendra fortement de la situation initiale. </p> Le code en Python <pre><code>def tri_insertion(L):\n    N = len(L)\n    for n in range(1,N):\n        cle = L[n]\n        j = n-1\n        while j&gt;=0 and L[j] &gt; cle:\n            L[j+1] = L[j] # decalage\n            j = j-1\n        L[j+1] = cle\n</code></pre> <p>Principe du tri par s\u00e9lection</p> <p>Sur un tableau de n \u00e9l\u00e9ments, le principe du tri par s\u00e9lection est le suivant :</p> <ul> <li>rechercher le plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 0 ;</li> <li>rechercher le second plus petit \u00e9l\u00e9ment du tableau, et l'\u00e9changer avec l'\u00e9l\u00e9ment d'indice 1 ;</li> <li>continuer de cette fa\u00e7on jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9.</li> </ul> <p>On peut voir sur l'animation suivante extraite de wikipedia :</p> <p></p><p> </p> <p>Cet algorithme de tri, simple \u00e0 comprendre, est consid\u00e9r\u00e9 comme mauvais car sa complexit\u00e9 en temps est en \\(\\mathbb{O}(n^2)\\), que ce soit dans le pire des cas ou bien le meilleur des cas (m\u00eame pour un tableau d\u00e9j\u00e0 tri\u00e9 il faudra faire toutes les comparaisons).</p> Le code en Python <pre><code>    def tri_selection(tab):\n        for i in range(len(tab)):\n          # Trouver le min\n           min = i\n           for j in range(i+1, len(tab)):\n               if tab[min] &gt; tab[j]:\n                   min = j\n\n           tmp = tab[i]\n           tab[i] = tab[min]\n           tab[min] = tmp\n       return tab\n</code></pre>"},{"location":"NSI/Terminale/C02/RecursiviteTris/#le-tri-fusion","title":"Le tri fusion","text":"<p>Principe du Tri Fusion (Merge Sort)</p> <p>Le principe du tri fusion, est de s\u00e9parer un tableau \u00e0 trier en deux sous-tableaux qu'on triera r\u00e9cursivemment (ou it\u00e9rativemment  mais ce ne sera pas le cas dans ce cours) de nouveau par tri fusion.</p> <p>Une fois les sous-tableaux tri\u00e9s, il faudra fusionner ces deux sous-tableaux en une seule identit\u00e9.</p> <p>Cet algorithme est  du type diviser pour r\u00e9gner (Divide and Conquer) : on s\u00e9pare la t\u00e2che \u00e0 priori difficile en deux t\u00e2ches plus simples (ici, il s'agit de diminuer la taille des tableaux). Il a \u00e9t\u00e9 invent\u00e9 par John Von Neumann en 1945.</p> <p></p><p> </p> <p>Fonction de fusion</p> ExerciceSolution <p>La principale difficult\u00e9 dans cet algorithme est de cr\u00e9er une fonction fusionnant les deux tableaux tri\u00e9s. </p> <ol> <li>Avant commencer, regardez la vid\u00e9o suivante : <p> </p></li> <li>De combien de variables compteurs avons nous besoins ?</li> <li>Quel type de boucle allons nous utiliser ?</li> <li>Que se passe-t-il dans la vid\u00e9o quand \\(j\\) atteint la valeur \\(3\\) ?</li> <li>R\u00e9diger en langage naturel l'algorithme fusionnant deux tableaux tri\u00e9s.</li> <li>Impl\u00e9menter une fonction <code>fusion(t1, t2)</code> qui prend en argument deux tableaux suppos\u00e9s tri\u00e9s (on ne v\u00e9rifiera pas), et qui renvoie le tableau tri\u00e9 contenant tous les \u00e9l\u00e9ments des deux tableaux <code>t1</code> et <code>t2</code>. On pourra utiliser les tests suivants pour v\u00e9rifier que la fonction est correcte :</li> </ol> Les tests <pre><code>&gt;&gt;&gt; fusion([12,35,45],[4,42,63])\n[4, 12, 35, 42, 45, 63]\n&gt;&gt;&gt; fusion([12,35], [57])\n[12, 35, 57]\n&gt;&gt;&gt; fusion([12,35], [42,57])\n[12, 35, 42, 57]\n&gt;&gt;&gt; fusion([12,35], [])\n[12, 35]\n&gt;&gt;&gt; fusion([], [12,35])\n[12, 35]\n&gt;&gt;&gt; fusion([42,57,67,75], [12,35])\n[12, 35, 42, 57, 67, 75]\n&gt;&gt;&gt; fusion([], [])\n[]\n</code></pre> <ol> <li>C'est beau, c'est fait avec manim.</li> <li>En r\u00e9alit\u00e9 il n'y a que deux compteurs : \\(i\\) et \\(j\\). En effet \\(k\\) est en permanence \u00e9gal \u00e0 \\(i+j\\).</li> <li>On peut utiliser une boucle <code>Pour</code>, vu que le nombre d'it\u00e9rations est connu au d\u00e9part : il s'agit de la somme des longueurs des deux tableaux. Mais il est aussi tout \u00e0 fait possible d'utiliser une boucle <code>Tant que</code>, puisque l'algorithme se poursuit tant qu'un des deux compteurs n'a pas atteint  sa position finale.</li> <li>Quand \\(j\\) atteint la position 3 (soit la longueur du deuxi\u00e8me tableau), il ne reste plus qu'\u00e0 compl\u00e9ter avec les valeurs restantes du premier tableau.</li> <li>Diff\u00e9rentes versions :</li> </ol> Version <code>Pour</code> sans initialisation du tableau final <pre><code>fonction fusion(t1, t2)\n    tf &lt;- tableau vide\n    i &lt;- 0\n    j &lt;- 0\n    n1 &lt;- longueur de t1\n    n2 &lt;- longueur de t2\n    Pour k allant de 0 \u00e0 n1+n2-1\n        Si i&lt;n1 et j&lt;n2\n</code></pre> <p>Tri Fusion R\u00e9cursif</p> ExerciceSolution <p>Une fois la fonction <code>fusion</code> cod\u00e9e, l'algorithme de tri par fusion est simple :</p> <ol> <li>Regardez la vid\u00e9o suivante : <p> </p></li> <li>Quel est le cas de base ?</li> <li>Quel est le cas r\u00e9cursif ?</li> <li>Impl\u00e9menter une fonction <code>triFusion(t)</code> qui prend en argument un tableau et renvoie une copie tri\u00e9e de ce tableau.</li> </ol> <p>A venir !</p> <p>Complexi\u00e9 en temps</p> ExerciceSolution <ol> <li> <p>Copiez-collez le code ci-dessous permettant d'utiliser le d\u00e9corateur <code>@timeit</code> :     </p><pre><code>import time                                                \n\ndef timeit(method):\n\n    def timed(*args, **kw):\n        ts = time.time()\n        result = method(*args, **kw)\n        te = time.time()\n        print(f\" {method.__name__} ({args},{kw}) {te-ts}\" )\n        return result\n\n    return timed\n</code></pre> <p>D\u00e9corateur <code>@timeit</code></p> <p>pour utiliser le d\u00e9corateur, on le place dans la ligne pr\u00e9c\u00e9dant la d\u00e9finition de la fonction qu'on veut d\u00e9corer. Par exemple : </p><pre><code>@timeit\ndef tri_insertion(tab) :\n    ...\n</code></pre> Chaque fois que la fonction <code>tri_insertion</code> sera appel\u00e9e, le d\u00e9corateur sera appliqu\u00e9 et ex\u00e9cuterala fonction <code>timed</code>, qui calcule le temps d'ex\u00e9cution de la fonction d\u00e9cor\u00e9e. <p>Il faudra \u00eatre attentif \u00e0 son utilisation dans le cas des fonctions r\u00e9cursives ! (Je vous laisse constater par vous m\u00eame le probl\u00e8me rencontr\u00e9.)</p> </li> <li> <p>Cr\u00e9er une fonction <code>genereTab(n)</code> qui cr\u00e9e un tableau de taille \\(n\\) d'entiers al\u00e9atoires compris entre \\(0\\) et \\(n^2\\).</p> </li> <li> <p>Cr\u00e9er \u00e0 l'aide de toutes les fonctions pr\u00e9c\u00e9dentes une fonction <code>testeTemps(n)</code> qui compare les temps d'ex\u00e9cution des diff\u00e9rents tris pour \\(n\\) valant \\(100\\), \\(1~000\\), \\(10~000\\).  Attention, il faudra effectuer \u00e0 chaque fois les tests sur le m\u00eame tableau, et donc cr\u00e9er des copies du tableau original avant de le trier (on peut utiliser la fonction  <code>deepcopy</code> du module <code>copy</code>)</p> </li> <li> <p>Que peut-on en conclure quand \u00e0 la complexit\u00e9 en temps du tri fusion ?</p> </li> </ol> <p>A venir !</p> <p>Complexit\u00e9s du tri fusion</p> <p>La version la plus simple du tri fusion sur les tableaux a une efficacit\u00e9 comparable au tri rapide, mais elle n'op\u00e8re pas en place : une zone temporaire de donn\u00e9es suppl\u00e9mentaire de taille \u00e9gale \u00e0 celle de l'entr\u00e9e est n\u00e9cessaire (des versions plus complexes peuvent \u00eatre effectu\u00e9es sur place mais sont moins rapides). La complexit\u00e9 en temps est en \\(\\mathbb{O}(n log(n))\\) dans tous les cas, et la complexit\u00e9 en espace est en g\u00e9n\u00e9ral en \\(\\mathbb{O}(n)\\).</p>"},{"location":"NSI/Terminale/C02/RecursiviteTris/#plus-vite-quicksort-hors-programme","title":"Plus vite ! QuickSort ! (Hors programme)","text":"<p>Principe du QuickSort</p> <p></p><p> </p>"},{"location":"NSI/Terminale/C03/ListesChainees/","title":"Listes chain\u00e9es","text":""},{"location":"NSI/Terminale/C03/ListesChainees/#listes-chainees","title":"Listes Cha\u00een\u00e9es","text":""},{"location":"NSI/Terminale/C03/ListesChainees/#le-probleme-de-la-structure-tableau","title":"Le probl\u00e8me de la structure tableau","text":"<p>La structure de type tableau permet de stocker des s\u00e9quences d'\u00e9l\u00e9ments dans des zones contig\u00fces de la m\u00e9moire, mais n'est pas forc\u00e9ment adapt\u00e9e \u00e0 toutes les op\u00e9rations possibles sur ces s\u00e9quences.</p> <p>Par exemple, la structure de tableau de Python permet gr\u00e2ce aux m\u00e9thodes <code>append</code> et <code>pop</code> d'ajouter et de supprimer relativement efficacement un \u00e9l\u00e9ment en derni\u00e8re position dans un tableau d\u00e9j\u00e0 existant (ce n'est pas le cas dans d'autres langages, o\u00f9 de telles m\u00e9thodes n'existent pas forc\u00e9ment). </p> <p>Lorsqu'on veut ins\u00e9rer un \u00e9l\u00e9ment \u00e0 une autre position on peut, toujours en Python, utiliser la m\u00e9thode <code>insert</code> qui ins\u00e8re un \u00e9l\u00e9ment \u00e0 une position donn\u00e9e. Mais cette m\u00e9thode cache un certain nombre de probl\u00e8mes, dont le co\u00fbt en temps.</p> <p>Que fait <code>insert</code> lorsqu'on veut ajouter un \u00e9l\u00e9ment en position 0</p> <p>Imaginons que nous avons un tableau <code>tab</code>, pour lequel nous voulons ins\u00e9rer la valeur \\(8\\) en premi\u00e8re position :</p> <p></p><p> </p> <p>Au total, nous avons r\u00e9alis\u00e9 un nombre d'op\u00e9rations qui est proportionnel \u00e0 la taille du tableau !Sur un petit, tel que celui-ci, il n'y a pas trop de probl\u00e8mes,  mais sur un tableau contenant plusieurs millions d'entr\u00e9es, le nombre d'op\u00e9rations devient bien trop important.</p> <p>Heureusement, il existe d'autres mani\u00e8res de stocker des informations, qui permettent une modification bien plus rapide des diff\u00e9rents \u00e9l\u00e9ments.    </p> La face cach\u00e9e de Python <p>Lorsqu'un objet de type <code>list</code> est cr\u00e9e en Python, l'interpr\u00e9teur r\u00e9serve une taille en m\u00e9moire proportionnelle \u00e0 une puissances de 2 n\u00e9cessaire pour stocker le tableau. Cela signifie qu'un tableau de taille 3 occuper une taille m\u00e9moire \u00e9gale \u00e0 celle d'un tableau de taille 4, mais dont la derni\u00e8re cellule n'est pas utilis\u00e9e. De m\u00eame un tableau de taille 5 est en fait stock\u00e9 comme un tableau de taille 8 dont les trois derni\u00e8res cellules ne sont pas utilis\u00e9es. Un tableau de taille 16 sera stock\u00e9 dans une structure dont toutes les cases sont occup\u00e9es.</p> <p>La m\u00e9thode <code>append</code> va donc fonctionner de deux mani\u00e8res diff\u00e9rentes selon la situation envisag\u00e9e :</p> <ul> <li> <p>il reste des cases de libres dans la r\u00e9servation m\u00e9moire, alors la valeur ajout\u00e9e par <code>append</code> sera simplement stock\u00e9e dans la premi\u00e8re case libre :</p> <p></p> </li> <li> <p>si la r\u00e9servation m\u00e9moire est pleine, il faudra alors cr\u00e9er une nouvelle r\u00e9servation m\u00e9moire d'une taille 2 fois sup\u00e9rieure \u00e0 la pr\u00e9c\u00e9dente, copier chaque \u00e9l\u00e9ment de l'ancienne liste dans la nouvelle, puis enfin la valeur ajout\u00e9e par <code>append</code> sera simplement stock\u00e9e dans la premi\u00e8re case libre :</p> <p></p> </li> </ul> <p>On constate une utilisation m\u00e9moire tr\u00e8s important pour juste un \u00e9l\u00e9ment suppl\u00e9mentaire ajout\u00e9...</p>"},{"location":"NSI/Terminale/C03/ListesChainees/#les-listes-chainees","title":"Les listes chain\u00e9es","text":""},{"location":"NSI/Terminale/C03/ListesChainees/#construction-dune-liste-chainee","title":"Construction d'une liste chain\u00e9e","text":"<p>Liste chain\u00e9e</p> <p>Une liste chain\u00e9e est une structure permettant d'impl\u00e9menter une liste, c'est-\u00e0-dire une s\u00e9quence finie de valeurs (de m\u00eame type ou non). Les \u00e9l\u00e9ments sont dits chain\u00e9s car \u00e0 chaque \u00e9l\u00e9ment est associ\u00e9 l'adresse m\u00e9moire de l'\u00e9l\u00e9ment suivant de la liste.</p> <p>Exemple</p> <p></p><p> </p> <p>On a repr\u00e9sent\u00e9 ici une liste chain\u00e9e de trois \u00e9l\u00e9ments :</p> <ul> <li>Le premier est \\(21\\), et il pointe vers l'adresse m\u00e9moire du second ;</li> <li>Le deuxi\u00e8me \u00e9l\u00e9ment est \\(15\\) et il pointe vers l'adresse m\u00e9moire du troisi\u00e8me ;</li> <li>Le troisi\u00e8me \u00e9l\u00e9ment est \\(45\\). Il ne pointe vers rien (l'adresse du suivant est <code>None</code>). On a atteint la fin de la liste.</li> </ul> <p>Impl\u00e9mentation d'une liste chain\u00e9e en Python</p> <p>La m\u00e9thode classique pour impl\u00e9menter une liste chain\u00e9e est de construire une classe d'objets poss\u00e9dant deux attributs : un pour la valeur et un pour l'adresse du chainon suivant :</p> <pre><code>class Chainon :\n\"\"\"Chainon d'une liste chain\u00e9e\"\"\"\n    def __init__(self, valeur, suivant) :\n        self.valeur = valeur\n        self.suivant = suivant\n</code></pre> <p>Une fois cette classe d\u00e9finie, la construction de la liste s'effectue de la mani\u00e8re suivante :</p> <ul> <li> <p>pour une liste chain\u00e9e contenant un unique chainon :</p> <pre><code>chaine = Chainon(35, None)\n</code></pre> </li> <li> <p>pour une liste chain\u00e9e contenant plusieurs chainons :</p> <pre><code>chaine = Chainon(21, Chainon(15, Chainon( 45, None)))\n</code></pre> <p>Ici, on a cr\u00e9\u00e9 une liste nomm\u00e9e <code>chaine</code> \u00e0 partir de trois objets de classe <code>Chainon</code> qu'on peut visualiser ainsi :</p> <p></p><p> </p> </li> </ul> <p>Remarque</p> <p>Cette construction est une construction r\u00e9cursive bas\u00e9e sur des objets. Il aurait \u00e9t\u00e9 possible d'utiliser des tuples ou des listes python, mais l'utilisation serait moins pratique :</p> <p></p><pre><code>(21,(15, (45, (None))))\n</code></pre> En particulier avec des tuples, il aurait \u00e9t\u00e9 impossible de modifier la liste une fois celle-ci cr\u00e9\u00e9e.  <p>Affichage d'un objet <code>Chainon</code></p> <p>Afin de repr\u00e9senter \u00e0 l'\u00e9cran notre objet <code>Chainon</code>, on impl\u00e9mente la m\u00e9thode <code>__str__</code> ainsi : </p><pre><code>class Chainon :\n\"\"\"Chainon d'une liste chain\u00e9e\"\"\"\n    def __init__(self, valeur, suivant) :\n        self.valeur = valeur\n        self.suivant = suivant\n\n    def __str__(self):\n        if self.suivant == None :\n            return f\"{self.valeur} -&gt; None\"\n        else :\n            return f\"{self.valeur} -&gt; {str(self.suivant)}\"\n</code></pre> <p>Ainsi l'instruction <code>print(chaine)</code> affichera <code>21 -&gt; 15 -&gt; 45 -&gt; None</code>.</p>"},{"location":"NSI/Terminale/C03/ListesChainees/#operations-sur-les-listes-chainees","title":"Op\u00e9rations sur les listes chain\u00e9es.","text":"<p>Longueur d'une liste chain\u00e9e</p> <p>Nous allons cr\u00e9er maintenant une fonction <code>longueur</code> qui calcule la longueur d'une liste chain\u00e9e telle que nous l'avons impl\u00e9ment\u00e9e.</p> <p>Cette fonction devra :</p> <ul> <li>renvoyer 0 si la liste est vide ;</li> <li>renvoyer le nombre d'\u00e9l\u00e9ments de la chaine sinon.</li> </ul> <p>Le plus simple est d'utiliser la r\u00e9cursivit\u00e9 :</p> <pre><code>def longueur(chaine) :\n    if chaine == None :\n        return 0\n    else :\n        return 1 + longueur(chaine.suivant)\n</code></pre> <p>La complexit\u00e9 de cette fonction est directement proportionnelle \u00e0 la longueur de la liste : pour une liste de \\(1~000\\) \u00e9l\u00e9ments, la fonction effectuera :</p> <ul> <li>\\(1~000\\) comparaisons ;</li> <li>\\(1~000\\) additions ;</li> <li>\\(1~000\\) appels r\u00e9cursifs.</li> </ul> <p>On en conclut que la complexit\u00e9 en temps de cette fonction est en \\(\\mathbb{O}(n)\\).</p> Et en it\u00e9ratif ? <pre><code>def longueur(chaine) :\n    n = 0\n    chainon = chaine\n    while chainon is not None :\n        n+=1\n        chainon = chainon.suivant\n    return n\n</code></pre> <p>Exercice 1 : n-i\u00e8me \u00e9l\u00e9ment</p> Enonc\u00e9Solution r\u00e9cursiveSolution It\u00e9rative <p>Cr\u00e9er une fonction <code>n_ieme_element(chaine, n)</code> qui renvoie la valeur du \\(n\\)-i\u00e8me \u00e9l\u00e9ment de la liste chain\u00e9e pass\u00e9e en argument.</p> <pre><code>def n_ieme_element(chaine, n) :\n    if chaine == None :\n        raise IndexError(\"Invalid index\")\n    if n == 0 :\n        return chaine.valeur\n    else :\n        return n_ieme_element(chaine.suivant, n-1)\n</code></pre> <p>La question de la complexit\u00e9 est un peu plus subtile :</p> <ul> <li>dans un cas correct (l'indice <code>n</code> fourni corresond bien \u00e0 un \u00e9l\u00e9ment de la liste), le nombre d'op\u00e9rations est bien proportionnel \u00e0 <code>n</code> ;</li> <li>dans le cas o\u00f9 <code>n</code> est sup\u00e9rieur \u00e0 la longueur de la liste, par contre, on va parcourir la totalit\u00e9 de la liste avant de pouvoir signaler une erreur. Ce serait cependant une tr\u00e8s mauvaise id\u00e9e de calculer la longueur de la liste pour le comparer \u00e0 \\(n\\), car le calcul de la longueur parcoure d\u00e9j\u00e0 toute la liste. Faire ce calcul en appel r\u00e9cursif g\u00e9n\u00e9rerait donc une complexit\u00e9 quadratique. On pourrait cependant encapsuler la fonction r\u00e9cursive dans une fonction dont l'objectif serait de v\u00e9rifier la valeur de l'indice avant d'effectuer les appels r\u00e9cursifs.</li> <li>Pire, dans le cas o\u00f9 l'indice pass\u00e9 est n\u00e9gatif, la liste chain\u00e9e sera elle aussi parcourue int\u00e9gralement avant de renvoyer une erreur d'indice. On peut cependant corriger cel\u00e0 par la ligne :</li> </ul> <pre><code>if chaine == None or i&lt;0 :\n...\n</code></pre> <p></p><pre><code>def n_ieme_elementI(chaine, n) :\n    if n &lt; 0 :\n        raise IndexError(\"Invalid index\")\n    ni = 0\n    chainon = chaine\n    while  chainon != None and ni != n :\n        ni += 1\n        chainon = chainon.suivant\n    if chainon != None :\n        return chainon.valeur\n    else :\n        raise IndexError(\"Invalid index\")\n</code></pre>  On retrouve en terme de complexit\u00e9 les m\u00eames \u00e9l\u00e9ments que pour la fonction r\u00e9cursive. Cependant les erreurs ainsi que les conditions de sorties sont plus complexes \u00e0 prendre en compte.  <p>Exercice 2 :  Concat\u00e9nation de deux listes</p> Enonc\u00e9Solution r\u00e9cursiveSolution It\u00e9rative <p>Cr\u00e9er une fonction <code>concatener(c1, c2)</code> qui renvoie une liste chain\u00e9e obtenue par concat\u00e9nation de <code>c1</code> et <code>c2</code>.</p> <pre><code>def concatener(c1, c2) :\n    if c1 == None :\n        return c2\n    else :\n        return Chainon(c1.valeur,concatener(c1.suivant, c2))\n</code></pre> <p>La complexit\u00e9 d\u00e9pend fortement de la longueur de la liste <code>c1</code>. par contre elle ne d\u00e9pend pas de celle de <code>c2</code>. Dans cette version, les chaines <code>c1</code> et <code>c2</code> ne sont pas modifi\u00e9e ! <code>concatener</code> renvoie  une nouvelle liste chain\u00e9e qui a copi\u00e9 les valeurs de <code>c1</code> avant de les lier \u00e0 celles de <code>c2</code>.</p> <p></p><p> </p> <p></p><pre><code>def concatenerI(c1, c2) :\n    chainon = c1\n    while chainon.suivant != None :\n        chainon = chainon.suivant\n    chainon.suivant = c2\n    return c1\n</code></pre> Attention ! Dans cette solution, <code>c1</code> est modifi\u00e9e !  <p> </p> <p>ET C'EST UNE TRES MAUVAISE IDEE</p> <p>Imaginons qu'on ex\u00e9cute deux fois la concat\u00e9nation <code>concatenerI(c1, c2)</code>, puis qu'on demande un affichage de <code>c1</code>.</p> <p>La premi\u00e8re concat\u00e9nation va donner le sch\u00e9ma ci-dessus, la chaine <code>c1</code> ayant pour dernier chainon le dernier chainon de <code>c2</code>. A l'ex\u00e9cution de la deuxi\u00e8me concat\u00e9nation, il n'y aura pas de cr\u00e9ation de nouvelle chaine, mais simplement la modification du dernier chainon de l'actuel <code>c1</code> vers le premier \u00e9l\u00e9ment de <code>c2</code>, soit... une boucle menant du dernier \u00e9l\u00e9ment de <code>c2</code> vers le premier de <code>c2</code> :</p> <p></p><p> </p> <p>La chaine obtenue ne poss\u00e8de plus de fin (jamais elle ne pointe vers <code>None</code>). La m\u00e9thode <code>__str__</code> effectuant un appel r\u00e9cursif dont le cas de base correspond au fait de pointer vers <code>None</code>, on aura alors une erreur de type <code>RecursionError: maximum recursion depth exceeded</code>, puisqu'il est devenu impossible de passer par le cas de base.</p> Un cas limite : renverser la liste <p>Comment faire pour renverser une liste chain\u00e9e ? Sachant que nous avons vu des proc\u00e9d\u00e9s r\u00e9cursif pour les questions pr\u00e9c\u00e9dentes, nous sommes tenter d'en utiliser un aussi pour ce cas, par exemple en s\u00e9lectionnant le premier chainon et en le concat\u00e9nant \u00e0 la liste renvers\u00e9e de la suite de la chaine, le cas de base \u00e9tant celui d'une liste vide, auquel cas on renvoie cette liste :</p> <pre><code>def renverser(chaine) :\n    if chaine == None :\n        return None\n    else :\n        return concatener(renverser(chaine.suivant), Chainon(chaine.valeur, None))\n</code></pre> <p>Cependant cette solution n'est pas efficace ! En effet, \u00e0 chaque appel de <code>renverser</code>, on fait aussi appel \u00e0 la fonction <code>concatener</code> qui parcoure la totalit\u00e9 de la chaine, \u00e0 part un \u00e9l\u00e9ment. La complexit\u00e9 devient alors quadratique ! </p> <p>La r\u00e9cursivit\u00e9 n'est pas toujours la meilleure solution ! Mais parfois elle l'est quand m\u00eame !</p> <p>On va don passer en it\u00e9ratif, surtout qu'il est facile d'attacher un chainon en t\u00eate d'une chaine d\u00e9j\u00e0 constitu\u00e9e :</p> <pre><code>def renverser(chaine) :\n    reverse = None\n    c= chaine\n    while c != None :\n        reverse = Chainon(c.valeur, reverse)\n        c = c.suivant\n    return reverse\n</code></pre> <p>La complexit\u00e9 est celle du parcours d'une chaine compl\u00e8te, donc en \\(\\mathbb{O}(n)\\).</p>"},{"location":"NSI/Terminale/C03/ListesChainees/#modification-de-listes-chainees","title":"Modification de listes chain\u00e9es","text":"<p>Pourquoi se casser la t\u00eate ?</p> <p>\u00c9liminons tout de suite une possibilit\u00e9 : bien entendu, en Python, il est possible de modifier directement un attribut, donc la modification d'une valeur d'une liste chain\u00e9e est assez \u00e9vidente. Par exemple, les lignes suivantes : </p><pre><code>chaine = Chainon(21, Chainon(15, Chainon( 45, None)))\nchaine.suivant.valeur = 33\n</code></pre> modifient la valeur du deuxi\u00e8me \u00e9l\u00e9ment de la chaine, qui devient <code>21 -&gt; 33 -&gt; 45 -&gt; None</code>. <p>Cependant, cette possibilit\u00e9 n'est pas toujours possible dans tous les langages, et de toutes fa\u00e7ons cette mani\u00e8re de modifier ne correspond pas \u00e0 la logique de construction d'une liste chain\u00e9e.</p> <p>On va donc pr\u00e9f\u00e9rer passer \u00e0 des modifications directe des chainons.</p> <p>Exercice 3 : Insertion d'un chainon</p> \u00c9nonc\u00e9Solution <p>Cr\u00e9er une fonction <code>inserer(v, n, chaine)</code> qui renvoie la liste chain\u00e9e dans laquelle on a ins\u00e9r\u00e9 ins\u00e8re l'\u00e9l\u00e9ment <code>v</code> \u00e0 la position <code>n</code> dans la liste <code>chaine</code> pass\u00e9e en argument.</p> <p>Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction :</p> <p></p><p> </p> <pre><code>def inserer(v, n, chaine) :\n\"\"\" Insere un chainon de valeur v en position n dans \n    la liste chain\u00e9e chaine.\n    \"\"\"\n    if n&lt;0 :\n        raise IndexError(\"Invalid index\")\n    if n == 0 or chaine == None:\n        return Chainon(v, chaine)\n    else :\n        return Chainon(chaine.valeur, inserer(v, n-1, chaine.suivant))\n</code></pre> <p>Exercice 4 : Suppression d'un chainon</p> \u00c9nonc\u00e9Solution <p>Cr\u00e9er une fonction <code>supprime(n, chaine)</code> qui supprime l'\u00e9l\u00e9ment \u00e0 la position <code>n</code> dans la liste pass\u00e9e en argument.</p> <p>Le sch\u00e9ma suivant doit pouvoir vous aider \u00e7\u00e0 construire l'algorithme de cette fonction :</p> <p></p><p> </p> <pre><code>def supprimer(n, chaine) :\n\"\"\" Supprime le chainon en position n de la liste\n    chain\u00e9e chaine.\"\"\"\n    if chaine == None or n&lt;0:\n        raise IndexError(\"Invalid index\")\n    if n == 0  :\n        return chaine.suivant\n    else :\n        return Chainon(chaine.valeur, supprimer(n-1, chaine.suivant))\n</code></pre>"},{"location":"NSI/Terminale/C03/ListesChainees/#quelques-exercices-supplementaires","title":"Quelques exercices suppl\u00e9mentaires","text":"<p>Nous voici avec une structure correcte, permettant de travailler sur des listes chain\u00e9es. Nous allons maintenant augmenter notre potentiel d'action avec de telles listes :</p> <p>Exercice 5 : Cr\u00e9ation \u00e0 partir d'une liste Python</p> \u00c9nonc\u00e9Solutions <p>Cr\u00e9er une fonction <code>creer_depuis_tab(tab)</code> qui cr\u00e9e une liste chain\u00e9e depuis un tableau donn\u00e9 en argument.</p> <p>Par exemple :</p> <ul> <li><code>creer_depuis_tab([12, 15, 17])</code> cr\u00e9e la liste chain\u00e9e <code>12 -&gt; 15 -&gt; 17 -&gt; None</code> ;</li> <li><code>creer_depuis_tab([])</code> cr\u00e9e un objet <code>None</code> ;</li> <li><code>creer_depuis_tab([42])</code> cr\u00e9e une liste chain\u00e9e <code>42 -&gt; None</code>.</li> </ul> <p>Il existe de nombreuses possibilit\u00e9s, et toutes ne sont pas \u00e9quivalentes en terme de complexit\u00e9 (la V4 ci-dessous est beaucoup moins efficace).</p> It\u00e9rative Pythonesque avec <code>reversed</code>It\u00e9rative avec indicesR\u00e9cursive avec slices <pre><code>def creer_depuis_tab(tab) :\n\"\"\"Version pythonesque avec reversed\"\"\"\n    LC = None\n    for e in reversed(tab) :\n        LC = Chainon(e, LC)\n    return LC\n</code></pre> <pre><code>def creer_depuis_tab(tab) :\n\"\"\"Version avec calcul de l'indice\"\"\"\n    LC = None\n    l = len(tab)\n    for i in range(len(tab)):\n        LC = Chainon(tab[l-1-i], LC)\n    return LC\n</code></pre> <pre><code>def creer_depuis_tab(tab) :\n\"\"\"Version r\u00e9cursive\"\"\"\n    if  tab == [] :\n        return None\n    else :\n        return Chainon(tab[0], creer_depuis_tabV3(tab[1:]))\n</code></pre> <p>Exercice 6 :  Chercher le nombre d'occurrences</p> \u00c9nonc\u00e9Solution <p>Cr\u00e9er une fonction <code>occurrences(valeur, chaine)</code> qui renvoie le nombre d\u2019occurrence de <code>valeur</code> dans la liste chain\u00e9e <code>chaine</code>.</p> <p>Par exemple :</p> <ul> <li><code>occurrences(12, chaine)</code> devra renvoyer 3 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>;</li> <li><code>occurrences(27,chaine)</code> devra renvoyer 0 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>;</li> <li><code>occurrences(42,chaine)</code> devra renvoyer 1 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>.</li> </ul> <p>A venir !</p> <p>Exercice 7 : Trouver la premi\u00e8re occurrence</p> \u00c9nonc\u00e9Solution <p>Cr\u00e9er une fonction <code>premiere_occurrence(valeur, chaine)</code> qui renvoie l'indice de la premi\u00e8re occurrence de <code>valeur</code> dans la liste chain\u00e9e <code>chaine</code>. Si <code>valeur</code>n'est pas dans <code>chaine</code>, la fonction devra renvoyer <code>-1</code>. </p> <p>Par exemple :</p> <ul> <li><code>premiere_occurrence(12, chaine)</code> devra renvoyer 0 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>;</li> <li><code>premiere_occurrence(27,chaine)</code> devra renvoyer -1 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>;</li> <li><code>premiere_occurrence(42,chaine)</code> devra renvoyer 3 si la chaine est <code>12 -&gt; 35 -&gt; 12 -&gt;42 -&gt; 12 -&gt;35 -&gt; None</code>.</li> </ul> <p>A venir !</p> <p>Exercice 8 : chaines identiques</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>identique(c1, c2)</code> qui renvoie <code>True</code> si les deux chaines contiennent les m\u00eames valeurs dans le m\u00eame ordre, et <code>False</code> sinon.</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C03/ListesChainees/#encapsulation","title":"Encapsulation","text":"<p>On va d\u00e9sormais encapsuler l'impl\u00e9mentation pr\u00e9c\u00e9dente dans une autre classe, nomm\u00e9e <code>ListeC</code> dont l'interface est la suivante :</p> <ol> <li>la construction d'un objet <code>ListeC</code> vide correspondre \u00e0 un objet <code>None</code>;</li> <li>une m\u00e9thode <code>is_empty</code> doit renvoyer un bool\u00e9en correspondant au statut vide ou non vide de la liste ;</li> <li>une m\u00e9thode <code>push</code> permet d'ajouter une valeur en t\u00eate de la liste ;</li> <li>la m\u00e9thode <code>__str__</code> doit renvoyer une chaine correcte (telle que celle de la classe <code>Chainon</code>) ;</li> <li>l'appel \u00e0 la fonction <code>len</code> doit renvoyer la longueur de la liste ;</li> <li>on doit pouvoir atteindre le i-\u00e8me \u00e9l\u00e9ment d'un objet <code>lc</code>par l'interm\u00e9diaire de <code>lc[i]</code> ;</li> <li>l'op\u00e9rateur <code>+</code> utilis\u00e9 entre deux objets de type <code>ListeC</code> doit renvoyer un nouvel objet cr\u00e9e par concat\u00e9nation.</li> </ol> <p>Ainsi, un utilisateur du module cr\u00e9e n'aura pas \u00e0 se pr\u00e9occuper des diff\u00e9rences d'impl\u00e9mentations pr\u00e9sent\u00e9es dans la partie pr\u00e9c\u00e9dente :</p> <p>M\u00e9thode constructeur <code>__init__</code> :</p> AnalyseCode <p>Un objet <code>ListeC</code> ne contient qu'un seul attribut : la t\u00eate de la liste. Soit c'est un objet de type <code>Chainon</code>, soit c'est l'objet <code>None</code>. La m\u00e9thode <code>__init__</code> ne doit donc qu'initialiser un attribut <code>head</code> \u00e0 la valeur <code>None</code>.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n</code></pre> <p>M\u00e9thode <code>is_empty</code> :</p> AnalyseCode <p>si la t\u00eate est de type <code>None</code>, on renvoie <code>True</code>, sinon <code>False</code></p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n</code></pre> <p>M\u00e9thode <code>push</code> :</p> AnalyseCode <p>Comme on l'a vu plusieurs fois, une liste chain\u00e9e se construit par ajouts successifs d'\u00e9l\u00e9ments en t\u00eate de la liste.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n\n    def push(self, v) :\n        self.head = Chainon(v, self.head)\n</code></pre> <p>M\u00e9thode <code>__str__</code> :</p> AnalyseCode <p>Rien de particulier, il suffit de renvoyer la chaine de caract\u00e8res correspondant \u00e0 la t\u00eate.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n\n    def push(self, v) :\n        self.head = Chainon(v, self.head)\n\n    def __str__(self) :\n        return str(self.head)\n</code></pre> <p>M\u00e9thode <code>__len__</code> :</p> AnalyseCode <p>La fonction built-in <code>len</code> fait appel \u00e0 la m\u00e9thode <code>__len__</code> de l'objet pass\u00e9 en argument. Il suffit donc de cr\u00e9er une telle m\u00e9thode, en r\u00e9utilisant la fonction <code>longueur</code> d\u00e9j\u00e0 cr\u00e9e.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n\n    def push(self, v) :\n        self.head = Chainon(v, self.head)\n\n    def __str__(self) :\n        return str(self.head)\n\n    def __len__(self) :\n        if self.head == None :\n            return 0\n        else :\n            return longueur(self.head)\n</code></pre> <p>Acc\u00e8s direct au i-\u00e8me \u00e9l\u00e9ment :</p> AnalyseCode <p>Lorsqu'on veut faire appel aux op\u00e9rateurs <code>[i]</code> pour acc\u00e9der au i-\u00e8me \u00e9l\u00e9ment d'un objet d\u00e9j\u00e0 construit, python regarde si une m\u00e9thode <code>__getitem__</code> a \u00e9t\u00e9 d\u00e9finie pour ce type d'objet.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n\n    def push(self, v) :\n        self.head = Chainon(v, self.head)\n\n    def __str__(self) :\n        return str(self.head)\n\n    def __len__(self) :\n        if self.head == None :\n            return 0\n        else :\n            return longueur(self.head)\n\n    def __getitem__(self, i) :\n        return n_ieme_element(self.head, i)\n</code></pre> <p>Utilisation de <code>+</code></p> AnalyseCode <p>Pour utiliser l'op\u00e9rateur <code>+</code>, il faut impl\u00e9menter une m\u00e9thode <code>__add__</code>. Cette m\u00e9thode doit renvoyer un nouvel objet, donc son impl\u00e9mentation est un peu plus complexe. Par ailleurs, il faut lever une erreur dans le cas o\u00f9 l'objet pass\u00e9 en argument n'est pas de type <code>ListeC</code>.</p> <pre><code>class ListeC :\n\"\"\"Classe permettant de repr\u00e9senter une liste chain\u00e9e, ou chaque chainon est un objet de classe Chainon\"\"\"\n\n    def __init__(self) :\n        self.head = None\n\n    def is_empty(self) :\n        return self.head == None\n\n    def push(self, v) :\n        self.head = Chainon(v, self.head)\n\n    def __str__(self) :\n        return str(self.head)\n\n    def __len__(self) :\n        if self.head == None :\n            return 0\n        else :\n            return longueur(self.head)\n\n    def __getitem__(self, i) :\n        return n_ieme_element(self.head, i)\n\n    def __add__(self, other) :\n        if not isinstance(other, ListeC) :\n            raise TypeError(f\"Unable to add ListeC object with {type(other)} object\")\n        result = ListeC()\n        result.head = concatener(self.head, other.head)\n        return result\n</code></pre> <p>Une fois cette classe impl\u00e9ment\u00e9e, on peut l'utiliser aussi simplement qu'un objet de type <code>list</code> de python :</p> <pre><code>&gt;&gt;&gt; l1 = ListeC()\n&gt;&gt;&gt; l1\n&lt;__main__.ListeC object at 0x033A8690&gt;\n&gt;&gt;&gt; l1.push(12)\n&gt;&gt;&gt; l1.push(15)\n&gt;&gt;&gt; l1.push(42)\n&gt;&gt;&gt; print(l1)\n42-&gt;15-&gt;12-&gt;None\n&gt;&gt;&gt; len(l1)\n3\n&gt;&gt;&gt; l1.is_empty()\nFalse\n&gt;&gt;&gt; l2 = ListeC()\n&gt;&gt;&gt; l2.push (43)\n&gt;&gt;&gt; l2.push (27)\n&gt;&gt;&gt; l2.push (-5)\n&gt;&gt;&gt; print(l1+l2)\n42-&gt;15-&gt;12-&gt;-5-&gt;27-&gt;43-&gt;None\n&gt;&gt;&gt; print(l2+l1)\n-5-&gt;27-&gt;43-&gt;42-&gt;15-&gt;12-&gt;None\n&gt;&gt;&gt; l1[2]\n12\n&gt;&gt;&gt; l2[0]\n-5\n</code></pre> Prolonger le travail \u00c9nonc\u00e9Solution <p>Ajouter \u00e0 la classe <code>ListeC</code> les m\u00e9thodes suivantes</p> <ul> <li><code>pop</code> : qui supprime soit la t\u00eate de la liste si aucun argument n'est pass\u00e9 (<code>l1.pop()</code>, soit l'\u00e9l\u00e9ment d'indice donn\u00e9 si un indice est pass\u00e9 en argument (<code>l1.pop(2)</code>) ;</li> <li><code>insert(v,i)</code> qui ins\u00e8re dans la liste la valeur <code>v</code> \u00e0 la position <code>i</code>.</li> </ul> <p>A venir !</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/","title":"Piles et files","text":""},{"location":"NSI/Terminale/C03/Piles_et_files/#piles-et-files","title":"Piles et files","text":""},{"location":"NSI/Terminale/C03/Piles_et_files/#definitions-et-exemples","title":"D\u00e9finitions et exemples","text":""},{"location":"NSI/Terminale/C03/Piles_et_files/#piles","title":"Piles","text":"<p>D\u00e9finition</p> <p>Une pile (stack en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion :</p> <ul> <li>un objet est ajout\u00e9 toujours en haut de la pile (empiler);</li> <li>quand on supprime un objet, il s'agit toujours du dernier objet ajout\u00e9 (d\u00e9piler).</li> </ul> <p>On associe \u00e0 cette structure l'image d'une pile d'assiettes :</p> <p></p><p> </p> <p>Un tel type de structure est souvent appel\u00e9 :</p> <ul> <li>Dernier entr\u00e9, premier sorti (DEPS) en fran\u00e7ais ;</li> <li>Last in, first out (LIFO) en anglais.</li> </ul> <p>Interface</p> <p>Pour d\u00e9finir l'interface d'un objet de type pile, nous supposerons d'abord que les \u00e9l\u00e9ments de la pile sont tous du m\u00eame type (la pile est homog\u00e8ne).</p> <p>Pour parler d'une pile d'\u00e9l\u00e9ments de type <code>T</code>, on utilisera la notation <code>Pile[T]</code>.</p> <p>L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une pile vide, empiler (push en anglais), d\u00e9piler (pop en anglais), et tester la vacuit\u00e9 d'une pile.</p> fonction description <code>creer_pile() -&gt; Pile[T]</code> cr\u00e9e une pile vide <code>est_vide(p : Pile[T]) -&gt; bool</code> renvoie <code>True</code> si l'objet <code>p</code> de type <code>Pile[T]</code> est vide, <code>False</code> sinon. <code>empiler(e : T, p : Pile[T]) -&gt; None</code> ajoute l'\u00e9l\u00e9ment <code>e</code> de type <code>T</code> au sommet de la pile <code>p</code>. <code>d\u00e9piler(p : Pile[T]) -&gt; e : T</code> retire et renvoie l'\u00e9l\u00e9ment <code>e</code> de type <code>T</code> situ\u00e9 au sommet de la pile <code>p</code>. <p>Situations utilisant des piles</p> Bouton retour dans un navigateurPile d'appels d'une fonction r\u00e9cursiveFonction \u00ab Annuler la frappe \u00bb d'un traitement de texte <p>Lors d'une navigation web, on utilise une pile pour stocker les diff\u00e9rentes pages visit\u00e9es les unes apr\u00e8s les autres. Le bouton de retour a pour fonction de d\u00e9piler la pile ainsi constitu\u00e9e.</p> <p>Par exemple : </p><p> </p> <p>Une pile est cr\u00e9e lors des diff\u00e9rents appels r\u00e9cursifs d'une fonction, et cette pile est d\u00e9pil\u00e9e \u00e0 chaque retour de fonction.</p> <p>Par exemple, avec la fonction factorielle : </p><p> </p> <p>De la m\u00eame mani\u00e8re que pour le bouton retour d'une page web, les modifications apport\u00e9es dans un traitement de texte sont stock\u00e9es dans une pile. L'appui sur Ctrl + Z a pour effet de d\u00e9piler,  et donc de r\u00e9tablir le texte \u00e0 la situation pr\u00e9c\u00e9dente sauvegard\u00e9e dans la pile.</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/#files","title":"Files","text":"<p>D\u00e9finition</p> <p>Une file (queue en anglais) est une structure de donn\u00e9e permettant de stocker un ensemble d'objets tout en respectant certaines r\u00e8gles d'insertion et de d\u00e9l\u00e9tion :</p> <ul> <li>un objet est ajout\u00e9 toujours \u00e0 la fin de la file (enfiler);</li> <li>quand on supprime un objet, il s'agit toujours du premier objet de la file (d\u00e9filer).</li> </ul> <p>On associe \u00e0 cette structure l'image d'une file de personnes faisant la queue :   </p> <p></p><p> </p> <p>Une file est particuli\u00e8rement adapt\u00e9e aux {traitements s\u00e9quentiels}.</p> <p>Un tel type de structure est souvent appel\u00e9 :</p> <ul> <li>Premier entr\u00e9, premier sorti (PEPS) en fran\u00e7ais ;</li> <li>First in, first out (FIFO) en anglais.</li> </ul> <p>Interface</p> <p>Pour d\u00e9finir l'interface d'un objet de type file, nous supposerons d'abord que les \u00e9l\u00e9ments de la file sont tous du m\u00eame type (la file est homog\u00e8ne).</p> <p>Pour parler d'une file d'\u00e9l\u00e9ments de type <code>T</code>, on utilisera la notation <code>File[T]</code>.</p> <p>L'interface sera simple puisque seulement 4 fonctions sont n\u00e9cessaires : cr\u00e9ation d'une file vide, enfiler (enqueue en anglais), d\u00e9filer (dequeue en anglais), et tester la vacuit\u00e9 d'une file.</p> fonction description <code>creer_file() -&gt; File[T]</code> cr\u00e9e une pile vide <code>est_vide(f : File[T]) -&gt; bool</code> renvoie <code>True</code> si l'objet <code>f</code> de type <code>File[T]</code> est vide, <code>False</code> sinon. <code>enfiler(e : T, f : File[T]) -&gt; None</code> ajoute l'\u00e9l\u00e9ment <code>e</code> de type <code>T</code> \u00e0 la fin de la file <code>f</code>. <code>defiler(f : File[T]) -&gt; e : T</code> retire et renvoie l'\u00e9l\u00e9ment <code>e</code> de type <code>T</code> situ\u00e9 au d\u00e9but de la file <code>f</code>. <p>Situations utilisant une file</p> Jeu de BatailleServeurs d'impressionsM\u00e9moire tampon (buffers) <p>Dans un jeu de bataille, chaque joueur poss\u00e8de une file de carte. On d\u00e9file chaque paquet, compare les cartes, et le vainqueur enfile les cartes r\u00e9colt\u00e9es dans son paquet, jusqu'\u00e0 ce qu'un des joueurs ait une file vide.</p> <p>Les serveurs d'impression traitent les requ\u00eates dans l'ordre dans lequel elles arrivent, et les ins\u00e8rent dans une file d'attente (dite aussi queue ou spool), lorsque d'autres travaux sont en ex\u00e9cution.</p> <p>Une m\u00e9moire tampon, ou buffer, est une zone de m\u00e9moire vive qui va \u00eatre utilis\u00e9e pour stocker des donn\u00e9es circulant entre deux p\u00e9riph\u00e9riques ne fonctionnant pas \u00e0 la m\u00eame vitesse, par exemple entre la connexion internet et le flux vid\u00e9o :</p> <ul> <li>si la vitesse de connexion est sup\u00e9rieure au d\u00e9bit vid\u00e9o, le buffer va se remplir des donn\u00e9es vid\u00e9o, et le lecteur vid\u00e9o les lira dans leur ordre d'arriv\u00e9e (PEPS) ;</li> <li>si le lecteur vid\u00e9o constate une chute du d\u00e9bit - il n'a plus de donn\u00e9es \u00e0 lire, il va attendre que la file du buffer atteigne une certaine taille afin de relancer une lecture vid\u00e9o plus fluide - c'est le buffering.</li> </ul>"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementations-dune-pile","title":"Impl\u00e9mentations d'une Pile","text":""},{"location":"NSI/Terminale/C03/Piles_et_files/#a-partir-dune-liste-python","title":"\u00c0 partir d'une liste python","text":"<p>Impl\u00e9mentation \u00e0 partir du type <code>list</code></p> \u00c9nonc\u00e9Une solution <p>Compl\u00e9ter le code suivant afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles, en utilisant le type <code>list</code> de python:</p> <pre><code>class Pile :\n    def __init__(self) :\n        ...\n\n    def est_vide(self) :\n        ...\n\n    def empiler(self, v) :\n        ...\n\n    def depiler(self) :\n        ...\n</code></pre> <pre><code>class Pile :\n    def __init__(self) :\n        self.p = []\n\n    def est_vide(self) :\n        return self.p == []\n\n    def empiler(self, v) :\n        self.p.append(v)\n\n    def depiler(self) :\n        return self.p.pop()\n</code></pre> <p>Un code simple et efficace ?</p> <p>Certes la construction de code effectu\u00e9e est simple, et ne pr\u00e9sente aucune difficult\u00e9. Cependant certains m\u00e9canismes du type <code>list</code> en python sont cach\u00e9s, comme par exemple l'allocation dynamique de m\u00e9moire. Cette allocation se fait \u00e0 la cr\u00e9ation, puis quand la lite d\u00e9passe certaines valeurs (d\u00e9finies sp\u00e9cifiquement dans la doc : 0, 4, 8, 16, 25, 35, 46, 58, 72, 88... voir ici), la r\u00e9servation m\u00e9moire pour la liste est augment\u00e9e puis la liste originelle est copi\u00e9e dans le nouvel emplacement. Cela g\u00e9n\u00e8re bien entendu une complexit\u00e9 en temps comme en m\u00e9moire inutile dans la plupart des cas.</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/#a-partir-dune-liste-chainee","title":"\u00c0 partir d'une liste chain\u00e9e","text":"<p>Une des possibilit\u00e9s les plus simples pour impl\u00e9menter une pile est d'utiliser les liste chain\u00e9e. En effet, dans une liste chain\u00e9e nous pouvons ins\u00e9rer et supprimer facilement la t\u00eate de la liste, ce qui correspondra au sommet de la pile, et nous n'aurons plus le probl\u00e8me d'agrandissement g\u00e9n\u00e9r\u00e9 par le type <code>list</code> de python.</p> <p>Impl\u00e9mentation par les listes chain\u00e9es</p> Enonc\u00e9Une solution <p>Compl\u00e9ter le code suivant (avec le nom de module utilisant la classe <code>ListeC</code> du cours pr\u00e9c\u00e9dent) afin qu'il corresponde \u00e0 l'interface d\u00e9finie pour les piles :</p> <pre><code>from mon_fichier import ListeC\n\nclass Pile :\n\"\"\"interface de pile\"\"\"\n    def __init__(self) :\n        ...\n\n    def est_vide(self) :\n        ...\n\n    def empiler(self, v) :\n        ...\n\n    def depiler(self) :\n        ...\n</code></pre> <p>A venir !</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementations-dune-file","title":"Impl\u00e9mentations d'une File","text":""},{"location":"NSI/Terminale/C03/Piles_et_files/#implementation-par-une-liste-chainee-mutable","title":"Impl\u00e9mentation par une liste chain\u00e9e mutable","text":"<p>Impl\u00e9mentation par liste chain\u00e9e mutable</p> <p>Bien que nous ayons vu qu'utiliser des listes mutables puisse \u00eatre parfois une mauvaise id\u00e9e, il est cependant possible de les utiliser, du moins dans une version adapt\u00e9e, afin de construire un objet correspondant \u00e0 l'interface d\u00e9finie pour les files. </p> <p>Pour cela il faudra utiliser deux attributs <code>tete</code> et <code>queue</code>, qui repr\u00e9senteront respectivement le chainon de d\u00e9but et le chainon de fin de la file.</p> <p></p><p> </p> <p>D\u00e9filer consistera \u00e0 changer la t\u00eate en sortant la valeur :</p> <p></p><p> </p> <p>Enfiler consistera \u00e0 changer la queue :</p> <p></p><p> </p> Enonc\u00e9Solution <p>Compl\u00e9ter le code suivant pour qu'il respecte l'interface d\u00e9finie pour une file :</p> <pre><code>class Chainon\n    def __init__(self, valeur, suivant) :\n        self.valeur = valeur\n        self.suivant = suivant\n\nclass File :\n\"\"\"interface de file\"\"\"\n    def __init__(self) :\n        self.tete = None                \n        self.queue = None\n\n    def est_vide(self) :\n        ...\n\n    def enfiler(self, v) :\n        ...\n\n    def defiler(self) :\n        ...\n</code></pre> <p>A venir !</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/#implementation-par-deux-piles","title":"Impl\u00e9mentation par deux piles","text":"<p>Une autre impl\u00e9mentation : Utiliser deux piles</p> <p>Une impl\u00e9mentation totalement diff\u00e9rente de la premi\u00e8re est d'utiliser deux piles, une pile d'entr\u00e9es et une pile de sorties.</p> <p>Le principe est celui d'un jeu de carte dans lequel il y a une d\u00e9fausse :</p> <ul> <li>Le paquet de carte principal est le paquet de sortie : c'est la pile de sortie. On tire une carte \u00e0 partir de cette pile.</li> <li>La d\u00e9fausse est compos\u00e9e de cartes jou\u00e9es face ouverte, pos\u00e9es sur le sommet du paquet de d\u00e9fausse. C'est la pile d'entr\u00e9es. </li> <li>Quand le paquet principal est vide, on prend la d\u00e9fausse et sans la m\u00e9langer on la retourne et elle prend la place du paquet principal.</li> </ul> <p></p><p> </p> \u00c9nonc\u00e9Solution <p>Compl\u00e9ter le code suivant pour qu'il corresponde \u00e0 l'interface d'une file telle que nous l'avons d\u00e9fini plus haut :</p> <pre><code>class File :\n    def __init__(self) :\n        self.entrees = Pile()\n        self.sorties = Pile()\n\n    def est_vide(self) :\n        ...\n\n    def enfiler(self, v) :\n        ...\n\n    def defiler(self) :\n        ...\n</code></pre> <p>A venir !</p>"},{"location":"NSI/Terminale/C03/Piles_et_files/#exercices","title":"Exercices","text":"<p>Ajouter des m\u00e9thodes</p> \u00c9nonc\u00e9Solutions <p>Compl\u00e9ter le code de la classe <code>Pile</code> construite \u00e0 partir d'une liste chain\u00e9e avec les m\u00e9thodes suivantes :</p> <ol> <li>Une m\u00e9thode <code>consulter</code> permettant de connaitre l'\u00e9l\u00e9ment au sommet de la pile sans le d\u00e9piler.</li> <li>Une m\u00e9thode <code>vider</code> permettant de vider la pile de ses \u00e9l\u00e9ments</li> <li>Une m\u00e9thode <code>taille</code> renvoyant la taille de la pile. Quelle est la complexit\u00e9 utilis\u00e9e ?</li> </ol> <p>A venir !</p> <p>Am\u00e9liorer le calcul de la taille</p> \u00c9nonc\u00e9Solution <p>Pour \u00e9viter le probl\u00e8me rencontr\u00e9 dans l'exercice pr\u00e9c\u00e9dent, nous allons modifier la structure de la classe <code>Pile</code> . Nous allons ajouter un attribut <code>_taille</code> \u00e0 la classe, qui contiendra en permanence la taille de la pile courante.</p> <p>Quelles m\u00e9thodes modifier ? Quelle est alors la complexit\u00e9 ?</p> <p>A venir</p> <p>Calculatrice \u00e0 notation polonaise invers\u00e9e</p> <p>La notation polonaise invers\u00e9e (NPI ou RPN en anglais) permet d'\u00e9crire de fa\u00e7on non ambig\u00fce les formules arithm\u00e9tiques sans utiliser de parenth\u00e8ses.</p> <p>Par exemple, le calcul \\(((1 + 2) \\times 4) + 3\\) est not\u00e9 en NPI :</p> \\[ 1~~2~~+~~4~~\\times~~3~~+  \\] <p>Le calcul \\(((1 + 2) \\times 4) + 3\\) peut se lire intuitivement :</p> <ul> <li>je mets 1, (\\(1\\)) ;</li> <li>j'ajoute 2, (\\(2 +\\)) ;</li> <li>je multiplie par 4, (\\(4 \\times\\)) ;</li> <li>j'ajoute 3. (\\(3 +\\)).</li> </ul> <p>Ce qui donne la notation pr\u00e9c\u00e9dente.</p> <p>On peut tester ce calcul et cette notation sur le simulateur omega de la calculatrice Numworks.</p> <p>La <code>NPI</code> est dites invers\u00e9e car elle d\u00e9rive de la notation polonaise pr\u00e9sent\u00e9e en 1924 par le math\u00e9maticien polonais Jan \u0141ukasiewicz,  et elle s\u2019en diff\u00e9rencie par l\u2019ordre des termes, les op\u00e9randes y \u00e9tant pr\u00e9sent\u00e9s avant les op\u00e9rateurs.</p> <p>La structure de calcul en NPI est utilise une pile de la mani\u00e8re suivante :</p> <ul> <li>quand on rencontre un nombre, on l'empile ;</li> <li>quand on rencontre un op\u00e9rateur (\\(+,~\\times~,-~,...\\)) on d\u00e9pile les deux nombres au sommet de la pile et on effectue l'op\u00e9ration,  le r\u00e9sultat \u00e9tant de nouveau empil\u00e9.</li> </ul> <p>Si le calcul est correctement \u00e9crit, il y a toujours au moins deux nombres dans la pile quand on rencontre un op\u00e9rateur, et il reste un seul et unique nombre dans cette pile quand l'expression  a \u00e9t\u00e9 enti\u00e8rement lue.</p> \u00c9nonc\u00e9 <p>Cr\u00e9er une fonction <code>NPI</code> prenant en argument un calcul en NPI repr\u00e9sent\u00e9 sous la forme d'une chaine de caract\u00e8res dont les \u00e9l\u00e9ments (op\u00e9randes et op\u00e9rateurs) sont s\u00e9par\u00e9s d'un espace, et qui renvoie le r\u00e9sultat du calcul.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; NPI(\"7 3 * 11 + 8 /\")\n4\n</code></pre> <p>Remarque : on se limitera aux op\u00e9rateurs classiques <code>+, -, *, /</code>, mais rien n'emp\u00eache les plus courageux d'essayer de programmer les op\u00e9rateurs <code>sqrt</code> et <code>**</code>.</p>"},{"location":"NSI/Terminale/C03/ToursHanoi/","title":"TP : Tours de Hano\u00ef","text":""},{"location":"NSI/Terminale/C03/ToursHanoi/#tp-tour-de-hanoi","title":"TP : Tour de Hano\u00ef","text":""},{"location":"NSI/Terminale/C03/ToursHanoi/#presentation-du-jeu","title":"Pr\u00e9sentation du jeu","text":"<p>Les tours de Hano\u00ef est un jeu de r\u00e9flexion imagin\u00e9 par le math\u00e9maticien fran\u00e7ais \u00c9douard Lucas.</p> <p>Il consiste \u00e0 d\u00e9placer des disques de diff\u00e9rents diam\u00e8tres d'une \u00ab tour de d\u00e9part \u00bb \u00e0 une \u00ab tour d'arriv\u00e9e \u00bb en passant par une \u00ab tour interm\u00e9diaire \u00bb, et ce en un minimum de coups, en respectant les deux r\u00e8gles suivantes :</p> <ul> <li>on ne peut d\u00e9placer qu'un disque \u00e0 la fois ;</li> <li>on ne peut pas placer un disque sur un disque de diam\u00e8tre inf\u00e9rieur.</li> </ul> <p></p> <p>On souhaite \u00e9crire un programme python non-r\u00e9cursif qui utilise une classe <code>Pile</code> telle que d\u00e9finie dans le cours pr\u00e9c\u00e9dent (avec les listes chain\u00e9es), et qui devra :</p> <ol> <li>Permettre de saisir un nombre <code>n</code> de disques.</li> <li>Afficher \u00e0 l'\u00e9cran les diff\u00e9rentes \u00e9tapes pour r\u00e9soudre le probl\u00e8me avec <code>n</code> disques, en pr\u00e9cisant \u00e0 chaque fois le nombre d'\u00e9tapes n\u00e9cessaires.</li> </ol>"},{"location":"NSI/Terminale/C03/ToursHanoi/#algorithme-de-resolution-non-recursif","title":"Algorithme de r\u00e9solution non-r\u00e9cursif","text":"<p>Si on observe de pr\u00e8s le jeu pour un nombre de disques sup\u00e9rieur \u00e0 1, on s'aper\u00e7oit qu'il n'y a que 1 ou 2 d\u00e9placements possibles :</p> <ul> <li>le petit disque peut toujours se d\u00e9placer sur les deux autres tours.</li> <li>si un disque diff\u00e9rent du plus petit peut-\u00eatre d\u00e9plac\u00e9, il n'y a qu'une seule possibilit\u00e9, c'est-\u00e0-dire sur la tour o\u00f9 n'est pas le petit disque.</li> </ul> <p>Un algorithme it\u00e9ratif est donc le suivant :</p> <pre><code>Tant qu'il reste un disque sur la tour de d\u00e9part ou sur la tour interm\u00e9diaire :\n    D\u00e9placer le petit disque d'une tour dans le sens D-&gt;A-&gt;I-&gt;D\n    Si on peut d\u00e9placer un disque autre que le plus petit, alors le d\u00e9placer\n</code></pre> <p>Exemple avec 3 disques</p> Etape 0Etape 1Etape 2Etape 3Etape 4Etape 5Etape 6Etape 7 <p></p> <p>Les trois disques sont sur la tour de d\u00e9part.</p> <p></p> <p>On d\u00e9place le petit disque sur la tour d'arriv\u00e9e (<code>D-&gt;A</code>).</p> <p></p> <p>On d\u00e9place le disque moyen sur la tour interm\u00e9diaire.</p> <p></p> <p>On d\u00e9place le petit disque sur la tour interm\u00e9diaire (<code>A-&gt;I</code>).</p> <p></p> <p>On d\u00e9place le grand disque sur la tour d'arriv\u00e9e.</p> <p></p> <p>On d\u00e9place le petit disque sur la tour de d\u00e9part (<code>I-&gt;D</code>).</p> <p></p> <p>On d\u00e9place le disque moyen sur la tour d'arriv\u00e9e.</p> <p></p> <p>On d\u00e9place le petit disque sur la tour d'arriv\u00e9e (<code>D-&gt;A</code>). L'algorithme s'arr\u00eate.</p>"},{"location":"NSI/Terminale/C03/ToursHanoi/#codage-de-python","title":"Codage de Python","text":"<p>Vous cr\u00e9erez un fichier python vide nomm\u00e9 <code>tour_de_hanoi.py</code>, dans lequel vous effectuerez toutes les \u00e9tapes suivantes :</p>"},{"location":"NSI/Terminale/C03/ToursHanoi/#creation-de-la-classe-chainon","title":"Cr\u00e9ation de la classe Chainon","text":"<p>Cr\u00e9er une classe <code>Chainon</code> repr\u00e9sentant un chainon de liste chain\u00e9e. Cette classe devra :</p> <ul> <li>avoir comme attributs <code>valeur</code>, repr\u00e9sentant la valeur stock\u00e9e dans le chainon, et <code>suivant</code>, repr\u00e9sentant l'objet auquel le chainon est attach\u00e9, objet qui est soit de type <code>Chainon</code>, soit <code>None</code>.</li> <li> <p>avoir comme m\u00e9thode le DUNDERS <code>__str__</code>, renvoyant une chaine de caract\u00e8re d\u00e9finie de la mani\u00e8re suivante, en consid\u00e9rant la liste chain\u00e9e suivante :</p> <p></p> <ul> <li> <p>pour le chainon <code>1</code> de la liste, l'affichage devra \u00eatre :</p> <pre><code>1 &lt;- 2 &lt;- 3\n</code></pre> </li> <li> <p>pour le chainon <code>3</code> de la liste, l'affichage devra \u00eatre simplement :</p> <pre><code>3\n</code></pre> </li> </ul> </li> </ul>"},{"location":"NSI/Terminale/C03/ToursHanoi/#classe-pile","title":"Classe Pile","text":"<p>Vous devrez cr\u00e9er une classe <code>Pile</code>, qui impl\u00e9mente une pile selon l'interface suivante :</p> M\u00e9thode Arguments Valeur de retour Explication <code>__init__</code> aucun aucune Initialise une Pile vide (la t\u00eate est <code>None</code>) <code>est_vide</code> aucun un <code>bool</code> renvoie <code>True si la pile est vide,</code>False`sinon <code>empiler</code> un <code>int</code> aucune ajoute l'\u00e9l\u00e9ment \u00e0 la pile <code>depiler</code> aucun un <code>int</code> enl\u00e8ve l'\u00e9l\u00e9ment du haut de la pile et le renvoie <code>consulter</code> aucun un <code>int</code> renvoie la valeur de l'\u00e9l\u00e9ment en haut de la pile, sans le d\u00e9piler. Si la pile est vide renvoie <code>float(inf)</code>. <code>__str__</code> aucun un <code>str</code> Utilise la m\u00e9thode de la classe <code>Chainon</code>. Si la pile est vide renvoie une chaine vide. <p>On ajoutera par ailleurs un attribut priv\u00e9 <code>_taille</code>, qui devra contenir le nombre d'\u00e9l\u00e9ments actuels de la pile, et \u00eatre modifi\u00e9 en cons\u00e9quence lors des insertions et d\u00e9l\u00e9tions d'\u00e9l\u00e9ments.</p>"},{"location":"NSI/Terminale/C03/ToursHanoi/#classe-hanoigame","title":"Classe HanoiGame","text":"<p>Cette classe est la classe principale du fichier. Elle devra poss\u00e9der les attributs suivants :</p> <ul> <li><code>n</code> : le nombre de disques total</li> <li><code>piles</code> : une liste contenant 3 piles :<ul> <li>celle d'indice <code>0</code> repr\u00e9sente la tour de d\u00e9part ;</li> <li>celle d'indice <code>1</code> repr\u00e9sente la tour interm\u00e9diaire ;</li> <li>celle d'indice <code>2</code> repr\u00e9sente la tour d'arriv\u00e9e.</li> </ul> </li> <li><code>petit_a_bouge</code> : un bool\u00e9en qui changera d'\u00e9tat si le plus petit disque a boug\u00e9 au mouvement pr\u00e9c\u00e9dent</li> <li><code>position_petit</code> : qui contient l'indice correspondant \u00e0 la tour o\u00f9 se trouve le plus petit des disques.</li> </ul> <p>Les diff\u00e9rents disques seront repr\u00e9sent\u00e9s par des entiers entre <code>0</code> et <code>n-1</code>, o\u00f9 <code>n</code> est le nombre total de disques, avec la convention suivante :</p> <ul> <li><code>0</code> est le plus petit disque</li> <li><code>n-1</code> est le plus grand disque.</li> </ul> <p>L'interface de la classe <code>HanoiGame</code> et la suivante :</p> M\u00e9thode Arguments Valeur de retour Explication <code>__init__</code> un <code>int</code> <code>n</code> strictement positif aucune Initialise le jeu en pla\u00e7ant les <code>n</code> disques sur la tour de d\u00e9part <code>show</code> aucun aucun voir le descriptif pr\u00e9cis ci-dessous <code>next_move</code> aucun aucun Effectue le mouvement suivant selon l'\u00e9tat des disques sur les tours (et la valeur de <code>petit_a_bouge</code>) <code>solve</code> un <code>bool</code> <code>verbose</code> initialis\u00e9 \u00e0 <code>True</code> un <code>int</code> Voir le descriptif pr\u00e9cis ci-dessous <ul> <li> <p>m\u00e9thode <code>show</code> :</p> <p>Cette m\u00e9thode doit afficher l'\u00e9tat actuel des trois piles comme l'exemple ci-dessous, pour un jeu \u00e0 3 disques :</p> <p></p><pre><code>D : \nI :  1  &lt;-   2  \nF : 3\n</code></pre> Cet affichage correspond \u00e0 la situation suivante : <p> </p> </li> <li> <p>m\u00e9thode <code>solve</code> :</p> <p>La m\u00e9thode <code>next_move</code> prend en argument optionnel un bool\u00e9en <code>verbose</code> initialis\u00e9 \u00e0 <code>True</code>. Cette m\u00e9thode doit renvoyer un entier correspondant au nombre de d\u00e9placements n\u00e9cessaire pour terminer le jeu (c'est-\u00e0-dire d\u00e9placer l'int\u00e9gralit\u00e9 des disques de la tour de d\u00e9part vers la tour d'arriv\u00e9e).</p> <p>Dans le cas o\u00f9 l'argument <code>verbose</code> est <code>True</code> (ce qui est le cas par d\u00e9faut), cette m\u00e9thode doit en outre afficher l'\u00e9tat des trois tours \u00e0 chaque \u00e9tape de la r\u00e9solution, par exemple comme ci-dessous pour un jeu \u00e0 3 disques :</p> <p></p><pre><code>...\nEtape 4\nD :\nI :  1  &lt;-   2  \nF : 3\n\nEtape 5\nD : 1\nI : 2\nF : 3\n\nEtape 6\nD : 1\nI :\nF :  2  &lt;-   3\n...\n</code></pre> Si l'argument <code>verbose</code> est <code>False</code>, la m\u00e9thode n'affiche rien. </li> </ul>"},{"location":"NSI/Terminale/C03/ToursHanoi/#resolution-recursive","title":"R\u00e9solution r\u00e9cursive","text":""},{"location":"NSI/Terminale/C03/ToursHanoi/#algorithme-recursif","title":"Algorithme r\u00e9cursif","text":"<p>Pour d\u00e9placer une tour de <code>n</code> disques de la tour <code>D</code> \u00e0 la tour <code>A</code>, il faut :</p> Etape 1Etape 2Etape 3Final <p></p> <p>D\u00e9placer <code>n-1</code> disques de la tour <code>D</code> \u00e0 la tour <code>I</code> ;</p> <p></p> <p>D\u00e9placer le dernier disque de la tour <code>D</code> \u00e0 la tour <code>A</code> ;</p> <p></p> <p>D\u00e9placer les <code>n-1</code> disques de la tour <code>I</code> \u00e0 la tour <code>A</code>.</p> <p></p> <p>Les disques sont bien sur la tour d'arriv\u00e9e.</p> <p>Le cas de base est simple : si le jeu ne poss\u00e8de qu'un disque, il suffit de le d\u00e9placer.</p>"},{"location":"NSI/Terminale/C03/ToursHanoi/#code-en-python","title":"Code en Python","text":"<p>On rajoute \u00e0 la classe <code>HanoiGame</code> la m\u00e9thode suivante :</p> <pre><code>def solve_rec(self) :\n        def solve_r(n, d, i, a, nb_move) :\n            if n == 1 :\n                self.piles[a].empiler(...)\n                return 1\n            else :\n                nb_move += solve_r(n-1, d, a, i, 0)\n                self.piles[...].empiler(self.piles[...].depiler())\n                nb_move +=1\n                nb_move += solve_r(...,...,..., ..., 0)\n                return nb_move\n        return solve_r(self.n, 0, 1, 2, 0)\n</code></pre> <p>On a ici une fonction auxiliaire r\u00e9cursive <code>solve</code> qui prend en argument :</p> <ul> <li><code>n</code> le nombre de disques \u00e0 d\u00e9placer ;</li> <li><code>d</code> l'indice de la tour de d\u00e9part du d\u00e9placement ;</li> <li><code>d</code> l'indice de la tour interm\u00e9diaire du d\u00e9placement ;</li> <li><code>a</code> l'indice de la tour d'arriv\u00e9e' du d\u00e9placement ;</li> <li><code>nb_move</code> le nombre de d\u00e9placements actuels.</li> </ul> <p>La m\u00e9thode <code>solve_rec</code> ne fait qu'appeler la fonction <code>solve_r</code> avec les arguments correspondant \u00e0 un d\u00e9placement complet de la tour d'indice <code>0</code> vers la tour d'indice <code>2</code>.</p> <p>A faire</p> <ol> <li>Compl\u00e9ter les pointill\u00e9s du code pr\u00e9c\u00e9dent.</li> <li>Comparer le nombre de d\u00e9placement n\u00e9cessaires avec les m\u00e9thodes it\u00e9ratives et r\u00e9cursives.</li> </ol>"},{"location":"NSI/Terminale/C04/BasesSQL1/","title":"Bases de SQL 1","text":""},{"location":"NSI/Terminale/C04/BasesSQL1/#commandes-de-base-en-sql-creations-de-tables-et-types-de-donnees","title":"Commandes de base en SQL : cr\u00e9ations de tables et types de donn\u00e9es","text":"<p>Une utilisation efficace des bases de donn\u00e9es relationnelles n'est r\u00e9alisable qu'avec un SGBDR (Syst\u00e8me de Gestion de Bases d Donn\u00e9es Relationnelles), c'est-\u00e0-dire un logiciel offrant :</p> <ul> <li>la d\u00e9finition des donn\u00e9es sous forme de relations ;</li> <li>la manipulation des donn\u00e9es par un langage d\u00e9claratif ;</li> <li>l\u2019administration des donn\u00e9es.</li> </ul> <p>Dans ce chapitre, nous nous contenterons d'utiliser de mani\u00e8re sommaire des fonctionnalit\u00e9s de SGBDR offertes :</p> <ul> <li>soit par les notebooks Capytale ;</li> <li>soit par le logiciel portable DB Browser for SQLite ;</li> <li>soit par l'interm\u00e9diaire de modules python.</li> </ul>"},{"location":"NSI/Terminale/C04/BasesSQL1/#du-modele-relationnel-a-la-base-de-donnee-une-premiere-approche","title":"Du mod\u00e8le relationnel \u00e0 la base de donn\u00e9e : une premi\u00e8re approche","text":"<p>SQL (Structured Query Language) est directement inspir\u00e9 du mod\u00e8le relationnel d\u00e9fini dans la partie pr\u00e9c\u00e9dente. Ce langage est standardis\u00e9 par la norme <code>ISO/IEC 9075</code>, dont la derni\u00e8re version date de 2016.</p> <p>La syntaxe du SQL est volontairement verbeuse et proche de l'anglais standard. Nous allons montrer dans les exemples suivants la cr\u00e9ation d'une table, l'insertion d'\u00e9l\u00e9ments ainsi que quelques requ\u00eates simples sur cette base de donn\u00e9e.</p> <p>Une premi\u00e8re approche du SQL</p> <p>Rendez-vous dans le bac-\u00e0-sable SQL(Code <code>4df6-948322</code>) sur Capytale.</p> <ol> <li>Ex\u00e9cutez les 4 premi\u00e8res cellules.</li> <li>Ex\u00e9cutez la cinqui\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ?</li> <li>Ex\u00e9cutez la sixi\u00e8me. Quel est le r\u00e9sultat fournit par cette requ\u00eate ?</li> <li> <p>Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante :  <code>('Brochen', 'Charles', 'charles.brochen@pontrieux.fr', '22260', '13 Rue de Pen Fantan, Pontrieux', '2021-10-11', '012345678910113')</code> Que se passe-t-il ? Pourquoi ?</p> </li> <li> <p>Ajoutez \u00e0 la base de donn\u00e9es l'entit\u00e9 suivante :  <code>('Pavie', 'Auguste', 'auguste.pavie@ggp.fr', '22200', '13 rue Anatole Le Braz, Guingamp', '2021-11-09', '012345678910110')</code>  Que se passe-t-il ? Pourquoi ?</p> </li> <li> <p>Ex\u00e9cutez maintenant une requ\u00eate afin de r\u00e9cup\u00e9rer une table contenant les emails et code postaux des usagers dont la date d'inscription est le 10 Novembre 2021.</p> </li> </ol> <p>Exemple : Cr\u00e9ation de la table <code>usager</code></p> <p>Les lignes de code SQL suivantes permettent la cr\u00e9ation d'une table <code>usager</code>, qui correspond globalement \u00e0 la relation <code>Usager</code> telle que d\u00e9finie par le sch\u00e9ma :</p> <p>Usager(nom String, pr\u00e9nom String, email String, cp String, adresse String, inscription Date, code_barre String)</p> <pre><code>CREATE TABLE usager (nom VARCHAR(90),\nprenom VARCHAR(90),\nemail VARCHAR(60),\ncp VARCHAR(5),\nadresse VARCHAR(90),\ninscription DATE,\ncode_barre CHAR(15) PRIMARY KEY);\n</code></pre> <p>On envoie ici au SGBD un ordre SQL de cr\u00e9ation de table, par l\u2019interm\u00e9diaire de la commande <code>CREATE TABLE</code>. Le nom de la table sera <code>usager</code>. Cette table contiendra des colonnes (ou champs) qui correspondent aux attributs de la relation.</p> <ul> <li>La premi\u00e8re colonne <code>nom</code> est d\u00e9finie comme \u00e9tant du type <code>VARCHAR</code>, c'est-\u00e0-dire chaine de caract\u00e8re, avec une contrainte de longueur maximale de 90 caract\u00e8res. Il en est de m\u00eame pour les 5 premi\u00e8res colonnes, avec diff\u00e9rentes contraintes de longueur.</li> <li>La colonne <code>inscription</code> est d\u00e9finie comme \u00e9tant du type <code>DATE</code>.</li> <li>La derni\u00e8re colonne <code>code_barre</code> est d\u00e9finie comme \u00e9tant du type <code>VARCHAR</code> de longueur maximale 15, auquel on adjoint la contrainte <code>PRIMARY KEY</code>, qui indique simplement qu'il s'agit bien de la cl\u00e9 primaire de la relation.</li> </ul> <p>On remarque que l'ordre se termine par un <code>;</code>.</p> <p>SQL et case des caract\u00e8res</p> <p>SQL est insensible \u00e0 la casse. Il aurait \u00e9t\u00e9 tout aussi efficace d'\u00e9crire <code>create table</code> ou <code>CrEaTE tABlE</code>.</p> <p>De fait certaines r\u00e8gles de bonnes pratiques sont \u00e0 suivre :</p> <ul> <li>les mots r\u00e9serv\u00e9s de SQL sont \u00e9crits en  majuscules ;</li> <li>les attributs sont \u00e9crits en minuscules, ainsi que les noms de tables<sup>1</sup> ;</li> <li>les noms d'attributs et de tables ne pouvant contenir d'espaces, ceux-ci sont remplac\u00e9s par le caract\u00e8re <code>_</code> (underscore).</li> <li>les noms de table sont \u00e9crits au singulier.</li> </ul> <p>Exemple : insertions de lignes</p> <p>Les lignes SQL suivantes permettent l'insertion de trois lignes  dans la table <code>usager</code>, qui correspondent \u00e0 trois entit\u00e9s de la relation <code>Usager</code>.</p> <pre><code>INSERT INTO usager VALUES\n('Pavie', 'Auguste', 'auguste.pavie@ggp.fr', '22200', '13 rue Anatole Le Braz, Guingamp', '2021-11-09', '012345678910111'),\n('Prevert', 'Jacques', 'jacques.prevert@ggp.fr', '22200', '58 Rue de la Trinit\u00e9, Guingamp', '2021-11-10', '012345678910112'),\n('Camus', 'Albert', 'albert.camus@grace', '22205', '2 Rue de Kerpaour, Gr\u00e2ces', '2021-10-09', '012345678910113')\n;\n</code></pre> <p>Chacune des lignes est un tuple, chaque composante correspondant \u00e0 la colonne d\u00e9finie dans l'ordre de cr\u00e9ation de table, dans l'ordre de d\u00e9finition (NB : il existe un moyen d'\u00eatre plus explicite et de s'affranchir de l'ordre, que nous verrons plus tard*).</p> <p>Vous pouvez constater que dans la troisi\u00e8me ligne, l'email n'est pas correctement \u00e9crit. Nous n'avons pour l'instant pas mis de contraintes suppl\u00e9mentaires sur le champ <code>email</code>, donc le SGBD acceptera cette entr\u00e9e comme correcte.</p> <p>Exemple : Premi\u00e8re requ\u00eate</p> <p>Nous allons maintenant interroger cette table par l'interm\u00e9diaire d'une requ\u00eate (query en anglais) : </p> <p></p><pre><code>SELECT nom, prenom\nFROM\nusager;    </code></pre> Cette requ\u00eate renvoie le r\u00e9sultat suivant :  nom prenom Pavie Auguste Prevert Jacques Camus Albert <p>c'est-\u00e0-dire une table avec les attributs <code>nom</code> et <code>prenom</code>.</p> <p>Diff\u00e9rences entre mod\u00e8le relationnel et SQL</p> <p>Formellement, SQL n'est pas aussi strict que le mod\u00e8le relationnel. En effet une table ne doit pas obligatoirement poss\u00e9der une cl\u00e9 primaire.</p> <p>La cons\u00e9quence directe de ce choix est une violation de la contrainte de relation, et il est tout \u00e0 fait possible d'avoir des doublons dans une table, ce qui sera tol\u00e9r\u00e9 par SQL. Mais c'est une mauvaise pratique !</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-de-donnees-en-sql","title":"Types de donn\u00e9es en SQL","text":"<p>Selon le SGBD utilis\u00e9, certaines libert\u00e9s sont prises par rapport aux standards \u00e9dict\u00e9s par l'ISO. On peut n\u00e9anmoins d\u00e9gager des constantes  dans les diff\u00e9rents types utilis\u00e9s </p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-numeriques","title":"Types num\u00e9riques","text":"<p>Types num\u00e9riques</p> <p>De mani\u00e8re g\u00e9n\u00e9rale, le standard SQL d\u00e9finit des types num\u00e9riques repr\u00e9sentants de mani\u00e8re exacte ou approch\u00e9e.</p> nom du type exact/approch\u00e9 description <code>SMALLINT</code> exact Entiers sign\u00e9s sur 16 bits (\\(-32~768\\) \u00e0 \\(32~768\\)) <code>INT</code> ou <code>INTEGER</code> exact Entiers sign\u00e9s sur 32 bits (\\(-2~147~483~647\\) \u00e0 \\(2~147~483~647\\)) <code>BIGINT</code> exact Entiers sign\u00e9s sur 64 bits (\\(\\simeq -9\\times 10^{18}\\) \u00e0 \\(\\simeq 9\\times 10^{18}\\)) <code>DECIMAL(t,f)</code> exact D\u00e9cimal sign\u00e9 de \\(t\\) chiffres dont \\(f\\) apr\u00e8s la virgule <code>REAL</code> approch\u00e9 Flottant sur 32 bits (\\(-3,40\\times 10^{38}\\) \u00e0 \\(3,40\\times 10^{38}\\)) <code>DOUBLE PRECISION</code> approch\u00e9 Flottant sur 64 bits (\\(-1,79\\times 10^{308}\\) \u00e0 \\(1,79\\times 10^{308}\\)) <p>On peut noter le cas particulier du type <code>DECIMAL(t,f)</code>, qui permet du calcul en valeur exacte, par exemple sur des sommes d'argent. Par exemple, l'utilisation du type <code>DECIMAL(5,2)</code> permettra de travailler avec des sommes de \\(-999,99\\) \u20ac \u00e0 \\(999,99\\) \u20ac.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-textes","title":"Types textes","text":"<p>Types textes</p> <p>En SQL, les cha\u00eenes de caract\u00e8res sont d\u00e9limit\u00e9es par des guillemets simples <code>'</code>. Il est possible d'\u00e9chapper un guillemet simple en le doublant, comme par exemple dans <code>'n''oubliez pas d''\u00e9chapper'</code>. Il est possible  d'ins\u00e9rer un caract\u00e8re retour chariot dans une cha\u00eene pour avoir des cha\u00eenes multilignes.</p> nom du type description <code>CHAR(n)</code> Cha\u00eene d'exactement \\(n\\) caract\u00e8res <code>VARCHAR(n)</code> Cha\u00eene d'au plus \\(n\\) caract\u00e8res <code>TEXT</code> Cha\u00eene de taille quelconque <ul> <li>La taille maximale d\u00e9pend du SGBD, mais tous supportent au moins \\(8~000\\) caract\u00e8res. La valeur minimale pour \\(n\\) est 1.</li> <li>Pour le type <code>CHAR(n)</code>, si la cha\u00eene stock\u00e9e est de longueur inf\u00e9rieure \u00e0 \\(n\\), on compl\u00e8te la cha\u00eene \u00e0 droite par le nombre d'espaces n\u00e9cesaires.</li> <li>Le type <code>TEXT</code> est en fait un type <code>VARCHAR</code> de la dimension maximale support\u00e9e par le SGBD.</li> </ul>"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-booleens","title":"Types bool\u00e9ens","text":"<p>Type Bool\u00e9en</p> <p>Selon les SGBD, le type bool\u00e9en est in\u00e9galement support\u00e9. Dans notre cas cette ann\u00e9e, on supposera qu'il l'est correctement (mais il existe de nombreuses possibilit\u00e9s pour le simuler, par exemple avec un type <code>SMALLINT</code> o\u00f9 \\(0\\) repr\u00e9sente <code>False</code> et le reste <code>True</code>).</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#types-temporels","title":"Types temporels","text":"<p>Types temporels</p> <p>Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie pr\u00e9c\u00e9dente, les types temporels repr\u00e9sentent parfois un cauchemar pour les programmeur.euse.s...</p> <p>Nous nous contenterons ici d'aborder de mani\u00e8re tr\u00e8s superficielle ces types :</p> nom du type description <code>DATE</code> Une date au format <code>'AAAA-MM-JJ'</code> <code>TIME</code> Une heure au format <code>'hh:mm:ss'</code> <code>TIMESTAMP</code> Un instant au format <code>'AAAA-MM-JJ hh:mm:ss'</code> <p>Une propri\u00e9t\u00e9 int\u00e9ressante du type <code>DATE</code> est qu'il supporte l'addition correctement. Si <code>d</code> est du type <code>DATE</code>, <code>d+7</code> produira une date correspondante \u00e0 7 jours apr\u00e8s <code>d</code>, en changeant jours, mois et ann\u00e9es correctement.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#type-null","title":"Type <code>NULL</code>","text":"<p>Une valeur <code>NULL</code> existe en SQL et correspond \u00e0 l'absence de donn\u00e9e. Elle s'utilise comme la valeur <code>None</code> en Python. Elle est juste interdite pour les cl\u00e9s primaires.</p> <p>Il est possible de tester si une valeur est nulle ou non gr\u00e2ce aux commandes <code>IS NULL</code> ou <code>IS NOT NULL</code>.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#creations-et-suppressions-de-tables","title":"Cr\u00e9ations et suppressions de tables","text":""},{"location":"NSI/Terminale/C04/BasesSQL1/#creation-de-tables","title":"Cr\u00e9ation de tables","text":"<p>Cr\u00e9ation de tables</p> <p>La cr\u00e9ation d'une table se fait par l'interm\u00e9diaire de la commande suivante :</p> <pre><code>CREATE TABLE nom_table (attribut_1 domaine_1 contrainte_1_1 contrainte_1_2 ...,\nattribut_2 domaine_2 contrainte_2_1 contrainte_2_2 ...,\n...,\nattribut_n domaine_n contrainte_n_1...,\ncontrainte_globale_1,\n...,\ncontrainte_globale_n);\n</code></pre> <p>Une d\u00e9finition d'attributs consiste en :</p> <ul> <li>la donn\u00e9e d'un nom d'attribut (obligatoire) ;</li> <li>la donn\u00e9e d'un domaine (obligatoire) ;</li> <li>la donn\u00e9e de contraintes sur cet attribut (optionnel).</li> </ul> <p>Une contrainte qui porterait sur plusieurs attributs (par exemple une d\u00e9finition de cl\u00e9 primaire sur plusieurs attributs) est report\u00e9e en fin de d\u00e9finition, avant la parenth\u00e8se fermante.</p> <p>Exemple avec cl\u00e9 primaire simple</p> <p>La relation <code>Livre</code> suivante  peut \u00eatre cr\u00e9\u00e9e en SQL par la commande suivante :</p> <p></p><pre><code>CREATE TABLE Livre (titre VARCHAR(200),\nediteur VARCHAR(50),\nannee SMALLINT,\nISBN CHAR(14) PRIMARY KEY);                     </code></pre> On remarque l'utilisation de 14 caract\u00e8res exactement pour l'ISBN.  <p>Ex\u00e9cution de code</p> <p>Dans le bac \u00e0 sable SQL, cr\u00e9er la table <code>Livre</code>.</p> <p>Exemple avec cl\u00e9 primaire et cl\u00e9s \u00e9trang\u00e8res</p> <p>Maintenant que nous avons cr\u00e9\u00e9 les tables <code>Usager</code> et <code>Livre</code>, nous pouvons cr\u00e9er la table <code>Emprunt</code> telle que d\u00e9finie dans le sch\u00e9ma </p> <pre><code>CREATE TABLE Emprunt (  code_barre CHAR(15) REFERENCES usager(code_barre),\nISBN CHAR(14) PRIMARY KEY REFERENCES Livre(ISBN),\nretour DATE);\n</code></pre> <p>Cr\u00e9ation de code</p> <p>Cr\u00e9er le code SQL n\u00e9cessaire pour obtenir la table <code>Auteur</code> correspondant  \u00e0 la relation </p> <p>Exemple de cr\u00e9ation de cl\u00e9 primaire avec de multiples attributs</p> <p>Pour la table <code>Auteur_de</code> d\u00e9finie par , on peut utiliser le code suivant :</p> <pre><code>CREATE TABLE Auteur_de ( idA INT REFERENCES Auteur(idA),\nISBN REFERENCES Livre(ISBN),\nPRIMARY KEY(ida, ISBN));\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL1/#suppressions-de-tables","title":"Suppressions de tables","text":"<p>Suppression de tables</p> <p>Pour supprimer une table, il suffit d'utiliser :</p> <pre><code>DROP TABLE nom_de_la_table;\n</code></pre> <p>Attention toutefois, il n'est pas possible de supprimer une table si elle sert de r\u00e9f\u00e9rence pour une cl\u00e9 \u00e9trang\u00e8re ! Cela violerait une contrainte de r\u00e9f\u00e9rence.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#nouvelles-contraintes-dintegrites","title":"Nouvelles Contraintes d'int\u00e9grit\u00e9s","text":"<p>Nous avons vu l'utilisation de <code>PRIMARY KEY</code> et <code>REFERENCES</code>, qui permettent de d\u00e9finir les contraintes de relation et de r\u00e9f\u00e9rences. Il est possible de rajouter en SQL d'autres types de contraintes.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#contraintes-dunicite-et-de-non-nullite","title":"Contraintes d'unicit\u00e9 et de non-nullit\u00e9","text":"<p>Entre autres :</p> <ul> <li>il est possible de pr\u00e9ciser qu'un attribut (une colonne en langage SQL) ne peut \u00eatre vide, en ajoutant la contrainte <code>NOT NULL</code>;</li> <li>de m\u00eame il est possible de pr\u00e9ciser qu'un attribut ne peut exister en doublon, en ajoutant la contrainte <code>UNIQUE</code>.</li> </ul> <p>Ainsi, la table <code>Usager</code> peut \u00eatre red\u00e9finie par :</p> <pre><code>CREATE TABLE usager (nom VARCHAR(90) NOT NULL,\nprenom VARCHAR(90) NOT NULL,\nemail VARCHAR(60) NOT NULL UNIQUE,\ncp VARCHAR(5) NOT NULL,\nadresse VARCHAR(90),\ninscription DATE NOT NULL,\ncode_barre CHAR(15) PRIMARY KEY);\n</code></pre> <p>Ainsi red\u00e9finie, tous les attributs sauf l'adresse doivent \u00eatre renseign\u00e9s (la cl\u00e9 primaire ne devant pas \u00eatre vide par nature). De plus l'email ne peut \u00eatre qu'unique (ce qui risque de poser des probl\u00e8mes pour certains couples ou pour des inscriptions d'enfants avec le email de leur parent).</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#cle-primaire-et-auto-incrementation","title":"Cl\u00e9 primaire et auto-incr\u00e9mentation","text":"<p>Pour les cl\u00e9 primaires num\u00e9riques et correspondantes au type <code>INTEGER</code><sup>2</sup>, il est possible de ne pas avoir \u00e0 saisir \u00e0 la main cette valeur. Ainsi, \u00e0 chaque ajout d'une ligne (donc d'une entit\u00e9)  dans la table, une nouvelle valeur de cl\u00e9 parmi celles disponibles sera automatiquement fournie. Par exemple pour la table <code>Auteur</code> :</p> <pre><code>CREATE TABLE Auteur (nom VARCHAR(90) NOT NULL,\nprenom VARCHAR(90) NOT NULL,\nidA INTEGER PRIMARY KEY );\n</code></pre> <p>Dans ce cas, l'insertion sera faites avec une structure d'entit\u00e9 plus sp\u00e9cifique :</p> <pre><code>INSERT INTO Auteur(nom, prenom) VALUES\n('Tolkien', 'JRR'),\n('Dick', 'Philip K.'),\n('Adams', 'Douglas');\n</code></pre> <p>On constate alors par la requ\u00eate suivante la bonne insertion du champ <code>idA</code>:</p> <pre><code>SELECT * FROM Auteur;\n</code></pre> <p>Par d\u00e9faut l'incr\u00e9mentation commence \u00e0 1.</p> Auto-incr\u00e9ment -&gt; Vieille version non viable en SQLite <p>Pour les cl\u00e9 primaires num\u00e9riques, il est possible d'ajouter la contrainte d'auto-incr\u00e9mentation de cet identifiant. Ainsi, \u00e0 chaque ajout d'une ligne (donc d'une entit\u00e9)  dans la table, une nouvelle valeur de cl\u00e9 sera automatiquement fournie. Par exemple pour la table <code>Auteur</code> :</p> <pre><code>CREATE TABLE Auteur (nom VARCHAR(90) NOT NULL,\nprenom VARCHAR(90) NOT NULL,\nidA INTEGER PRIMARY KEY AUTO_INCREMENT);\n</code></pre> <p>Par d\u00e9faut l'incr\u00e9mentation commence \u00e0 1.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#contraintes-specifiques","title":"Contraintes sp\u00e9cifiques","text":"<p>Il est aussi possible de placer certaines contraintes sp\u00e9cifiques lors de la cr\u00e9ation d'une table, gr\u00e2ce au mot cl\u00e9 <code>CHECK</code> suivi d'une formule bool\u00e9enne. Par exemple, si on souhaite introduire les ann\u00e9es de naissance et de d\u00e9c\u00e8s des auteurs, il est possible d'utiliser l'instruction suivante :</p> <pre><code>CREATE TABLE Auteur (nom VARCHAR(90) NOT NULL,\nprenom VARCHAR(90) NOT NULL,\nidA INTEGER PRIMARY KEY ,\nnaissance SMALLINT,\ndeces SMALLINT,\nCHECK (naissance IS NULL OR deces IS NULL OR naissance &lt; deces) );\n</code></pre> <p>Ainsi, on v\u00e9rifie qu'il n'y a pas d'erreurs sur une date de naissance post\u00e9rieure \u00e0 une date de d\u00e9c\u00e8s.</p> <p>On notera que cette contrainte s'\u00e9crit directement apr\u00e8s la derni\u00e8re d\u00e9finition d'attributs et que l'expression bool\u00e9enne est entre parenth\u00e8ses.    </p> <p>Mise \u00e0 jour des tables</p> <p>Dans le bac \u00e0 sable, mettre \u00e0 jour les tables afin qu'elles correspondent aux derni\u00e8res instructions donn\u00e9es.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#insertions-de-donnees-dans-une-table-existante","title":"Insertions de donn\u00e9es dans une table existante.","text":"<p>Insertion de donn\u00e9es</p> <p>Pour ins\u00e9rer des donn\u00e9es dans une table existante, on utilise l'instruction <code>\u00ccNSERT INTO</code>. Il existe deux possibilit\u00e9s pour ins\u00e9rer des donn\u00e9es :</p> <ul> <li> <p>En ins\u00e9rant les valeurs sans pr\u00e9ciser le nom des colonnes :</p> <p></p><pre><code>INSERT INTO nom_table VALUES (valeur1, valeur2, ..., valeurn);\n</code></pre> les valeurs seront ins\u00e9r\u00e9es dans l'ordre d\u00e9fini lors de la cr\u00e9ation de la table. </li> <li> <p>En ins\u00e9rant les valeurs en pr\u00e9cisant les colonnes concern\u00e9es :</p> <pre><code>INSERT INTO nom_table(attribut1, attribut3) VALUES (valeur1, valeur3);\n</code></pre> <p>Ici les valeurs ne seront ins\u00e9r\u00e9es que dans les colonnes qui correspondent au nom donn\u00e9.</p> </li> </ul> <p>Exemple d'insertions</p> <ul> <li>Insertion compl\u00e8te :     <pre><code>INSERT INTO Livre VALUES(\"Dune\", \"Pocket\", 2021, \"978-2266320542\");\n</code></pre>     Les informations fournies seront ins\u00e9r\u00e9es dans l'ordre <code>titre</code>, <code>\u00e9diteur</code>, <code>ann\u00e9e</code> et <code>\u00ccSBN</code>.</li> <li>Insertion selon les colonnes :     <pre><code>INSERT INTO Livre(ISBN, titre) VALUES(\"978-2070319015\", \"H2G2, tome 1 : Le Guide du voyageur galactique \");\n</code></pre>     Seules les colonnes <code>ISBN</code> et <code>titre</code> sont renseign\u00e9es. les autres seront mises \u00e0 une valeur <code>NULL</code>.</li> </ul> <p>Warning</p> <p>Il est \u00e0 noter que les contraintes d'int\u00e9grit\u00e9s sont v\u00e9rifi\u00e9es lors de l'insertion. Une instruction du type :</p> <pre><code>INSERT INTO Auteur(nom, prenom, naissance, deces) VALUES (\"ADAMS\", \"Douglas\", 2001, 1952);\n</code></pre> <p>donnera une erreur par violation d'int\u00e9grit\u00e9<sup>3</sup>, la date de naissance \u00e9tant sup\u00e9rieure \u00e0 la date de d\u00e9c\u00e8s.</p>"},{"location":"NSI/Terminale/C04/BasesSQL1/#exercices","title":"Exercices","text":"<p>Exercice 1</p> Enonc\u00e9Solution <p>Reprendre l'\u00e9noonc\u00e9 de l'exercice 1 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er la table correspondante.</p> <p>A venir !</p> <p>Exercice 2</p> Enonc\u00e9Solution <p>Reprendre l'\u00e9noonc\u00e9 de l'exercice 2 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes.</p> <p>A venir !</p> <p>Exercice 2</p> Enonc\u00e9Solution <p>Reprendre l'\u00e9noonc\u00e9 de l'exercice 3 de la fiche mod\u00e8le relationnel et donner l'instruction SQL permettant de cr\u00e9er les tables correspondantes.</p> <p>A venir !</p> <ol> <li> <p>tout le monde n'est pas forc\u00e9ment d'accord sur ce point. Certains mettent une majuscule \u00e0 la premi\u00e8re lettre du nom de la table...\u00a0\u21a9</p> </li> <li> <p>du moins sur les versions <code>SQLite</code>, seul le type <code>INTEGER</code> permet une auto-incr\u00e9mentation d'une cl\u00e9 primaire. Le type <code>INT</code> ne semble pas support\u00e9 (voir ici et l\u00e0).\u00a0\u21a9</p> </li> <li> <p>Pauvre Marvin...\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI/Terminale/C04/BasesSQL2/","title":"Bases de SQL 2","text":""},{"location":"NSI/Terminale/C04/BasesSQL2/#requetes-sql","title":"Requ\u00eates SQL","text":"<p>Les exemples et exercices donn\u00e9s ci-dessous sont, sauf mention contraire, disponibles directement dans un notebook Capytale (Code <code>c156-162763</code>).</p>"},{"location":"NSI/Terminale/C04/BasesSQL2/#projections","title":"Projections","text":"<p>Projection</p> <p>L'op\u00e9ration de projection consiste \u00e0 ne r\u00e9cup\u00e9rer que certains champs (c'est-\u00e0-dire les colonnes) d'une table donn\u00e9e.</p> <p></p> <p>En SQL, on l'obtient par l'instruction :</p> <pre><code>SELECT\ncolonne1, colonne2,...\nFROM\nnom_table;\n</code></pre> <p>Exemple 1 : Projection</p> <p>Pour r\u00e9cup\u00e9rer les colonnes <code>titre</code> et <code>isbn</code> de la table <code>livre</code> : </p><pre><code>SELECT titre, isbn\nFROM\nlivre;\n</code></pre> Pour r\u00e9cup\u00e9rer l'int\u00e9gralit\u00e9 des colonnes, on peut utiliser l'op\u00e9rateur joker<code>*</code> : <pre><code>SELECT *\nFROM\nauteur;\n</code></pre> <p>Renommer les colonnes</p> <p>Il est possible dans une op\u00e9ration de projection de renommer les colonnes obtenues, gr\u00e2ce \u00e0 l'op\u00e9rateur <code>AS</code> : </p><pre><code>SELECT titre, isbn, annee AS annee_publication\nFROM\nlivre;\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL2/#selections","title":"S\u00e9lections","text":"<p>S\u00e9lection (ou restriction)</p> <p>L'op\u00e9ration de s\u00e9lection consiste \u00e0 interroger une base de donn\u00e9es pour ne r\u00e9cup\u00e9rer que les lignes d'une table correspondant \u00e0 une ou des conditions sp\u00e9cifi\u00e9es (exprim\u00e9es sous la forme d'expressions bool\u00e9ennes).</p> <p></p> <p>En SQL, on rajoute la clause <code>WHERE</code> suivie des conditions exprim\u00e9es sous la forme d'une expression bool\u00e9enne, utilisant les mots cl\u00e9s <code>AND</code> et <code>OR</code> par exemple :</p> <pre><code>    SELECT\ncolonne1, colonne2,...\nFROM\nnom_table\nWHERE\nconditions;\n</code></pre> <p>Exemple 2 : S\u00e9lection</p> <ul> <li> <p>S\u00e9lection avec condition unique :</p> <pre><code>    SELECT titre\nFROM\nlivre\nWHERE\nannee &gt;= 2020;\n</code></pre> </li> <li> <p>S\u00e9lection avec conditions multiples :</p> <pre><code>SELECT titre\nFROM\nlivre\nWHERE\nannee &gt;= 1970 AND\nannee &lt;= 2000 AND\nediteur='Dargaud';\n</code></pre> </li> </ul> <p>Requ\u00eate sur les chaines de caract\u00e8res</p> <p>Si on veut chercher tous les livres dont le titre contient la chaine <code>Ast\u00e9rix</code>, il faudra utiliser une clause comme la suivante :</p> <pre><code>    SELECT titre\nFROM\nlivre\nWHERE\ntitre LIKE '%Ast\u00e9rix%';\n</code></pre> <p>La chaine de caract\u00e8res <code>'%Ast\u00e9rix%'</code> s'appelle un motif. L'op\u00e9ration <code>s LIKE m</code> renverra <code>True</code> si la chaine de caract\u00e8res <code>s</code> correspond au motif <code>m</code>. Le caract\u00e8re <code>%</code> est un joker qui peut-\u00eatre substitu\u00e9 par n'importe quelle chaine. Il existe aussi l'op\u00e9rateur <code>_</code> (underscore) qui lui repr\u00e9sente n'importe quel caract\u00e8re. Ainsi, pour chercher tous les auteurs dont le nom commence par F, se termine par R et fait 6 caract\u00e8res de long :  </p> <pre><code>    SELECT\nnom, prenom\nFROM\nauteur\nWHERE\nnom LIKE 'F____R';\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-dagregations","title":"Fonctions d'agr\u00e9gations","text":"<p>Il existe un certain nombre de fonctions permettant d'effectuer des op\u00e9rations sur des colonnes. Ces fonctions s'appellent fonctions d'agr\u00e9gations, et renvoie un r\u00e9sultat sous la forme d'une table d'une ligne et d'une colonne. Voici les plus utiles :</p>"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonction-count","title":"Fonction <code>COUNT</code>","text":"<p>Compter des lignes</p> <p>La fonction SQL <code>COUNT</code> permet de compter le nombre de lignes que poss\u00e8de une table, \u00e9ventuellement apr\u00e8s s\u00e9lection. Sa syntaxe est :</p> <pre><code>SELECT COUNT(colonne)\nFROM\ntable\nWHERE conditions;\n</code></pre> <p>Exemples</p> <ul> <li>Compter le nombre de lignes dans la table auteur :     <pre><code>SELECT COUNT(*)\nFROM\nauteur;\n</code></pre></li> <li>Compter le nombre de titres contenant le cha\u00eene <code>Ast\u00e9rix</code> <pre><code>SELECT count(titre)\nFROM livre\nWHERE titre LIKE '%Ast\u00e9rix%';\n</code></pre></li> </ul> <p>Un pi\u00e8ge</p> <p>L'ordre SQL suivant  </p><pre><code>SELECT count(titre), isbn\nFROM livre\nWHERE titre LIKE '%Ast\u00e9rix%';\n</code></pre> renvoie une table avec une ligne et deux colonnes :  <p>L'isbn renvoy\u00e9 ne correspond qu'au premier titre trouv\u00e9 contenant la cha\u00eene <code>Ast\u00e9rix</code> : </p><pre><code>SELECT titre, isbn\nFROM livre\nWHERE isbn = '978-2864972662';\n</code></pre> <p>Alias de colonne</p> <p>Avec la fonction <code>COUNT</code>, les titres des colonnes renvoy\u00e9s ne sont pas forc\u00e9ment parlant. Il est possible de les changer en leur fournissant un alias par l'interm\u00e9diaire de <code>AS</code> :</p> <pre><code>SELECT count(titre) AS nombre_asterix\nFROM livre\nWHERE titre LIKE '%Ast\u00e9rix%';\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-numeriques","title":"Fonctions num\u00e9riques","text":"<p>Les fonctions suivantes ne peuvent s'appliquer que sur des colonnes dont le type est num\u00e9rique :</p> <ul> <li><code>SUM</code> : effectue la somme de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant aux conditions donn\u00e9es</li> <li><code>AVG</code> (average) :  effectue la moyenne de toutes les valeurs de la colonne s\u00e9lectionn\u00e9e correspondant aux conditions donn\u00e9es.</li> </ul> <pre><code>SELECT SUM(annee) as somme FROM livre ;\nSELECT AVG(annee) as moyenne FROM livre ;\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL2/#fonctions-min-et-max","title":"Fonctions <code>MIN</code> et <code>MAX</code>","text":"<p>Ces deux fonctions s'appliquent sur n'importe quel type, l'ordre sur les chaines de caract\u00e8res \u00e9tant l'ordre lexicographique. :</p> <pre><code>SELECT MIN(nom) FROM auteur ;\nSELECT MAX(nom) FROM auteur ;\nSELECT MIN(annee) FROM livre; SELECT MAX(annee) FROM livre; </code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL2/#tri-et-suppression-des-doublons","title":"Tri et suppression des doublons","text":""},{"location":"NSI/Terminale/C04/BasesSQL2/#tri-des-colonnes","title":"Tri des colonnes","text":"<p>Les r\u00e9sultats d'une requ\u00eate SQL sont en g\u00e9n\u00e9ral fournis dans l'ordre dans lequel ils sont trouv\u00e9s. Il est cependant possible d'ordonner les colonnes gr\u00e2ce \u00e0 la clause <code>ORDER BY</code> et les mots cl\u00e9s <code>ASC</code>(ascending) et <code>DESC</code>(descending):</p> <ul> <li> <p>par ordre croissant :</p> <pre><code>SELECT titre\nFROM    livre\nWHERE annee &gt;=1990 ORDER BY titre ASC;\n</code></pre> </li> <li> <p>par ordre d\u00e9croissant :</p> <pre><code>SELECT nom\nFROM    auteur\nORDER BY nom DESC;\n</code></pre> </li> </ul> <p>Effectuons la requ\u00eate suivante :</p> <p></p><pre><code>SELECT prenom FROM auteur WHERE prenom LIKE 'M%';\n</code></pre> Le r\u00e9sultat est la table suivante :  <p>Nous constatons la pr\u00e9sence de 3 pr\u00e9noms <code>Michel</code> dans la table r\u00e9sultat.  Il est possible d'\u00e9liminer de tels doublons dans une table en utilisant la clause <code>DISTINCT</code> :</p> <p></p><pre><code>SELECT DISTINCT prenom FROM auteur WHERE prenom LIKE 'M%';\n</code></pre> On r\u00e9cup\u00e8re alors en r\u00e9sultat la table suivante :  <p>Attention</p> <p>Attention toutefois ! Une requ\u00eate telle que la suivante n'\u00e9limineras pas les doublons de pr\u00e9nom :</p> <p></p><pre><code>SELECT DISTINCT prenom, nom FROM auteur WHERE prenom LIKE 'M%';\n</code></pre> En effet la clause <code>DISTINCT</code> \u00e9limine les lignes exactement identiques. Ici les couples <code>(prenom, nom)</code> sont bien tous diff\u00e9rents."},{"location":"NSI/Terminale/C04/BasesSQL2/#elimination-des-doublons","title":"Elimination des doublons","text":""},{"location":"NSI/Terminale/C04/BasesSQL2/#application","title":"Application","text":"<p>Exercice</p> <p>Effectuer la premi\u00e8re partie ainsi que les requ\u00eates sans jointures du notebook jeux olympiques(Code <code>917a-165474</code>) (merci M. Leleu).</p>"},{"location":"NSI/Terminale/C04/BasesSQL3/","title":"Bases de SQL 3","text":""},{"location":"NSI/Terminale/C04/BasesSQL3/#modification-des-bases-de-donnees-et-requetes-complexes","title":"Modification des bases de donn\u00e9es et requ\u00eates complexes","text":"<p>Les exemples et exercices donn\u00e9s ci-dessous sont, sauf mention contraire, disponibles directement dans un notebook Capytale (Code <code>C156-162763</code>).</p>"},{"location":"NSI/Terminale/C04/BasesSQL3/#modification-des-bases-de-donnees","title":"Modification des bases de donn\u00e9es","text":""},{"location":"NSI/Terminale/C04/BasesSQL3/#suppression-de-lignes","title":"Suppression de lignes","text":"<p>Pour supprimer des lignes selon une condition donn\u00e9e, on utilise l'ordre :</p> <pre><code>DELETE FROM table WHERE conditions;\n</code></pre> <p>Exemple</p> <p>La requ\u00eate suivante :</p> <pre><code>SELECT * FROM emprunt WHERE code_barre='934701281931582';\n</code></pre> <p>donne la table suivante en r\u00e9ponse :</p> <p></p>code_barreisbnretour934701281931582978-22600191832020-01-01934701281931582978-23712400872020-01-01 <p>Pour supprimer la ligne r\u00e9f\u00e9ren\u00e7ant l'isbn <code>978-2260019183</code> :</p> <p></p><pre><code>DELETE FROM emprunt WHERE code_barre='934701281931582' AND isbn='978-2260019183';\n</code></pre> On v\u00e9rifie ensuite : <pre><code>SELECT * FROM emprunt WHERE code_barre='934701281931582';\n</code></pre> <p></p>code_barreisbnretour934701281931582978-23712400872020-01-01 <p>Quelques points de remarques</p> <ul> <li> <p>L'oubli de la clause <code>WHERE</code> supprime toutes les donn\u00e9es de la table ! Cependant la table existe encore et il est possible d'ins\u00e9rer de nouvelles donn\u00e9es. Pour supprimer compl\u00e8tement une table, il faut utiliser l'instruction :</p> <pre><code>DROP TABLE nom_table;\n</code></pre> </li> <li> <p>Il est impossible de supprimer une ligne dont l'absence violerait la contrainte de r\u00e9f\u00e9rences (cl\u00e9 \u00e9trang\u00e8re). Par exemple l'ordre suivant ne fonctionnera pas, car l'isbn donn\u00e9 est pr\u00e9sent dans la table <code>emprunt</code> :</p> <pre><code>DELETE FROM livre WHERE isbn='934701281931582';\n</code></pre> </li> </ul> <p>Tout ou rien</p> <p>Si un ordre pass\u00e9 devant supprimer plusieurs lignes rencontre \u00e0 un moment une erreur, alors toutes les suppressions effectu\u00e9es par cet ordre sont annul\u00e9es ! On parle d\u2019ex\u00e9cution de type \u00ab tout ou rien \u00bb.</p>"},{"location":"NSI/Terminale/C04/BasesSQL3/#mise-a-jour-de-lignes","title":"Mise \u00e0 jour de lignes","text":"<p>Pour mettre \u00e0 jour des lignes, on utilise un ordre SQL de type :</p> <pre><code>UPDATE nom_table\nSET attribut1 = nouvelle_valeur1,\nattribut2 = nouvelle_valeur2,\n...\nWHERE conditions;   </code></pre> <p>Exemple</p> <p>La requ\u00eate suivante :</p> <pre><code>SELECT * FROM usager WHERE prenom='ALAIN';\n</code></pre> <p>donne comme table r\u00e9sultat :</p> <p></p>nomprenomadressecpvilleemailcode_barreMOREAUALAIN48, Rue du Ch\u00e2teau75005Parisamoreau1@abc.de421921003090881 <p>Pour changer l'email de cet utilisateur, on peut utiliser l'ordre suivant :</p> <p></p><pre><code>UPDATE usager\nSET email = 'alain.moreau@truc.com'\nWHERE code_barre ='421921003090881';\n</code></pre> et une nouvelle requ\u00eate de recherche renvoie bien comme table : <p></p>nomprenomadressecpvilleemailcode_barreMOREAUALAIN48, Rue du Ch\u00e2teau75005Parisalain.moreau@truc.com421921003090881"},{"location":"NSI/Terminale/C04/BasesSQL3/#requetes-complexes","title":"Requ\u00eates complexes","text":""},{"location":"NSI/Terminale/C04/BasesSQL3/#jointures","title":"Jointures","text":"<p>Jusqu'\u00e0 pr\u00e9sent, les requ\u00eates que nous avons \u00e9crites ne n\u00e9cessitent que l'utilisation d'une seule et unique table. Mais bien souvent, nous avons \u00e0 effectuer des requ\u00eates r\u00e9cup\u00e9rant des donn\u00e9es de plusieurs tables simultan\u00e9ment. Pour effectuer une telle requ\u00eate, il faudra utiliser une ou des jointures de tables.</p>"},{"location":"NSI/Terminale/C04/BasesSQL3/#jointure-sur-deux-tables","title":"Jointure sur deux tables","text":"<p>Jointure naturelle de deux tables</p> <p>Prenons l'exemple de deux tables, l'une nomm\u00e9e <code>Personne</code> contient les noms, pr\u00e9noms et \u00e2ge de membres de l'ordre Jedi, et la seconde nomm\u00e9e <code>Rang</code> les rangs Jedi ainsi que l'\u00e2ge minimum requis pour l'atteindre.</p> <p>Nous pouvons effectuer une jointure sur le crit\u00e8re de l'age, en cr\u00e9ant une table contenant toutes les lignes des rangs ayant pu \u00eatre atteints par une personne, sur le crit\u00e8re <code>Personne.Age&gt;Rang.age</code> :</p> <p></p><p> </p> <p>On notera que pour \u00e9viter toute confusion, les deux colonnes <code>Age</code> originelles ont vu leurs noms pr\u00e9fix\u00e9s par leur table d'origine, avec la notation <code>table.colonne</code>.</p> <p>Une table de jointure telle que celle-ci sera construite gr\u00e2ce \u00e0 la clause suivante :</p> <pre><code>Personne JOIN Rang ON Personne.Age &gt; Rang.Age\n</code></pre> <p>Il sera ensuite possible d'utiliser cette table au sein d'une clause <code>SELECT</code>.</p> <p>Exemples</p> <ul> <li> <p>Pour connaitre la liste des livres emprunt\u00e9s, on utilisera l'ordre SQL suivant :</p> <pre><code>SELECT *\nFROM\nemprunt JOIN livre ON emprunt.isbn=livre.isbn;\n</code></pre> </li> <li> <p>Il est bien s\u00fbr possible de projeter le r\u00e9sultat de la requ\u00eate et d'effectuer une s\u00e9lection. Par exemple pour connaitre la liste des personnes devant rendre au moins un livre avant le 01 f\u00e9vrier 2020 :</p> <pre><code>SELECT DISTINCT usager.nom, usager.prenom, emprunt.retour\nFROM usager JOIN emprunt ON usager.code_barre=emprunt.code_barre\nWHERE emprunt.retour&lt;'2020-02-01';\n</code></pre> </li> </ul>"},{"location":"NSI/Terminale/C04/BasesSQL3/#jointures-sur-plusieurs-tables","title":"Jointures sur plusieurs tables","text":"<p>Exemple</p> <p>On souhaite connaitre les titre et les auteurs correspondant aux livres actuellement emprunt\u00e9s. Il faut donc faire une jointure sur les 4 tables <code>livre</code>, <code>auteur</code>, <code>auteur_de</code> et <code>emprunt</code>. La requ\u00eate a \u00e9crire va donc \u00eatre plus longue que celles vues jusqu'alors :</p> <pre><code>SELECT livre.titre, auteur.nom, auteur.prenom\nFROM\nemprunt JOIN livre ON emprunt.isbn=livre.isbn\nJOIN auteur_de ON livre.isbn = auteur_de.isbn\nJOIN auteur ON auteur_de.a_id = auteur.a_id;\n</code></pre> <p>Alias des tables</p> <p>Certaines requ\u00eates deviennent rapidement p\u00e9nibles \u00e0 \u00e9crire. Pour simplifier un peu cette \u00e9criture, il est possible d'utiliser un alias pour les tables \u00e0 l'aide du mot-cl\u00e9 <code>AS</code>. Ainsi l'ordre pr\u00e9c\u00e9dent peut-\u00eatre \u00e9crit :</p> <pre><code>SELECT l.titre, a.nom, a.prenom\nFROM\nemprunt AS e JOIN livre AS l ON e.isbn=l.isbn\nJOIN auteur_de AS ad ON l.isbn = ad.isbn\nJOIN auteur AS a ON ad.a_id = a.a_id;\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL3/#requetes-imbriquees","title":"Requ\u00eates imbriqu\u00e9es","text":"<p>Il est tout \u00e0 fait possible d'imbriquer des requ\u00eates les unes dans les autres, puisque le r\u00e9sultat d'une requ\u00eate est lui-m\u00eame une table temporaire :</p> <pre><code>SELECT * FROM (\nSELECT * FROM livre\nWHERE annee &gt;= 1990) AS tmp\nWHERE tmp.annee&lt;=2000;\n</code></pre> <p>Ici on cr\u00e9e une table temporaire d'alias <code>tmp</code>, dans laquelle on stocke toutes les lignes dont l'ann\u00e9e de publication est sup\u00e9rieure ou \u00e9gale \u00e0 1990, puis on effectue une nouvelle s\u00e9lection sur cette table temporaire en ne gardant que les lignes dont l'ann\u00e9e de publication est inf\u00e9rieure ou \u00e9gale \u00e0 2000.</p> <p>Analyse par un SGBD</p> <p>UN SGBD analysera cette requ\u00eate exactement de la m\u00eame mani\u00e8re qu'il analysera la suivante :</p> <pre><code>SELECT * FROM livre WHERE annee&gt;=1990 AND annee&lt;=2000;\n</code></pre> <p>Il n'y aura aucune diff\u00e9rence entre les deux en terme de vitesse de traitement.</p> <p>Il est aussi possible d'imbriquer des requ\u00eates dans la clause <code>WHERE</code>, en respectant certaines conditions. Par exemple pour connaitre la liste des livres dont l'ann\u00e9e est la plus ancienne dans la base, on va utiliser :</p> <pre><code>SELECT titre, annee FROM livre WHERE annee = (SELECT MIN(annee) FROM livre);\n</code></pre> <p>\u00c9crire une requ\u00eate imbriqu\u00e9e</p> \u00c9nonceSolution <p>\u00c9crire une requ\u00eate SQL donnant la liste des livres publi\u00e9s la m\u00eame ann\u00e9e que le livre dont le titre contient la chaine de caract\u00e8re <code>'Jack Barron'</code>.</p> <pre><code>SELECT titre\nFROM livre\nWHERE annee = (SELECT annee FROM livre WHERE titre LIKE '%Jack Barron%');\n</code></pre>"},{"location":"NSI/Terminale/C04/BasesSQL3/#exercices","title":"Exercices","text":"<p>Effectuer les requ\u00eates avec jointures du notebook jeux olympiques(Code <code>917a-165474</code>) (merci M. Leleu).</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/","title":"Mod\u00e8le relationnel","text":""},{"location":"NSI/Terminale/C04/ModeleRelationnel/#bases-de-donnees-et-modele-relationnel","title":"Bases de donn\u00e9es et mod\u00e8le relationnel","text":"<p>L'ensemble du chapitre est fortement influenc\u00e9 par :</p> <ul> <li>Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s, Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses</li> <li>Bases de donn\u00e9es, de la mod\u00e9lisation au SQL, Laurent Audibert, \u00e9ditions Ellipses</li> </ul>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#introduction-aux-bases-de-donnees-types-de-modeles","title":"Introduction aux bases de donn\u00e9es, types de mod\u00e8les","text":""},{"location":"NSI/Terminale/C04/ModeleRelationnel/#les-bases-de-donnees","title":"Les bases de donn\u00e9es","text":"<p>Il est difficile de proposer une d\u00e9finition exacte des bases de donn\u00e9es. Laurent Audibert<sup>2</sup> propose :</p> <p>D\u00e9finition g\u00e9n\u00e9rale</p> <p>Un ensemble organis\u00e9 d'informations avec un objectif commun.</p> <p>La d\u00e9finition est vague, mais d\u00e8s lors que des informations sont rassembl\u00e9es et stock\u00e9es d'une mani\u00e8re organis\u00e9e, on peut parler de bases de donn\u00e9es, quel que soit le support utilis\u00e9 (tablettes d'argile, papiers, fichiers, etc)</p> <p>Bien entendu l'informatique, c'est-\u00e0-dire la science du traitement automatique de l'information, permet le traitement de grandes quantit\u00e9s d'informations, et surtout leur exploitation (ajout, suppression, mise \u00e0 jour, recherches, ...). Dans le cadre informatique, Laurent Audibert<sup>2</sup> propose :</p> <p>Base de donn\u00e9es informatis\u00e9es</p> <p>Une base de donn\u00e9es (BDD, en anglais DataBase soit DB) informatis\u00e9e est un ensemble structur\u00e9 de donn\u00e9es enregistr\u00e9es sur des supports accessibles par l'ordinateur, repr\u00e9sentant des informations du monde r\u00e9el et pouvant \u00eatre interrog\u00e9es et mise \u00e0 jour par une communaut\u00e9 d'utilisateurs.</p> <p>Nous verrons que cette d\u00e9finition impose un certain nombre de contraintes \u00e0 la mise en place des BDD informatis\u00e9es. La premi\u00e8re est la question de la coh\u00e9rence des donn\u00e9es.</p> <p>Exemple : Bases de donn\u00e9es musicale<sup>2</sup></p> <p>Prenons l'exemple d'une base de donn\u00e9es contenant des albums musicaux, et qui m\u00e9morise pour chaque album son genre, son titre, le nom du groupe ainsi que le nom du chanteur principal. L'id\u00e9e de base est de pr\u00e9senter les donn\u00e9es sous la forme d'une table, comme dans l'extrait ci-dessous :</p> Genre Titre Groupe Chanteur Stoner Era Vulgaris Queen Of The Stone Age Josh Homme Metal Master of Puppets Metallica Metal Them Crooked Vultures Them Crooked Vultures Josh Homme Metal L'Enfant sauvage GOJIRA Jo Duplantier Stoner Dying surfer meet his maker All Them Withches Charles Michael Parks Jr M\u00e9tal Fortitude Gojira Joseph Duplantier Stoner Rock Nothing as the ideal All Them Withches Charles Michael Parks Jr Metal Progressif Magma Gojira Joseph DUPLANTIER <p>La condition sine qua none pour garantir la faisabilit\u00e9 et la pertinence d'une recherche de donn\u00e9es est la coh\u00e9rence de ces donn\u00e9es. Ici on constate plusieurs probl\u00e8mes de coh\u00e9rence :</p> <ul> <li>Le nom du groupe Gojira est orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. Une recherche utilisant la chaine de caract\u00e8res  <code>Gojira</code> ne donnera que deux r\u00e9sultats, alors que trois peuvent \u00eatre attendus.</li> <li>Le genre Metal est aussi orthographi\u00e9 de deux mani\u00e8res diff\u00e9rentes. On notera qu'une recherche stricte avec la chaine <code>Metal</code>, c'est-\u00e0-dire bas\u00e9e sur l'\u00e9galit\u00e9, ne donnera que deux r\u00e9sultats, alors qu'une recherche \u00e9tendue, c'est-\u00e0-dire bas\u00e9e sur l'appartenance de la sous-chaine <code>Metal</code> \u00e0 la chaine donnant le genre, renverra elle trois r\u00e9sultats.</li> <li>Le nom du chanteur de Gojira est \u00e9crit de trois mani\u00e8res diff\u00e9rentes.</li> <li>On peut aussi noter que le nom du chanteur de Metallica n'est pas renseign\u00e9, ce qui peut peut-\u00eatre poser un probl\u00e8me de coh\u00e9rence.</li> </ul> <p>Ces probl\u00e8mes de coh\u00e9rence sont li\u00e9s (en partie), \u00e0 un probl\u00e8me de redondance des donn\u00e9es :  en effet dans la table telle qu'elle est pr\u00e9sent\u00e9e, on va devoir saisir plusieurs fois les chaines telles que <code>Metal</code> et <code>Gojira</code>, alors qu'elles ne repr\u00e9sentent bien qu'une seule entit\u00e9 chacune. </p> <p>Pour r\u00e9gler la question de la coh\u00e9rence des donn\u00e9es, il faudra en premier lieu trouver un moyen d'\u00e9viter la redondance de certaines donn\u00e9es.</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#historique-et-problematiques-des-differents-modeles","title":"Historique et probl\u00e9matiques des diff\u00e9rents mod\u00e8les","text":"<p>Mod\u00e8les de donn\u00e9es et structures de donn\u00e9es</p> <p>Ces deux concepts se placent \u00e0 diff\u00e9rents niveaux d'abstraction. Les mod\u00e8les de donn\u00e9es indique quelles caract\u00e9ristiques d'une entit\u00e9 r\u00e9elle on souhaite manipuler dans un programme, ainsi que les relations qui lient ces entit\u00e9s entre elles. Par exemple un groupe de musique va produire plusieurs albums, et un chanteur peut chanter dans plusieurs groupes. </p> <p>Une structure de donn\u00e9e indique la mani\u00e8re dont on va organiser les donn\u00e9es en machine. Ainsi pour un m\u00eame mod\u00e8le il existe plusieurs structures pouvant repr\u00e9senter ce mod\u00e8le (tableau, listes chain\u00e9es, objets...)</p> <p>Le premier mod\u00e8le ayant souhait\u00e9 s'attaquer au probl\u00e8me de la redondance des donn\u00e9es est le mod\u00e8le hi\u00e9rarchique, d\u00e9velopp\u00e9 par IBM dans les ann\u00e9es 1960, dans le cadre du programme Apollo de la NASA. Ce mod\u00e8le, tr\u00e8s d\u00e9pendant de la mani\u00e8re dont fonctionnait les ordinateurs de cette \u00e9poque, enregistre les donn\u00e9es \u00e0 la mani\u00e8re de l'organisation d'un syst\u00e8me de fichier, sous la forme d'un arbre (structure arborescente), de fa\u00e7on \u00e0 ce qu'un enregistrement n'ait qu'un seul possesseur. On peut en donner un exemple ci-dessous :</p> <p></p> <p>Ce type de mod\u00e8le peut \u00eatre pratique, mais il ne r\u00e9pond pas \u00e0 toutes les probl\u00e9matiques. En effet, ici nous n'avons pas introduit dans la hi\u00e9rarchie les leads vocaux. Voici ce que donne le sch\u00e9ma lorsqu'on les introduit :</p> <p></p> <p>On constate ici que le choix d'organisation de l'arbre ne permet pas de r\u00e9gler la redondance des donn\u00e9es, puisque non seulement un m\u00eame chanteur peut \u00eatre lead vocal sur plusieurs albums, mais il peut l'\u00eatre aussi sur plusieurs groupes (comme Josh Homme par exemple). La structure hi\u00e9rarchique n'est ici pas adapt\u00e9e. </p> <p>Une des solutions propos\u00e9e pour ce probl\u00e8me a \u00e9t\u00e9 le mod\u00e8le r\u00e9seau, propos\u00e9 par Charles William Bachman \u00e0 la fin des ann\u00e9es 1960<sup>2</sup>. C.W. Bachman re\u00e7u le Prix Turing en 1973 pour ses contributions sur les technologies des bases de donn\u00e9es. On lui doit aussi le mod\u00e8le OSI (voir le cours de premi\u00e8re...). Une repr\u00e9sentation de nos albums dans le mod\u00e8le r\u00e9seau est la suivante :</p> <p></p> <p>Ainsi, la redondance des donn\u00e9es n'est plus un probl\u00e8me. Cependant, le mod\u00e8le r\u00e9seau n'est pas un mod\u00e8le toujours efficace, puisque pour retrouver une donn\u00e9e (un chanteur par exemple), il faut connaitre la structure de ce r\u00e9seau, c'est-\u00e0-dire les liaisons existantes, ce qui rend les programmeurs d\u00e9pendants de la structure de donn\u00e9e.</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#le-modele-relationnel","title":"Le mod\u00e8le relationnel","text":""},{"location":"NSI/Terminale/C04/ModeleRelationnel/#historique","title":"Historique","text":"<p>Chercheur au centre de recherche d'IBM, Edgar Frank Codd, insatisfait des mod\u00e8les existant, chercha un mod\u00e8le plus simple permettant de g\u00e9rer un grand nombre de donn\u00e9es. Math\u00e9maticien de formation, il se basa sur la th\u00e9orie des ensembles et la logique des pr\u00e9dicats (logique de premier ordre) pour publier en 1970 un article<sup>3</sup> o\u00f9 il proposait de stocker des donn\u00e9es h\u00e9t\u00e9rog\u00e8nes dans des tables, comme dans le sch\u00e9ma ci-dessous :</p> <p></p> <p>Ce mod\u00e8le, qualifi\u00e9 de relationnel \u00e9tait \u00e0 l'\u00e9poque consid\u00e9r\u00e9 comme une curiosit\u00e9 intellectuelle, car les ordinateurs en ce temps n'\u00e9taient pas capables de g\u00e9rer de mani\u00e8re efficace des tables de donn\u00e9es, et il n'\u00e9tait pas \u00e9vident qu'ils le soient un jour.</p> <p>Ce scepticisme n'a pas emp\u00each\u00e9 Codd de poursuivre ses travaux, et de concevoir un premier prototype de Syt\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles (SGBDR). Depuis les ann\u00e9es 1980 cette technologie a muri, pour \u00eatre finalement adopt\u00e9e par le monde de la recherche et des entreprises. </p> <p>En parall\u00e8le, Codd mis au point un langage de manipulation des donn\u00e9es non proc\u00e9dural, o\u00f9 l'utilisateur d\u00e9finit le r\u00e9sultat qu'il attend plut\u00f4t que la mani\u00e8re de l'obtenir. Ce langage nomm\u00e9 dans un premier temps <code>SEQUEL</code> (Structured English Query Language), rebaptis\u00e9 par la suite <code>SQL</code> (Structured Query Language), fut adopt\u00e9 comme norme internationale par l'ISO en 1987.</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#principes-vocabulaires-et-definitions","title":"Principes, vocabulaires et d\u00e9finitions","text":"<p>Imaginons la situation d'une m\u00e9diath\u00e8que municipale classique, pour lequel nous souhaitons mettre en place un syst\u00e8me d'information. Ce syst\u00e8me doit pouvoir g\u00e9rer l'emprunt et le retour de livres par un utilisateur inscrit.</p> <p>Ainsi, un utilisateur, Bob, va pouvoir s'inscrire \u00e0 la m\u00e9diath\u00e8que. On lui demandera :</p> <ul> <li>son nom ;</li> <li>son pr\u00e9nom ; </li> <li>son email ;</li> <li>son code postal (les tarifs d'abonnement sont diff\u00e9rents selon la commune de r\u00e9sidence) ;</li> <li>son adresse exacte.</li> </ul> <p>Le syst\u00e8me ne retiendra de lui que ces \u00e9l\u00e9ments, avec la date d'inscription. Sa taille, couleur des yeux ou cheveux, n'ont aucune importance dans le syst\u00e8me. Le syst\u00e8me ne retiens qu'une approximation de la r\u00e9alit\u00e9.</p> <p>Une fois inscrit, Bob se voit remettre une carte contenant un code-barre, c'est-\u00e0-dire un num\u00e9ro unique qui est attribu\u00e9 \u00e0 Bob.</p> <p>Bob peut alors emprunter le livre \u00ab Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s ! \u00bb de Gerard Swinnen, Eyrolles, 2012, ISBN 978-2212134346. Sur le livre est aussi plac\u00e9 un code-barre, qui identifie le livre de mani\u00e8re unique. En scannant ce code barre et sa carte de biblioth\u00e8que sur une des bornes disponible, le syst\u00e8me devra retenir que Bob a emprunt\u00e9 ce livre \u00e0 la date du jour.</p> <p>De la m\u00eame mani\u00e8re, lorsqu'il revient quelques semaines plus tard, il doit pouvoir rendre ce livre en scannant sa carte et le livre, et le syst\u00e8me doit retenir que le livre est \u00e0 nouveau disponible et que Bob a de nouveau le droit d'emprunter d'autres livres.</p> <p>Bien entendu, d'autres utilisateurs doivent pouvoir faire des emprunts et des restitutions au m\u00eame moment sur d'autres bornes de la m\u00e9diath\u00e8que, ce qui signifie que les donn\u00e9es doivent pouvoir \u00eatre accessibles depuis un r\u00e9seau a minima local.</p> <p>De plus les documentalistes doivent pouvoir ajouter de nouveaux ouvrages, en supprimer certains trop anciens ou abim\u00e9s, et mettre \u00e0 jour l'ensemble des utilisateurs. Ces derni\u00e8res op\u00e9rations ne devant pas \u00eatre accessibles aux usagers, il faudra mettre en place un syst\u00e8me de droits d'acc\u00e8s.</p> <p>Entit\u00e9s</p> <p>Dans le mod\u00e8le relationnel, un objet mod\u00e9lis\u00e9 est appel\u00e9 entit\u00e9. Il est repr\u00e9sent\u00e9 par un n-uplet de valeurs.</p> <p>Exemple</p> <p>Le livre emprunt\u00e9 par Bob peut-\u00eatre repr\u00e9sent\u00e9 par le quintuplet :</p> <p></p><pre><code>('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346')\n</code></pre> Dans ce quintuplet, 4 composantes sont des chaines de caract\u00e8res, et une seule est sous la forme d'un entier.  <p>Relation</p> <p>Une collection d'entit\u00e9s est appel\u00e9e une relation.</p> <p>Exemple</p> <p>La relation <code>Livre</code> de la m\u00e9diath\u00e8que peut \u00eatre repr\u00e9sent\u00e9e par : </p><pre><code>Livre = {\n('Apprendre \u00e0 programmer avec Python 3: Avec 60 pages d'exercices corrig\u00e9s !', 'Gerard Swinnen', 'Eyrolles', 2012, '978-2212134346'),\n('Bases de donn\u00e9es, de la mod\u00e9lisation au SQL', 'Laurent Audibert', 'Ellipses' ,  2009, '978-2729851200'),\n...\n}\n</code></pre> <p>Sch\u00e9ma relationnel, attributs</p> <p>Chaque relation se conforme \u00e0 un sch\u00e9ma. Ce dernier est une description, qui indique pour chaque composante des n-uplets de la relation leur nom et leur domaine, c'est-\u00e0-dire le type de valeurs que peuvent prendre les composantes. Chaque composante s'appelle un attribut.</p> <p>Exemple</p> <p>La relation <code>Livre</code> contient 5 attributs :</p> <ul> <li>titre : le titre du livre, qui est une chaine de caract\u00e8res ;</li> <li>auteur : le ou les auteurs du livre, sous la forme d'une chaine de caract\u00e8res ;</li> <li>\u00e9diteur : l'\u00e9diteur, sous la forme d'une chaine de caract\u00e8res ;</li> <li>ann\u00e9e : l'ann\u00e9e d'\u00e9dition, sous la forme d'un entier ;</li> <li>ISBN : l'identifiant du livre, sous la forme d'une chaine de caract\u00e8res.</li> </ul> <p>On peut aussi noter un sch\u00e9ma de relation de la mani\u00e8re suivante:</p> <p>Livre( titre String, auteur String, \u00e9diteur String, ann\u00e9e Int, ISBN String)</p> <p>ou par un tableau : </p> <p>Base de donn\u00e9es</p> <p>Dans le mod\u00e8le relationnel, une base de donn\u00e9es est un ensemble de relations. Par extension, le sch\u00e9ma d'une base de donn\u00e9e est l'ensemble des sch\u00e9mas relationnels repr\u00e9sentant la base.</p> <p>Exemple</p> <p>Dans notre exemple de m\u00e9diath\u00e8que, on pourra consid\u00e9rer la base de donn\u00e9es contenant les relations :</p> <ul> <li><code>Livre</code></li> <li><code>Usager</code></li> <li><code>Emprunt</code></li> </ul> <p>Nous d\u00e9taillerons dans la suite les attributs des relations <code>Usager</code> et <code>Emprunt</code>.</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#modelisation-relationnelle-des-donnees","title":"Mod\u00e9lisation relationnelle des donn\u00e9es","text":"<p>La th\u00e9orie et la pratique des bases de donn\u00e9es relationnelles est un domaine de recherche fortement actif et qui s'est largement complexifi\u00e9 depuis ses d\u00e9buts. Il ne s'agit pas dans ce cours d'\u00e9tudier cette th\u00e9orie, qui d\u00e9passe largement le niveau de terminale, aussi bien d'un point de vue math\u00e9matique qu'informatique, mais d'en comprendre quelques principes.</p> <p>principes g\u00e9n\u00e9raux</p> <p>La mod\u00e9lisation des donn\u00e9es se d\u00e9compose en plusieurs \u00e9tapes :</p> <ol> <li>d\u00e9terminer les entit\u00e9s qu'on souhaite manipuler ;</li> <li>mod\u00e9liser les collections d'entit\u00e9s en relations, en donnant leur sch\u00e9ma relationnel, et en veillant \u00e0 choisir le bon domaine pour les attributs.</li> <li>d\u00e9finir les contraintes de la base de donn\u00e9es, c'est-\u00e0-dire l'ensemble des propri\u00e9t\u00e9s logiques que les donn\u00e9es doivent v\u00e9rifier \u00e0 tout moment. En particulier on veillera aux contraintes d'int\u00e9grit\u00e9 d\u00e9crites ci-dessous qui garantissent la coh\u00e9rence des donn\u00e9es.</li> </ol>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-domaines","title":"Contraintes de domaines","text":"<p>Essayons de pr\u00e9ciser davantage la relation <code>Usager</code>. Dans la description que nous en avons donn\u00e9, nous pouvons d\u00e9finir quelques attributs :</p> <ul> <li>nom : le nom de la personne, une chaine de caract\u00e8res ;</li> <li>pr\u00e9nom : le pr\u00e9nom de la personne, une chaine de caract\u00e8res ;</li> <li>email : l'email de la personne, une chaine de caract\u00e8res ;</li> <li>cp : le code postal de la commune de r\u00e9sidence, une chaine de caract\u00e8res.</li> </ul> <p>On peut s'\u00e9tonner de stocker le code postal sous la forme d'une chaine de caract\u00e8re, et pas d'un entier. Mais il faut prendre en compte certaines particularit\u00e9s : un code postal est un code de 5 chiffres. Celui de Guingamp est <code>22 200</code>, et celui de Bourg-en-Bresse est <code>01 000</code>. Or les z\u00e9ros pr\u00e9c\u00e9dant le nombres sont \u00e9limin\u00e9s si on stocke le nombre sous la forme d'un entier ! On est alors oblig\u00e9 d'utiliser une chaine de caract\u00e8res de taille 5.</p> <p>Types de donn\u00e9es</p> <p>Nous verrons dans la partie SQL quelques types de donn\u00e9es sp\u00e9cifiques, mais nous pouvons donner quelques types g\u00e9n\u00e9riques souvent utilis\u00e9s dans les BDD :</p> Type Utilisation String chaines de caract\u00e8res Int les entiers sign\u00e9s (d'une taille arbitraire) Boolean les bool\u00e9ens <code>True</code> et <code>False</code> Float les flottants Date les dates (sous le format <code>JJ/MM/AAAA</code>)<sup>4</sup> Time les instants <code>heure : minutes : secondes</code> <p>Contraintes de domaines</p> <p>Les contraintes de domaines sont toutes les propri\u00e9t\u00e9s que le domaine d'un attribut va permettre de garantir. Elles sont souvent plus pr\u00e9cises que le simple choix d'un type de donn\u00e9es. Par exemple, une contrainte de domaine sur l'\u00e2ge d'une personne ne peut se contenter d'utiliser le type <code>Int</code>. Il faudra en plus \u00e9liminer les valeurs n\u00e9gatives ainsi que les valeurs sup\u00e9rieures \u00e0 120 (en \u00e9tant large...)</p> <p>On termine la mod\u00e9lisation de la relation <code>Usager</code> en ajoutant les attributs :</p> <ul> <li><code>adresse</code> : l'adresse de l'usager, de format <code>String</code> ;</li> <li><code>inscription</code> : la date d'inscription, au format <code>Date</code> ;</li> <li><code>code_barre</code> : le code-barre de la carte qui lui a \u00e9t\u00e9 attribu\u00e9e, au format <code>String</code> (pour les m\u00eames raisons que l'attribut <code>cp</code>)</li> </ul> <p>On obtient alors le sch\u00e9ma relationnel suivant :</p> <p>Usager(nom String, pr\u00e9nom String, email String, cp String, adresse String, inscription Date, code_barre String)</p> <p>ou bien le tableau : </p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-relations","title":"Contraintes de relations","text":"<p>Imaginons que nous n'ayons utilis\u00e9 dans la relation <code>Usager</code> comme attributs que le nom et le pr\u00e9nom. Si deux personnes nomm\u00e9es Jean Dupont veulent s'inscrire \u00e0 la m\u00e9diath\u00e8que, il y aura dans la relation deux entit\u00e9s identiques, ce qui risque de causer des probl\u00e8mes. Ce serait une violation de la contrainte de relation.</p> <p>Contrainte de relation</p> <p>Lors de la mod\u00e9lisation d'une relation, il faut s'assurer que, pour chaque entit\u00e9, un attribut ou un ensemble d'attributs permet d'identifier cette entit\u00e9 de mani\u00e8re unique.</p> <p>Un tel attribut ou ensemble d'attributs s'appelle une cl\u00e9 primaire de la relation, et est signal\u00e9 par un soulignement en traits pleins dans le sch\u00e9ma relationnel.</p> <p>Exemple</p> <p>Dans le cas de notre relation <code>Usager</code> :</p> <ul> <li>les attributs <code>nom</code>, <code>pr\u00e9nom</code>, <code>cp</code>, <code>inscription</code>, <code>adresse</code>, pris seuls, ne peuvent en aucun cas assurer le respect de la contrainte de relation. Ils ne peuvent donc pas \u00eatre choisis comme cl\u00e9 primaire;</li> <li>l'attribut <code>email</code> pourrait \u00eatre pertinent, mais ce choix emp\u00eacherait un parent de fournir son email pour l'inscription de son enfant.</li> <li>reste l'attribut <code>code_barre</code>, qui a priori, si le syst\u00e8me est correctement configur\u00e9, est bien unique pour chaque usager. Il peut donc \u00eatre choisi comme cl\u00e9 primaire, ce qu_i donne le sch\u00e9ma relationnel suivant :</li> </ul> <p>Usager(nom String, pr\u00e9nom String, email String, cp String, adresse String, inscription Date, code_barre String)</p> <p>ou bien : </p> <p>Relation <code>Livre</code></p> <p>Quel choix raisonnable pouvons-nous effectuer pour la cl\u00e9 primaire de la relation <code>Livre</code> ?</p> Un choix <p>Le choix de l'attribut <code>ISBN</code> comme cl\u00e9 primaire semble \u00eatre une bonne id\u00e9e, tant que la m\u00e9diath\u00e8que ne commande pas plusieurs ouvrages identiques. Dans ce cas, il faudra rajouter \u00e0 la relation un code-barre sp\u00e9cifique \u00e0 la m\u00e9diath\u00e8que. Mais nous consid\u00e8rerons que tel n'est pas le cas. La relation sera donc :</p> <p><code>Livre( titre *String*, auteur *String*, \u00e9diteur *String*, ann\u00e9e *Int*, &lt;ins&gt;ISBN *String*&lt;/ins&gt;)</code></p> <p>ou bien : </p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#contraintes-de-references","title":"Contraintes de r\u00e9f\u00e9rences","text":"<p>Prenons la relation <code>Emprunt</code>, que nous n'avons pas encore d\u00e9finie. Quel r\u00f4le doit-elle jouer ?</p> <p>Elle doit servir de lien entre une entit\u00e9 de la relation <code>Usager</code>, une entit\u00e9 de la relation <code>Livre</code>, et fournir une date de retour pr\u00e9vue pour le livre emprunt\u00e9.</p> <p>Une version na\u00efve serait d'utiliser pour une entit\u00e9 de la relation <code>Emprunt</code> un n-uplet de la forme :</p> <p><code>('Dupont', 'Jean', 'Apprendre \u00e0 programmer avec Python 3', 20/12/2021 )</code></p> <p>Cependant, ce type de n-uplet ne permet pas d'identifier de mani\u00e8re unique l'usager, comme nous l'avons vu dans les contraintes de relations. Il pourrait y avoir plusieurs Jean Dupont, alors que la relation <code>Emprunt</code> doit permettre d'identifier de mani\u00e8re unique une entit\u00e9 d'<code>Usager</code> ainsi qu'une de <code>Livre</code>.</p> <p>Il serait ainsi largement pr\u00e9f\u00e9rable d'utiliser les cl\u00e9s primaires des relations <code>Usager</code> et <code>Livre</code> dans la relation <code>Emprunt</code>, de la mani\u00e8re suivante :</p> <p><code>Emprunt(code_barre *String*, ISBN *String*, retour *Date*)</code></p> <p><code>code_barre</code> \u00e9tant la cl\u00e9 primaire de la relation <code>Usager</code>, elle doit par contrainte de relations identifier de mani\u00e8re unique une entit\u00e9 de cette relation. Il en est de m\u00eame pour <code>ISBN</code>, qui est la cl\u00e9 primaire de <code>Livre</code>.</p> <p>Cl\u00e9 \u00e9trang\u00e8re</p> <p>On appelle cl\u00e9 \u00e9trang\u00e8re d'une relation un attribut faisant r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation. Une cl\u00e9 \u00e9trang\u00e8re est signal\u00e9e dans un sch\u00e9ma relationnel par un soulignement en traits pointill\u00e9s.</p> <p>Dans notre exemple de la relation <code>Emprunt</code> :</p> <p>Emprunt(code_barre String, ISBN String, retour Date)</p> <p>Le fait d'utiliser des cl\u00e9s \u00e9trang\u00e8res nous permet de garantir ici un certain nombre de points :</p> <ul> <li>un emprunteur sera forc\u00e9ment un usager inscrit. Il ne sera pas possible de saisir une valeur fictive pour l'attribut <code>code_barre</code> ;</li> <li>de la m\u00eame mani\u00e8re, on a une contrainte de r\u00e9f\u00e9rence sur l'attribut <code>ISBN</code>, qui doit forc\u00e9ment \u00eatre la r\u00e9f\u00e9rence \u00e0 une entit\u00e9 de la relation <code>Livre</code>.</li> <li>de mani\u00e8re encore plus importante, l'utilisation d'une cl\u00e9 \u00e9trang\u00e8re interdira de supprimer une entit\u00e9 <code>Usager</code> si elle est r\u00e9f\u00e9renc\u00e9e dans la relation <code>Emprunt</code>. On aurait une violation de la contrainte de r\u00e9f\u00e9rence.</li> </ul> <p>Cependant, notre travail n'est pas termin\u00e9 pour la mod\u00e9lisation de la relation <code>Emprunt</code>. En effet, nous n'avons pas d\u00e9fini de cl\u00e9 primaire de cette relation : </p> <ul> <li>il serait peu judicieux d'utiliser l'attribut <code>code_barre</code> comme cl\u00e9 primaire, puisque celle-ci devant \u00eatre unique, un usager ne pourrait emprunter qu'un unique livre ;</li> <li>plusieurs emprunts pouvant avoir la m\u00eame date de retour, il est impossible d'utiliser l'attribut <code>retour</code> ;</li> <li>il est par contre possible d'utiliser comme cl\u00e9 primaire l'attribut <code>isbn</code>, celui-ci ne pouvant \u00eatre qu'unique, il garanti le fait qu'un livre ne puisse \u00eatre emprunt\u00e9 que par un usager \u00e0 la fois.</li> </ul> <p>On obtient ainsi le sch\u00e9ma relationnel suivant :</p> <p>Emprunt(code_barre String, ISBN String, retour Date)</p> <p>ou bien : </p> <p>Une erreur de mod\u00e9lisation ?</p> <p>Dans la mod\u00e9lisation actuelle de la relation <code>Livre</code>, nous avons toujours un probl\u00e8me de coh\u00e9rence et de redondance des donn\u00e9es.</p> <p>En effet, nous avons \u00e9crit la liste des auteurs comme une chaine de caract\u00e8res. Si cette mod\u00e9lisation fonctionne, elle ne permet pas d'exprimer certaines contraintes sur les donn\u00e9es, par exemple qu'un m\u00eame auteur n\u2019apparait pas deux fois dans le m\u00eame livre. On va donc simplifier la relation <code>Livre</code> de la mani\u00e8re suivante :</p> <p>Livre(titre : String, \u00e9diteur : String, ann\u00e9e : Int, ISBN : String)</p> \u00c9nonc\u00e9Solution <ol> <li>Cr\u00e9er une relation <code>Auteur</code> qui devra retenir les informations importantes sur un auteur. </li> <li>Cr\u00e9er une relation <code>Auteur_de</code> permettant de lier un auteur \u00e0 un livre.</li> <li>Pr\u00e9senter le sch\u00e9ma global de la base de donn\u00e9es</li> </ol> <ul> <li>Usager(nom String, pr\u00e9nom String, email String, cp String, adresse String, inscription Date, code_barre String)</li> <li>Livre(titre String, \u00e9diteur String, ann\u00e9e Int, ISBN String)</li> <li>Emprunt(code_barre String, ISBN String, retour Date)</li> <li>Auteur(idA Int, nom String, prenom String)</li> <li>Auteur_de( idA   Int , ISBN  String </li> </ul> <p>Ou  le sch\u00e9ma complet : </p> <p>Vous remarquerez qu'on a choisi comme cl\u00e9 primaire pour la relation <code>Auteur_de</code> le 2-uplet <code>(idA, ISBN)</code>. En effet :</p> <ul> <li>on ne peut pas choisir simplement <code>idA</code>, car un auteur peut-\u00eatre l'auteur de plusieurs livres ;</li> <li>on ne peut pas choisir simplement <code>ISBN</code>, car un livre peut avoir plusieurs auteurs.</li> </ul> <p>Par contre le 2-uplet <code>(idA, ISBN)</code> garanti bien la pr\u00e9servation des diff\u00e9rentes contraintes.</p>"},{"location":"NSI/Terminale/C04/ModeleRelationnel/#exercices","title":"Exercices","text":"<p>Exercice 1</p> \u00c9nonc\u00e9Solution <p>On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple, dans lequel chaque personne (identifi\u00e9e par son nom et son pr\u00e9nom) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone.</p> <p>Proposer une mod\u00e9lisation relationnelle de cet annuaire.</p> <p>A venir     </p> <p>Exercice 2</p> \u00c9nonc\u00e9Solution <p>Donner la mod\u00e9lisation d'un bulletin scolaire. Cette derni\u00e8re doit permettre de mentionner :</p> <ul> <li>des \u00e9l\u00e8ves, chacun poss\u00e9dant un identifiant alphanum\u00e9rique unique ;</li> <li>un ensemble de mati\u00e8res fix\u00e9es, mais qui ne sont pas donn\u00e9es ;</li> <li>au plus une note sur 20 par mati\u00e8re et par \u00e9l\u00e8ve.</li> </ul> <p>A venir</p> <p>Exercice 3</p> \u00c9nonc\u00e9Solution <p>Proposer une mod\u00e9lisation pour le r\u00e9seau de m\u00e9tro et bus de la ville de Rennes (dont le plan est disponible ici).</p> <p>Cette derni\u00e8re doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus, une fiche donnant les horaires de passage de toutes les lignes qui desservent l'arr\u00eat.</p> <p>La mod\u00e9lisation de ce r\u00e9seau n\u00e9cessite une r\u00e9flexion au pr\u00e9alable sur la pertinence des informations \u00e0 mod\u00e9liser !</p> <p>A venir</p> <ol> <li> <p>Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s, Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses\u00a0\u21a9</p> </li> <li> <p>Bases de donn\u00e9es, de la mod\u00e9lisation au SQL, Laurent Audibert, \u00e9ditions Ellipses\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.86.9277 \u21a9</p> </li> <li> <p>les formats choisis pour les dates dans les bases de donn\u00e9es sont des sujets \u00e9pineux. Pour nous fran\u00e7ais, il est \u00e9vident d'utiliser <code>JJ/MM/AAAA</code> ou <code>JJ/MM/AA</code>. Pour un \u00c9tats-Unien, ce sera <code>MM/JJ/AAAA</code>. Pour d'autres, ce sera <code>AAAA/MM/JJ</code>... Un grand nombre de m\u00e8mes de la communaut\u00e9 des programmeurs jouent sur la probl\u00e9matique des formats de dates et d'heures...\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI/Terminale/C04/Projet_Pokemon/","title":"Projet Pokemon","text":""},{"location":"NSI/Terminale/C04/Projet_Pokemon/#projet-base-de-donnee-web-pokemon","title":"Projet : Base de donn\u00e9e Web Pokemon.","text":""},{"location":"NSI/Terminale/C04/Projet_Pokemon/#ce-quil-faut-faire","title":"Ce qu'il faut faire :","text":"<p>L'objectif est de r\u00e9aliser un site web HTML5 (HTML/CSS/javascript) permettant d'obtenir les informations importantes sur tous les Pokemons pr\u00e9sent dans le fichier <code>csv</code> disponible ici. Cette base de donn\u00e9e <code>SQL</code> sera interrog\u00e9e au moyen d'un serveur Python <code>Flask</code> et du module <code>sqlite3</code>.</p> <p>Il faudra suivre le planning suivant :</p> <ol> <li>Extraire les lignes du fichier CSV de mani\u00e8re \u00e0 construire le fichier de base de donn\u00e9e (programme python ind\u00e9pendant).</li> <li>Cr\u00e9er un serveur minimal <code>Flask</code> permettant  d'acc\u00e9der \u00e0 2 ou 3 templates diff\u00e9rents : page de recherche de Pokemons, page de r\u00e9sultats de recherche, et \u00e9ventuellement une page de comparaison entre Pokemons.</li> <li>Cr\u00e9er les templates HTML/Jinja2, en particulier la page de recherche dont le formulaire envoie par une m\u00e9thode <code>POST</code> les donn\u00e9es \u00e0 une route de traitement (voir point suivant).</li> <li>Cr\u00e9er une route sp\u00e9cifique permettant de traiter les donn\u00e9es du formulaire de la page de recherche, qui envoie ensuite les donn\u00e9es extraites par des ordres <code>SQL</code> soit \u00e0 la page d'affichage du Pokemon s\u00e9lectionn\u00e9, soit de nouveau \u00e0 une page interm\u00e9diaire permettant d'obtenir la liste des pokemons correspondant aux crit\u00e8res de recherches s\u00e9lectionn\u00e9 (g\u00e9n\u00e9ration, type, etc...)</li> <li>Habiller le tout avec du CSS (en dernier !)</li> </ol>"},{"location":"NSI/Terminale/C04/Projet_Pokemon/#les-tutoriels-a-suivre","title":"Les tutoriels \u00e0 suivre :","text":"<ul> <li>le tutoriel <code>sqlite3</code> trouvable ici.</li> <li>Le tutoriel <code>Flask</code> trouvable ici.</li> </ul>"},{"location":"NSI/Terminale/C04/Projet_Pokemon/#des-ressources-utiles","title":"Des ressources utiles","text":"<p>Une base de donn\u00e9e en ligne d\u00e9j\u00e0 existante est pr\u00e9sente ici. En particulier les images fournies sont toutes de la forme :</p> <pre><code>https://img.pokemondb.net/artwork/large/{nom du pokemon}.jpg\n</code></pre>"},{"location":"NSI/Terminale/C05/ABR/","title":"Arbres Binaires de Recherche","text":""},{"location":"NSI/Terminale/C05/ABR/#arbres-binaires-de-recherche-abr","title":"Arbres Binaires de Recherche (ABR)","text":""},{"location":"NSI/Terminale/C05/ABR/#premier-exemple","title":"Premier Exemple","text":"<p>D'apr\u00e8s Num\u00e9rique et Sciences Informatiques, 24 le\u00e7ons avec exercices corrig\u00e9s, Balabonski, Conchon, Filli\u00e2tre, Nguyen, Editions Ellipses</p> <p>Imaginez une biblioth\u00e8que contenant un extr\u00eamement grand nombre de livres. Cette biblioth\u00e8que est organis\u00e9e de la mani\u00e8re suivante :</p> <ul> <li>Il y a 17 576 pi\u00e8ces diff\u00e9rentes.</li> <li>Chaque pi\u00e8ce est rep\u00e9r\u00e9e par une suite de trois lettres, et dans cette pi\u00e8ce sont rang\u00e9s tous les livres dont les titres commencent par ces trois lettres.</li> <li>Chaque pi\u00e8ce poss\u00e8de deux sorties, une \u00e0 droite et une \u00e0 gauche.</li> <li>La sortie de gauche m\u00e8ne toujours soit \u00e0 une salle dont les trois lettres sont situ\u00e9es avant dans l'ordre alphab\u00e9tique, soit nulle part.</li> <li>La sortie de droite m\u00e8ne toujours soit \u00e0 une salle dont les trois lettres sont situ\u00e9es apr\u00e8s dans l'ordre alphab\u00e9tique, soit nulle part.</li> </ul> <p>Une repr\u00e9sentation de cette biblioth\u00e8que peut \u00eatre donn\u00e9e sous la forme d'un arbre binaire tel que le suivant :</p> <p></p> <p>Question</p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>Dans cet arbre, pr\u00e9ciser o\u00f9 sont situ\u00e9s les livres dont le titre commence par :<ol> <li><code>KNU</code></li> <li><code>UDP</code></li> <li><code>JET</code></li> </ol> </li> <li>Pourquoi y a-t-il 17 576 pi\u00e8ces diff\u00e9rentes ?</li> </ol> <p>A venir !</p> <p>Cette r\u00e9partition, pour peu qu'elle soit correctement faite (c'est-\u00e0-dire que le choix des lettres soit pertinent), peut \u00eatre incroyablement efficace. Dans le meilleur des cas, il ne faudra traverser qu'au maximum 15 salles pour trouver n'importe quel livre. En effet, si la biblioth\u00e8que est correctement organis\u00e9e, quasiment chaque n\u0153ud aura 2 sorties, d'o\u00f9 un arbre (presque) parfaitement \u00e9quilibr\u00e9, qui v\u00e9rifiera quasiment la r\u00e8gle \\(N = 2^h-1\\) (voir le cours pr\u00e9c\u00e9dent). La hauteur sera donc d'environ \\(log_2(17 576)\\) soit environ \\(15\\). </p> <p>Cette structure sera particuli\u00e8rement utile pour effectuer des recherches : on l'appelle ainsi un arbre binaire de recherche (ou BST, Binary Search Tree en anglais).</p> <p>Une mauvaise r\u00e9partition</p> <p>L'importance de l'organisation des salles est ici primordial, toutes les solutions ne se valant pas. Ci-dessous une r\u00e9partition qui est dans le pire des cas : les sous-arbres gauches sont toujours vide (on appelle un tel type d'arbre un peigne).</p> <p></p> <p>Dans cette situation, il faudra traverser les 17 576 pi\u00e8ces pour atteindre les livres dont le titre commence par <code>ZZZ</code>.</p>"},{"location":"NSI/Terminale/C05/ABR/#arbres-binaires-de-recherches-et-algorithmes","title":"Arbres Binaires de recherches et algorithmes","text":""},{"location":"NSI/Terminale/C05/ABR/#definition","title":"D\u00e9finition","text":"<p>Arbre Binaire de Recherche (ABR)</p> <p>Un ABR ou Arbre Binaire de Recherche est un arbre binaire v\u00e9rifiant les propri\u00e9t\u00e9s suivantes :</p> <ul> <li>les noeuds contiennent des valeurs appel\u00e9es cl\u00e9s pouvant \u00eatre compar\u00e9es entre elles (nombres, chaines de caract\u00e8res, ...) ;</li> <li>toutes les cl\u00e9s situ\u00e9es dans le sous-arbre gauche (resp. droit) d'un noeud sont inf\u00e9rieures (resp. sup\u00e9rieures) \u00e0 la cl\u00e9 du noeud.</li> </ul> <p>Exemples</p> Exemple 1Exemple 2Contre-exemple 1Contre-exemple 2 <p></p> <p>Il s'agit bien d'un ABR.</p> <p></p> <p>Il s'agit bien d'un ABR. On peut remarquer qu'il poss\u00e8de le m\u00eame ensemble de noeuds que le pr\u00e9c\u00e9dent, mais pas dans le m\u00eame ordre.</p> <p></p> <p>Ce n'est pas un ABR, le noeud 5 \u00e9tant dans le sous-arbre gauche du noeud 4, alors que les sous-arbres gauches doivent poss\u00e9der des cl\u00e9s de valeurs inf\u00e9rieures.</p> <p></p> <p>Ce n'est pas un ABR tout simplement parce qu'il n'est pas binaire.</p> <p>Exercice</p> \u00c9nonc\u00e9R\u00e9ponse <p>Appliquer \u00e0 la main les parcours pr\u00e9fixe, infixe et suffixe pour chacun des exemples d'ABR pr\u00e9c\u00e9dents. Que remarque-t-on ?</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR/#principe-de-limplementation-en-python","title":"Principe de l'impl\u00e9mentation en Python","text":"<p>Il n'y a aucune diff\u00e9rence entre un ABR et un arbre binaire en terme d'impl\u00e9mentation, on pourra donc conserver :</p> <ul> <li>les objets <code>Node</code>, avec ou sans r\u00e9f\u00e9rence au n\u0153ud parent ;</li> <li>les fonctions <code>hauteur</code>, <code>taille</code> et <code>est_vide</code> ;</li> <li>les fonctions <code>visitePrefixe</code>, <code>visiteInfixe</code> et <code>`visiteSuffixe</code>, mais on utilisera surtout les parcours infixes au vu de la remarque de l'exercice pr\u00e9c\u00e9dent.</li> </ul>"},{"location":"NSI/Terminale/C05/ABR/#recherches-dans-un-abr","title":"Recherches dans un ABR","text":""},{"location":"NSI/Terminale/C05/ABR/#recherche-dune-cle","title":"Recherche d'une cl\u00e9","text":"<p>Un ABR est sp\u00e9cialement con\u00e7u pour la recherche, particuli\u00e8rement pour la recherche r\u00e9cursive. La m\u00e9thode est la suivante :</p> <p>Algorithme de recherche</p> <p>On compare la valeur cherch\u00e9e avec la cl\u00e9 de la racine :</p> <ul> <li>si elle est \u00e9gale, la valeur est trouv\u00e9e et on peut renvoyer <code>Vrai</code> ;</li> <li>si elle est inf\u00e9rieure, alors on recherche r\u00e9cursivement dans le sous-arbre gauche ;</li> <li>si elle est sup\u00e9rieure, alors on recherche r\u00e9cursivement dans le sous-arbre droit.</li> </ul> <p>Si on atteint une feuille dont la cl\u00e9 n'est pas la valeur recherch\u00e9e, on sait alors que la valeur recherch\u00e9e n'est la cl\u00e9 d'aucun n\u0153ud, elle ne figure donc pas dans l'arbre de recherche. Pratiquement d\u00e8s qu'on tombe sur un arbre vide, on peut affirmer que la cl\u00e9 n'est pas dans l'arbre, et on renvoie <code>Faux</code>.</p> <p>Impl\u00e9mentation en Python</p> <p>Si on suppose que <code>tree</code> est est ABR, la  fonction de recherche de la cl\u00e9 <code>x</code> dans <code>tree</code> s'\u00e9crit :</p> <pre><code>def appartient(x, tree) :\n    if tree == None :\n        return False\n    elif tree.valeur == x :\n        return True\n    elif x&lt;tree.valeur :\n        return appartient(x, tree.gauche)\n    else :\n        return appartient(x, tree.droit)\n</code></pre> <p>En termes de complexit\u00e9, dans le pire des cas (arbre peigne), la complexit\u00e9 d\u00e9pend de la taille de l'arbre. On est donc dans une complexit\u00e9 lin\u00e9aire (en \\(\\mathscr{O}(n)\\)), ce qui n'est pas meilleur que la recherche dans une liste chain\u00e9e. Mais si l'arbre est \u00e9quilibr\u00e9, la recherche devient en \\(\\mathscr{O}(log_2(n))\\), ce qui est consid\u00e9rablement plus rapide.</p> <p>Pour comprendre cette diff\u00e9rence de rapidit\u00e9 regardez le tableau suivant donnant les valeurs de \\(log_2(n)\\) :</p> <p>| \\(n\\) | \\(log_2(n)\\) |</p>"},{"location":"NSI/Terminale/C05/ABR/#recherches-de-cles-particulieres","title":"Recherches de cl\u00e9s particuli\u00e8res","text":"<p>Exercice</p> Enonc\u00e9Soplutions <ol> <li>O\u00f9 se trouve le plus petit \u00e9l\u00e9ment d'un ABR ? En d\u00e9duire l'impl\u00e9mentation en Python d'une fonction <code>minimum(tree)</code> renvoyant la cl\u00e9 minimale de l'ABR, et <code>None</code> si l'arbre est vide.</li> <li>Faire de m\u00eame une fonction <code>maximum(tree)</code>.</li> <li>Quelles sont les complexit\u00e9s de ces deux fonctions dans le pire des cas ?</li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR/#recherche-du-successeur-dune-cle","title":"Recherche du successeur d'une cl\u00e9","text":"<p>On appelle successeur d'une cl\u00e9 donn\u00e9e la valeur suivant cette cl\u00e9 lors du parcours infixe de cet arbre. Bien qu'il soit facile de d\u00e9terminer un successeur en parcourant l'arbre, il existe un algorithme beaucoup plus rapide n'utilisant pas la comparaison des cl\u00e9s :</p> <p>D\u00e9terminer le successeur d'un noeud</p> Enonc\u00e9 <p>On consid\u00e8re l'ABR suivant :</p> <p></p> <ol> <li>Quel est le successeur de 15 ? de 17 ? de 13 ? de 20 ?</li> <li>Pour la structure d\u2019ABR de l\u2019arbre, que repr\u00e9sente chacun de ces successeurs vis-\u00e0-vis du noeud initial ?</li> <li> <p>Compl\u00e9ter la phrase suivante :</p> <p>Quote</p> <p>En utilisant la structure d\u2019un ABR, on d\u00e9duit la m\u00e9thode suivante pour d\u00e9terminer le successeur d\u2019un noeud \\(A\\) :</p> <ul> <li>si le sous-arbre droit de \\(A\\) est non vide, alors le successeur de \\(A\\) est .......... de ce sous-arbre droit ;</li> <li>si le sous-arbre droit de est vide et que \\(A\\) poss\u00e8de un successeur (il n'est pas le maximum de l'arbre), alors ce successeur est le premier ........ de \\(A\\) dont le ........... est aussi anc\u00eatre de \\(A\\).</li> </ul> </li> </ol> <p>Une limite ?</p> <p>Il est \u00e0 noter que cette m\u00e9thode de recherche n\u00e9cessite d'avoir un arbre doublement cha\u00een\u00e9, c'est-\u00e0-dire o\u00f9 chaque noeud poss\u00e8de un lien vers son parent. Dans ce cas un algorithme exact de cette m\u00e9thode est :</p> <pre><code>fonction successeur(x) :\n    Si x.droit est non-vide\n        Renvoyer minimum(x.droit)\n    Sinon\n        y = x.parent\n        TantQue y est non-vide et x == y.droit Faire\n            x = y\n            y =  x.parent\n        Retourner (y)   \n</code></pre> <p>Recherche du pr\u00e9deceseur</p> Enonc\u00e9R\u00e9ponse <p>Comment rechercher efficacement le pr\u00e9deceseur d'un noeud dans un ABR ?</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR/#insertion-dans-un-abr","title":"Insertion dans un ABR","text":"<p>Jusqu'\u00e0 maintenant, nous avons travaill\u00e9 en supposant que les arbres avec lesquels nous travaillons sont bien des ABR. Mais comment les cr\u00e9er ?</p> <p>Cette quaestion revient \u00e0 se demander comment ajouter un noeud \u00e0 un ABR d\u00e9j\u00e0 existant, \u00e9ventuellement vide. Cette opr\u00e9taion n'est pas \u00e9vidente, car il faut conserver apr\u00e8s l'ajout la structure d'ABR. Il existe plusieurs solutions, mais nous ne nous intereserons qu'\u00e0 une seule : l'insertion aux feuilles.</p> <p>Dans cette m\u00e9thode, les nouveaux noeuds sont ajout\u00e9s en tant que feuilles du nouvel arbre, l\u00e0 o\u00f9 elles devraient \u00eatre en conservant la structure d'ABR.</p> <p>Application manuelle</p> Enonc\u00e9Solution <p></p> <p>On consid\u00e8re l'ABR ci-dessus : Ins\u00e9rer les noeuds de valeurs suivantes : 23, 19, 1 10, 8 et 5.</p> <p></p> <p>L'insertion aux feuilles d'un \u00e9l\u00e9ment dans un ABR se fait tout comme une recherche : on cherche la cl\u00e9 du n\u0153ud \u00e0 ins\u00e9rer ; lorsqu'on arrive \u00e0 une feuille, on ajoute le n\u0153ud comme fils de la feuille en comparant sa cl\u00e9 \u00e0 celle de la feuille : si elle est inf\u00e9rieure, le nouveau n\u0153ud sera \u00e0 gauche ; sinon il sera \u00e0 droite. </p> <p>Un algorithme possible est :</p> <pre><code>fonction Insertion(tree, elem)\n    Si tree est vide\n        retourner Noeud(elem,None,none)\n    Sinon \n        Si elem &lt; tree.valeur\n            retourner Noeud(tree.valeur,Insertion(tree.gauche, elem),tree.droit)\n        Sinon\n            retourner Noeud(tree.valeur,tree.gauche,Insertion(tree.droit, elem))\n</code></pre> <p>Impl\u00e9mentation en Python</p> Enonc\u00e9Solution <p>Impl\u00e9menter une fonction <code>insertion(tree, elem)</code> qui ins\u00e8re aux feuilles l'\u00e9lement <code>elem</code> dans l'ABR <code>tree</code>.</p> <p>A venir !</p> <p>Exercice</p> Enonc\u00e9Solution <p>On consid\u00e8re les listes <code>l1 = [15,12,7,8,1,23,13]</code> et <code>l2 = [7,1,23,13,15,8,12]</code>.</p> <ol> <li>Cr\u00e9er \u00e0 la main les ABR repr\u00e9sentants ces listes en utilisant la m\u00e9thode de l'insertion aux feuilles.</li> <li>Impl\u00e9menter ces ABR en Python, et calculer leurs tailles et leurs hauteur.</li> <li>Effecvtuer un parcours infixe sur chacun de ces ABR. Que remarque-t-on ?</li> </ol> <p>A venir</p> <p>Une autre forme de tri ?</p> Enonc\u00e9Solution <p>En s'aidant de l'exercice pr\u00e9c\u00e9dent, cr\u00e9er une fonction <code>triABR(liste)</code> qui trie une liste qui lui est pas\u00e9e en argument en utilisant un ABR.</p> <p>A venir</p>"},{"location":"NSI/Terminale/C05/ABR_Python/","title":"Impl\u00e9mentation des ABR","text":""},{"location":"NSI/Terminale/C05/ABR_Python/#encapsulation-dun-abr-en-python","title":"Encapsulation d'un ABR en Python","text":"<p>Dans cette partie nous travaillerons dans un fichier <code>ABR.py</code> qui contiendra les classes, m\u00e9thodes et fonctions n\u00e9cessaires.</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#classes-node-et-abr","title":"Classes Node et ABR","text":"<p>Comme un ABR est avant tout un arbre binaire, nous allons utiliser une construction similaire pour la classe <code>Node</code> \u00e0 celle d\u00e9j\u00e0 effectu\u00e9e pour les arbres binaires :</p> <pre><code>class Node :\n    def __init__(self, valeur, gauche = None, droit = None, parent = None) :\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droit = droit\n        self.parent = parent\n</code></pre> <p>M\u00e9thode <code>estFeuille</code></p> \u00c9nonc\u00e9Solution <p>Ajouter une m\u00e9thode <code>estFeuille</code> renvoyant un bool\u00e9en permettant de savoir si le n\u0153ud en question est une feuille de l'arbre.</p> <p>A venir !</p> <p>Une fois cette classe d\u00e9finie, nous allons d\u00e9finir une classe <code>ABR</code> qui encapsulera la totalit\u00e9 de l'arbre et des m\u00e9thodes qui lui sont associ\u00e9es (avec quelques exceptions toutefois pour ne pas surcharger la compr\u00e9hension des \u00e9l\u00e9ments suivants).</p> <pre><code>class ABR :\n    def __init__ (self, racine = None) :\n        self.racine = racine\n</code></pre> <p>M\u00e9thode <code>est_vide</code></p> Enonc\u00e9Solution <p>Ajouter une m\u00e9thode <code>est_vide</code> \u00e0 la classe <code>ABR</code> renvoyant un bool\u00e9en permettant de savoir si l'arbre est vide</p> <p>A venir !</p> <p>M\u00e9thode <code>hauteur</code></p>  Enonc\u00e9Solution <ol> <li>Copier-coller la fonction <code>hauteur</code>, d\u00e9j\u00e0 vue dans la partie sur les arbres binaires, en-dehors des classes <code>ABR</code> et <code>Node</code>.</li> <li>Cr\u00e9er une m\u00e9thode <code>hauteur</code> \u00e0 la classe <code>ABR</code> renvoyant la hauteur de l'arbre, et utilisant la fonction <code>hauteur</code> ci-dessus. Vous pouvez utiliser le code suivant permettant d'impl\u00e9menter l'ABR repr\u00e9sent\u00e9 ci-dessous pour tester vos diff\u00e9rentes m\u00e9thodes :</li> </ol> ArbreCode <p></p> <pre><code>if __name__ == \"__main__\" :\n    n1 = Node(1)\n    n2 = Node(3)\n    n3 = Node(2, n1, n2)\n    n1.parent = n3\n    n2.parent = n3\n    n4 = Node(10)\n    n5 = Node( 7)\n    n6 = Node(9,n5, n4)\n    n4.parent=n6\n    n5.parent = n6\n    n7 = Node(5, n3, n6)\n    n3.parent = n7\n    n6. parent = n7\n    n8 = Node(4)\n    n2.droit = n8\n    n8.parent = n2\n\n    tree = ABR(n7)\n</code></pre> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#visualisation-dun-abr","title":"Visualisation d'un ABR","text":""},{"location":"NSI/Terminale/C05/ABR_Python/#sous-forme-de-texte","title":"Sous forme de texte","text":"<p>L'objectif est de repr\u00e9senter un ABR sous la forme d'une cha\u00eene de caract\u00e8res multilignes, telle que celle-ci :</p> <pre><code>5\n  2\n    1\n    3\n      X\n      4\n  9\n    7\n    10\n</code></pre> <p>Dans cette repr\u00e9sentation :</p> <ul> <li>Chaque niveau est indent\u00e9 de deux espaces suppl\u00e9mentaires par rapport au suivant ;</li> <li>les n\u0153uds sont affich\u00e9s, puis leur sous-arbre gauche s'il existe, puis leur sous-arbre droit s'il existe ;</li> <li>si un sous-arbre n'existe pas, il est remplac\u00e9 par <code>X</code>, sauf dans le cas des feuilles o\u00f9 les sous-arbres ne sont pas affich\u00e9s.</li> </ul> <p>M\u00e9thode <code>toString</code> </p> \u00c9nonceSolution <p>Ajouter une m\u00e9thode <code>toString</code> \u00e0 la classe <code>Node</code> qui renvoie une chaine de caract\u00e8res correspondant \u00e0 l'affichage pr\u00e9c\u00e9dent.</p> <p>A titre d'aide, la m\u00e9thode <code>toString</code> prend, en plus de l'argument obligatoire <code>self</code>, un argument <code>shift</code> repr\u00e9sentant le d\u00e9calage de caract\u00e8re d\u00e9j\u00e0 effectu\u00e9. La repr\u00e9sentation d'un n\u0153ud sera alors donn\u00e9e par  :</p> <p></p><pre><code>representation = shift + str(self.valeur)+\"\\n\"\n</code></pre> auquel il faudra ajouter le cas \u00e9ch\u00e9ant la repr\u00e9sentation du sous-arbre gauche puis la repr\u00e9sentation du sous-arbre droit. <p>L'appel <code>n7.toString()</code> doit renvoyer la bonne repr\u00e9sentation.</p> <p>A venir !</p> <p>M\u00e9thode DUNDERS <code>__str__</code></p> \u00c9nonceSolution <p>Ajouter une m\u00e9thode DUNDERS <code>__str__</code> \u00e0 la classe <code>ABR</code> qui renvoie la chaine de caract\u00e8res correspondant \u00e0 l'affichage de l'arbre.</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#avec-le-module-graphviz","title":"Avec le module Graphviz","text":"<p>Bon, ok, nous avons une repr\u00e9sentation, mais elle est loin d'\u00eatre lisible...</p> <p>Heureusement il existe un module python, le module <code>graphviz</code>, qui va nous permettre de convertir notre ABR en un fichier <code>png</code> plus lisible. L'objectif n'\u00e9tant pas de comprendre comment fonctionne <code>graphviz</code>, voici les codes n\u00e9cessaires :</p> <ol> <li>Commen\u00e7ons par t\u00e9l\u00e9charger et d\u00e9compacter le programme <code>Graphviz</code> dans le dossier <code>Documents</code></li> <li>Installez le module <code>graphviz</code> dans <code>Thonny</code>.</li> <li> <p>Dans le fichier Python contenant la classe <code>ABR</code>, ajoutez les lignes suivantes (Si le dossier <code>bin</code> contenant le programme <code>dot.exe</code> correspond bien au chemin donn\u00e9 :</p> <p></p><pre><code>import os\n\nos.environ['PATH'] += os.pathsep +\"P:\\\\Documents\\\\Graphviz\\\\Graphviz\\\\bin\"\n</code></pre> 2. Importez la classe <code>Digraph</code> depuis ce module en ajoutant : <p></p><pre><code>from graphviz import Digraph\n</code></pre> 3. Ajoutez \u00e0 la classe <code>Node</code> la m\u00e9thode suivante : <p></p><pre><code>def to_image(self, graphe, etiquette = None) :\n    n\u0153ud = str(self.valeur)\n    graphe.node(n\u0153ud)\n    if not(self.parent is None) :\n        graphe.edge(str(self.parent.valeur), n\u0153ud, label=etiquette)\n    if not(self.gauche is None) :\n        self.gauche.to_image(graphe, \"G\")\n    if not(self.droit is None) :\n        self.droit.to_image(graphe, \"D\")\n</code></pre> 4. Ajoutez \u00e0 la classe <code>ABR</code> la m\u00e9thode suivante : <p></p><pre><code>def to_image(self, title=\"arbre\") :\n    if not(isinstance(title, str)) :\n        title = 'arbre'\n    graphe=Digraph()\n    self.racine.to_image(graphe)\n    graphe.render(title, view = True, format='png')\n</code></pre> 5. Testez la m\u00e9thode <code>to_image</code> sur l'objet <code>tree</code>. Elle doit vous donner un PDF nomm\u00e9 <code>arbre.pdf</code> (ou autre si vous avez renseign\u00e9 l'argument optionnel <code>title</code>) contenant une repr\u00e9sentation de l'ABR. </li> </ol>"},{"location":"NSI/Terminale/C05/ABR_Python/#methodes-de-la-classe-abr","title":"M\u00e9thodes de la classe ABR","text":""},{"location":"NSI/Terminale/C05/ABR_Python/#methode-search","title":"M\u00e9thode search","text":"<p>La fonction <code>appartient(x, tree)</code> que nous avons vu dans la partie pr\u00e9c\u00e9dente n'est pas directement utilisable en tant que m\u00e9thode, mais nous allons nous en inspirer :</p> <p>M\u00e9thodes <code>search</code> </p> \u00c9nonc\u00e9Solution <ol> <li>Cr\u00e9er une m\u00e9thode <code>search</code> pour la classe <code>Node</code> permettant de savoir si une valeur <code>x</code> pass\u00e9e en argument appartient au sous-arbre ayant pour racine le n\u0153ud actuel. Cette m\u00e9thode renverra le n\u0153ud contenant la cl\u00e9, ou <code>None</code> si la cl\u00e9 n'est pas trouv\u00e9e.(Indice : un n\u0153ud ne peut pas \u00eatre \u00e9gal \u00e0 <code>None</code>, ce qui fait la diff\u00e9rence par rapport \u00e0 la fonction <code>appartient</code>) </li> <li>Cr\u00e9er une m\u00e9thode <code>search</code> pour la classe <code>ABR</code> permettant de savoir si une valeur <code>x</code> pass\u00e9e en argument appartient \u00e0 l'ABR. Cette m\u00e9thode renverra le n\u0153ud contenant la cl\u00e9, ou <code>None</code> si la cl\u00e9 n'est pas trouv\u00e9e.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#methodes-minimum-et-maximum","title":"M\u00e9thodes minimum et maximum","text":"<p>M\u00e9thodes <code>minimum</code> et <code>maximum</code></p> \u00c9nonc\u00e9Solution <ol> <li>En s'inspirant de la fonction <code>minimum</code> d\u00e9j\u00e0 \u00e9tudi\u00e9e, cr\u00e9er une m\u00e9thode minimum pour la classe <code>Node</code>, qui renvoie le n\u0153ud de cl\u00e9 minimale (*Indice : il faudra arr\u00eater la recherche quand le sous-arbre gauche est vide), puis une pour la classe <code>ABR</code>.</li> <li>Faire de m\u00eame pour le maximum.</li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#methodes-successor-et-predecessor","title":"M\u00e9thodes <code>successor</code> et <code>predecessor</code>","text":"<p>Les m\u00e9thodes de recherches de successeurs et de pr\u00e9d\u00e9cesseurs ne peuvent pas \u00eatre r\u00e9solues r\u00e9cursivement. Il faudra donc effectuer une boucle <code>TantQue</code> pour rechercher l'un ou l'autre, tel que nous l'avons vu dans cet algorithme</p> <p>Recherche du successeur</p> <p>On va impl\u00e9menter une m\u00e9thode <code>successor</code> pour la classe <code>ABR</code>, qui prend en argument la cl\u00e9 du n\u0153ud dont on cherche le successeur.</p> Etape 1Etape 2Etape 3 <p>La premi\u00e8re \u00e9tape est de chercher le n\u0153ud contenant la cl\u00e9 pass\u00e9e en argument. Si bien s\u00fbr la cl\u00e9 n'est pas trouv\u00e9e, on renvoie <code>None</code>. </p><pre><code>def successor(self,x) :\n    n = self.search(x)\n    if n is None :\n        return None\n</code></pre> <p>Sinon, si le sous-arbre droit de ce n\u0153ud n'est pas vide, on renvoie le minimum de ce sous-arbre.</p> <pre><code>def successor(self,x) :\n    n = self.search(x)\n    if n is None :\n        return None\n    else :\n        if not(n.droit is None) :\n            return n.droit.minimum()\n</code></pre> <p>Dans les autres cas, il faudra remonter les anc\u00eatres jusqu'\u00e0 trouver le premier anc\u00eatre dont le fils gauche est aussi un anc\u00eatre du n\u0153ud de cl\u00e9 cherch\u00e9e. </p><pre><code>def successor(self,x) :\n    n = self.search(x)\n    if n is None :\n        return None\n    else :\n        if not(n.droit is None) :\n            return n.droit.minimum()\n        else :\n            ancetre = n.parent\n            while not(ancetre  is None) and (n == ancetre.droit) :\n                n = ancetre\n                ancetre = n.parent\n            return ancetre\n</code></pre> <p>M\u00e9thode <code>predecessor</code></p> \u00c9nonc\u00e9Solution <p>Sur le m\u00eame mod\u00e8le que pr\u00e9c\u00e9demment, impl\u00e9menter une m\u00e9thode <code>predecessor</code>  pour la classe <code>ABR</code>qui donnera le pr\u00e9d\u00e9cesseur d'une cl\u00e9 <code>x</code> pass\u00e9e en argument.</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/ABR_Python/#methode-insert","title":"M\u00e9thode insert","text":"<p>M\u00e9thode <code>insert</code></p> \u00c9nonc\u00e9Solution <ol> <li> <p>Sur le mod\u00e8le de l'algorithme, \u00e9crire une m\u00e9thode <code>\u00ecnsert</code> pour la classe <code>Node</code> permettant d'ins\u00e9rer la cl\u00e9 pass\u00e9e en argument tout en conservant la structure d'ABR, et en respectant les conditions suivantes :</p> <ul> <li>si une cl\u00e9 est d\u00e9j\u00e0 pr\u00e9sente, la nouvelle cl\u00e9 sera ins\u00e9r\u00e9e dans le sous-arbre droit.</li> <li>il faudra penser \u00e0 mettre \u00e0 jour le p\u00e8re du nouveau n\u0153ud cr\u00e9\u00e9 ! (Indice :le p\u00e8re du n\u0153ud cr\u00e9e est l'objet courant !)</li> </ul> </li> <li> <p>Cr\u00e9er une m\u00e9thode <code>insert</code> pour la classe <code>ABR</code>.</p> </li> </ol> <p>A venir !</p> <p>\u00c7a-y-est, nous avons maintenant une classe <code>ABR</code> qui peut \u00eatre totalement utilis\u00e9e de mani\u00e8re ind\u00e9pendante ! Il est d\u00e9sormais possible de cr\u00e9er un ABR vide, d'y ins\u00e9rer des \u00e9l\u00e9ments, d'effectuer des recherches, etc. Ainsi le code suivant permet facilement d'it\u00e9rer sur une liste pour cr\u00e9er un ABR :</p> <pre><code>tree = ABR()\nfor elem in [15,12,7,8,1,23,13] :\n    tree.insert(elem)\ntree.to_image()\n</code></pre>"},{"location":"NSI/Terminale/C05/ABR_Python/#suppression-dune-cle-dun-abr-hors-programme","title":"Suppression d'une cl\u00e9 d'un ABR (hors programme)","text":"<p>Pour l'instant, nous avons vu comment ajouter un \u00e9l\u00e9ment \u00e0 un ABR, mais nous n'avons pas encore abord\u00e9 la question de la suppression d'un \u00e9l\u00e9ment. Il s'agit d'une question bien plus complexe, dont je vais vous pr\u00e9senter les grandes lignes ici, bien qu'elles soient hors-programme (et donc il n'est pas du tout n\u00e9cessaire de tout comprendre !)</p> <p>Lorsqu'on veut supprimer une cl\u00e9 d'un ABR, plusieurs situations peuvent se produire :</p> <ol> <li>La cl\u00e9 n'est pas pr\u00e9sente dans l'ABR, donc il n'y a rien \u00e0 faire.</li> <li> <p>La cl\u00e9 est celle d'une feuille. Dans ce cas la suppression est simple : on passe \u00e0 <code>None</code> le fils correspondant du parent, ce qui a pour effet de supprimer le n\u0153ud.</p> <p></p> </li> <li> <p>La cl\u00e9 est celle d'un n\u0153ud poss\u00e9dant un seul fils. Dans ce cas, on remplace le n\u0153ud supprim\u00e9 par son fils, ce qui conserve les propri\u00e9t\u00e9s de l'ABR.</p> <p></p> </li> <li> <p>Si la cl\u00e9 poss\u00e8de deux fils, alors il y a deux possibilit\u00e9s :</p> <ul> <li>on remplace le n\u0153ud par le minimum du sous-arbre droit, qui est le successeur du n\u0153ud supprim\u00e9 ;</li> <li>ou on remplace par le maximum du sous-arbre gauche, qui est le pr\u00e9d\u00e9cesseur du n\u0153ud supprim\u00e9.</li> </ul> <p></p> </li> </ol> <p>Pour r\u00e9aliser une telle impl\u00e9mentation, il faut donc faire un choix, et nous choisissons de remplacer le n\u0153ud supprim\u00e9 par le minium \u00e0 droite. Pour simplifier la lecture du code, on s\u00e9parera dans la classe <code>Node</code> en diff\u00e9rentes m\u00e9thodes :</p> <pre><code>def supprimer(self, valeur):\n    if valeur &lt; self.valeur:\n        self.gauche = self.gauche.supprimer(valeur)\n        return self\n    elif valeur &gt; self.valeur:\n        self.droit = self.droit.supprimer(valeur)\n        return self\n    else:\n        return self.supprimerNoeudCourant()\n\ndef supprimerNoeudCourant(self):\n    if self.estFeuille():\n        return None\n    elif self.gauche is None:\n        return self.droit\n    elif self.droit is None:\n        return self.gauche\n    else:\n        ## on cherche le n\u0153ud minimum du sous-arbre droit\n        n\u0153udMin = self.droit.minimum()\n        ## On met \u00e0 jour la valeur du n\u0153ud courant\n        self.valeur = n\u0153udMin.valeur\n        ## On supprime le n\u0153ud minimal, qui ne poss\u00e8de pas de fils gauche (mais peut\n        ## \u00e9ventuellement poss\u00e9der une descendance droite\n        n\u0153udMin.parent.droit = n\u0153udMin.droit\n        ## et on retourne le n\u0153ud courant\n        return self      \n</code></pre> <p>Il ne reste plus qu'\u00e0 ajouter la m\u00e9thode suivante \u00e0 la classe <code>ABR</code> :</p> <pre><code>def supprimer(self, valeur):\n    if self.est_vide():\n        return\n    else:\n        self.racine = self.racine.supprimer(valeur)\n</code></pre>"},{"location":"NSI/Terminale/C05/AVL/","title":"Equilibrage des ABR : les AVL","text":""},{"location":"NSI/Terminale/C05/AVL/#equilibrage-des-arbres","title":"Equilibrage des arbres","text":""},{"location":"NSI/Terminale/C05/AVL/#arbres-desequilibres","title":"Arbres d\u00e9s\u00e9quilibr\u00e9s ?","text":"<p>Cr\u00e9ation d'arbres d\u00e9s\u00e9quilibr\u00e9s</p> Enonc\u00e9Solution <ol> <li> <p>Cr\u00e9er quatre ABR <code>tree1</code>, <code>tree2</code>, ...,  \u00e0 partir des listes suivante :</p> <pre><code>l1 = [5, 2, 11, 3, 7, 13, 9]\nl2 = [7, 3, 11, 2, 5, 9, 13]\nl3 = [2, 3, 5, 11, 7, 13, 9]\nl4 = [2, 3, 5, 7, 9, 11, 13]\n</code></pre> </li> <li> <p>Que peut-on dire des quatre listes pr\u00e9c\u00e9dentes.</p> </li> <li>Afficher les 4 arbres obtenus.</li> <li> <p>En consid\u00e9rant que le temps de recherche dans un ABR est directement proportionnel \u00e0 la hauteur du noeud recherch\u00e9, le temps moyen pour trouver dans <code>tree1</code> :</p> <ul> <li>le noeud 5 est de 1 ;</li> <li>les noeuds 2 et 11 de 2 ;</li> <li>les noeuds 3, 7 et 13 de 3 ;</li> <li>le noeud 9 de 4.</li> </ul> <p>le temps moyen de recherche sur cet arbre est donc \\(\\dfrac{1+2\\times 2 + 3\\times 3 + 4}{7} = \\dfrac{18}{7}\\).</p> <p>Calculer de m\u00eame le temps moyen pour les ABR <code>tree2</code>, <code>tree3</code> et <code>tree4</code>. Que peut-on en conclure ?</p> </li> <li> <p>On consid\u00e8re l'arbre \u00e9quilibr\u00e9 <code>tree2</code>.  Ins\u00e9rer maintenant les \u00e9l\u00e9ments suivants dans l'arbre : 17, 14, 15, 16. Comment est l'arbre obtenu ?</p> </li> </ol> <p>A venir !</p> <p>On comprend ais\u00e9ment qu\u2019un arbre \u00e9quilibr\u00e9 (solution 2) donne en moyenne de meilleurs r\u00e9sultats que tout autre arbre, et qu\u2019un arbre d\u00e9g\u00e9n\u00e9r\u00e9 (solution 4) donne des r\u00e9sultats plus mauvais que toute autre repr\u00e9sentation. La notion formelle d\u2019arbre \u00e9quilibr\u00e9 (balanced tree chez Donald Knuth) n\u2019est pas au programme, mais elle peut \u00eatre abord\u00e9e intuitivement.</p> <p>Sur un ABR \u00e9quilibr\u00e9, la recherche d\u2019un \u00e9l\u00e9ment est en moyenne en \\(log_2(n)\\), comme avec une recherche par dichotomie dans une liste. On peut alors se poser la question de l\u2019int\u00e9r\u00eat d\u2019utiliser un ABR. La r\u00e9ponse tient dans le temps mis \u00e0 ajouter / supprimer un \u00e9l\u00e9ment : dans une liste, on est en \\(\\mathscr{O}(n)\\) (complexit\u00e9 lin\u00e9aire), alors qu\u2019on est en \\(\\mathscr{O}(log_2(n))\\) dans un ABR (complexit\u00e9 logarithmique).</p> <p>Aussi, lorsqu\u2019on doit stocker une collection d\u2019\u00e9l\u00e9ments ordonn\u00e9s, une liste Python peut \u00eatre utilis\u00e9e si la collection \u00e9volue peu ou bien si les \u00e9l\u00e9ments sont stock\u00e9s dans l\u2019ordre du tri. Mais si la collection doit \u00eatre r\u00e9guli\u00e8rement modifi\u00e9e et que les recherches par rapport au crit\u00e8re de tri sont fr\u00e9quentes, on privil\u00e9gie les ABR.</p> <p>Il est donc particuli\u00e8rement important que notre ABR soit \u00e9quilibr\u00e9, et surtout que les insertions/d\u00e9l\u00e9tions conservent la propri\u00e9t\u00e9 d'\u00e9quilibrage de ces ABR. Il existe plusieurs techniques pertmettant d'obtenir des ABR \u00e9quilibr\u00e9s :</p> <ul> <li>les arbres AVL ;</li> <li>les arbres rouge-noir ;</li> <li>les arbres 2-3 ;</li> <li>les arbres 2-3-4 ;</li> <li>les B-arbres.</li> </ul>"},{"location":"NSI/Terminale/C05/AVL/#les-arbres-avl","title":"Les arbres AVL","text":""},{"location":"NSI/Terminale/C05/AVL/#presentation-des-avl","title":"Pr\u00e9sentation des AVL","text":"<p>En informatique th\u00e9orique, les arbres AVL ont \u00e9t\u00e9 historiquement les premiers arbres binaires de recherche automatiquement \u00e9quilibr\u00e9s.</p> <p>La d\u00e9nomination \u00ab arbre AVL \u00bb provient des noms respectifs de ses deux inventeurs, respectivement Georgii Adelson-Velsky et Evguenii Landis, qui l'ont publi\u00e9 en 1962 sous le titre An Algorithm for the Organization of Information. </p> <p>Dans un arbre AVL, les hauteurs des deux sous-arbres d'un m\u00eame n\u0153ud diff\u00e8rent au plus de un, et cette propri\u00e9t\u00e9 est conserv\u00e9e dynamiquement au moment de l'insertion ou de la d\u00e9letion d'un nouveau noeud. La recherche, l'insertion et la suppression sont toutes en \\(\\mathscr{O}(log _{2}(n))\\) dans le pire des cas. </p> <p>Cependant les m\u00e9canismes d'insertion et de d\u00e9letions sont modifi\u00e9s par rapport \u00e0 ceux d\u00e9j\u00e0 travaill\u00e9s : ils n\u00e9cessitent des rotations droites et gauches.</p>"},{"location":"NSI/Terminale/C05/AVL/#rotations-droites-et-gauches","title":"Rotations droites et gauches","text":"<p>Le m\u00e9canisme de rotation gauche consiste \u00e0 remplacer un noeud racine par son noeud droit (appel\u00e9 pivot).</p> <p></p> <p>Apr\u00e8s l'op\u00e9ration :</p> <ul> <li>les noeuds du sous-arbre <code>S1</code> demeurent bien inf\u00e9rieurs au noeud <code>Racine</code> ;</li> <li>les noeuds du sous-arbre <code>S2</code>, qui \u00e9taient tous sup\u00e9rieurs \u00e0 <code>Racine</code> tout en \u00e9tant inf\u00e9rieurs \u00e0 <code>Pivot</code>, le demeurent toujours ; </li> <li>les noeuds du sous-arbre <code>S2</code> demeurent bien sup\u00e9rieurs au noeud <code>Pivot</code>.</li> </ul> <p>Ainsi par une rotation gauche, le nouvel arbre obtenu est aussi un ABR.</p> <p>Une version algorithmique de cette impl\u00e9mentation est :</p> <pre><code>Pivot &lt;- Racine.droit\nRacine.droit &lt;- Pivot.gauche\nPivot.gauche &lt;- Racine\nRacine &lt;- Pivot\n</code></pre> <p>Impl\u00e9mentation</p> Enonc\u00e9Solution <ol> <li>Cr\u00e9er une m\u00e9thode <code>rotationGauche</code> pour la classe <code>Node</code>. Attention ! Pour pouvoir impl\u00e9menter correctement cette m\u00e9thode, il ne faudra pas oublier de mettre \u00e0 jour les parents de chaque noeud !</li> <li> <p>Cr\u00e9er de m\u00e9m\u00e9 une m\u00e9thode <code>rotationDroite</code> pour la classe <code>Node</code>, en s'aidant du sch\u00e9ma suivant :</p> <p></p> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C05/AVL/#techniques-desuilibrages","title":"Techniques d'\u00e9suilibrages :","text":"<p>Application manuelle</p> Enonc\u00e9Solution <ol> <li> <p>Appliquer \u00e0 la main une rotation gauche sur la racine de l'arbre suivant. Le r\u00e9sultat est-il plus \u00e9quilibr\u00e9 ?</p> <p></p> </li> <li> <p>Appliquer \u00e0 la main une rotation gauche sur la racine de l'arbre suivant. Le r\u00e9sultat est-il plus \u00e9quilibr\u00e9 ?</p> <p></p> </li> <li> <p>Appliquer une rotation droite sur le noeud 3 de l'arbre pr\u00e9c\u00e9dent, puis une rotation gauche sur la racine de l'arbre obtenu. Que peut-on en conclure ?</p> </li> </ol> <p>A venir !</p> <p>En pratique on \u00e9quilibrera un arbre \u00e0 chaque insertion et \u00e0 chaque d\u00e9l\u00e9tion. Pour ce faire, une fois le noeud ins\u00e9r\u00e9, on regardera la hauteur de chaque sous-arbre gauche et droit, et si ces hauteurs diff\u00e8rent de plus de 1, on effectuera les rotations n\u00e9cessaires.</p> <p>Application manuelle 2</p> Enonc\u00e9Solution <ol> <li> <p>On consid\u00e8re l'abre suivant :</p> <p></p> <p>Est-il \u00e9quilibr\u00e9 au sens donn\u00e9 ?</p> </li> <li> <p>On ins\u00e8re maintenant la valeur 4. L'arbre est-il \u00e9quilibr\u00e9 ?</p> </li> <li>Appliquer une rotation gauche sur la racine. Cela suffit-il pour que le r\u00e9sultat soit \u00e9quilibr\u00e9 ?</li> <li>En repartant de l'arbre de la question 2, quelle roitation faudrait-il faire avant d'appliquer une rotation gauche sur la racine afin d'obtenir un arbre \u00e9quilibr\u00e9 ?</li> </ol> <p>A venir !</p> <p>L'algorithme r\u00e9el d'\u00e9quilbrage \u00e9tant un peu trop complexe pour notre niveau, voici les codes \u00e0 ins\u00e9rer dans les diff\u00e9rentes classes pour obtenir un AVL :</p> <ul> <li> <p>dans la classe <code>ABR</code> :</p> <pre><code>def insererAVL(self, valeur):\n    if self.estVide():\n        self.racine = Node(valeur)\n    else:\n        self.racine = self.racine.inserer_AVL(valeur)\n</code></pre> </li> <li> <p>dans la classe <code>Node</code> :</p> <pre><code>def inserer_AVL(self, valeur):\n    if valeur &lt; self.valeur:\n        if self.gauche is None:\n            self.gauche = Node(valeur, parent=self)\n            return self\n        else:\n            self.gauche = self.gauche.insererAVL(valeur)\n            return self.equilibrer()\n    elif valeur &gt; self.valeur:\n        if self.droit is None:\n            self.droit = Node(valeur, parent=self)\n            return self\n        else:\n            self.droit = self.droit.insererAVL(valeur)\n            return self.equilibrer()\n    else:\n        return self\n\ndef equilibrer(self):\n    hauteur_gauche = hauteur(self.gauche)\n    hauteur_droit = hauteur(self.droit)\n    if hauteur_gauche - hauteur_droit == 2:\n        hauteur_gauche_gauche = hauteur(self.gauche.gauche)\n        hauteur_gauche_droit = hauteur(self.gauche.droit)\n        if hauteur_gauche_gauche &gt; hauteur_gauche_droit:\n            return self.rotationDroite()\n        else:\n            self.gauche = self.gauche.rotationGauche()\n            return self.rotationDroite()\n    elif hauteur_gauche - hauteur_droit == -2:\n        hauteur_droit_droit = hauteur(self.droit.droit)\n        hauteur_droit_gauche = hauteur(self.droit.gauche)\n        if hauteur_droit_droit &gt; hauteur_droit_gauche:\n            return self.rotationGauche()\n        else:\n            self.droit = self.droit.rotationDroite()\n            return self.rotationGauche()\n    else:\n        return self\n\ndef hauteur(self):\n    hauteur_gauche = hauteur(self.gauche)\n    hauteur_droit = hauteur(self.droit)\n    return 1 + max(hauteur_gauche, hauteur_droit)\n</code></pre> </li> </ul> <p>D\u00e9sormais, en cr\u00e9antun ABR et en utilisant la m\u00e9thode <code>insertionAVL</code>, l'arbre obtenu doit \u00eatre automatiquement \u00e9quilibr\u00e9.</p>"},{"location":"NSI/Terminale/C05/Def_Arbres/","title":"D\u00e9finition et propri\u00e9t\u00e9s des arbres binaires","text":""},{"location":"NSI/Terminale/C05/Def_Arbres/#arbres-binaires-definitions-et-proprietes","title":"Arbres Binaires : d\u00e9finitions et propri\u00e9t\u00e9s","text":"<p>Les listes, piles et files que nous avons crois\u00e9es jusqu'ici sont utilis\u00e9es pour repr\u00e9senter de structures pouvant \u00eatre \u00e9num\u00e9r\u00e9es s\u00e9quentiellement. Elles sont particuli\u00e8rement efficaces lorsqu'il s'agit d'acc\u00e9der au premier \u00e9l\u00e9ment (ou au dernier selon l'impl\u00e9mentation). Elles ne le sont pas contre pas quand il s'agit d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment \u00e0 une position arbitraire dans la structure, car il faut parcourir toute la liste/pile/file jusqu'\u00e0 la position recherch\u00e9e, ce qui donne un temps d'acc\u00e8s proportionnel \u00e0 la taille de la structure (donc en \\(\\mathbb{O}(n)\\)).</p>"},{"location":"NSI/Terminale/C05/Def_Arbres/#structures-arborescentes","title":"Structures arborescentes","text":"<p>Les structures arborescentes, c'est-\u00e0-dire sous forme d'arbre, sont une autre forme de structures chain\u00e9es dans laquelle l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment se fait potentiellement bien plus rapidement qu'avec les listes chain\u00e9es.</p> <p>Ces types de structures arborescentes sont omnipr\u00e9sentes en informatiques, ne serait-ce que par l'organisation du syst\u00e8me de fichier :</p> <p></p> <p>Structure arborescente</p> <p>Une structure arborescente est une structure cha\u00een\u00e9e construite \u00e0 partir d'un point de d\u00e9part qui se scinde en plusieurs branches \u00e0 chaque \u00e9tape.</p>"},{"location":"NSI/Terminale/C05/Def_Arbres/#arbres-binaires","title":"Arbres Binaires","text":""},{"location":"NSI/Terminale/C05/Def_Arbres/#definitions-et-vocabulaire","title":"D\u00e9finitions et vocabulaire","text":"<p>d\u00e9finition : Arbre Binaire</p> <p>Un arbre binaire est un cas particulier de structure arborescente o\u00f9 chaque position ouvre sur exactement deux branches.</p> <p>Plus pr\u00e9cis\u00e9ment, un arbre binaire est un ensemble fini de noeuds correspondant \u00e0 l'un des deux cas suivants :</p> <ul> <li>Soit l'arbre est vide, c'est-\u00e0-dire qu'il ne contient aucun noeud.</li> <li>Soit l'arbre n'est pas vide, et ses noeuds sont structur\u00e9s de la fa\u00e7on suivante :<ul> <li>un noeud est appel\u00e9 la racine de l'arbre ;</li> <li>les noeuds restants sont s\u00e9par\u00e9s en deux sous-ensembles qui forment r\u00e9cursivement deux sous-arbres binaires appel\u00e9s respectivement sous-arbre gauche et sous-arbre droit ;</li> <li>la racine est reli\u00e9e \u00e0 chacune des racines de ces sous-arbres gauches et droits (\u00e0 conditions qu'ils ne soient pas vides).</li> </ul> </li> </ul> <p>Exemples et contre-exemples d'arbres binaires</p> <p></p><p> </p> <p>L'arbre de gauche n'est pas un arbre binaire : 6 sous-arbres sont-rattach\u00e9s \u00e0 \\(A\\), les sous-arbres de racines \\(B,C,D,E,F,G\\).</p> <p>L'arbre de droite est bien un arbre binaire, de chaque noeud partent deux sous-arbres, \u00e9ventuellement vides.</p> <p>Vocabulaire des arbres</p> <p>On consid\u00e8re l'arbre binaire ci-dessous :</p> <p></p><p> </p> <ul> <li>La taille de l'arbre est \\(4\\), c'est le nombre de noeuds qui le compose.</li> <li>Le noeud racine est le noeud \\(1\\).</li> <li>Le sous-arbre gauche \u00e0 partir de \\(1\\) contient deux noeuds (\\(2\\) et \\(3\\)), le sous-arbre droit un seul (\\(4\\)).</li> <li>le noeud \\(1\\) poss\u00e8de deux fils : son fils gauche est \\(2\\) et son fils droit est \\(4\\).</li> <li>Le sous-arbre gauche \u00e0 partir de \\(2\\) n'est pas vide (il contient le noeud \\(3\\)), le sous-arbre droit lui l'est.</li> <li>Le noeud parent du noeud \\(3\\) est le noeud \\(2\\).</li> <li>Les deux sous-arbres \u00e0 partir de \\(3\\) sont vides, touts comme ceux de \\(4\\). On dira que les noeuds \\(3\\) et \\(4\\) sont des feuilles de l'arbre.</li> </ul> <p>Remarques</p> <p>Les arbres binaires sont utilis\u00e9s pour traiter des donn\u00e9es. Chaque noeud peut donc \u00eatre repr\u00e9sent\u00e9 par la donn\u00e9e qu'il contient. Ainsi, dans les arbres ci-dessus :</p> <ul> <li>un contient des valeurs num\u00e9riques (\\(1\\), \\(2\\), \\(3\\) et \\(4\\)) ;</li> <li>l'autre contient des caract\u00e8res (\\(A\\) \u00e0 \\(L\\)).</li> </ul> <p>Exercice</p> <p>Pour chacun des arbres binaires ci-dessous, pr\u00e9ciser sa taille, sa racine ainsi que les noeuds feuilles :</p> \u00c9nonc\u00e9Solution <p></p> Arbre 1 <p></p> <p></p> Arbre 2 <p></p> <p></p> <ul> <li>Arbre 1 :<ul> <li>taille : 7</li> <li>racine : \u00ab A \u00bb</li> <li>feuilles : \u00ab D \u00bb, \u00ab E \u00bb, \u00ab G \u00bb            </li> </ul> </li> <li>Arbre 2 :<ul> <li>taille : 7</li> <li>racine : \u00ab P \u00bb</li> <li>feuilles : \u00ab C \u00bb, \u00ab X \u00bb, \u00ab N \u00bb            </li> </ul> </li> </ul> <p>Exercice</p> \u00c9nonc\u00e9Solution <p>Dessiner tous les arbres  binaires ayant respectivement 3 et 4 noeuds.</p> <p></p> <p></p> <p>Exercice</p> \u00c9nonc\u00e9Solution <p>Sachant qu'il y a 1 arbre binaire vide, 1 arbre binaire contenant 1 noeud, 2 arbres binaires contenant 2 noeuds, 5 arbres binaires contenant 3 noeuds, et 14 arbres binaires contenant 4 noeuds, calculer le nombre d'arbres binaires contenant 5 noeuds, sans chercher \u00e0 les construire tous.</p> <p>Un arbre de taille 5 dispose d'un noeud racine et de 4 noeuds, pouvant \u00eatre r\u00e9partis de la mani\u00e8re suivante :</p> <ul> <li>4 noeuds dans le sous-arbre gauche, et 0 dans le sous-arbre droit ;</li> <li>3 noeuds dans le sous-arbre gauche, et 1 dans le sous-arbre droit ;</li> <li>2 noeuds dans le sous-arbre gauche, et 2 dans le sous-arbre droit ;</li> <li>1 noeud dans le sous-arbre gauche, et 3 dans le sous-arbre droit ;</li> <li>0 noeud dans le sous-arbre gauche, et 4 dans le sous-arbre droit.</li> </ul> <p>On en d\u00e9duit que le nombre d'arbres diff\u00e9rents \u00e0 5 noeuds est :</p> \\[ 14\\times 1 + 5 \\times 1 + 2 \\times 2 + 1 \\times 5 + 1 \\times 14 = 14 + 5 + 4 + 5 + 14 = 42 \\]"},{"location":"NSI/Terminale/C05/Def_Arbres/#hauteur-dun-arbre","title":"Hauteur d'un arbre","text":"<p>D\u00e9finition : hauteur d'un arbre</p> <p>La hauteur d'un arbre est \u00e9gale au nombre maximal de noeuds reliant la racine aux feuilles, les extr\u00e9mit\u00e9s \u00e9tant comprises.</p> <p>Si un arbre est de taille \\(N\\) et de hauteur \\(h\\), on a la relation suivante :</p> \\[ h \\leqslant N \\leqslant 2^h-1 \\] <p>D\u00e9monstration</p> In\u00e9galit\u00e9 \\(h\\leqslant N\\)In\u00e9galit\u00e9 \\(N\\leqslant 2^h-1\\) <p>Dans le cas d'un arbre ayant \u00e0 chaque noeud au moins un de ses sous-arbre vide :</p> <p></p><p> </p> <p>Il est \u00e9vident que dans ce cas la hauteur de l'arbre est \u00e9gale \u00e0 sa taille, d'o\u00f9 \\(h\\leqslant N\\).</p> <p>dans le cas d'un arbre binaire parfait, c'est-\u00e0-dire dont toutes les feuilles sont situ\u00e9es \u00e0 la m\u00eame distance de la racine :</p> <p></p><p> </p> <p>La taille est alors \u00e9gale \u00e0 </p> \\[ \\begin{align} N&amp;= 1 + 2 + 2^2 + \\dots +2^{h-1}\\\\ &amp;= \\dfrac{2^h-1}{2-1}\\\\ N&amp;= 2^h-1 \\end{align}      \\] <p>D'o\u00f9 l'in\u00e9galit\u00e9 recherch\u00e9e.</p> <p>Hauteur et r\u00e9cursivit\u00e9</p> <p>La hauteur d'un arbre peut-aussi \u00eatre d\u00e9finie r\u00e9cursivement :</p> <ul> <li>la hauteur d'un arbre vide est 0 ;</li> <li> <p>la hauteur d'un arbre est \u00e9gale \u00e0 un plus  le maximum de la hauteur des deux sous-arbres de la racine :</p> \\[ h = 1 + max(hauteur(Gauche), hauteur(Droit)) \\] </li> </ul>"},{"location":"NSI/Terminale/C05/Def_Arbres/#implementation-darbres-en-python","title":"Impl\u00e9mentation d'arbres en Python","text":"<p>Il existe bien entendu diff\u00e9rentes fa\u00e7ons d'impl\u00e9menter une structure d'arbre binaire en Python. Cependant, la m\u00e9thode la plus simple est d'utiliser le paradigme Objet afin de repr\u00e9senter des noeuds :</p> <p></p><pre><code>class Node() :\n    def __init__(self, valeur, gauche, droit) :\n        self.valeur=valeur\n        self.gauche = gauche\n        self.droit = droit\n</code></pre> un sous-arbre vide \u00e9tant repr\u00e9sent\u00e9 par la valeur <code>None</code>.  <p>Exemple d'utilisation des objets <code>Node</code></p> <p>On consid\u00e8re l'arbre binaire ci-dessous :</p> <p></p><p> </p> <p>Une repr\u00e9sentation en Python de cet arbre est alors : </p><pre><code>tree = Node(1,\n        Node(2,\n            Node(3, None, None),\n            None),\n        Node(4, None, None))\n</code></pre> <p>Exercice</p> \u00c9nonc\u00e9Solution <p>Donner le code de repr\u00e9sentation de chacun des arbres ci-dessous en Python :</p> <p></p> Arbre 1 <p></p> <p></p> Arbre 2 <p></p> <p></p> <ul> <li>Arbre 1 :     <pre><code>arbre1 = Node(\"A\", \n      Node(\"B\",\n            Node(\"D\",None,None),#FG\n            Node(\"E\",None,None),#FD\n           ),\n      Node(\"C\",#FD\n            None,#FG\n            Node(\"F\",#FD\n                None,#FG\n                Node(\"G\", None, None)#FD\n                )\n           )    \n)\n</code></pre></li> <li>Arbre 2 :     <pre><code>arbre2 = Node(\"P\",\n      Node(\"A\",\n           Node(\"R\",\n                Node(\"C\", None, None),\n                None\n                ),\n           Node(\"I\",\n                Node(\"X\", None, None),\n                Node(\"N\", None, None)\n                )\n           ),\n  None\n  )\n</code></pre></li> </ul> <p>Exercice : Fonction <code>hauteur</code></p> \u00c9nonc\u00e9Solution <p>Coder une fonction <code>hauteur(t)</code> calculant la hauteur d'un arbre <code>t</code> qui lui est pass\u00e9 en argument (indice : r\u00e9cursivit\u00e9).</p> <pre><code>def hauteur(t) :\n    if t is None :\n        return 0\n    else :\n        return 1 + max(hauteur(t.gauche), hauteur(t.droit))\n</code></pre> <p>Exercice : Fonction <code>taille</code></p> \u00c9nonc\u00e9Solution <p>Coder une fonction <code>taille(t)</code> calculant la taille d'un arbre <code>t</code> qui lui est pass\u00e9 en argument (indice : r\u00e9cursivit\u00e9).</p> <pre><code>def taille(t) :\n    if t is None :\n        return 0\n    else :\n        return 1 + taille(t.gauche)+taille(t.droit)\n</code></pre> <p>Exercice : Fonction <code>estVide(tree)</code></p> \u00c9nonc\u00e9Solution <p>Coder une fonction <code>estVide(tree)</code> renvoyant <code>True</code> si l'arbre est vide, et <code>False</code> sinon.</p> <pre><code>def estVide(t) :\n    return t is None\n</code></pre> <p>Arbres doublement chain\u00e9s</p> <p>Il est parfois - mais pas toujours- n\u00e9cessaire de m\u00e9moriser le noeud parent de chaque noeud. On parle alors d'arbre doublement chain\u00e9. L'impl\u00e9mentation en POO de la classe <code>Node</code> est alors quasiment identique, en rajoutant seulement l'attribut <code>parent</code> :</p> <pre><code>class Node() :\n    def __init__(self, valeur, gauche, droit, parent) :\n        self.valeur=valeur\n        self.gauche = gauche\n        self.droit = droit\n        self.parent = parent\n</code></pre>"},{"location":"NSI/Terminale/C05/Def_Arbres/#parcours-darbres","title":"Parcours d'arbres","text":"<p>Pour utiliser un arbre, il faut le parcourir. Or il existe plusieurs ordres de parcours, qui tous ont un int\u00e9r\u00eat diff\u00e9rent. Pour illustrer ces ordres de parcours, nous utiliserons comme exemple le m\u00eame arbre, dont on veut afficher les diff\u00e9rents noeuds :</p> <p></p>"},{"location":"NSI/Terminale/C05/Def_Arbres/#parcours-en-profondeur-dfs-ou-depth-first-search","title":"Parcours en profondeur ( DFS ou Depth-First Search)","text":"<p>Les parcours en profondeur sont des parcours qui seront trait\u00e9s de mani\u00e8re r\u00e9cursive, en partant de la racine. Il en existe trois types principaux :</p> <p>Parcours Pr\u00e9fixe</p> <p>On appelle parcours pr\u00e9fixe un parcours o\u00f9 les noeuds seront affich\u00e9s dans l'ordre suivant</p> <ul> <li>on affiche la racine ;</li> <li>ensuite on affiche r\u00e9cursivement le sous-arbre gauche ;</li> <li>enfin on affiche r\u00e9cursivement le sous-arbre droit.</li> </ul> <p>Le parcours est dans l'ordre noeud - gauche - droit</p> Exemple <p>Sur l'arbre ci-dessus, on a donc parcouru dans l'ordre suivant :</p> <p></p> <p>L'ordre d'affichage des noeuds est donc : 1, 2, 4, 5, 8, 9, 3, 6, 10, 7, 11.</p> <p>Parcours Infixe</p> <p>On appelle parcours infixe un parcours o\u00f9 les noeuds seront affich\u00e9s dans l'ordre suivant</p> <ul> <li>on affiche r\u00e9cursivement le sous-arbre gauche ;</li> <li>ensuite on affiche la racine ;</li> <li>enfin on affiche r\u00e9cursivement le sous-arbre droit.</li> </ul> <p>Le parcours est donc dans l'ordre gauche - noeud -droit.</p> Exemple <p>Sur l'arbre ci-dessus, on a donc parcouru dans l'ordre suivant :</p> <p></p> <p>L'ordre d'affichage des noeuds est donc :  4, 2, 8, 5, 9, 1, 10, 6, 3, 7, 11.</p> <p>Parcours Suffixe (ou postfixe)</p> <p>On appelle parcours suffixe un parcours o\u00f9 les noeuds seront affich\u00e9s dans l'ordre suivant</p> <ul> <li>on affiche r\u00e9cursivement le sous-arbre gauche ;</li> <li>ensuite on affiche r\u00e9cursivement le sous-arbre droit ;</li> <li>enfin on on affiche la racine.</li> </ul> <p>Le parcours est donc dans l'ordre gauche - droit - noeud.</p> Exemple <p>Sur l'arbre ci-dessus, on a donc parcouru dans l'ordre suivant :</p> <p></p> <p>L'ordre d'affichage des noeuds est donc :  4, 8, 9, 5, 2, 10, 6, 11, 7, 3, 1.</p> <p>Exercice</p> Enonc\u00e9Solution <p>Pour chacun des arbres suivants, donner l'affichage par :</p> <ol> <li>un parcours pr\u00e9fixe ;</li> <li>un parcours infixe ;</li> <li>un parcours suffixe.</li> </ol> <p></p> Arbre 1 <p></p> <p></p> Arbre 2 <p></p> <p></p> <ul> <li>Arbre 1 :<ul> <li>parcours Pr\u00e9fixe : <code>A B H</code></li> <li>parcours Infixe : <code>B A H</code></li> <li>parcours Suffixe : <code>B H A</code></li> </ul> </li> <li>Arbre 2 :<ul> <li>parcours Pr\u00e9fixe : <code>A B C D E F G H I J K L</code></li> <li>parcours Infixe : <code>D C E B G F A I J H L K</code></li> <li>parcours Suffixe : <code>D E C G F B J I L K H A</code></li> </ul> </li> </ul>"},{"location":"NSI/Terminale/C05/Def_Arbres/#algorithmes-et-codage-des-parcours-en-profondeur","title":"Algorithmes et codage des parcours en profondeur","text":"<p>Codage des arbres</p> <p>Les deux arbres pr\u00e9c\u00e9dents peuvent \u00eatre cod\u00e9s en Python de la mani\u00e8re suivante :</p> <pre><code>arbre1 = Node('A',\n            Node('B', None, None),\n            Node('C', None, None)\n            )\n</code></pre> <pre><code>arbre2 = Node('A',\n            Node('B', \n                Node('C',\n                    Node('D', None, None),\n                    Node('E', None, None)),\n                Node('F', \n                    Node('G', None, None),\n                    None)\n                ),\n            Node('H',\n                Node('I',\n                    None,\n                    Node('J', None,None)),\n                Node('K',\n                    Node('L', None,None),\n                    None)\n                )                   \n            )\n</code></pre> <p>Exemple : algorithme de parcours pr\u00e9fixe</p> <p>Un algorithme en langage naturel permettant d'afficher les noeuds d'un arbre par un parcours pr\u00e9fixe peut-\u00eatre \u00e9crit comme suit :</p> <pre><code>visiterPr\u00e9fixe(Arbre A) :\n    Afficher (A)\n    Si nonVide (gauche(A))\n          visiterPr\u00e9fixe(gauche(A))\n    Si nonVide (droite(A))\n          visiterPr\u00e9fixe(droite(A))\n</code></pre> <p>Sa traduction en Python est la suivante :</p> <pre><code>def visitePrefixe(tree) :\n    print(tree.valeur, end=\" \")\n    if not(estVide(tree.gauche)) :\n        visitePrefixe(tree.gauche)\n    if not(estVide(tree.droit)) :\n        visitePrefixe(tree.droit)\n</code></pre> <p>Exercice : Parcours infixe</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>visiteInfixe</code> permettant d'afficher les noeuds d'un arbre par un parcours infixe. La fonction sera test\u00e9e sur les deux arbres donn\u00e9s plus haut.</p> <pre><code>def visiteInfixe(tree) :\n\n    if not(estVide(tree.gauche)) :\n        visiteInfixe(tree.gauche)\n    print(tree.valeur, end=\" \")\n    if not(estVide(tree.droit)) :\n        visiteInfixe(tree.droit)\n</code></pre> <p>Exercice : Parcours suffixe</p> Enonc\u00e9Solution <p>Cr\u00e9er une fonction <code>visiteSuffixe</code> permettant d'afficher les noeuds d'un arbre par un parcours suffixe. La fonction sera test\u00e9e sur les deux arbres donn\u00e9s plus haut.</p> <pre><code>def visiteSuffixe(tree) :\n    if not(estVide(tree.gauche)) :\n        visiteSuffixe(tree.gauche)\n    if not(estVide(tree.droit)) :\n        visiteSuffixe(tree.droit)\n    print(tree.valeur, end=\" \")\n</code></pre>"},{"location":"NSI/Terminale/C05/Def_Arbres/#parcours-en-largeur","title":"Parcours en largeur","text":"<p>Le parcours en largeur d'un arbre consiste \u00e0 parcourir chaque niveau de l'arbre de gauche \u00e0 droite, en partant de la racine.</p> <p></p> <p>Sur cet arbre, le parcours en largeur affichera les noeuds dans l'ordre suivant : 1 2 3 4 5 6 7 8 9 10 11 </p> <p>Exercice : application directe</p> \u00c9nonceSolution <p>Donner le r\u00e9sultat d'un parcours en largeur des deux arbres des exercices pr\u00e9c\u00e9dents.</p> <ul> <li>Arbre 1 : <code>A B H</code></li> <li>Arbre 2 :<code>A B H C F I K D E G J L</code></li> </ul> <p>Algorithme de parcours en largeur</p> <p>Le parcours en largeur n'est pas effectu\u00e9 r\u00e9cursivement. Il fonctionne avec le principe d'une file :</p> <pre><code>ParcoursLargeur(Arbre A) {\n   f = FileVide\n   enfiler(Racine(A), f)\n   Tant que (f != FileVide) {\n       noeud = defiler(f)\n       Afficher(noeud)                        \n       Si (gauche(noeud) != null) Alors\n           enfiler(gauche(noeud), f)\n       Si (droite(noeud) != null) Alors\n           enfiler(droite(noeud), f)\n   }\n}\n</code></pre> <p>Exercice</p> \u00c9nonc\u00e9Solution <p>Impl\u00e9menter une fonction <code>visiteLargeur(tree)</code>, utilisant une structure de file bas\u00e9e sur les listes python, et utilisant :</p> <ul> <li><code>list.insert(0, e)</code> pour enfiler l'\u00e9l\u00e9ment <code>e</code> \u00e0 la position 0 ;</li> <li><code>list.pop()</code> pour d\u00e9filer le dernier \u00e9l\u00e9ment de la file.</li> </ul> <pre><code>def visiteLargeur(tree) :\n    f = []\n    f.insert(0, tree)\n    while f!= [] :\n        noeud = f.pop()\n        print(noeud.valeur, end=\" \")\n        if noeud.gauche :\n            f.insert(0, noeud.gauche)\n        if noeud.droit :\n            f.insert(0, noeud.droit)\n</code></pre>"},{"location":"NSI/Terminale/C06/Interblocage/","title":"Interblocage","text":""},{"location":"NSI/Terminale/C06/Interblocage/#interblocage","title":"Interblocage","text":"<p>Nous avons vu dans la partie pr\u00e9c\u00e9dente que les threads peuvent \u00eatre une solution pour acc\u00e9l\u00e9rer le traitement de donn\u00e9es. Cependant cette pratique n'est pas sans risque, en particulier nous risquons un interblocage (deadlock en anglais).</p>"},{"location":"NSI/Terminale/C06/Interblocage/#un-exemple-de-situation-problematique-avec-les-threads","title":"Un exemple de situation probl\u00e9matique avec les threads","text":"<p>Copiez-collez le code suivant dans un programme <code>deadlock.py</code> :</p> <pre><code>import threading, time\nfrom random import randint\n\nverrou1 = threading.Lock()\nverrou2 = threading.Lock()\n\ndef f1() :\n    time.sleep(randint(0,100)/100)\n    verrou1.acquire()\n    print(\"Zone risqu\u00e9e f1.1\")\n    verrou2.acquire()\n    print(\"Zone risqu\u00e9e f1.2\")\n    verrou2.release()\n    verrou1.release()\n\ndef f2() :\n    verrou2.acquire()\n    time.sleep(randint(0,100)/100)\n    print(\"Zone risqu\u00e9e f2.1\")\n    verrou1.acquire()\n\n    print(\"Zone risqu\u00e9e f2.2\")\n    verrou1.release()\n    verrou2.release()\n\n\nt1 = threading.Thread(target=f1)\nt2 = threading.Thread(target=f2)\n\nt1.start()\nt2.start()\nt1.join()\nt2.join()\n</code></pre> <p>En analysant le code :</p> <ul> <li>deux threads <code>t1</code> et <code>t2</code> utilisent deux ressources <code>f1</code> et <code>f2</code>, contr\u00f4l\u00e9es par des verrous 1 et 2</li> <li><code>f1</code> verrouille (<code>acquire</code>) <code>verrou1</code>, puis verrouille <code>verrou2</code>, avant de les rel\u00e2cher (<code>release</code>)  dans l'ordre inverse de leur verrouillage ;</li> <li><code>f2</code> verrouille (<code>acquire</code>) <code>verrou2</code>, puis verrouille <code>verrou1</code>, avant de les rel\u00e2cher (<code>release</code>)  dans l'ordre inverse de leur verrouillage ;</li> <li>l'ex\u00e9cution des codes de <code>f1</code> et de <code>f2</code> sont conditionn\u00e9 par un d\u00e9clenchement al\u00e9atoire dans le temps.</li> </ul> <p>Quatre cas peuvent alors se produire : </p> <ul> <li><code>t1</code> d\u00e9marre en premier, acquiert <code>verrou1</code> puis <code>verrou2</code>, <code>t2</code> est mis en attente de la lib\u00e9ration, et peut agir d\u00e8s que <code>verrou2</code> est lib\u00e9r\u00e9.</li> <li><code>t2</code> d\u00e9marre en premier, acquiert <code>verrou2</code> puis <code>verrou1</code>, <code>t1</code> est mis en attente de la lib\u00e9ration, et peut agir d\u00e8s que <code>verrou1</code> est lib\u00e9r\u00e9.</li> <li><code>t1</code> d\u00e9marre en premier et acquiert <code>verrou1</code>, <code>t2</code> d\u00e9marre et acquiert <code>verrou2</code>. <code>t1</code> est alors bloqu\u00e9, car il ne peut acqu\u00e9rir <code>verrou2</code>, et <code>t2</code> est dans la m\u00eame situation avec <code>verrou1</code>. Les deux processus sont en attente, et ne pourront pas lib\u00e9rer leurs verrous.</li> <li>Il s'agit de la m\u00eame situation que pr\u00e9c\u00e9demment, mais <code>t2</code> d\u00e9marre avant <code>t1</code>.</li> </ul> <p>Dans les deux derniers cas, nous sommes dans une situation dite d'interblocage, les deux threads ne pouvant continuer puisqu'ils se bloquent l'un l'autre.</p>"},{"location":"NSI/Terminale/C06/Interblocage/#notion-dinterblocage","title":"Notion d'Interblocage","text":"<p>Les interblocages sont des situations de la vie quotidienne. Un exemple est celui du carrefour avec priorit\u00e9 \u00e0 droite o\u00f9 chaque v\u00e9hicule est bloqu\u00e9 car il doit laisser le passage au v\u00e9hicule \u00e0 sa droite.</p> <p></p> <p>En informatique \u00e9galement, l'interblocage peut se produire lorsque des processus concurrents s'attendent mutuellement. Les processus bloqu\u00e9s dans cet \u00e9tat le sont d\u00e9finitivement. Ce sc\u00e9nario catastrophe peut se produire dans un environnement o\u00f9 des ressources sont partag\u00e9es entre plusieurs processus et l'un d'entre eux d\u00e9tient ind\u00e9finiement une ressource n\u00e9cessaire pour l'autre.</p> <p>Cette situation d'interblocage a \u00e9t\u00e9 th\u00e9oris\u00e9e par l'informaticien Edward Coffman (1934-) qui a \u00e9nonc\u00e9 quatre conditions (appel\u00e9es conditions de Coffman) menant \u00e0 l'interblocage :</p> <ul> <li>Exclusion mutuelle : au moins une des ressources du syst\u00e8me doit \u00eatre en acc\u00e8s exclusif.</li> <li>R\u00e9tention des ressources : un processus d\u00e9tient au moins une ressource et requiert une autre ressource d\u00e9tenue par un autre processus</li> <li>Non-pr\u00e9emption : Seul le d\u00e9tenteur d'une ressource peut la lib\u00e9rer.</li> <li>Attente circulaire : Chaque processus attend une ressource d\u00e9tenue par un autre processus. \\(P_1\\) attend une ressource d\u00e9tenue par \\(P_2\\) qui \u00e0 son tour attend une ressource d\u00e9tenue par \\(P_3\\) etc... qui attend une ressource d\u00e9tenue par \\(P_1\\) ce qui clos la boucle.</li> </ul> <p>Il existe heureusement des strat\u00e9gies pour \u00e9viter ces situations. Nous ne rentrerons pas ici dans ces consid\u00e9rations qui d\u00e9passent le cadre du programme.</p>"},{"location":"NSI/Terminale/C06/Interblocage/#un-exemple-historique","title":"Un exemple historique","text":"<p>Le travail ayant \u00e9t\u00e9 plus que bien fait par d'autres : le probl\u00e8me Pathfinder</p>"},{"location":"NSI/Terminale/C06/Linux/","title":"Syst\u00e8me d'exploitation Linux","text":""},{"location":"NSI/Terminale/C06/Linux/#systeme-dexploitation-gnulinux","title":"Syst\u00e8me d'exploitation GNU/Linux","text":""},{"location":"NSI/Terminale/C06/Linux/#systemes-dexploitations","title":"Syst\u00e8mes d'exploitations :","text":""},{"location":"NSI/Terminale/C06/Linux/#definition-et-historique","title":"D\u00e9finition et historique","text":"<p>D'apr\u00e8s la d\u00e9finition de Wikipedia :</p> <p>\u00ab En informatique, un syst\u00e8me d'exploitation (souvent appel\u00e9 OS \u2014 de l'anglais operating system) est un ensemble de programmes qui dirige l'utilisation des ressources d'un ordinateur par des logiciels applicatifs.</p> <p>Il re\u00e7oit des demandes d'utilisation des ressources de l'ordinateur \u2014\u00a0ressources de stockage des m\u00e9moires (par exemple des acc\u00e8s \u00e0 la m\u00e9moire vive, aux disques durs), ressources de calcul du processeur central, ressources de communication vers des p\u00e9riph\u00e9riques [...] ou via le r\u00e9seau\u00a0\u2014 de la part des logiciels applicatifs. Le syst\u00e8me d'exploitation g\u00e8re les demandes ainsi que les ressources n\u00e9cessaires \u00e9vitant les interf\u00e9rences entre les logiciels. \u00bb </p> <p>Historique</p> <p>Les ann\u00e9es 1960 ont constitu\u00e9 un tournant pour les syst\u00e8me d'exploitation. Dans le cadre du projet MAC au MIT (Massachusset Institute of Technology), le syst\u00e8me d'exploitation CTTS (Compatible Time Sharing System)est publi\u00e9 en 1961. C'est l'un des tout premiers syst\u00e8me d'exploitation \u00e0 temps partag\u00e9, permettant \u00e0 plusieurs utilisateurs d'utiliser un ordinateur en m\u00eame temps. Cette apparente simultan\u00e9it\u00e9 dans l'ex\u00e9cution des programmes a permis de se diriger vers l'informatique moderne. </p> <p>Le MIT s'associa aux laboratoires BELL et \u00e0 General Electric pour cr\u00e9er Multics qui \u00e9tait un syst\u00e8me innovant, h\u00e9ritant de CTTS, et \u00e9tait l'un des premier syst\u00e8me d'exploitation avec syst\u00e8me de fichier hi\u00e9rarchique, temps partag\u00e9, multit\u00e2che pr\u00e9emptif (c'est-\u00e0-dire la capacit\u00e9 d'arr\u00eater ou d'ex\u00e9cuter une t\u00e2che planifi\u00e9e en cours), multiutilisateur, avec une prise en compte de la s\u00e9curit\u00e9. La premi\u00e8re version sortit en 1965.</p> <p>En 1969, les laboratoires BELL sortirent du projet et deux de leurs plus brillants informaticiens, Ken THOMPSON et Dennis RITCHIE qui avaient travaill\u00e9 sur le projet MULTICS en con\u00e7urent une version simplifi\u00e9e (ils consid\u00e9raient MULTICS inutilement complexe) qu'ils nomm\u00e8rent initialement UNICS (UNiplexed Information and Computing Service) puis UNIX. L'informatique moderne \u00e9tait n\u00e9e ! </p> <p>Au fil des ann\u00e9es, des surcouches de plus en plus complexes sont ajout\u00e9es aux syst\u00e8mes d'exploitations afin de g\u00e9rer par exemple les entr\u00e9es claviers, puis souris, et une interface graphique est ajout\u00e9e, simplifiant la t\u00e2che pour l'utilisateur.</p> <p>Chaque ordinateur doit donc disposer d'un OS afin de pouvoir faire fonctionner les diff\u00e9rents logiciels en parall\u00e8le. Historiquement, chaque fabriquant d'ordinateur a d\u00e9velopp\u00e9 en partie son OS. On pourra, de mani\u00e8re non-exhaustive, citer :</p> <ul> <li>OS/360 par IBM, en 1968 ;</li> <li>DOS par Microsoft en 1981 ;</li> <li>Mac OS par Apple en 1984 ;</li> <li>TOS par Atari en 1985 ;</li> <li>AmigaOS par Commodore en 1985;</li> <li>Windows 3.X par Microsoft en 1990 ;</li> <li>GNU/Linux par la communaut\u00e9 en 1991 ;</li> <li>Android par Google en 2007 ;</li> <li>iOS par Apple en 2007.</li> </ul>"},{"location":"NSI/Terminale/C06/Linux/#gnulinux","title":"GNU/Linux","text":"<p>En 1985, Richard Stallman<sup>1</sup> quitte le MIT pour \u00e9crire un syst\u00e8me d'exploitation compatible Unix :  GNU (Gnu is Not Unix)<sup>2</sup>. Oppos\u00e9 au principe du logiciel \u00ab propri\u00e9taire \u00bb, il publie le manifeste GNU, o\u00f9 il expose ses id\u00e9es de logiciel libre, permettant \u00e0 chacun de s'approprier, de modifier et de diffuser le code source d'un logiciel.</p> <p>En 1991, Linus Torvalds, \u00e9tudiant norv\u00e9gien de 21 ans, d\u00e9cide d'\u00e9crire un mini OS d\u00e9riv\u00e9 d'Unix pour son PC. R\u00e9put\u00e9 pour sa stabilit\u00e9 m(mais aussi pour sa complexit\u00e9 d'installation), le noyau Linux est adopt\u00e9 par une grande communaut\u00e9 de bidouilleurs sur l'internet, qui \u00e9tendent r\u00e9guli\u00e8rement ses possibilit\u00e9s. Sans publicit\u00e9, soutenu par la communaut\u00e9 du libre et de l'open-source<sup>3</sup>, Linux se r\u00e9pand doucement et deviens rapidement une alternative cr\u00e9dible \u00e0 Windows,  \u00e0 tel point que 90 % des serveurs du cloud sont des serveurs Linux. Linus Torvalds continue \u00e0 diriger le d\u00e9veloppement de Linux, et est consid\u00e9r\u00e9 comme le \u00ab\u00a0dictateur bienveillant \u00e0 vie\u00a0\u00bb (Benevolent Dictator for Life) de celui-ci.</p> <p>Il existe de nombreuses distributions Linux, soit pour des serveurs</p>"},{"location":"NSI/Terminale/C06/Linux/#premiers-pas","title":"Premiers Pas","text":"<p>Selon les modalit\u00e9s du Lyc\u00e9e, nous utiliserons soit Raspberry Pi 4, soit WSL.</p>"},{"location":"NSI/Terminale/C06/Linux/#avec-raspberry-pi-4","title":"Avec Raspberry Pi 4","text":""},{"location":"NSI/Terminale/C06/Linux/#installation-sur-raspberry-pi-4","title":"Installation sur Raspberry Pi 4","text":"<p>Il existe des distributions Linux sp\u00e9cifiques pour Rasberry 4, mais nous utiliserons Raspberry Pi OS (anciennement connu sous le nom de Raspbian), qui est une distribution bas\u00e9e sur Linux Debian sp\u00e9cialement optimis\u00e9 pour Rasberry Pi.</p> <p>Une image est t\u00e9l\u00e9chargeable ici</p> <p>Une fois l'image install\u00e9e sur une carte micro-SD, le mini-ordinateur devrait-\u00eatre imm\u00e9diatement fonctionnel.</p> <p>A faire</p> <p>Suivez toutes les \u00e9tapes d'installation de l'OS Raspebbry Pi OS, en cr\u00e9ant un utilisateur administrateur avec votre nom de famille + premi\u00e8re lettre de votre pr\u00e9nom, et un mot de passe simple. </p>"},{"location":"NSI/Terminale/C06/Linux/#le-terminal","title":"Le terminal","text":"<p>Pour obtenir la ligne de commande dans Raspbian, il faut lancer le programme <code>Terminal</code>.</p> <p></p> <p>Le prompt est de la forme <code>nom_utilisateur@nom_machine : chemin_dossier_courant $</code>.</p> <p>Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par <code>~</code>, ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur.</p>"},{"location":"NSI/Terminale/C06/Linux/#avec-wsl","title":"Avec WSL","text":""},{"location":"NSI/Terminale/C06/Linux/#installation-sur-wsl","title":"Installation sur WSL","text":"<p>Windows Subsystem for Linux (WSL) est une couche de compatibilit\u00e9 permettant d'ex\u00e9cuter des ex\u00e9cutables binaires Linux de mani\u00e8re native sur les derni\u00e8res versions de Windows (\u00e0 partir de windows 10). La version WSL 2,sortie en mai 2019, introduit la pr\u00e9sence d'un v\u00e9ritable noyau Linux.</p> <p>Pour installer la distribution Ubuntu, lancer l'invite de commande windows, puis :</p> <pre><code>wsl -install -d Ubuntu\n</code></pre>"},{"location":"NSI/Terminale/C06/Linux/#utilisation-de-wsl","title":"Utilisation de WSL","text":"<p>Une fois install\u00e9, vous avez acc\u00e8s \u00e0 la distribution depuis l'invite de commande windows par l'interm\u00e9diaire de la commande </p> <pre><code>wsl </code></pre> <p>Vous acc\u00e9dez alors \u00e0 un terminal Linux tout ce qui est des plus classique</p> <p>Le prompt est de la forme <code>nom_utilisateur@nom_machine : chemin_dossier_courant $</code>.</p> <p>Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par <code>~</code>, ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur.</p>"},{"location":"NSI/Terminale/C06/Linux/#le-shell-linux","title":"Le Shell Linux","text":""},{"location":"NSI/Terminale/C06/Linux/#bash","title":"Bash","text":"<p>Les informations suivantes proviennent du tr\u00e8s bon site qkzk.</p> <p>Bash (acronyme de Bourne-Again shell) est un interpr\u00e9teur en ligne de commande de type script. C\u2019est le shell Unix(l'interpr\u00e9teur de commande) du projet GNU.</p> <p>Comme tous les interpr\u00e9teurs en ligne de commande de type script, Bash ex\u00e9cute quatre op\u00e9rations fondamentales :</p> <ul> <li>Il fournit une liste de commandes permettant d\u2019op\u00e9rer sur l\u2019ordinateur (lancement de programmes, copie de fichiers, etc.) ;</li> <li>Il permet de regrouper ces commandes dans un fichier unique appel\u00e9 script ;</li> <li>Il v\u00e9rifie la ligne de commande lors de son ex\u00e9cution ou lors d\u2019une \u00e9ventuelle proc\u00e9dure de v\u00e9rification et renvoie un message d\u2019erreur en cas d\u2019erreur de syntaxe ;</li> <li>En cas de validation, chaque ligne de commande est interpr\u00e9t\u00e9e, c\u2019est-\u00e0-dire traduite dans un langage compr\u00e9hensible par le syst\u00e8me d\u2019exploitation qui l\u2019ex\u00e9cute alors.</li> </ul> <p>Les scripts sont de courts programmes g\u00e9n\u00e9ralement faciles \u00e0 construire. <code>Bash</code> offre un service de gestion de flux, c\u2019est-\u00e0-dire qu\u2019il permet que le r\u00e9sultat d\u2019un script (la sortie) soit transmis \u00e0 un autre script (l\u2019entr\u00e9e). De cette fa\u00e7on, les scripts peuvent \u00eatre \u00ab cha\u00een\u00e9s \u00bb, chacun effectuant une seule t\u00e2che bien d\u00e9limit\u00e9e.</p> <p>Les scripts peuvent \u00eatre ex\u00e9cut\u00e9s manuellement par l\u2019utilisateur ou automatiquement par le syst\u00e8me. Par exemple, dans la distribution GNU/Linux Ubuntu, le r\u00e9pertoire <code>resume.d</code> contient un certain nombre de scripts qui s\u2019ex\u00e9cutent automatiquement lors du red\u00e9marrage du syst\u00e8me, c\u2019est-\u00e0-dire apr\u00e8s la fin de la mise en veille de celui-ci. Ces scripts servent \u00e0 relancer les diff\u00e9rents programmes interrompus par la mise en veille.</p>"},{"location":"NSI/Terminale/C06/Linux/#le-systeme-de-fichiers","title":"Le syst\u00e8me de fichiers","text":"<p>Sur un syst\u00e8me Linux, tout est un fichier, y compris un dossier. Mais pour rester compatible avec l'arborescence classique de windows, nous parlerons donc de :</p> <ul> <li>fichier lorsqu'il s'agit d'une feuille de l'arborescence ;</li> <li>dossier lorsqu'on parle d'un noeud ayant des enfants.</li> </ul> <p>Pour naviguer dans l'arborescence, il est n\u00e9cessaire de conna\u00eetre deux commandes<sup>4</sup> :</p> <ol> <li>la commande <code>ls</code>, qui permet de lister tous les enfants du r\u00e9pertoire courant dans l'arborescence et peut utiliser les options suivantes :<ul> <li><code>ls -a</code> affiche les fichiers cach\u00e9s ;</li> <li><code>ls -R</code> affiche tous les fichiers dans les sous-r\u00e9pertoires (de mani\u00e8re r\u00e9cursive) ;</li> <li><code>ls -l</code> affichera les d\u00e9tails des fichiers (autorisations, taille, propri\u00e9taires, etc...).</li> </ul> </li> <li>la commande <code>cd</code> pour Change Directory, qui peut s'utiliser selon les mani\u00e8res suivantes :<ul> <li><code>cd ~</code>, ram\u00e8ne au r\u00e9pertoire de l'utilisateur courant ;</li> <li><code>cd nom_du_repertoire_enfant</code>, qui d\u00e9place le prompt dans le r\u00e9pertoire enfant s\u00e9lectionn\u00e9 (adressage relatif) ;</li> <li><code>cd /chemin/absolu/vers/un r\u00e9pertoire</code>, qui d\u00e9place vers le r\u00e9pertoire cible (adressage absolu) ;</li> <li><code>cd ..</code> qui permet de remonter au r\u00e9pertoire parent.</li> </ul> </li> </ol> <p>Se rep\u00e9rer dans l'arborescence</p> <ol> <li>Remonter l'arborescence jusqu'\u00e0 la racine. Quel est le chemin absolu de votre r\u00e9pertoire personnel ?</li> <li>D\u00e9placez-vous jusqu'au r\u00e9pertoire <code>/usr/bin</code> et listez les fichiers pr\u00e9sents</li> <li>Retournez dans votre dossier personnel, puis listez les fichiers pr\u00e9sents,en affichant les d\u00e9tails. Quelles sont les informations donn\u00e9es ? Quels sont les utilisateurs recens\u00e9s du syst\u00e8me ?</li> </ol> <p>Les dossiers syst\u00e8mes Linux</p> <p>Dans un syst\u00e8me de type <code>UNIX</code>, on dispose d'une arborescence de fichiers dont la racine est <code>/</code>, puis d'un certain nombres de r\u00e9pertoires dont voici les principaux \u00e9l\u00e9ments :</p> <pre><code>/\n\u251c\u2500\u2500 bin     \u2190 Commandes de base du syst\u00e8me\n\u251c\u2500\u2500 dev     \u2190 Fichiers repr\u00e9sentant les dispositifs mat\u00e9riels (devices) du syst\u00e8me\n\u251c\u2500\u2500 etc     \u2190 Fichiers de configuration du syst\u00e8me\n\u251c\u2500\u2500 home    \u2190 R\u00e9pertoire d'accueil (HOME) des utilisateurs\n\u251c\u2500\u2500 lib     \u2190 Librairies\n\u251c\u2500\u2500 mnt     \u2190 Points de montage (cl\u00e9s usb etc.)\n\u251c\u2500\u2500 proc    \u2190 \u00c9tat du syst\u00e8me et de ses processus\n\u251c\u2500\u2500 root    \u2190 R\u00e9pertoire de l'administrateur syst\u00e8me\n\u251c\u2500\u2500 run     \u2190 Variables d'\u00e9tat du syst\u00e8me depuis le boot\n\u251c\u2500\u2500 sys     \u2190 Informations sur le noyau et les p\u00e9riph\u00e9riques\n\u251c\u2500\u2500 usr     \u2190 Logiciels install\u00e9s avec le syst\u00e8me, base de donn\u00e9es etc.\n\u2514\u2500\u2500 var     \u2190 Donn\u00e9es fr\u00e9quemment utilis\u00e9es et modifi\u00e9es\n</code></pre>"},{"location":"NSI/Terminale/C06/Linux/#les-utilisateurs-et-les-droits","title":"Les utilisateurs et les droits","text":"<p>En Linux, tout fichier, et par extension dossier, appartient \u00e0 un propri\u00e9taire ainsi qu'\u00e0 un groupe et un utilisateur quelconque ne pourra pas forc\u00e9ment avoir tous les droits sur un fichier qui ne lui appartient pas.</p> <p>Par exemple, \u00e9tudions la sortie donn\u00e9e par la commande <code>ls -l</code> suivante   :</p> <pre><code>drwxr-xr-x 31 fabien fabien      36864 f\u00e9vr. 22 19:27  T\u00e9l\u00e9chargements\n</code></pre> <ul> <li><code>d</code> indique qu'il s'agit d'un dossier ;</li> <li>les 9 lettres suivantes indiquent les droits dont disposent les utilisateurs sur ce fichier;</li> <li>le 3 est pour nous sans int\u00e9r\u00eat (il s'agit d'un compteur de liaison) ;</li> <li>le groupe de lettre suivant est le nom de l'utilisateur propri\u00e9taire du fichier ;</li> <li>le groupe de lettre suivant est le nom du groupe propri\u00e9taire du fichier ;</li> <li><code>36864</code> repr\u00e9sente la taille en octet du dossier ;</li> <li>on trouve ensuite la date et l'heure de la derni\u00e8re modification ;</li> <li>enfin le nom du dossier.</li> </ul> <p>Les utilisateurs</p> <p>Pour un fichier, on distinguera trois types d'utilisateurs :</p> <ul> <li><code>u</code> pour user, c'est-\u00e0-dire le propri\u00e9taire du fichier ;</li> <li><code>g</code>pour group, le groupe auquel appartient le fichier ;</li> <li><code>o</code> pour other, tous les autres utilisateurs.</li> </ul> <p>Super-Utilisateur</p> <p></p> <p>Par d\u00e9faut, il existe un super-utilisateur nomm\u00e9 <code>root</code> qui poss\u00e8de tous les droits sur un os Linux. Pour modifier des attributs au niveau syst\u00e8me, il faut prendre les droits de super-utilisateur, gr\u00e2ce \u00e0 la commande <code>sudo</code> (super-user do). Cette commande demande syst\u00e9matiquement \u00e0 l'utilisateur faisant partie du groupe des super-utilisateurs (sudoers)de confirmer avec son mot de passe (celui choisi \u00e0 l'installation du syst\u00e8me) toute action de modification effectu\u00e9e au niveau du syt\u00e8me.</p> <p>Par exemple pour une mise \u00e0 jour sous Ubuntu, on taperas les commandes suivantes :</p> <ul> <li> <p>Mise \u00e0 jour de la base de donn\u00e9e des paquets syst\u00e8mes :</p> <pre><code>sudo apt update\n</code></pre> </li> <li> <p>mise \u00e0 jour des paquets :</p> <pre><code>sudo apt upgrade\n</code></pre> </li> </ul> <p>Attention ! Avec de grands pouvoirs viennent de grandes responsabilit\u00e9s !</p> <p>Les droits</p> <p>Pour un fichier donn\u00e9, on distinguera 4 permissions :</p> <ul> <li><code>r</code> : read, droit de lire le fichier ;</li> <li><code>w</code> : write, droit de modifier le fichier ;</li> <li><code>x</code> : execute, droit d'ex\u00e9cution du fichier ;</li> <li><code>-</code> : aucun droit sur le fichier ; </li> </ul> <p>Exercice</p> <p>Quels sont les droits des utilisateurs sur le dossier <code>T\u00e9l\u00e9chargements</code> de mon PC ?</p> <p>Attribution des permissions</p> <p>Pour donner ou supprimer des permissions sur un fichier <code>mon_texte.txt</code>, on utilise la commande <code>chmod</code> de la mani\u00e8re suivante :</p> <ul> <li> <p>pour donner les droits en lecture et \u00e9criture \u00e0 l'utilisateur </p> <p><code>chmod u+rw mon_texte.txt</code></p> </li> <li> <p>pour supprimer les droits en modification au groupe :</p> <p><code>chmod g-w mon_texte.txt</code></p> </li> <li> <p>pour supprimer tous les droits aux autres utilisateurs :</p> <p><code>chmod o-rwx mon_texte.txt</code></p> </li> </ul> <p>Il est aussi possible d'utiliser la notation octale pour g\u00e9rer ces droits. Par exemple, la commande suivante :</p> <pre><code>chmod 640 mon_texte.txt\n</code></pre> <p>en sachant que <code>r = 4, w =2, x=1</code>, et que le premier chiffre correspond \u00e0 l'utilisateur, le second au groupe, et le troisi\u00e8me aux autres. Ainsi ici :</p> <ul> <li>l'utilisateur \u00e0 les droits de lecture et d'\u00e9criture (4+2 = 6) ;</li> <li>le groupe \u00e0 le droit de lecture (4) ;</li> <li>les autres n'ont aucun droit (0).</li> </ul> <p>Une commande telle que <code>chmod 777 mon_texte.txt</code> done tous les droits de lecture, \u00e9criture et ex\u00e9cution \u00e0 tous les utilisateurs du syst\u00e8me.</p> <p>Exercice</p> <ol> <li>Copiez un fichier quelconque depuis votre session Windows vers votre session WSL par l'interm\u00e9diaire de l'explorateur de fichier de windows.</li> <li>Quels sont les droits sur ce fichier ?</li> <li>Modifiez-les de mani\u00e8re \u00e0 ce que seul l'utilisateur principal (vous) ait des droits de lecture, \u00e9criture et ex\u00e9cution sur ce fichier, et que les autres n'aient qu'un droit de lecture.</li> </ol>"},{"location":"NSI/Terminale/C06/Linux/#les-principales-commandes-shell-sous-linux","title":"Les principales commandes Shell sous Linux","text":"<p>Voici, de mani\u00e8re non-exhaustive, quelques-unes des commandes les plus utiles sous Linux :</p> <ul> <li><code>pwd</code> : donne le chemin absolu du r\u00e9pertoire courant.</li> <li><code>man</code>(raccourci de manual) : donne le manuel de la commande pass\u00e9e en argument.  </li> <li><code>cat</code> (raccourci de concatenate) : son utilisation simple est d'afficher le contenu d'un fichier directement dans le terminal. Cependant cette commande permet bien d'autres choses :<ul> <li><code>cat &gt; nv_fichier.txt</code> : cr\u00e9e un nouveau fichier dans le r\u00e9pertoire courant, et le remplit avec les saisies de l'utilisateur (Ctrl+C pour quitter) ;</li> <li><code>cat fichier 1 fichier2 &gt; fichier3</code> : concat\u00e8ne les contenus des fichiers 1 et 2 dans un nouveau fichier. </li> </ul> </li> <li> <p><code>cp</code>(raccourci de copy) : copie un fichier dans un dossier : </p> <p><code>cp bidule.jpg /home/bob/photo</code> copie le fichier <code>bidule.jpg</code> vers le r\u00e9pertoire <code>/home/bob/photo</code>, si les permissions sont correctement attribu\u00e9es.</p> </li> <li> <p><code>mv</code> (raccourci de move) : d\u00e9palce un fichier vers un r\u00e9pertoire cible, et par extension permet de renommer un fichier :</p> <ul> <li><code>mv bidule.jpg /home/bob/photo</code> d\u00e9place le fichier <code>bidule.jpg</code> vers <code>/home/bob/photo</code> ;</li> <li><code>mv bidule.jpg truc.jpg</code> renomme le fichier <code>bidule.jpg</code> en <code>truc.jpg</code>.</li> </ul> </li> <li> <p><code>mkdir nv_dossier</code> (pour make directory) : cr\u00e9e un nouveau r\u00e9pertoire dont le nom est pass\u00e9 en argument.</p> </li> <li><code>rmdir nom_dossier</code> (pour remove directory) : supprime un r\u00e9pertoire vide dont le nom est pass\u00e9 en argument.</li> <li> <p><code>rm</code> (pour remove) : supprime le ou les fichiers pass\u00e9s en arguments. Attention \u00e0 cette commande qui peut tout casser ! :</p> <ul> <li><code>rm *</code> : supprime tous les fichiers du r\u00e9pertoire courant</li> <li><code>rm -R</code>: supprime de mani\u00e8re r\u00e9cursive tous les fichiers et sous-dossiers du r\u00e9pertoire courant !</li> <li>Il existe aussi des commandes interdites, \u00e0 ne jamais utiliser sous peine de mise au ban de la soci\u00e9t\u00e9, lynchage en place publique, etc...</li> </ul> </li> <li> <p><code>touch nv_fichier</code> : permet de cr\u00e9er un nouveau fichier vide en lui passant le nom en argument. A pr\u00e9f\u00e9rer \u00e0 la commande <code>cat</code>. </p> </li> <li> <p><code>find</code> : permet de chercher des fichiers et/ou des dossier dans un dossier donn\u00e9. Par exemple <code>find /home/ -name mon_texte.txt</code> cherche le fichier <code>mon_texte.txt</code> dans le r\u00e9pertoire <code>home</code> et tous ses sous-dossiers.</p> </li> <li><code>locate</code> : permet de donner la localisation d'un fichier dans le syst\u00e8me de fichier. <code>locate</code> est tr\u00e8s rapide, car elle utilise une base de donn\u00e9e mise \u00e0 jour r\u00e9guli\u00e8rement qui recense tous les fichiers du syst\u00e8me. Cependant, la mise \u00e0 jour de cette base de donn\u00e9e n'est pas imm\u00e9diate, donc les modifications r\u00e9centes ne sont pas prises en compte.</li> <li><code>grep</code> : permet de chercher une cha\u00eene de caract\u00e8re dans un fichier. <code>grep toto bob.txt</code> renverra toutes les lignes du fichier <code>bob.txt</code> contenant la cha\u00eene <code>toto</code>. <code>grep</code>est tr\u00e8s efficace, mais ne fonctionne pas correctement sur les fichiers <code>pdf</code> et <code>odt</code> ...</li> <li><code>head</code> : renvoie les 10 premi\u00e8res lignes d'un fichier. On peut param\u00e9trer le nombre de lignes obtenues avec l'option <code>-n</code> : <code>head -n 5 bob.txt</code> envoie les 5 premi\u00e8res lignes du fichier <code>bob.txt</code>.</li> <li><code>tail</code> : fonctionne de la m\u00eame mani\u00e8re que <code>head</code>, mais en renvoyant les 10 derni\u00e8res lignes.</li> <li><code>diff</code> : compare deux fichiers lignes par lignes, et renvoie toutes celles pr\u00e9sentant une diff\u00e9rence. Pratique !</li> </ul> <p>Un petit TP</p> <ol> <li>T\u00e9l\u00e9chargez le fichier Arborescence.tar.gz</li> <li>Cr\u00e9ez dans votre dossier personnel un dossier <code>TP</code></li> <li> <p>Copiez le fichier pr\u00e9c\u00e9dent dans ce dossier, puis d\u00e9compressez le avec la commande</p> <pre><code>tar -xzf Arborescence.tar.gz\n</code></pre> <p>Attention, ce peut-\u00eatre long...</p> </li> <li> <p>Vous aurez besoin de la commande <code>locate</code> qui n'est pas install\u00e9e. Ex\u00e9cutez la commande suivante pour installer le paquet n\u00e9cessaire \u00e0 son utilisation :</p> <pre><code>sudo apt install plocate\n</code></pre> </li> <li> <p>Pour d\u00e9buter, cherchez le fichier <code>commencement.txt</code>dans l'arborescence, et lisez-le ! Bon courage, vous aurez probablement \u00e0 chercher en parall\u00e8le sur <code>StackOverflow</code> des commandes sp\u00e9cifiques avec les options qui vont bien pour parvenir \u00e0 la fin de ce TP ! (Petit point de d\u00e9tail, si une commande vous semble trop longue, vous pouvez l'interrompre avec le raccourci clavier ++ctrl+C++)</p> </li> </ol> <ol> <li> <p>Richard Stallman est un peu le grand gourou de l'informatique, soit adul\u00e9, soit d\u00e9test\u00e9... Mais un personnage incontournable (voir ici)\u00a0\u21a9</p> </li> <li> <p>que voici un bel acronyme r\u00e9cursif !\u00a0\u21a9</p> </li> <li> <p>en r\u00e9alit\u00e9, nous devrions toujours parler de syst\u00e8me GNU/Linux, car Linux n'est que le noyau du syst\u00e8me. On trouvera ici un c\u00e9l\u00e8bre texte faussement attribu\u00e9 \u00e0 Richard Stallman sur ce point de d\u00e9tail. Fun fact, ce texte est parfois r\u00e9cit\u00e9 par coeur par certains ardents d\u00e9fenseurs du libre...\u00a0\u21a9</p> </li> <li> <p>si vous avez oubli\u00e9, le jeu terminus \u21a9</p> </li> </ol>"},{"location":"NSI/Terminale/C06/Ordonnancement/","title":"Ordonnancement des processus","text":""},{"location":"NSI/Terminale/C06/Ordonnancement/#ordonnancement-des-processus","title":"Ordonnancement des Processus","text":""},{"location":"NSI/Terminale/C06/Ordonnancement/#une-vision-faussee","title":"Une vision fauss\u00e9e ?","text":"<p>Nous rappelons qu\u2019un ex\u00e9cutable est un fichier (par exemple stock\u00e9 sur le disque dur) contenant une suite d\u2019instructions en langage machine. C\u2019est donc une suite d\u2019octets que le processeur est capable de d\u00e9coder et ex\u00e9cuter. Concr\u00e8tement, lorsqu'on ex\u00e9cute un programme (par exemple en cliquant sur l\u2019ic\u00f4ne du fichier ex\u00e9cutable ou en renseignant son chemin dans un terminal), le syst\u00e8me d\u2019exploitation effectue les actions suivantes<sup>1</sup> :</p> <ol> <li>le fichier contenant le programme (l\u2019ex\u00e9cutable) est copi\u00e9 dans la m\u00e9moire RAM, \u00e0 une certaine adresse <code>a</code> ;</li> <li>le syst\u00e8me d\u2019exploitation \u00e9crit la valeur <code>a</code> dans le registre <code>IP</code> (Instruction Pointer).</li> </ol> <p>Au prochain cycle d'horloge du processeur, ce dernier va alors lire l\u2019instruction se trouvant \u00e0 l\u2019adresse <code>a</code> et l\u2019ex\u00e9cuter. Une fois cela fait, il ex\u00e9cutera ensuite la seconde instruction et ainsi de suite. On rappelle que l\u2019ex\u00e9cution d\u2019une instruction se d\u00e9compose elle-m\u00eame en plusieurs sous-\u00e9tapes effectu\u00e9es au sein du processeur : </p> <ul> <li>le chargement (r\u00e9cup\u00e9rer l'instruction en m\u00e9moire) ;</li> <li>le d\u00e9codage (d\u00e9terminer dans la suite d\u2019octets charg\u00e9s quelle instruction ils encodent) ;</li> <li>l\u2019ex\u00e9cution proprement dite.</li> </ul> <p>Descriptif incomplet</p> <p>M\u00eame si elle semble correcte, la description que nous avons faite de l\u2019ex\u00e9cution d\u2019un programme est incompl\u00e8te. En effet, si rien de plus n\u2019est fait, alors la seule chose que l\u2019on peut attendre, c\u2019est que le programme en question s'ex\u00e9cute jusqu\u2019\u00e0 sa derni\u00e8re instruction, puis rende la main au syst\u00e8me d'exploitation. Impossible alors de l\u2019interrompre ! Impossible aussi de pouvoir ex\u00e9cuter deux programmes en m\u00eame temps.</p>"},{"location":"NSI/Terminale/C06/Ordonnancement/#les-interruptions-systemes","title":"Les interruptions syst\u00e8mes","text":"<p>Pour pallier ce probl\u00e8me, les syst\u00e8mes d\u2019exploitation utilisent une fonctionnalit\u00e9 importante des processeurs modernes : la notion d \u2018interruption.</p> <p>Interruption</p> <p>Une interruption est un signal envoy\u00e9 au processeur lorsqu'un \u00e9v\u00e8nement se produit. Il existe plusieurs types d\u2019interruptions. Certaines sont g\u00e9n\u00e9r\u00e9es par le mat\u00e9riel (par exemple, un disque dur signale qu\u2019il a fini d'\u00e9crire des octets, une carte r\u00e9seau signale que des paquets de donn\u00e9es arrivent, etc.), d'autres par du logiciel.</p> <p>Lorsque le processeur re\u00e7oit une interruption, il interrompt son ex\u00e9cution \u00e0 la fin de l'instruction courante et ex\u00e9cute un programme se trouvant \u00e0 une adresse pr\u00e9d\u00e9finie. Ce programme re\u00e7oit en argument une copie des valeurs courante des registres, ainsi qu\u2019un code num\u00e9rique lui permettant de savoir \u00e0 quel type d\u2019interruption il fait face. Ce programme sp\u00e9cial s'appelle le    gestionnaire d'interruption. Il est install\u00e9 \u00e0 une certaine adresse m\u00e9moire par le syst\u00e8me d'exploitation, tr\u00e8s t\u00f4t apr\u00e8s le d\u00e9marrage de la machine.</p> <p>Interruption d'horloge</p> <p>Parmi les interruptions mat\u00e9rielles, on retrouve les interruptions d\u2019horloge. Le processeur g\u00e9n\u00e8re de lui-m\u00eame une interruption mat\u00e9rielle \u00e0 intervalles de temps fixe. Historiquement, sur processeur Intel, cette interruption \u00e9tait lev\u00e9e toutes les 55 ms (environ 18 fois par seconde). Le gestionnaire d'interruption \u00e9tait donc appel\u00e9 au moins toutes les 55 ms. De nos jours, les processeurs disposent d\u2019horloges de haute pr\u00e9cision capables d'\u00e9mettre des interruptions avec une fr\u00e9quence de 10 Mhz, donc toutes les 100 ns. Ces interruptions d\u2019horloges, alli\u00e9es au gestionnaire d'interruption, sont les pi\u00e8ces essentielles permettant d'ex\u00e9cuter des programmes de fa\u00e7on concurrente.</p>"},{"location":"NSI/Terminale/C06/Ordonnancement/#principe-de-lordonnanceur","title":"Principe de l'ordonnanceur","text":"<p>Dans un syst\u00e8me d'exploitation moderne, plusieurs processus peuvent \u00eatre pr\u00e9sents en m\u00e9moire centrale en attente d\u2019ex\u00e9cution. Si plusieurs processus sont pr\u00eats, le syst\u00e8me d\u2019exploitation doit g\u00e9rer l\u2019allocation du processeur aux diff\u00e9rents processus \u00e0 ex\u00e9cuter. C\u2019est l\u2019ordonnanceur qui s\u2019acquitte de cette t\u00e2che.</p> <p>Notion d\u2019ordonnancement</p> <p>Le syst\u00e8me d\u2019exploitation d\u2019un ordinateur peut \u00eatre vu comme un ensemble de processus dont l\u2019ex\u00e9cution est g\u00e9r\u00e9e par un processus particulier : l\u2019ordonnanceur (scheduler en anglais). Il s'agit en gros du \u00ab chef d'orchestre \u00bb du syst\u00e8me d'exploitation.</p> <p>Les objectifs d\u2019un ordonnanceur sont, entre autres :</p> <ol> <li>s\u2019assurer que chaque processus en attente d\u2019ex\u00e9cution re\u00e7oive sa part de temps processeur ;</li> <li>minimiser le temps de r\u00e9ponse ;</li> <li>utiliser le processeur \u00e0 100% (ce serait g\u00e2cher de la ressource);</li> <li>utiliser d\u2019une mani\u00e8re \u00e9quilibr\u00e9e les ressources ;</li> <li>prendre en compte les priorit\u00e9s ;</li> <li>\u00eatre pr\u00e9dictible (et ce n'est pas une mince affaire...).</li> </ol> <p>Pour r\u00e9pondre \u00e0 ces objectifs parfois contradictoires, un ordonnanceur fait face \u00e0 deux probl\u00e8mes principaux :  </p> <ol> <li>Comment choisir quel processus ex\u00e9cuter ?</li> <li>Combien de temps de processeur allouer au processus choisi ?</li> </ol>"},{"location":"NSI/Terminale/C06/Ordonnancement/#differentes-methodes-dordonnancement","title":"Diff\u00e9rentes m\u00e9thodes d'ordonnancement","text":"<p>Imaginons que le processeur ait \u00e0 ex\u00e9cuter 4 processus, dont les temps d'ex\u00e9cutions sont diff\u00e9rents, et qui se sont pr\u00e9sent\u00e9s \u00e0 diff\u00e9rents instants au processeur :</p> <ul> <li>le processus <code>A</code> a besoin de 5 cycles d'horloge, et est arriv\u00e9 au tick 0 ;</li> <li>le processus <code>B</code> a besoin de 3 cycles d'horloge, et est arriv\u00e9 au tick 1 ;</li> <li>le processus <code>C</code> a besoin de 2 cycles d'horloge, et est arriv\u00e9 au tick 3 ;</li> <li>le processus <code>D</code> a besoin de 4 cycles d'horloge, et est arriv\u00e9 au tick 5 ;</li> </ul> <p></p> <p>Le processeur ne pouvant traiter qu'une information \u00e0 la fois, au vu des chevauchements, il faudra ordonner les diff\u00e9rents processus afin qu'ils soient tous ex\u00e9cut\u00e9s.</p>"},{"location":"NSI/Terminale/C06/Ordonnancement/#systemes-non-preemptifs","title":"Syst\u00e8mes non-pr\u00e9emptifs :","text":"<p>M\u00e9thode P\u00c4PS</p> <p>Si le syst\u00e8me d'exploitation n'est pas pr\u00e9emptif, on pourrait penser au principe d'une file de type \u00ab Premier Arriv\u00e9, Premier Servi \u00bb (FIFO).</p> <p></p> <p>Avec ce syst\u00e8me, chaque processus sera ex\u00e9cut\u00e9 du d\u00e9but \u00e0 la fin, sans interruptions. Il faudra 14 cycles d'horloge pour terminer les 4 processus. C'est le principe de la file d'attente pour les imprimantes : peu importe le nombre de pages \u00e0 imprimer, les documents seront imprim\u00e9s en entier et dans leur ordre d'arriv\u00e9e.</p> <p>Regardons le temps de s\u00e9jour n\u00e9cessaire \u00e0 l'ex\u00e9cution de chaque processus, qui correspond \u00e0 la diff\u00e9rence entre le temps de terminaison du processus et le temps d'entr\u00e9e dans le processeur :</p> <ul> <li><code>A</code> est termin\u00e9 au tick 5, et est entr\u00e9 au tick 0 , donc son temps de s\u00e9jour est \\(t_A = 5-0 = 5\\)</li> <li><code>B</code> est termin\u00e9 au tick 8, et est entr\u00e9 au tick 1 d'o\u00f9 : \\(t_B = 8-1 = 7\\)</li> <li><code>C</code> est termin\u00e9 au tick 10, et est entr\u00e9 au tick 3 d'o\u00f9 : \\(t_C = 10-3 = 7\\)</li> <li><code>D</code> est termin\u00e9 au tick 14, et est entr\u00e9 au tick 5 d'o\u00f9 : \\(t_D = 14-5 = 9\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc \\(\\dfrac{5+7+7+9}{4} = \\dfrac{28}{4} = 7\\).</p> <p>Le temps d'attente, lui, est le temps de s\u00e9jour auquel on retranche le temps d'ex\u00e9cution :</p> <ul> <li><code>A</code> a pour temps de s\u00e9jour 5 et pour temps d'ex\u00e9cution 5. Son temps d'attente est donc \\(t'_A = 5-5 = 0\\), ce qui signifie que le processus <code>A</code> n'a pass\u00e9 aucun temps en \u00e9tat pr\u00eat ou bloqu\u00e9 ;</li> <li><code>B</code> a pour temps de s\u00e9jour 7 et pour temps d'ex\u00e9cution 3 : \\(t'_B = 7-3 = 4\\). </li> <li><code>C</code> a pour temps de s\u00e9jour 7 et pour temps d'ex\u00e9cution 2 : \\(t'_C = 7-2 = 5\\)</li> <li><code>D</code> a pour temps de s\u00e9jour 9 et pour temps d'ex\u00e9cution 4 : \\(t'_B = 9-4 = 5\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc \\(\\dfrac{0+4+5+5}{4} = \\dfrac{14}{4} = 3,5\\).</p> <p>M\u00e9thode Short Job First (<code>SJF</code>)</p> <p>Une autre possibilit\u00e9 est de prioriser dans les processus en attente celui qui sera le plus rapide \u00e0 terminer. Ainsi :</p> <ul> <li>au tick 0, on ex\u00e9cute le processus <code>A</code> ;</li> <li>au tick 5, on a le choix entre les processus <code>B</code>, <code>C</code> et <code>D</code> qui sont dans la file d'attente, donc on ex\u00e9cute <code>C</code>, qui est le plus rapide ;</li> <li>au tick 7 on ex\u00e9cute <code>B</code> ;</li> <li>et on termine par <code>D</code>.</li> </ul> <p></p> <p>En terme de performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick 5, et est entr\u00e9 au tick 0 : \\(t_A = 5-0 = 5\\)</li> <li><code>B</code> est termin\u00e9 au tick 10, et est entr\u00e9 au tick 1 : \\(t_B = 10-1 = 9\\)</li> <li><code>C</code> est termin\u00e9 au tick 7, et est entr\u00e9 au tick 3 : \\(t_C = 7-3 = 4\\)</li> <li><code>D</code> est termin\u00e9 au tick 14, et est entr\u00e9 au tick 5 : \\(t_D = 14-5 = 9\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc \\(\\dfrac{5+9+4+9}{4} = \\dfrac{27}{4} = 6,75\\).</p> <ul> <li><code>A</code> a pour temps de s\u00e9jour 5 et pour temps d'ex\u00e9cution 5 : \\(t'_A = 5-5 = 0\\)</li> <li><code>B</code> a pour temps de s\u00e9jour 9 et pour temps d'ex\u00e9cution 3 : \\(t'_B = 9-3 = 6\\)</li> <li><code>C</code> a pour temps de s\u00e9jour 4 et pour temps d'ex\u00e9cution 2 : \\(t'_C = 4-2 = 2\\)</li> <li><code>D</code> a pour temps de s\u00e9jour 9 et pour temps d'ex\u00e9cution 4 : \\(t'_B = 9-4 = 5\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc \\(\\dfrac{0+6+2+5}{4} = \\dfrac{13}{4} = 3,25\\).</p>"},{"location":"NSI/Terminale/C06/Ordonnancement/#systemes-preemptifs","title":"Syst\u00e8mes pr\u00e9emptifs","text":"<p>Dans un sch\u00e9ma d\u2019ordonnanceur pr\u00e9emptif, pour s\u2019assurer qu\u2019aucun processus ne s\u2019ex\u00e9cute pendant trop de temps, l'horloge \u00e9lectronique g\u00e9n\u00e8re p\u00e9riodiquement une interruption. \u00c0 chaque interruption d\u2019horloge, le syst\u00e8me d\u2019exploitation reprend la main et d\u00e9cide si le processus courant doit poursuivre son ex\u00e9cution ou s\u2019il doit \u00eatre suspendu pour laisser place \u00e0 un autre.</p> <p>S\u2019il d\u00e9cide de suspendre son ex\u00e9cution au profit d\u2019un autre, il doit d\u2019abord sauvegarder l\u2019\u00e9tat des registres du processeur avant de charger dans les registres les donn\u00e9es du processus \u00e0 lancer. C\u2019est qu\u2019on appelle la commutation de contexte(ou changement de contexte, context switch en anglais). Cette sauvegarde est n\u00e9cessaire pour pouvoir poursuivre ult\u00e9rieurement l\u2019ex\u00e9cution du processus suspendu.</p> <p>Le processeur passe donc d\u2019un processus \u00e0 un autre en ex\u00e9cutant chaque processus pendant quelques dizaines ou centaines de millisecondes. Le temps d\u2019allocation du processeur au processus est appel\u00e9 un quantum. Cette commutation entre processus doit \u00eatre rapide, c\u2019est-\u00e0-dire, exiger un temps nettement inf\u00e9rieur au quantum. Le processeur, \u00e0 un instant donn\u00e9, n\u2019ex\u00e9cute r\u00e9ellement qu\u2019un seul processus, mais pendant une seconde, le processeur peut ex\u00e9cuter plusieurs processus et donne ainsi l\u2019impression de parall\u00e9lisme (pseudo-parall\u00e9lisme).</p> <p>M\u00e9thode Shortest Remaining Time (<code>SRT</code>)</p> <p>L\u2019ordonnancement du plus petit temps de s\u00e9jour ou Shortest Remaining Time (<code>SRT</code>) est la version pr\u00e9emptive de l\u2019algorithme <code>SJF</code>. Un processus arrive dans la file de processus, l\u2019ordonnanceur compare la valeur esp\u00e9r\u00e9e pour ce processus contre la valeur du processus actuellement en ex\u00e9cution. Si le temps du nouveau processus est plus petit, il rentre en ex\u00e9cution imm\u00e9diatement. Ainsi :</p> <ul> <li>au tick 0, le processus <code>A</code> est ex\u00e9cut\u00e9 ;</li> <li>au tick 1, le processus <code>B</code> est estim\u00e9 plus court que la partie restante de <code>A</code> (3 contre 4), donc <code>A</code> est suspendu et <code>B</code> est ex\u00e9cut\u00e9 ;</li> <li>au tick 3, il reste 4 temps au processus <code>A</code>, 1 seul pour <code>B</code>, et 2 pour <code>C</code>, donc on ternmine <code>B</code> ;</li> <li>au tick 4, on ex\u00e9cute <code>C</code>, qui est le plus court ;</li> <li>au tick 6, il reste 4 temps pour <code>A</code> et <code>D</code>, un choix est fait : comme <code>\u00c0</code> est d\u00e9j\u00e0 en cours, on le termine en priorit\u00e9.</li> </ul> <p></p> <p>En terme de performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick 10, et est entr\u00e9 au tick 0 : \\(t_A = 10-0 = 10\\)</li> <li><code>B</code> est termin\u00e9 au tick 4, et est entr\u00e9 au tick 1 : \\(t_B = 4-1 = 3\\)</li> <li><code>C</code> est termin\u00e9 au tick 6, et est entr\u00e9 au tick 3 : \\(t_C = 6-3 = 3\\)</li> <li><code>D</code> est termin\u00e9 au tick 14, et est entr\u00e9 au tick 5 : \\(t_D = 14-5 = 9\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc \\(\\dfrac{10+3+3+9}{4} = \\dfrac{25}{4} = 6,25\\).</p> <ul> <li><code>A</code> a pour temps de s\u00e9jour 10 et pour temps d'ex\u00e9cution 5 : \\(t'_A = 10-5 = 5\\)</li> <li><code>B</code> a pour temps de s\u00e9jour 3 et pour temps d'ex\u00e9cution 3 : \\(t'_B = 3-3 = 0\\)</li> <li><code>C</code> a pour temps de s\u00e9jour 3 et pour temps d'ex\u00e9cution 2 : \\(t'_C = 3-2 = 1\\)</li> <li><code>D</code> a pour temps de s\u00e9jour 9 et pour temps d'ex\u00e9cution 4 : \\(t'_B = 9-4 = 5\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc \\(\\dfrac{5+0+1+5}{4} = \\dfrac{11}{4} = 2,75\\).</p> <p>Cet algorithme est nettement plus performant que les algorithmes des syst\u00e8mes non-pr\u00e9emptifs, mais il faut tenir compte d'un temps d'estimation des temps restants, qui peut parfois rendre cette m\u00e9thodes beaucoup plus longue et moins efficace.</p> <p>M\u00e9thode Round Robin (<code>RR</code>)</p> <p>L\u2019algorithme du tourniquet ou Round Robin (<code>RR</code>) repr\u00e9sent\u00e9 sur la figure ci-dessous est un algorithme ancien, simple, fiable et tr\u00e8s utilis\u00e9. Il m\u00e9morise dans une file du type <code>FIFO</code> (First In First Out) la liste des processus pr\u00eats, c\u2019est-\u00e0-dire en attente d\u2019ex\u00e9cution.</p> <p></p> <p>Il alloue le processeur au processus en t\u00eate de file, pendant un quantum de temps. Si le processus se bloque ou se termine avant la fin de son quantum, le processeur est imm\u00e9diatement allou\u00e9 \u00e0 un autre processus (celui en t\u00eate de file). Si le processus ne se termine pas au bout de son quantum, son ex\u00e9cution est suspendue. Le processeur est allou\u00e9 \u00e0 un autre processus (celui en t\u00eate de file). Le processus suspendu est ins\u00e9r\u00e9 en queue de file. Les processus qui arrivent ou qui passent de l\u2019\u00e9tat bloqu\u00e9 \u00e0 l\u2019\u00e9tat pr\u00eat sont ins\u00e9r\u00e9s en queue de file.</p> <p>Comparer les performances de l'algorithme <code>RR</code></p> <p>Toujours en utilisant l'exemple :</p> <p></p> Quantum 1Quantum 2Quantum 3Quantum 4 <p>Si le quantum de temps est de 1 tick :</p> <p></p> <p>Pour les performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_A =...\\)</li> <li><code>B</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_B = ...\\)</li> <li><code>C</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_C = ...\\)</li> <li><code>D</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_D = ...\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc ...</p> <ul> <li><code>A</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_A = ...\\)</li> <li><code>B</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> <li><code>C</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_C = ...\\)</li> <li><code>D</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc ...</p> <p>Si le quantum de temps est de 2 ticks :</p> <p></p> <p>Pour les performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_A =...\\)</li> <li><code>B</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_B = ...\\)</li> <li><code>C</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_C = ...\\)</li> <li><code>D</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_D = ...\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc ...</p> <ul> <li><code>A</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_A = ...\\)</li> <li><code>B</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> <li><code>C</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_C = ...\\)</li> <li><code>D</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc ...</p> <p>Si le quantum de temps est de 3 ticks :</p> <p></p> <p>Pour les performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_A =...\\)</li> <li><code>B</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_B = ...\\)</li> <li><code>C</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_C = ...\\)</li> <li><code>D</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_D = ...\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc ...</p> <ul> <li><code>A</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_A = ...\\)</li> <li><code>B</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> <li><code>C</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_C = ...\\)</li> <li><code>D</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc ...</p> <p>Si le quantum de temps est de 4 ticks :</p> <p></p> <p>Pour les performances :</p> <ul> <li><code>A</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_A =...\\)</li> <li><code>B</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_B = ...\\)</li> <li><code>C</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_C = ...\\)</li> <li><code>D</code> est termin\u00e9 au tick ..., et est entr\u00e9 au tick ... : \\(t_D = ...\\)</li> </ul> <p>Le temps de s\u00e9jour moyen avec cette m\u00e9thode est donc ...</p> <ul> <li><code>A</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_A = ...\\)</li> <li><code>B</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> <li><code>C</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_C = ...\\)</li> <li><code>D</code> a pour temps d'attente ... et pour temps d'ex\u00e9cution ... : \\(t'_B = ...\\)</li> </ul> <p>Le temps d'attente moyen avec cette m\u00e9thode est donc ...</p> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <p>Soient deux processus A et B pr\u00eats tels que A est arriv\u00e9 en premier suivi de B, 2 unit\u00e9s de temps apr\u00e8s. Les temps CPU n\u00e9cessaires pour l\u2019ex\u00e9cution des processus A et B sont respectivement 15 et 4 unit\u00e9s de temps. Le temps de commutation est suppos\u00e9 nul.</p> <p>Calculer les temps moyen de s\u00e9jour et les temps moyens d'attente pour les algorithmes :</p> <ol> <li>SRT</li> <li>RR avec un quantum de 10</li> <li>RR avec un quantum de 3</li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C06/Ordonnancement/#les-threads","title":"Les Threads","text":"<p>Merci http://lycee.educinfo.org/index.php?page=creation_thread&amp;activite=processus</p> <p> Programmation s\u00e9quentielle</p> Enonc\u00e9R\u00e9ponses <p>Copiez le code suivant dans un fichier <code>sequence.py</code> </p><pre><code>def f1():\n    for _ in range(5):\n         print(\"Bonjour !\")\n\ndef f2():\n    for _ in range(5):\n        print(\"Ca va ?\")\n\nif __name__ == \"__main__\" :\n    f1()\n    f2()\n</code></pre> <p>Quel est l'ordre d'affichage ?</p> <p>Comme d'habitude en programmation s\u00e9quentielle, nous voyons apparaitre d'abord les 5 <code>\"Bonjour !\"</code> puis les 5 <code>\"Ca va ?\"</code>.</p> <p>Threads</p> <p>Un thread est un processus qui va partager avec un programme l'espace des donn\u00e9es et va s'ex\u00e9cuter de fa\u00e7on simultan\u00e9 avec d'autres thread. On parle aussi de processus l\u00e9gers. Ils peuvent \u00eatre tr\u00e8s utile, mais peuvent aussi causer de multiples probl\u00e8mes. </p> <p>Cr\u00e9ation de threads</p> Enonc\u00e9R\u00e9ponses <p>Nous allons utiliser le module <code>threading</code> de Python avec le code ci-dessous, que vous copierez dans un fichier <code>concurrent.py</code> :</p> <p></p><pre><code>from threading import Thread\nfrom time import sleep\n\ndef f1():\n    for _ in range(5):\n        print(\"Bonjour !\")\n        sleep(0.01)\n\ndef f2():\n    for _ in range(5):\n        print(\"Ca va ?\")\n        sleep(0.01)\n\nif __name__ == \"__main__\" :\n    p1 = Thread(target=f1)\n    p2 = Thread(target=f2)\n    p1.start()\n    p2.start()\n    p1.join()\n    p2.join()\n</code></pre> Ex\u00e9cutez plusieurs fois ce code. Quelle diff\u00e9rence constatez vous avec le code pr\u00e9c\u00e9dent ?  <p>Cette fois ci, les <code>\"Bonjour !\"</code> et les <code>\"Ca va ?\"</code> se sont affich\u00e9s de fa\u00e7on intercal\u00e9e. Si vous avez ex\u00e9cut\u00e9 le programme plusieurs fois, vous avez peut \u00eatre vu qu'il n'y avait pas toujours le m\u00eame ordre. Par exemple :  </p><pre><code>Bonjour !\nCa va ?\nBonjour !\nCa va ?\nCa va ?\nBonjour !\nBonjour !\nCa va ?\nBonjour !\nCa va ?\n</code></pre> <p>Nous cr\u00e9ons deux objets de la classe <code>Thread</code>. Ce sont des processus l\u00e9gers qui vont partager l'espace m\u00e9moire de notre programme principal et s'ex\u00e9cuter de fa\u00e7on parall\u00e8le. Les deux lignes suivantes appellent la m\u00e9thode <code>start</code> sur les Thread, et va lancer leur ex\u00e9cution. Mais pendant que le premier s'ex\u00e9cute, le programme continue et va lancer le second. </p> <p>Enfin, nous utilisons la m\u00e9thode <code>join</code> sur ces deux threads. En effet, le programme principal continue de s'ex\u00e9cuter pendant que les threads tournent, et si il se termine, il met fin \u00e0 tous ses threads. La m\u00e9thode <code>join</code> force le programme principal \u00e0 attendre la fin des threads. </p> <p>Pourquoi faire \u00e7a ?</p> <p>L'avantage principal, c'est de pouvoir faire plusieurs choses en m\u00eame temps. Surtout si on travaille sur une machine qui a plusieurs processeur. Par exemple, on peut avoir une machine qui a 2 processeur, chaque processeur ayant quatre c\u0153urs, chaque c\u0153eurs pouvant lui m\u00eame ex\u00e9cuter deux threads\u2026 on va pouvoir au total ex\u00e9cuter en parall\u00e8le 16 threads ! </p> <p>Chauffeur, si t'as pas peur...</p> Enonc\u00e9R\u00e9ponses <p>Appliquons les threads pour calculer plus vite ! Imaginons  un programme qui doit b\u00eatement faire 400 calculs. On va simuler cela par un petit sleep avec le code suivant :</p> <pre><code>from time import sleep\n\n# Variable globale\ncompteur = 0 \nlimite = 400\n\ndef calcul():\n\"\"\"Une fonction qui fait un calcul\"\"\"\n    global compteur\n    for c in range(limite):\n        temp = compteur\n        # simule un traitement n\u00e9cessitant des calculs\n        sleep(0.000000001)\n        compteur = temp + 1\n\ncompteur = 0\ncalcul()\nprint(compteur)\n</code></pre> <ol> <li>Recopiez et ex\u00e9cutez ce code, et v\u00e9rifiez qu'il affiche bien 400.</li> <li> <p>Les macines du Lyc\u00e9e peuvent supporter 4 threads dif\u00e9rents, essayons alors avec le code suivant, pour gagner un facteur 4 dans notre temps de calcul :</p> <pre><code>from threading import Thread\nfrom time import sleep\n\n# Variable globale\ncompteur = 0 \nlimite = 100\n\ndef calcul():\n\"\"\"Une fonction qui fait un calcul\"\"\"\n    global compteur\n    for c in range(limite):\n        temp = compteur\n        # simule un traitement n\u00e9cessitant des calculs\n        sleep(0.000000001)\n        compteur = temp + 1\n\ncompteur = 0\nmesThreads = []\nfor i in range(4): # Lance en parall\u00e8le 4 ex\u00e9cutions de calcul\n    p = Thread(target = calcul)\n    p.start()      # Lance calcul dans un processus l\u00e9ger \u00e0 part.\n    mesThreads.append(p)\n\n# On attend la fin de l'ex\u00e9cution des threads.\nfor p in mesThreads :\n        p.join()\n\nprint(compteur)\n</code></pre> <p>Ex\u00e9cutez plusieurs fois ce code. Obtient-on le r\u00e9sultat attendu ?</p> </li> </ol> <ol> <li>Oui, le r\u00e9sultat est correct.</li> <li>Le r\u00e9sultat n'est pas du tout le r\u00e9sultat attendu. Chaque thread se lance et fait 100 calcul, mais le compteur \u00e0 la fin ne vaut en g\u00e9n\u00e9ral m\u00eame pas 100 ! Ce r\u00e9sultat est tr\u00e8s perturbant quand on le rencontre pour la premi\u00e8re fois, et cela explique la r\u00e9ticence de bien des d\u00e9veloppeurs \u00e0 l'\u00e9gard des threads. On peut lire sur bien des forums de d\u00e9veloppeur \u00abThreads are EVIL, don't use them !\u00bb. Mais non, il ne sont pas le diable, il faut juste \u00eatre parfaitement conscient de ce qui se passe. Ils sont m\u00eame indispensables dans bien des programmes, particuli\u00e8rment tous les programmes client/serveur qui doivent r\u00e9pondre \u00e0 un grand nombre de requ\u00eates concurrentes. </li> </ol> <p>Quelques explications sont n\u00e9cesaires pour comprendre r\u00e9ellement ce qui s'est produit. Quatre processus (appelons les P1, P2, P3 et P4) ex\u00e9cutent la fonction calcul simultan\u00e9ment. Celle-ci utilise une variable globale qui sera donc modifi\u00e9e par chacun de ces processus et une variable locale temp qui sera sp\u00e9cifique \u00e0 chacun de nos processus. Nous la d\u00e9signerons par temp(P1), temp(P2), etc... Un sc\u00e9nario possible est le suivant, en imagineant qu'au d\u00e9part le compteur vaille 10.</p> <ul> <li>P1 sauvegarde compteur dans <code>temp(P1)</code>, d'o\u00f9 <code>temp(P1)</code>vaut 10</li> <li>P2 sauvegarde compteur dans <code>temp(P2)</code>, d'o\u00f9 <code>temp(P2)</code> vaut 10</li> <li>P3 sauvegarde compteur dans <code>temp(P3)</code>, d'o\u00f9 <code>temp(P3)</code> vaut 10</li> <li>P1 et P2 incr\u00e9mentent <code>temp</code> et sauvegardent la r\u00e9ponse dans <code>compteur</code>, donc <code>compteur</code> vaut 11 (et pas 12...)</li> <li>P4 sauvegarde compteur dans <code>temp(P4)</code>, d'o\u00f9 <code>temp(P4)</code> vaut 11</li> <li>P3 et P4 incr\u00e9mentent <code>temp</code> et sauvegardent la r\u00e9ponse dans <code>compteur</code> qui vaut donc maintenant 12</li> </ul> <p>Au final, le compteur a bien \u00e9t\u00e9 incr\u00e9ment\u00e9 4 fois, mais du fait de l'\u00e9x\u00e9cution en parall\u00e8le, le compteur ne vaut que 12 et non 14 ! Ceci explique que notre compteur au final ne vaut pas 400 car sa sauvegarde dans des variables temporaires fait que la plupart des incr\u00e9mentations ne sont pas prises en compte. </p> <p>Le r\u00e9sultat est al\u00e9atoire par ce que les threads s'ex\u00e9cutent dans un ordre qui peut varier, comme nous l'avons vu sur l'exemple des salutations. C'est le principal probl\u00e8me avec les threads : on ne ma\u00eetrise absolument pas l'ordre dans lequel ils sont ex\u00e9cut\u00e9s, et il faut en tenir compte d\u00e8s la conception. </p> <p>Une solution : le verrou ?</p> <p>Il existe un m\u00e9canisme qui va nous ralentir potentiellement un peu mais qui \u00e9vite ce genre de probl\u00e8mes : les verrous. Ce sont des objets de la classe <code>Lock</code> du module threading. Dans notre cas, ils ont deux m\u00e9thodes qui nous int\u00e9ressent.</p> <ul> <li>La m\u00e9thode <code>acquire</code> s'accapare le verrou s'il est disponible, sinon elle attend qu'il se lib\u00e8re.</li> <li>La m\u00e9thode <code>release</code> lib\u00e8re le verrou.</li> </ul> <p>Ce verrou sera une variable globale du programme principal qui sera partag\u00e9 entre les threads. Notre programme devient alors le suivant : </p> <pre><code>from threading import Thread,Lock\nfrom time import sleep\n\n# Variable globale\ncompteur = 0 \nlimite = 100\nverrou = Lock()\n\ndef calcul():\n\"\"\"Une fonction qui fait un calcul\"\"\"\n    global compteur\n    for c in range(limite):\n        # D\u00e9but de la section critique\n        verrou.acquire()\n        temp = compteur\n        # simule un traitement n\u00e9cessitant des calculs\n        sleep(0.000000001)\n        compteur = temp + 1\n        # fin de la section critique\n        verrou.release()\n\ncompteur = 0\nmesThreads = []\nfor i in range(4): # Lance en parall\u00e8le 4 ex\u00e9cutions de calcul\n    p = Thread(target = calcul)\n    p.start()      # Lance calcul dans un processus l\u00e9ger \u00e0 part.\n    mesThreads.append(p)\n\n# On attend la fin de l'ex\u00e9cution des threads.\nfor p in mesThreads :\n        p.join()\n\nprint(compteur)\n</code></pre> <p>Le programme permet alors bien d'avoir le r\u00e9sultat escompt\u00e9. Mais malheureusement, tous nos probl\u00e8mes ne sont pas r\u00e9solus...</p> <ol> <li> <p>voir le cours de premi\u00e8re \u21a9</p> </li> </ol>"},{"location":"NSI/Terminale/C06/Processus/","title":"Gestion des Processus","text":""},{"location":"NSI/Terminale/C06/Processus/#notion-de-processus","title":"Notion de  processus","text":"<p>Cette page et les suivantes du chapitre sont insipr\u00e9es des pages suivantes :</p> <ul> <li>https://www.lecluse.fr/nsi/NSI_T/archi/process/</li> <li>https://www.lyceum.fr/tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation</li> <li>http://lycee.educinfo.org/index.php?page=creation_thread&amp;activite=processus</li> </ul> <p>et bien entendu de l'habituel Num\u00e9rique et Sciences Informatique, 24 le\u00e7ons avec exercices corrig\u00e9s aux editions Ellipses.</p> <p>L'objectif de cette partie est de comprendre comment une machine peut ex\u00e9cuter plusieurs t\u00e2cches de mani\u00e8re simultan\u00e9es : si l'on prend l'exemple du smartphone,  alors que nous regardons une vid\u00e9o, il va suivre les antennes relais et se synchroniser avec, \u00e9couter s'il y a un appel t\u00e9l\u00e9phonique ou des SMS qui arrive, v\u00e9rifier les nouveaux courriers \u00e9lectroniques, mettre \u00e0 jour les notifications des diff\u00e9rents r\u00e9seaux sociaux,etc.</p> <p>Pour comprendre, il nous faudra nous poser les questions suivantes :</p> <ol> <li>Comment sont donc ex\u00e9cut\u00e9s les programmes par le syst\u00e8me d'exploitation ?</li> <li>Comment plusieurs programmes peuvent-ils \u00eatre ex\u00e9cut\u00e9s simultan\u00e9ment ?</li> <li>Quels sont les risques et preobl\u00e8mes soulev\u00e9s par ces ex\u00e9cutions simultan\u00e9es ?</li> </ol>"},{"location":"NSI/Terminale/C06/Processus/#du-programme-au-processus","title":"Du programme au processus","text":"<p>Les processus</p> <p>Un processus est un programme en cours d'ex\u00e9cution sur un ordinateur. Il est caract\u00e9ris\u00e9 par</p> <ul> <li>un ensemble d'instructions \u00e0 ex\u00e9cuter - souvent stock\u00e9es dans un fichier sur lequel on clique pour lancer un programme (par exemple <code>firefox.exe</code>)</li> <li>un espace m\u00e9moire d\u00e9di\u00e9 \u00e0 ce processus pour lui permettre de travailler sur des donn\u00e9es qui lui sont propres : si vous lancez deux instances de firefox, chacune travaillera ind\u00e9pendament de l'autre avec ses propres donn\u00e9es.</li> <li>des ressources mat\u00e9rielles : processeur, entr\u00e9es-sorties (acc\u00e8s \u00e0 internet en utilisant la connexion Wifi).</li> </ul> <p>Il ne faut donc pas confondre le fichier contenant un programme (portent souvent l'extension <code>.exe</code> sous windows) et le ou les processus qu'ils engendrent quand ils sont ex\u00e9cut\u00e9s : un programme est juste un fichier contenant une suite d'instructions (<code>firefox.exe</code> par exemple) alors que les processus sont des instances de ce programme ainsi que les ressources n\u00e9cessaires \u00e0 leur ex\u00e9cution (plusieurs fen\u00eatres de firefox ouvertes en m\u00eame temps).</p> <p>Il est possible de visualiser et g\u00e9rer les processus actifs d'une machine par l'interm\u00e9diaire d'un gestionnaire de processus, qui est un programme sp\u00e9cifique au syst\u00e8me d'exploitation :</p> <ul> <li>sur windows, en utilisant Ctrl+Alt+Del, mais pas au Lyc\u00e9e... La gestion des processus \u00e9tant critique, seuls les administrateurs de la machine peuvent y acc\u00e9der...</li> <li>sur linux simplement par l'utilisation d'un terminal (la ligne de commande)</li> </ul> En cas de probl\u00e8me avec les Raspberry Pi, ou pour vous entrainer chez vous <p>JupyterHub est un serveur de Notebook que j'avais install\u00e9 il y a fort longtemps, avant l'appartition de Capytale. Il est obsol\u00e8te pour l'utilisation des notebooks, mais nous pouvons toujours en avoir une utilit\u00e9 : un terminal Linux est toujours disponible !</p> <ol> <li>Connectez vous sur jupyterHub (Votre identifiant est votre nom de famille imm\u00e9diatement suivi de la premi\u00e8re lettre de votre pr\u00e9nom. Pour le mot de passe, vous le choisissez \u00e0 la pemi\u00e8re connexion)</li> <li> <p>Ouvrir un terminal :</p> <p></p> </li> </ol> <p>Manipulations</p> <ol> <li> <ul> <li><code>/bin/</code>: commandes de base n\u00e9cessaires au d\u00e9marrage et \u00e0 l'utilisation d'un syst\u00e8me minimaliste.</li> <li><code>/sbin/</code>: Ex\u00e9cutables pour les administrateurs (abr\u00e9viation de system binaries, soit binaires syst\u00e8me en fran\u00e7ais).</li> <li><code>/usr/bin/</code>: Binaires ex\u00e9cutables qui ne sont pas d\u00e9j\u00e0 pr\u00e9sents dans <code>/bin</code> et donc pas indispensables \u00e0 un syst\u00e8me minimaliste.</li> </ul> <p>Sous linux, les programmes sont par convention situ\u00e9es dans les dossiers <code>bin</code> (pour binaries en anglais):</p> <p>Utiliser la commande <code>ls</code> pour lister les programmes pr\u00e9sents dans <code>/bin/</code>.</p> </li> <li> <p>Utilisez la commande <code>cat /bin/ls</code> pour afficher le contenu du programme <code>ls</code>. On constate que le fichier est un fichier  compil\u00e9 (utilisez Ctrl+C pour revenir au prompt).</p> </li> <li>Pour lancer un programme, il suffit d'\u00e9crire son nom (sans pr\u00e9ciser le chemin si le dossier a \u00e9t\u00e9 ajout\u00e9 aux variables d'environnement). Par exemple vous pouvez lancer un interpr\u00e9teur python par la commande <code>python3</code> (tapez <code>exit()</code> pour sortir de l'interpr\u00e9teur). </li> <li>Vous pouvez visualiser les processus en ex\u00e9cution par l'interm\u00e9diaire de la commande <code>ps</code> :<ol> <li><code>ps</code> simplement listera vos propres processus utilisateurs</li> <li><code>ps -l</code> donnera plus de d\u00e9tails</li> <li><code>ps -a -u -x</code> ou <code>ps -aux</code> affichera tous les processus de tous les utilisateurs(<code>-a</code>), avec le propri\u00e9taire du processus (<code>-u</code>), ainsi que les processus qui ne sont pas attach\u00e9s \u00e0 un  terminal (<code>-x</code>).</li> <li><code>ps -ef</code> affichera tous les processus (every) avec toutes les informations disponibles (full).</li> <li>Le manuel d'utilisation de la commande <code>ps</code> est obtenu par la commande <code>man ps</code> (ou par wikipedia, comme d'habitude).</li> </ol> </li> </ol>"},{"location":"NSI/Terminale/C06/Processus/#creation-dun-processus","title":"Cr\u00e9ation d'un processus","text":"<p>Cr\u00e9ation des processus</p> <p>La cr\u00e9ation d'un processus peut intervenir</p> <ul> <li>au d\u00e9marrage du syst\u00e8me ;</li> <li>par un appel d'un autre processus ;</li> <li>par une action d'un utilisateur (lancement d'application).</li> </ul> <p>Quand un processus est cr\u00e9e, le syst\u00e8me d'exploitation lui aloue un identifiant unique: le PID (Process Identifier).</p> <p>Sur Linux, la cr\u00e9ation d'un processus se fait par clonage d'un autre processus au travers d'un appel systeme <code>fork()</code>.</p> <ul> <li>le processus qui fait appel \u00e0 <code>fork()</code> est appel\u00e9 processus p\u00e8re ;</li> <li>le processus qui est ainsi cr\u00e9\u00e9 par clonage est le processus fils ;</li> <li>apr\u00e8s le clonage, un processus peut remplacer son programme par un autre programme gr\u00e2ce \u00e0 l'appel syst\u00e8me exec().</li> </ul> <p>Lorsqu'un processus engendre un fils, l'OS g\u00e9n\u00e8re un nouveau PID pour le fils, et le fils connait aussi le num\u00e9ro de son p\u00e8re : le PPID (*Parent Process Identifier)</p> <p>Le premier processus ?</p> <p>Sous un syst\u00e8me d'exploitation comme Linux, au moment du d\u00e9marrage de l'ordinateur un tout premier processus (appel\u00e9 processus 0 ou encore Swapper) est cr\u00e9\u00e9 \u00e0 partir de \"rien\" (il n'est le fils d'aucun processus). Ensuite, ce processus 0 cr\u00e9e un processus souvent appel\u00e9 <code>init</code> ou <code>systemd</code>, il est cr\u00e9\u00e9 au d\u00e9marrage du syst\u00e8me.</p> <p>\u00c0 partir de ce premier processus, les processus n\u00e9cessaires au bon fonctionnement du syst\u00e8me d\u2019exploitation Linux sont cr\u00e9\u00e9s (par exemple les processus <code>crond</code>, <code>inetd</code>, <code>getty</code>,...). Puis d'autres processus sont cr\u00e9\u00e9s \u00e0 partir des fils de <code>init</code>... </p> <p>Ce syst\u00e8me de cr\u00e9ation un peu particulier (d\u00e9sign\u00e9 souvent par <code>fork/exec</code>) conduit \u00e0 l'\u00e9mergence d'une arborescence de processus : un processus p\u00e8re engendre un ou plusieurs fils qui \u00e0 leur tour engendrent des fils etc... </p> <p>L'instruction <code>pstree</code> permet de visualiser l'arbre de processus :</p> <p></p> <p>Chercher les PID</p> Enonc\u00e9R\u00e9ponses <p>A l'aide de la commande <code>ps -ef | more</code>, chercher les PID et PPID des processus :</p> <ol> <li><code>systemd</code></li> <li><code>apache2</code></li> <li><code>cron</code></li> <li><code>python3</code> (situ\u00e9 dans le dossier <code>/opt/</code>)</li> <li>Commencez par ex\u00e9cuter Thonny, puis cherchez le PID et PPID du processus qui lui correspond.</li> </ol> <p>A venir !</p> <p>Commande <code>top</code></p> <p>Une des commandes les plus utiles sous Linux est la commande <code>top</code>. Cette commandes affiche les processus actifs en temps r\u00e9el. L'application est plus riche qu'il n'y para\u00eet. Il faut passer un peu de temps \u00e0 explorer toutes les options. Celles-ci s'activent par des raccourcis clavier. En voici quelques uns :</p> <ul> <li>H : affiche l'aide</li> <li>M : trie la liste par ordre d\u00e9croissant d'occupation m\u00e9moire. Pratique pour rep\u00e9rer les processus trop gourmands</li> <li>P : trie la liste par ordre d\u00e9croissant d'occupation processeur</li> <li>I : filtre les processus inactifs. Cela ne montre que ceux qui travaillent r\u00e9ellement.</li> <li>K : permet de tuer un processus - \u00e0 condition d'en \u00eatre le propri\u00e9taire. Essayez de tuer <code>systemd</code> ...</li> <li>V : permet d'avoir la vue arborescente sur les processus.</li> <li>Q : permet de quitter top</li> </ul>"},{"location":"NSI/Terminale/C06/Processus/#etats-dun-processus","title":"Etats d'un processus","text":"<p>Un processus n'a pas seulement besoin d'acc\u00e9der au processeur, mais il a souvent besoin d'acc\u00e9der \u00e0 des ressources autres comme :</p> <ul> <li>la m\u00e9moire vive : RAM,</li> <li>une m\u00e9moire de masse : disques durs, cl\u00e9s USB, m\u00e9moire flash...</li> <li>la lecture ou l'\u00e9criture d'un fichier...</li> <li>les p\u00e9riph\u00e9riques d'entr\u00e9e et de sortie : clavier, souris, \u00e9cran, imprimante...</li> </ul> <p>Ces ressources externes \u00e9tant beaucoup moins rapides que le processeur, elles bloquent les processus lors de leur ex\u00e9cution.</p> <p>Ainsi, lors de la vie d'un processus, celui-ci peut passer par trois \u00e9tats :</p> <ul> <li><code>PRET</code> (ready) : le processus est lanc\u00e9 et attend l'acc\u00e8s au processeur.</li> <li><code>ELU</code> (running) : le processus a obtenu l'acc\u00e8s au processeur : il peut s'ex\u00e9cuter.</li> <li><code>BLOQUE</code>(sleeping) : le processus est en cours d'ex\u00e9cution, mais attend une ressource en m\u00e9moire par exemple, il quitte le processeur pour lib\u00e9rer les ressources.</li> </ul> <p></p> <p>Exemple</p> <p>Imaginons un simple programme Python :</p> <p></p><pre><code>texte = input(\"Entrez une phrase ?\")\nprint(f\"La longueur de votre phrase est {len(texte)}\")  \n</code></pre> Lorsqu'on ex\u00e9cute ce programme, un processus est cr\u00e9e, et passe en \u00e9tat <code>PRET</code>. D\u00e8s qu'il a acc\u00e8s au processeur, il passe dans l'\u00e9tat <code>Elu</code>. La premi\u00e8re instruction est alors ex\u00e9cut\u00e9e. Or celle ci attend une saisie au clavier, et le processus ne peut pas continuer tant que l'utilisateur n'a pas agit. L'OS met alors en attente le processus (en \u00e9tat <code>BLOQUE</code>). <p>Lorsque l'OS, qui g\u00e8re aussi les entr\u00e9es et les sorties, rep\u00e8re une interaction avec le clavier, il va alors d\u00e9bloquer le processus, qui repassera en \u00e9tat <code>PRET</code>, puis en \u00e9tat <code>ELU</code> et ex\u00e9cutera alors la deuxi\u00e8me instruction. Sans autre intervention, le processus passera en \u00e9tat final (stopped), et se terminera naturellement. Il lib\u00e8rera alors les ressources m\u00e9moire qu'il occupait, et enverra un signal \u00e0 son processus parent, afin que celui-ci l'\u00e9limine de la table des processus.</p>"},{"location":"NSI/Terminale/C06/Processus/#terminer-un-processus","title":"Terminer un processus","text":"<p>Terminer un processus</p> <p>Il est possible d'envoyer un signal de terminaison \u00e0 un processus actif, par l'interm\u00e9diaire de la commande <code>kill</code>, en lui pr\u00e9cisant le <code>PID</code> du processus qu'on souhaite arr\u00eater. Un tel signal est \u00e9quivalent au fait de fermer une fen\u00eatre en interface graphique (par la croix ou bien par Alt+F4), ou bien au raccourci Ctrl+C dans la console.</p> <p>Un tel signal est intercept\u00e9 par l'application du processus et g\u00e9r\u00e9 par cette derni\u00e8re. Par exemple un logiciel de traitement de texte peut alors proposer \u00e0 l'utilisateur de sauvegarder ses fichiers avant de quitter.</p> <p>Question</p> <ol> <li>Dans JupyterHub, ouvrir un des notebooks de premi\u00e8re.</li> <li>Rep\u00e9rer le <code>PID</code> correspondant \u00e0 cette instance de notebook ( processus de type <code>ipython</code>)</li> <li>Terminer le processus.</li> </ol> <p>Tuer un processus</p> <p>Parfois un processus se comporte de mani\u00e8re anormale, par exemple par une trop grande consommation de  m\u00e9moire, ou lorsqu'une application \u00ab ne r\u00e9pond plus \u00bb. Il est possible dans ce cas de tuer le processus en question, en lui envoyant un signal de terminaison sans que l'application puisse l'intercepter, en passant l'option <code>-9</code> \u00e0 la commande <code>kill</code>, par exemple <code>kill -9 13259</code>.  En reprenant l'exemple du traitement de texte, dans ce cas les modifications ne seront pas sauvegard\u00e9es et des donn\u00e9es risquent d'\u00eatre perdues. C'est une commande \u00e0 utiliser avec pr\u00e9caution.</p> <p>Cr\u00e9ation et suppression de processus en Python</p> <p>Nous allons cr\u00e9er un processus \u00e0 partir de Python. Pour cela :</p> <ol> <li> <p>Dans Thonny, cr\u00e9er un fichier texte vide, puis y ins\u00e9rer le code suivant :</p> <pre><code>import time\n\na = 0\nfor i in range(100000):\n    a += a**3\n    time.sleep(0.01)\nprint(\"termin\u00e9\")\n</code></pre> </li> <li> <p>Sauvegardez ce fichier sous le nom <code>test_{votrenom}.py</code>, puis si n\u00e9cessaire importez-le dans <code>JupyterHub</code>.</p> </li> <li>Ouvrez DEUX terminaux .</li> <li>Dans le premier, utilisez la commande <code>python3 test.py</code>. </li> <li>Dans le second, lancez la commande <code>ps -aux</code>, et cherchez le processus correspondant \u00e0 l'ex\u00e9cution du script <code>test_{votrenom}.py</code>.</li> <li>Tuez le processus avec la commande <code>kill</code>, et observez ce qui se passe dans les deux terminaux.</li> <li>Recommencez la proc\u00e9dure \u00e0 partir de 4 en tuant le processus avec la commande <code>kill -9</code>, et observez les deux terminaux.</li> </ol> <p>Utilisation de <code>fork()</code></p> <ol> <li> <p>Dans Thonny, cr\u00e9ez un fichier nomm\u00e9 <code>testFork_{votrenom}.py</code> dans lequel vous copierez les lignes suivantes :</p> <pre><code># Python program to explain os.fork() method \n\n# importing os module \nimport os, time\n\n\n# Create a child process\n# using os.fork() method \npid = os.fork()\n\n# pid greater than 0 represents\n# the parent process \nif pid &gt; 0 :\n    print(\"I am parent process:\")\n    print(\"Process ID:\", os.getpid())\n    print(\"Child's process ID:\", pid)\n\n# pid equal to 0 represents\n# the created child process\nelse :\n    print(\"\\nI am child process:\")\n    print(\"Process ID:\", os.getpid())\n    print(\"Parent's process ID:\", os.getppid())\n\na = 0\nfor i in range(10000):\n    a += a**3\n    time.sleep(0.001)\nprint(\"Finished\")\n\n\n\n# If any error occurred while\n# using os.fork() method\n# OSError will be raised\n</code></pre> </li> <li> <p>Ex\u00e9cutez ce fichier par la commande <code>python3 testFork.py</code>. Observez dans ce terminal l'effet du script.</p> </li> <li>Dans un autre terminal, avec la commande <code>ps -ef</code>, observez les processus cr\u00e9\u00e9s, ainsi que leurs <code>PID</code> et <code>PPID</code>.</li> <li>(Si n\u00e9cessaire, relancez le script !) Tuez le processus enfant. Que se passe-t-il ?</li> <li>Relancez le script ! Tuez le processus parent et attendez quelques instants. Que se passe-t-il ?</li> </ol> <p>Processus Zombies</p> <p>Parfois un processus p\u00e8re est tu\u00e9 avant que ses processus fils soient termin\u00e9s. Ceux-ci restent alors dans la table des processus en situation finale, mais ne sont pas supprim\u00e9s. On parle alors de processus zombies. Ceux-ci occupent une partie de la m\u00e9moire, tout en \u00e9tant devenus inutiles...</p>"},{"location":"NSI/Terminale/C06/Socs/","title":"Les SOCs","text":""},{"location":"NSI/Terminale/C06/Socs/#des-circuits-aux-systemes-sur-puces","title":"Des circuits aux syst\u00e8mes sur puces","text":"<p>Cette partie est directement inspir\u00e9e des documents d'accompagnement du programme de NSI.</p> <p>Nous allons utiliser une vid\u00e9o du Coll\u00e8ge de France : une conf\u00e9rence enseignement de G\u00e9rard Berry \u00ab Pourquoi et comment le monde devient num\u00e9rique (Chaire Innovation technologique \u2014 Liliane Bettencourt) \u00bb. On trouvera avec ce lien le diaporama associ\u00e9 \u00e0 la conf\u00e9rence.</p>"},{"location":"NSI/Terminale/C06/Socs/#questionnaire-conference","title":"Questionnaire conf\u00e9rence","text":""},{"location":"NSI/Terminale/C06/Socs/#introduction","title":"Introduction","text":"<ol> <li>Qu\u2019est-ce qui a permis la progression du monde num\u00e9rique ?</li> <li>De quoi est compos\u00e9 un circuit ?</li> <li>\u00c0 ce stade de l\u2019expos\u00e9, quel est le facteur limitant \u00e0 la progression des circuits ?</li> <li>Quel est le nom de la loi qui gouverne la densit\u00e9 des circuits ?</li> <li>O\u00f9 travaillait M. Moore ?</li> <li>Citez quelques types de circuits autres que les microprocesseurs (CPU).</li> <li>Quelle qualit\u00e9 pr\u00e9sente le CPU ?</li> <li>Quel est son principal d\u00e9faut ?</li> <li>Que font principalement les DSP (Digital Signal Processor) ?</li> <li>Les puces peuvent \u00eatre con\u00e7ues avec un grand nombre de transistors, quelle est la cons\u00e9quence sur la fabrication des puces ?</li> <li>Quels sont les deux principaux avantages d\u2019une int\u00e9gration plus grande dans les puces ?</li> <li>Que signifie SOC ?</li> <li> <p>Comment sont reli\u00e9s tous les blocs fonctionnels \u00e0 l\u2019int\u00e9rieur des puces ?</p> <p></p> </li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#la-description-des-circuits","title":"La description des circuits","text":"<p>A partir de 7'48</p> <ol> <li> <p>Quel est le niveau de conception le plus basique d\u00e9crit par M. Berry ?</p> <p></p> </li> <li> <p>Comment s\u2019appelle le niveau le plus central utilis\u00e9 pour la description des circuits ?</p> <p></p> </li> <li> <p>Quelle est la partie du signal d\u2019horloge, qui est active, utilis\u00e9e pour piloter le circuit ?</p> </li> <li>Dans un calcul logique, que signifie l\u2019expression \u00ab chemin critique \u00bb ?</li> <li>Que permet de d\u00e9finir ce chemin critique ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#quelques-reflexions-autour-de-laddition","title":"Quelques r\u00e9flexions autour de l'addition","text":"<p>A partir de 16'30</p> <ol> <li>Quel est le probl\u00e8me pos\u00e9 par le m\u00e9canisme de propagation de la retenue lors du passage \u00e0 l\u2019\u00e9chelle pour des additions de deux mots d\u2019un grand nombre de bits ?</li> <li>Quelle est la valeur du chemin critique de l\u2019additionneur de Von Neumann pour \\(n\\) bits ?</li> <li>Quelle m\u00e9thode d\u2019additionneur est pr\u00e9sent\u00e9e pour acc\u00e9l\u00e9rer le traitement de l\u2019addition ?</li> <li>Que se passe-t-il dans ce type de fonctionnement ?</li> <li> <p>Quel est le domaine technologique pr\u00e9sent\u00e9 qui r\u00e9alise un tr\u00e8s grand nombre d\u2019op\u00e9rations de calcul selon un mode pipeline ?</p> <p></p> </li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#le-microprocesseur","title":"Le microprocesseur","text":"<p>A partir de 24'20</p> <ol> <li>Que permet le mode de fonctionnement pipeline pour un microprocesseur ?</li> <li>Quel est le d\u00e9faut principal de la m\u00e9moire RAM des ordinateurs ?</li> <li>Quelle est la solution pour r\u00e9soudre ce probl\u00e8me ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#la-memoire-cache","title":"La m\u00e9moire cache","text":"<p>A partir de 34'35</p> <ol> <li>Quelle est la deuxi\u00e8me technique utilis\u00e9e par les microprocesseurs pour acc\u00e9l\u00e9rer les calculs ?</li> <li>Au d\u00e9triment de quelles ressources internes au CPU le gain de temps est-il obtenu par la technique pr\u00e9c\u00e9dente ?</li> <li>En quoi consiste le prefetch ?</li> <li>Que conclure sur les microprocesseurs ?</li> <li>\u00c0 quel moment ont lieu les pics de consommation dans le fonctionnement du microprocesseur ?</li> <li>Peut-on augmenter ind\u00e9finiment la fr\u00e9quence de fonctionnement d\u2019un circuit ?</li> <li>Quelle difficult\u00e9 l\u2019emploi des CPU multi coeurs entraine-t-il ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#la-conception-des-circuits","title":"La conception des circuits","text":"<p>A partir de 42'00</p> <ol> <li>D\u00e9crire succinctement la chaine de conception des circuits.</li> <li>Citez les deux jeux de logiciels qui interviennent.</li> <li>Quel est le pourcentage du co\u00fbt dans le design d\u2019un circuit ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#lavenir-des-circuits","title":"L'avenir des circuits","text":"<ol> <li>Citez les trois principaux freins \u00e0 la miniaturisation des circuits.</li> <li>Quelle piste client est pr\u00e9sent\u00e9e pour remplacer les nouveaux circuits trop chers ?</li> <li>Comment d\u00e9finir un FPGA ?</li> <li>Quel est l\u2019avantage d\u2019utiliser des FPGA dans des routeurs par exemple ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#questionnaire-complementaire","title":"Questionnaire compl\u00e9mentaire","text":""},{"location":"NSI/Terminale/C06/Socs/#densite-dintegration","title":"Densit\u00e9 d'int\u00e9gration","text":"<p>Le sch\u00e9ma ci-dessous est une vue partielle du microprocesseur 4004 d\u2019Intel. Ce premier microprocesseur de l\u2019histoire contenait 2300 transistors grav\u00e9s avec une finesse de 10 \u03bcm. Le sch\u00e9ma complet tenait sur trois pages. En 2017, la finesse de gravure atteint 10 nm avec 10 milliards de transistors.</p> <p></p> <ol> <li>D\u00e9terminer le nombre de pages n\u00e9cessaire pour assurer l\u2019impression du sch\u00e9ma d\u2019un tel microprocesseur, en prenant comme base les donn\u00e9es du 4004 et le ratio : nombre de transistors/nombre de pages.</li> <li>En consid\u00e9rant la surface standard d\u2019une feuille A4, quelle est la surface totale du sch\u00e9ma de notre microprocesseur de technologie 2017 ? Convertir ensuite le r\u00e9sultat en km\u00b2.</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#lithographie-des-circuits-integres","title":"Lithographie des circuits int\u00e9gr\u00e9s","text":"<p>\u00c0 partir du site suivant r\u00e9pondre aux questions ci-dessous :</p> <ol> <li>Combien de transistors sont int\u00e9gr\u00e9s dans les super-puces en 2017 ?</li> <li>Quel est l\u2019ordre de grandeur de l\u2019investissement n\u00e9cessaire pour b\u00e2tir une usine qui fabriquera des puces avec une finesse de gravure de 3 nanom\u00e8tres ?</li> <li>Quel autre fabricant, concurrent de Samsung, investi dans une usine capable de graver en 5 nanom\u00e8tres ?</li> </ol>"},{"location":"NSI/Terminale/C06/Socs/#la-famille-core-i9-dintel","title":"La famille core i9 d\u2019Intel","text":"<p>\u00c0 partir des informations donn\u00e9es sur la page du constructeur Intelpour son microprocesseur de la famille i9, r\u00e9pondre aux questions ci-dessous :</p> <ol> <li>Quelle est la technologie de ce processeur ?</li> <li>Donner la d\u00e9finition d\u2019un coeur.</li> <li>Que repr\u00e9sente la fr\u00e9quence de base de 3.00 GHz ?</li> <li>Que repr\u00e9sente la PDT ?</li> <li>Quelle est la relation entre la fr\u00e9quence de base et le PDT ?Quelle est la capacit\u00e9 m\u00e9moire maximum possible pour ce processeur ?</li> <li>Par quel terme d\u00e9signe-t-on un fabricant de circuits \u00e9lectroniques ?</li> <li>Quelle finesse de gravure la soci\u00e9t\u00e9 TSMC (Taiwan) pr\u00e9pare-t-elle dans sa nouvelle usine ?</li> </ol>"},{"location":"NSI/Terminale/C07/OSPF/","title":"Protocole OSPF","text":""},{"location":"NSI/Terminale/C07/OSPF/#protocole-ospf","title":"Protocole OSPF","text":""},{"location":"NSI/Terminale/C07/OSPF/#le-routage-a-etat-de-lien","title":"Le routage \u00e0 \u00e9tat de lien","text":""},{"location":"NSI/Terminale/C07/OSPF/#une-video-de-mines-telecom","title":"Une vid\u00e9o de Mines - T\u00e9l\u00e9com","text":""},{"location":"NSI/Terminale/C07/OSPF/#le-principe","title":"Le principe","text":"<p>Les algorithmes \u00e0 \u00e9tat de lien sont bas\u00e9s sur la technique du plus court chemin, nomm\u00e9e SPF (Shortest Path First). </p> <p>Pour pouvoir calculer le plus court chemin, les routeurs doivent disposer de  la carte compl\u00e8te du r\u00e9seau. Ainsi, un routeur SPF teste l\u2019\u00e9tat des liens qui le connectent aux routeurs voisins puis diffuse p\u00e9riodiquement l\u2019\u00e9tat de ses liens (actif ou inactif) \u00e0 tous les routeurs du r\u00e9seau. Les informations \u00e9chang\u00e9es sont uniquement l\u2019\u00e9tat des liens entre deux routeurs, c'est-\u00e0-dire la qualit\u00e9 du lien, souvent exprim\u00e9e par sa vitesse en bits par secondes( bps, d\u00e9clin\u00e9s en Mbps, Gbps, etc...). D\u00e8s qu\u2019un routeur re\u00e7oit une information, si elle est diff\u00e9rente de celle stock\u00e9e dans sa table de lien, il la met \u00e0 jour.</p> <p>Au bout d'un certain temps, quand tous les routeurs ont \u00e9chang\u00e9 les informations, ils disposent tous de la m\u00eame table de routage.</p> <p>Exemple</p> <p>On consid\u00e8re le r\u00e9seau suivant dont la table de routage partag\u00e9e est donn\u00e9e :</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Lorsque la table des liens est modifi\u00e9e, chaque routeur recalcule le plus court chemin pour chaque route affect\u00e9e par la modification. Ainsi, chaque routeur poss\u00e8de la vue des plus courts chemins en termes de co\u00fbts partant de lui-m\u00eame. La vue logique donne une arborescence dont la racine est le routeur en question.</p> <p>Depuis le routeur A</p> <p>Si on consid\u00e8re l'exemple pr\u00e9c\u00e9dent, le routeur A s\u00e9lectionnera le routeur B comme voie pour atteindre C et D. Il choisira par contre de rejoindre E par sa liaison directe avec lui, certes lente mais qui reste plus rapide que de passer par <code>B -&gt; C -&gt; D -&gt;E</code>.</p>"},{"location":"NSI/Terminale/C07/OSPF/#algorithme-de-dijkstra","title":"Algorithme de Dijkstra","text":""},{"location":"NSI/Terminale/C07/OSPF/#description-de-lalgorithme","title":"Description de l'algorithme","text":"<p>L'algorithme de Dijkstra, cr\u00e9e par l'informaticien n\u00e9erlandais Edsger Dijkstra, et publi\u00e9 en 1959, est un algorithme permettant de d\u00e9terminer le plus court chemin entre deux sommets dans un graphe orient\u00e9 pond\u00e9r\u00e9 de r\u00e9els positifs (on d\u00e9finira plus tard ces termes dans le chapitre sur les graphes).</p> <p>Il consiste \u00e0 partir d'un sommet, et de construire progressivement un sous-graphe dans lequel sont class\u00e9s les diff\u00e9rents sommets par ordre croissant de leur distance minimale au sommet de d\u00e9part, cette distance correspondant \u00e0 la somme des poids des arcs emprunt\u00e9s.</p> <p>On d\u00e9crit l'algorithme ainsi :</p> <ol> <li>Au d\u00e9part, on consid\u00e8re que les distances de chaque sommet au sommet de d\u00e9part sont infinies, sauf pour le sommet de d\u00e9part pour lequel la distance est nulle. Le sous-graphe des sommets visit\u00e9s contient uniquement le sommet de d\u00e9part. </li> <li> <p>On choisit en dehors du sous-graphe des sommets visit\u00e9s un sommet de distance minimale et on l'ajoute au sous-graphe. Ensuite, on met \u00e0 jour les distances des sommets voisins de celui ajout\u00e9, selon les conditions suivantes pour chaque sommet voisin :</p> <ul> <li>on calcule la distance correspondant \u00e0 celle d\u00e9j\u00e0 parcourue jusqu'au sommet choisi auquel on ajoute le poids de l'arc entre le sommet choisi et le sommet voisin ;</li> <li>si cette distance est inf\u00e9rieure \u00e0 celle d\u00e9j\u00e0 connue pour le sommet voisin, on met \u00e0 jour cette distance comme \u00e9tant la nouvelle distance minimale pour atteindre ce sommet.</li> </ul> </li> <li> <p>On reprend le point 2 jusqu'\u00e0 \u00e9puisement des sommets (ou jusqu'\u00e0 atteindre le sommet de destination dans certains cas).</p> </li> </ol>"},{"location":"NSI/Terminale/C07/OSPF/#exemple-commente-dapplication-sur-une-carte","title":"Exemple comment\u00e9 d'application sur une carte","text":"<p>On consid\u00e8re le graphe suivant repr\u00e9sentant un ensemble de villes et les distances les s\u00e9parant :</p> <p></p> <p>On va ex\u00e9cuter l'algorithme de Dijkstra en partant de la ville <code>A</code>, en compl\u00e9tant le tableau suiivant :</p> <p></p>"},{"location":"NSI/Terminale/C07/OSPF/#quelques-exercices-pour-maitriser-dijkstra","title":"Quelques exercices pour ma\u00eetriser Dijkstra","text":"<p>Exercice n\u00b01</p> Enonc\u00e9Solutions <p>Un journaliste britannique d\u2019une revue consacr\u00e9e \u00e0 l\u2019automobile doit tester les autoroutes fran\u00e7aises. Pour remplir sa mission, il d\u00e9cide de louer une voiture et de circuler entre six grandes villes fran\u00e7aises : Bordeaux (B), Lyon (L),Marseille (M), Nantes (N), Paris (P) et Toulouse(T).</p> <p></p> <p>Le journaliste se trouve \u00e0 Nantes et d\u00e9sire se rendre le plus rapidement possible \u00e0  Marseille.D\u00e9terminer un trajet qui minimise son temps de parcours.</p> <p>A venir !</p> <p>Exercice n\u00b02</p> Enonc\u00e9Solutions <p>Un parcours sportif est compos\u00e9 d\u2019un banc pour abdominaux, de haies et d\u2019anneaux. Le graphe orient\u00e9 ci-contre indique les diff\u00e9rents parcours conseill\u00e9s partant de D et terminant \u00e0 F. Les sommets sont : D (d\u00e9part), B (banc pour abdominaux), H (haies), A (anneaux) et F (fin du parcours). Les ar\u00eates repr\u00e9sentent les diff\u00e9rents sentiers reliant les sommets. Assia a relev\u00e9 ses temps de course en minute entre les diff\u00e9rents sommets. Ces dur\u00e9es sont port\u00e9es sur le graphe ci-dessous. Lors d\u2019un entra\u00eenement, Assia souhaite courir le moins longtemps possible en allant de D \u00e0 F. D\u00e9terminer le trajet pour lequel le temps de course est minimal et pr\u00e9ciser la dur\u00e9e de sa course.</p> <p></p> <p>A venir !</p>"},{"location":"NSI/Terminale/C07/OSPF/#le-protocole-ospf","title":"Le protocole OSPF","text":"<p>Le protocole OSPF pour Open Shortest Path First est un protocole \u00e0 \u00e9tat de lien, normalis\u00e9 en 1990, d\u00e9crit dans la RFC 2328. Il est pris en charge par le protocole IP. C\u2019est le protocole de routage interne dominant et il est support\u00e9 par la plupart des routeurs. Ce  protocole attribue un co\u00fbt \u00e0 chaque lien entre les routeurs du r\u00e9seau. Le O du sigle OSPF signifie que sa sp\u00e9cification doit appartenir au domaine public et que toute solution propri\u00e9taire est exclue.</p> <p>L\u2019algorithme pour trouver la meilleure route est celui de Dijkstra qui fournit dans ce cas le co\u00fbt cumul\u00e9 le plus faible des liens de la route vers une destination d\u2019une zone donn\u00e9e. Le co\u00fbt utilis\u00e9 pour chaque lien doit \u00eatre inversement proportionnel \u00e0 la bande passante du lien en question. Ce co\u00fbt peut \u00eatre d\u00e9fini manuellement ou calcul\u00e9 avec la formule suivante :</p> \\[ Co\u00fbt = \\cfrac{Cst}{bande~~passante} \\] <p>Warning</p> <p>La valeur \\(Cst\\) est arbitraire. Elle peut valoir \\(10^8\\), \\(10^9\\) ou \\(10^{10}\\) selon la plus grande bande passante du r\u00e9seau. Par contre, il faut veiller \u00e0 utiliser la m\u00eame valeur pour tous les routeurs d'un m\u00eame r\u00e9seau. Ce choix est effectu\u00e9 afin que tous les co\u00fbts calcul\u00e9s soient des entiers positifs.</p> <p>Exemple</p> <p>En reprenant les bandes passantes donn\u00e9es dans le premier exemple, et avec une constante de \\(10^9\\) :</p> <ul> <li>\\(1~Gbps\\) correspond \u00e0 un co\u00fbt de \\(\\cfrac{10^9}{10^9}=1\\) ;</li> <li>\\(100~Mbps\\) correspond \u00e0 un co\u00fbt de \\(\\cfrac{10^9}{100 \\times 10^6}=10\\) ;</li> <li>\\(10~Mbps\\) correspond \u00e0 un co\u00fbt de \\(\\cfrac{10^9}{10 \\times 10^6}=100\\).</li> </ul> <p>Ainsi une route \u00e0 \\(10\\) Mbps est consid\u00e9r\u00e9e comme 100 fois plus \u00ab lente \u00bb qu'une liaison \u00e0 \\(1\\) Gbps.</p> <p>Exercice</p> Enonc\u00e9Solution <p>Exercice n\u00b05 du sujet suivant</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C07/OSPF/#pour-aller-plus-loin","title":"Pour aller plus loin :","text":""},{"location":"NSI/Terminale/C07/RIP/","title":"Protocoles RIP","text":""},{"location":"NSI/Terminale/C07/RIP/#protocoles-a-vecteur-de-distance-rip","title":"Protocoles \u00e0 vecteur de distance : RIP","text":""},{"location":"NSI/Terminale/C07/RIP/#pourquoi-automatiser-le-routage","title":"Pourquoi automatiser le routage.","text":""},{"location":"NSI/Terminale/C07/RIP/#le-routage-a-vecteur-de-distance-le-protocole-rip","title":"Le routage \u00e0 vecteur de distance : le protocole RIP","text":"<p>D'apr\u00e8s https://www.lecluse.fr/nsi/NSI_T/archi/routage/RIP/.</p>"},{"location":"NSI/Terminale/C07/RIP/#le-principe","title":"Le principe","text":"<p>Le protocole RIP (Routing Information Protocol) rentre dans la cat\u00e9gorie des protocoles \u00e0 vecteur de distance. Un vecteur de distance est un couple <code>(adresse, distance)</code>, et ce protocole cherche \u00e0 minimiser le nombre de routeurs (c'est-\u00e0dire la distance) \u00e0 traverser pour atteindre la destination (on cherche ici \u00e0 minimiser le nombre de sauts).</p> <p>Chaque routeur re\u00e7oit en permanence (toutes les 30 secondes environ) de ses voisins les informations de routage qu'ils poss\u00e8dent. Il va alors exploiter ces informations pour construire lui-m\u00eame sa table de routage en ne retenant que les informations les plus pertinentes : une simple comparaison permet de ne garder que le chemin le plus avantageux. Il transmettra \u00e0 son tour ces informations \u00e0 ses voisins et ainsi de suite. C'est l'algorithme de Bellman-Ford, un des algorithmes de recherche de plus court chemin dans un graphe, que nous \u00e9tudierons plus en d\u00e9tail dans le chapitre sur les graphes.</p> <p>A l'issue de quelques \u00e9tapes, les tables de tous les routeurs se stabilisent et le routage est pleinement op\u00e9rationnel. Le temps n\u00e9cessaire \u00e0 la stabilisation des tables est proportionnel au diam\u00e8tre du r\u00e9seau, c'est-\u00e0-dire \u00e0 la plus grande route possible entre deux routeurs - c'est ce qui est appel\u00e9 vitesse de convergence dans la vid\u00e9o de l'Institut Mines-T\u00e9l\u00e9com.</p>"},{"location":"NSI/Terminale/C07/RIP/#debranche-tout","title":"D\u00e9branche tout !","text":"<p>Chacun d'entre-vous se verra remmetre un num\u00e9ro de routeur, ainsi que la connaissance de ses vcoisins proches. Nous allons simuler l'ex\u00e9cution de l'algorithme de Bellman-Ford, en construisant petit-\u00e0-petit vos tables de routages.</p>"},{"location":"NSI/Terminale/C07/RIP/#un-exemple-dapplication","title":"Un exemple d'application","text":"<p>Consid\u00e9rons le r\u00e9seau suivant, pour lequel on admettra la norme suivante :</p> <ul> <li>le poste client et le poste serveur se voient attribu\u00e9s respectivement la premi\u00e8re adresse de la plage de leur r\u00e9seau ( soit respectivement <code>192.168.0.1</code> et <code>172.16.180.1</code>) ;</li> <li>les routeurs d'acc\u00e8s R1 et R6 ont sur leur interface r\u00e9seau les derni\u00e8res adresses IP de la plage de leur r\u00e9seau (soit respectivemment <code>192.168.0.254</code> et <code>172.16.180.251</code>) ;</li> <li>Entre deux interfaces internes, le routeur de plus bas indice poss\u00e8de la premi\u00e8re adresse et le routeur de dernier indice la seconde adresse : par exemple entre R2 et R5, les interfaces sont connect\u00e9es par le r\u00e9seau <code>10.1.4.0/30</code>, donc l'interface de R2 est <code>10.1.4.1</code> et celle de R5 est <code>10.1.4.2</code> ;</li> <li>tous les routeurs suivent le protocole RIP.</li> </ul> <p></p>"},{"location":"NSI/Terminale/C07/RIP/#initialisation","title":"Initialisation","text":"<p>Au d\u00e9marrage, les routeurs ne connaissent que leur voisin im\u00e9diat. Les tables de routages pour les routeurs R1, R2 et R3 sont donc :</p> <p></p> <p>Principe de l'algorithme</p> <p>Lorsqu'un routeur re\u00e7oit une nouvelle route de la part d'un voisin, 4 cas sont envisageables :</p> <ul> <li>Il d\u00e9couvre une route vers un nouveau r\u00e9seau inconnu<ul> <li>Il l'ajoute \u00e0 sa table.</li> </ul> </li> <li>Il d\u00e9couvre une route vers un r\u00e9seau connu, plus courte que celle qu'il poss\u00e8de dans sa table<ul> <li>Il actualise sa table.</li> </ul> </li> <li>Il d\u00e9couvre une route vers un r\u00e9seau connu, plus longue que celle qu'il poss\u00e8de dans sa table<ul> <li>Il ignore cette route.</li> </ul> </li> <li>Il re\u00e7oit une route vers un r\u00e9seau connu en provenance d'un routeur d\u00e9j\u00e0 existant dans sa table<ul> <li>Il met \u00e0 jour sa table car la topologie du r\u00e9seau a \u00e9t\u00e9 modifi\u00e9e.</li> </ul> </li> </ul> <p>Quand il mets \u00e0 jour les distances re\u00e7ues, il ajoute 1 \u00e0 celles-ci, pour prendre en compte le hop (saut) suppl\u00e9mentaire effectu\u00e9.</p>"},{"location":"NSI/Terminale/C07/RIP/#etape-1","title":"Etape 1","text":"<ul> <li> <p>R1 re\u00e7oit les routes de R2. Sa table de routage devient :</p> <p></p> </li> <li> <p>R3 re\u00e7oit les routes de R2, et celles de R5. On peut constater qu'on peut atteindre de deux mani\u00e8re diff\u00e9rentes les routeurs R2 et R5, car R3 ne r\u00e9alise pas que les interfaces <code>10.1.2.1</code> et <code>10.1.4.1</code> sont toutes les deux deux interfaces de R2. De m\u00eame il sait rejoindre de deux mani\u00e8re ayant la m\u00eame m\u00e9trique le r\u00e9seau <code>10.1.4.0/30</code>, donc il garde la premi\u00e8re arriv\u00e9e (ici on suppose d'il a re\u00e7u les informations de R2 avant celles de R5)</p> <p></p> </li> <li> <p>R2 re\u00e7oit les routes de R1, puis de R3, mais aussi de R4 et de R5 :</p> <p></p> </li> </ul>"},{"location":"NSI/Terminale/C07/RIP/#etape-2","title":"Etape 2","text":"<ul> <li> <p>R1 re\u00e7oit les nouvelles routes de R2 :</p> <p></p> </li> <li> <p>R2 re\u00e7oit les nouvelles routes de R3 et de R5 :</p> <p></p> </li> <li> <p>R2 re\u00e7oit les nouvelles routes de R1 (qui ne lui apportent rien), de R3, de R4, de R5.... Tr\u00e8s rapidement, la construction de ces routes devient absolument ing\u00e9rable \u00e0 la main... Mais voici quand m\u00eame la table de routage :</p> <p></p> </li> </ul>"},{"location":"NSI/Terminale/C07/RIP/#etape-3","title":"Etape 3","text":"<p>Cette derni\u00e8re table de R2 sera transmise \u00e0 l'\u00e9tape suivante \u00e0 R1, et une liaison sera alors possible d\u00e8s l'\u00e9tape 3 entre le Client et le Serveur. Dans ce mini-r\u00e9seau, les tables sont alors toutes stabilis\u00e9es d\u00e8s la troisi\u00e8me \u00e9tape, et le r\u00e9seau est totalement op\u00e9rationnel.</p>"},{"location":"NSI/Terminale/C07/RIP/#quelques-points-importants","title":"Quelques points importants","text":"<p>Un des inconv\u00e9nients du protocole RIP est qu'il g\u00e9n\u00e8re un traffic important entre voisins, chacun envoyant sa table de routage \u00e0 tous ses voisins \u00e0 intervalles r\u00e9guliers.  </p> <p>En cons\u00e9quences, le protocole RIP est configur\u00e9 pour se limiter \u00e0 un nombre maximum de 15 sauts, ce qui le r\u00e9serve \u00e0 des r\u00e9seaux de petites taille.</p> <p>L'avantage de cette limite est qu'elle permet  d'\u00e9viter les \u00e9ventuelles boucles de routage (comme R2 =&gt; R3 =&gt; R5 =&gt; R2), en utilisant le TTL qui ne doit pas d\u00e9passer 15, afin qu'un paquet qui tourne en rond soit d\u00e9truit.</p> <p>De m\u00eame, si un routeur ne re\u00e7oit pas d'informations d'un de ses voisins directs au bout d'un ordre de temps de trois minutes, il consid\u00e8re que ce routeur est hors-service et lui affecte une distance de 16, qui est alors consid\u00e9r\u00e9e dans ce protocole comme une distance infinie. En cons\u00e9quence tous ses voisins recalculeront leurs vecteurs en \u00e9vitant le lien qui est tomb\u00e9.</p>"},{"location":"NSI/Terminale/C07/Routage/","title":"Notion de routage","text":""},{"location":"NSI/Terminale/C07/Routage/#protocoles-de-routages","title":"Protocoles de routages","text":"<p>Il est fortement conseill\u00e9 d'avoir repris le cours de SNT sur les r\u00e9seaux avant d'entamer cette partie.</p>"},{"location":"NSI/Terminale/C07/Routage/#chacun-sa-route","title":"Chacun sa route...","text":""},{"location":"NSI/Terminale/C07/Routage/#la-commande-ping","title":"La commande <code>ping</code>","text":"<p>Nous connaissons la commande <code>ping</code> qui permet d'envoyer des paquets <code>ICMP</code> (Internet Control Message Protocol) \u00e0 une adresse de destination. Le but de ce protocole <code>ICMP</code> est d'\u00e9changer des informations d'\u00e9tats et des messages d'erreurs. Par exemple, le commande <code>ping</code> sur l'adresse <code>8.8.8.8</code> (DNS de Google), donne depuis chez moi :</p> <p></p> <p>Parmi les informations donn\u00e9es par la commande <code>ping</code>, on a bien entendu le temps d'aller-retour entre l'ordinateur \u00e9metteur et l'ordinateur cible, le nombre de paquets envoy\u00e9s et re\u00e7us, mais aussi une information dont nous n'avons pas encore parl\u00e9 : le <code>TTL</code> (Time To Live - attention seulement en IPV4).</p> <p>TTL</p> <p>La dur\u00e9e de vie <code>TTL</code> correspond \u00e0 la dur\u00e9e pendant laquelle un paquet de donn\u00e9es est valide.  La valeur initiale est au maximum de 255. Habituellement, les impl\u00e9mentations ont une TTL initiale de 31, 63 ou 127. Pour chaque noeud de r\u00e9seau que passe le paquet de donn\u00e9es, le TTL est d\u00e9cr\u00e9ment\u00e9 de 1. On parle dans ce cas de hops. Si la TTL baisse jusque 0, le paquet de donn\u00e9es est rejet\u00e9.</p> <p>En pratique, le TTL qui vous est communiqu\u00e9 correspond g\u00e9n\u00e9ralement \u00e0 la valeur initiale de l\u2019ordinateur distant, dont on aura d\u00e9duit le nombre de passages par un routeur.</p> <p>Si vous avez par exemple un TTL de 58, vous pouvez en d\u00e9duire que le paquet de r\u00e9ponse avait \u00e9t\u00e9 \u00e9mis avec une valeur initiale de 63, et que sur le chemin du retour, il est pass\u00e9 par 5 machines.</p> <p>Warning</p> <p>Attention, nous ne sommes pas certain de ce point... Il pourrait tout aussi bien avoir \u00e9t\u00e9 \u00e9mis avec une valeur initiale de 127, et donc \u00eatre pass\u00e9 par 69 routeurs... Le TTL n'est donc qu'une indication...</p> <p>Dans notre exemple, on peut supposer qu'avec un TTL de 119, on est pass\u00e9 par 8 machines pour aller de chez moi jusqu'au DNS de Google.</p> <p>Tester <code>ping</code></p> \u00c9nonc\u00e9R\u00e9ponses <ol> <li>Depuis l'invite de commande de windows  :<ol> <li>Tester la commande <code>ping 8.8.8.8</code>. Quel est le TTL, que peut-on supposer ?</li> <li>Tester la commande <code>ping -4 www.zonensi.fr</code>. Que se passe-t-il ?</li> <li>Tester la commande <code>ping -6 www.zonensi.fr</code>. Que se passe-t-il ?</li> </ol> </li> <li>Depuis l'invite de commande Linux de JupyterHub :<ol> <li>Tester la commande <code>ping 8.8.8.8</code>. Quelle diff\u00e9rence y-a-t'il avec la commande windows ?</li> <li>Tester la commande <code>ping -c 5 8.8.8.8</code>. Que se passe-t-il ?</li> <li>Tester la commande <code>ping -t 5 8.8.8.8</code>. Que se passe-t-il ?</li> <li>Tester la commande <code>ping -c 5 -t 10 8.8.8.8</code>. Que se passe-t-il ?</li> </ol> </li> </ol> <p>A venir !</p> Fixer le TTL <p>L'option <code>-t</code> pour la commande <code>ping</code>, sous Linux, permet de fixer un nombre maximum de hops possibles. Si la destination est plus lointaine que ce nombre, on aura alors l'erreur <code>Time to live exceeded</code>. Cette possibilit\u00e9 existe aussi sous windows mais : * l'option <code>-t</code> d\u00e9sactive poar d\u00e9faut la limite de 4 paquets <code>ICMP</code>, et envoie donc en continu (comme la commande de base sous Linux) ; * l'option <code>-c</code> fixe le nombre maximal de hops, mais n\u00e9cessite d'\u00eatre dans une console en mode administrateur pour \u00eatre utilis\u00e9e.</p>"},{"location":"NSI/Terminale/C07/Routage/#la-commande-tracert-ou-traceroute-sous-linux","title":"La commande <code>tracert</code> (ou <code>traceroute</code> sous linux)","text":"<p>Il est possible de globalement conna\u00eetre les diff\u00e9rents routeurs par lesquels passe un paquet IP, en utilisant le principe pr\u00e9c\u00e9dent :</p> <ul> <li>on envoie un paquet avec un <code>TTL</code> de 1, le premier routeur atteint va d\u00e9cr\u00e9menter et atteindre 0, il va donc envoyer un message signalant qu'il a d\u00e9truit le paquet en question, et dans ce message il y aura bien entendu son adresse IP.</li> <li>On fait de m\u00eame avec un <code>TTL</code> de 2, le premier routeur d\u00e9cr\u00e9mente le <code>TTL</code>, le second le d\u00e9cr\u00e9mente encore une fois, et comme il atteint 0, il d\u00e9truit le paquet et renvoie un message d'erreur, avec bien entendu son adresse IP.</li> <li>On continue ainsi en augmentant le <code>TTL</code>.</li> </ul> <p>La commande permettant d'appliquer cette m\u00e9thode est <code>tracert</code> sous windows (<code>traceroute</code>sous Linux) :</p> <p></p> <p>On constate ici qu'on a bien un passage par 8 machines (7 routeurs plus mon propre PC) :</p> <ul> <li>le premier routeur d'ip <code>192.168.1.254</code> (adresse classique des passerelles chez Free, c'est-\u00e0-dire de ma box);</li> <li>le second <code>194.149.164.68</code>, qui correspond \u00e0 un routeur Free  (on peut le v\u00e9rifier avec l'outil who is;</li> <li>etc... jusqu'\u00e0 atteindre le DNS Google d'ip <code>8.8.8.8</code></li> </ul> <p>Tester la commande</p> Enonc\u00e9R\u00e9ponses <ol> <li>Depuis l'invite de commande windows (non-test\u00e9 depuis le lyc\u00e9e... On pourrait avoir des surprises...) :<ol> <li>Tester la commande <code>tracert 8.8.8.8</code>.</li> <li>Tester la commande <code>tracert 95.142.174.138</code></li> <li>Tester la commande <code>tracert www.toutatice.fr</code>. Que se passe-t-il ?</li> </ol> </li> <li>Depuis l'invite de commande Linux de JupyterHub :<ol> <li>Tester la commande <code>traceroute 8.8.8.8</code>.</li> <li>Tester la commande <code>traceroute 95.142.174.138</code></li> <li>Tester la commande <code>traceroute www.toutatice.fr</code>. Que se passe-t-il ?</li> </ol> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C07/Routage/#routage-des-paquets-dans-un-reseau","title":"Routage des paquets dans un r\u00e9seau","text":""},{"location":"NSI/Terminale/C07/Routage/#un-point-sur-les-adresses-ip","title":"Un point sur les adresses IP","text":"<p>Nous avons vu qu'une adresse IP n'est jamais donn\u00e9e seule, elle est toujours accompagn\u00e9e d'un masque de sous-r\u00e9seau, dont le r\u00f4le est de diff\u00e9rencier l'adresse du r\u00e9seau de celle de la machine.</p> <p>En IPV4, donc sur 4 octets, une adresse IP et un masque de sous-r\u00e9seau sont repr\u00e9sent\u00e9s par une s\u00e9rie de 32 bits. Pour d\u00e9terminer le num\u00e9ro de r\u00e9seau d'une machine, une op\u00e9ration logique <code>ET</code> est effectu\u00e9e bit \u00e0 bit entre l'IP et le masque.</p> <p>Exemple</p> <p>Consid\u00e9rons une machine d'IP <code>194.152.20.12</code>, qui correspond donc \u00e0 la suite binaire <code>11000010.10011000.00010100.00001100</code>, et de  masque '157.132.140.128' soit la suite binaire <code>10011101.10000100.10001100.10000000</code>. L'op\u00e9ration logique <code>ET</code> entre ces deux suites donne :</p> <p></p> <p>Soit une adresse r\u00e9seau <code>128.128.4.0</code>.</p> <p>Historiquement, le masque de sous-r\u00e9seau pouvait \u00eatre une suite quelconque de 0 et de 1, comme dans l'exemple pr\u00e9c\u00e9dent. Mais ceci n'est absolument pas pratique !</p> <p>Il a donc \u00e9t\u00e9 d\u00e9cid\u00e9 que la norme serait qu'un masque de sous-r\u00e9seau serait constitu\u00e9 d'une suite contigu\u00eb de 1 suivis de 0, comme par exemple <code>11111111.11111111.11100000.00000000</code>. Ceci permet entre-autres de simplifier l'\u00e9criture des masques en donnant l'IP suivie d'un nombre repr\u00e9sentant le nombre de bits de poids fort ayant pour valeur 1.</p> <p>Ainsi au lieu d'\u00e9crire :</p> <ul> <li>IP : <code>192.168.20.4</code></li> <li>Masque : <code>255.255.224.0</code>, soit <code>11111111.11111111.11100000.00000000</code>, </li> </ul> <p>on \u00e9crira : </p> <ul> <li>IP : <code>192.168.20.4/19</code>, </li> </ul> <p>ce qui signifie que les 19 bits de poids forts du masque ont pour valeur 1, et que les 13 suivants sont \u00e0 0.</p> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <ol> <li>On consid\u00e8re une machine dont l'IP est <code>192.168.20.4/19</code>. Quel est l'adresse du r\u00e9seau de cette machine ?</li> <li>On consid\u00e8re une machine dont l'IP est <code>192.168.20.4/8</code>. Quel est l'adresse du r\u00e9seau de cette machine ?</li> <li>On consid\u00e8re une machine dont l'IP est <code>192.168.20.4/16</code>. Quel est l'adresse du r\u00e9seau de cette machine ?</li> <li>On consid\u00e8re une machine dont l'IP est <code>192.168.20.4/24</code>. Quel est l'adresse du r\u00e9seau de cette machine ?</li> </ol> <p>A venir !</p> Simplification d'\u00e9criture <p>Dans le cadre d'exercices de NSI, on cherchera souvent \u00e0 simplifier les calculs, c'est pourquoi on trouvera souvent des adresses IP sous la forme : </p> <ul> <li><code>X.X.X.X/8</code>, c'est-\u00e0-dire avec un masque <code>255.0.0.0</code> ;</li> <li><code>X.X.X.X/16</code>, c'est-\u00e0-dire avec un masque <code>255.255.0.0</code> ;</li> <li><code>X.X.X.X/24</code>, c'est-\u00e0-dire avec un masque <code>255.255.255.0</code>.</li> </ul>"},{"location":"NSI/Terminale/C07/Routage/#un-exemple-avec-routage-manuel-sur-3-routeurs","title":"Un exemple avec routage manuel sur 3 routeurs","text":"<p>On consid\u00e8re les r\u00e9seaux suivants dans le logiciel <code>Filius</code>, pour lesquels les routeurs R1, R2 et R3 ne sont pas en routage automatique.</p> <p></p> <ul> <li>Les routeurs R1 et R3 sont appel\u00e9s routeurs d'acc\u00e8s, car ils sont en bordure de r\u00e9seaux.</li> <li>Le routeur R2 est un routeur interne.</li> </ul> <p>L'objectif est de comprendre comment les routeurs font pour transmettre des paquets de l'ordinateur P1 du r\u00e9seau <code>192.168.0.0/24</code> \u00e0 l'ordinateur P2 du r\u00e9seau <code>192.168.1.0/24</code>.</p> <p>Tables de routage</p> <p>Une table de routage est une structure de donn\u00e9es utilis\u00e9e par un routeur ou un ordinateur en r\u00e9seau, et qui d\u00e9finit en fonction des adresses de destination par quels routeurs passer.</p> <p>Comprendre une table de routage</p> Enonc\u00e9R\u00e9ponses <p>Voici la table de routage actuelle du routeur R1 :</p> <p></p> <ol> <li>Quels sont les champs de cette table ?</li> <li>Chercher sur le web la signification informatique de loopback (ou rebouclage).</li> <li>Que signifie alors la troisi\u00e8me ligne ? La quatri\u00e8me ligne ?</li> <li>Nous allons devoir indiquer au routeur R1 quelle direction devra prendre un paquet \u00e0 destination du r\u00e9seau <code>192.168.1.0/24</code> :<ol> <li>Ajoutez une ligne \u00e0 la table de routage de R1.</li> <li>Dans celle ci, compl\u00e9tez les champs :<ul> <li>IP de destination : <code>192.168.1.0/24</code></li> <li>Masque : <code>255.255.255.0</code></li> <li>Paserelle suivante : <code>1.0.0.2</code></li> <li>Via l'interface : <code>1.0.0.1</code></li> </ul> </li> <li>Testez \u00e0 partir de P1 et la commande <code>ping 192.168.1.0</code>. Le paquet est-il transmis \u00e0 P2 ? Vous pouvez oouvrir les fen\u00eatres d'\u00e9changes de donn\u00e9es n\u00e9cesaires.</li> <li>Compl\u00e9tez les tables de routages de R2 et et R3 pour que la commande <code>ping</code> fonctionne correctement.</li> </ol> </li> <li> <p>Nous allons modifier la topologie du r\u00e9seau, en ajoutant un  routeur R4 et un portable P3 de la mani\u00e8re suivante (le portable P1 et le routeur R1 sont inchang\u00e9s) :</p> <p></p> <p>Tips</p> <p>Si vous \u00eates \u00e0 cours de prises r\u00e9seaux sur certains routeurs, vous pouvez en ajouter de nouvelles via le bouton <code>G\u00e9rer les connexions</code></p> <p>Modifiez les tables de routages n\u00e9cessaires pour que les 3 portables puissent communiquer.</p> </li> </ol> <p>A venir !</p> <p>Routage manuel</p> <p>M\u00eame pour des r\u00e9seaux de petites taille, il est difficile de maintenir des tables de routages manuellement. D\u00e8s que le nombre de routeurs internes augmente, arrivent d'autres questions :</p> <p></p> <p>Dans une situation comme celle-ci, quelle route est \u00e0 privil\u00e9gier pour relier le client au serveur ?</p> <ul> <li><code>R1 -&gt; R2 -&gt; R3 -&gt; R5 -&gt; R6</code></li> <li><code>R1 -&gt; R2 -&gt; R4 -&gt; R5 -&gt; R6</code> </li> <li><code>R1 -&gt; R2 -&gt; R5 -&gt; R6</code></li> </ul> <p>Nous aurions tendance \u00e0 penser naturellement qu'il faut prendre la troisi\u00e8me solution, pour laquelle un hop de moins est n\u00e9cessaire, mais est-ce judicieux si les liaisons <code>R2-&gt;R3-&gt;R5</code> sont fibr\u00e9es alors que la liaison <code>R2 -&gt; R5</code> est une liaison cuivre classique ?</p>"},{"location":"NSI/Terminale/C08/ProgDyn/","title":"Principes et exemples","text":""},{"location":"NSI/Terminale/C08/ProgDyn/#principes-de-la-programmation-dynamique","title":"Principes de la programmation dynamique","text":""},{"location":"NSI/Terminale/C08/ProgDyn/#un-premier-exemple-debranche","title":"Un premier exemple d\u00e9branch\u00e9","text":"<p>Parcours sur une grille</p> \u00c9nonc\u00e9Solution <ol> <li> <p>Combien y-a-t'il de chemin menant du point \\(D\\) au point \\(A\\) sur le graphique suivant, en ne se d\u00e9pla\u00e7ant \u00e0 chaque pas que vers la droite ou vers le bas ?</p> <p></p> </li> <li> <p>Combien y-a-t'il de chemin menant du point \\(D\\) au point \\(A\\) sur le graphique suivant, en ne se d\u00e9pla\u00e7ant \u00e0 chaque pas que vers la droite ou vers le bas ?</p> <p></p> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C08/ProgDyn/#la-suite-de-fibonacci","title":"La suite de Fibonacci","text":"<p>La suite de Fibonacci est une suite d\u00e9finie par une r\u00e9curence d'ordre 2 de la mani\u00e8re suivante, :</p> \\[ \\left\\lbrace\\begin{array}{rcl} F_0 &amp;=&amp; 0\\\\ F_1 &amp;=&amp; 1 \\\\ F_{n+2} &amp;=&amp; F_{n+1} + F_{n} ~~ \\forall n \\in \\mathbb{N} \\end{array}\\right. \\] <p>Calculer</p> \u00c9nonc\u00e9Solution <p>Calculer les 10 premiers termes de la suite de Fibonacci.</p> <p>Les 10 premiers termes sont : 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 </p> <p>Notation</p> <p>On notera \\(F(n)\\) le nombre de la suite de Fibonacci de rang \\(n\\). Par exemple \\(F(0) = 0\\) et \\(F(6) = 13\\).</p> <p>Algorithmiquement parlant, la suite de Fibonacci \u00e9tant une suite d\u00e9finie par r\u00e9currence, nous serions tent\u00e9s de cr\u00e9er une fonction r\u00e9cursive pour calculer les termes \\(F(n)\\) de la suite. Pour ce faire, nous pourrions utiliser la fonction suivante :</p> <pre><code>def fibo(n : int) -&gt; int :\n    if n == 0 :\n        return  0\n    elif n == 1 :\n        return 1\n    else :\n        return fibo(n-1) + fibo(n-2)\n</code></pre> <p>La question que nous devons nous poser est : est-ce un choix judicieux ? </p> <p>Tester et voir les limites</p> \u00c9nonc\u00e9Solutions <ol> <li> <p>Tester la fonction <code>fibo</code> avec le code suivant : </p><pre><code>import time\nfor n in range(40) :\n    start = time.perf_counter()\n    print(f\"fibo({n}) = {fibo(n)}\", end=\"\")\n    end = time.perf_counter()\n    print(f\" Temps : {end - start}\")\n</code></pre> Que constate-t'on ? </li> <li> <p>R\u00e9aliser un sch\u00e9ma de la pile d'appels r\u00e9cursif effectu\u00e9s lors de l'ex\u00e9cution de <code>fibo(6)</code>.</p> </li> </ol> <ol> <li>Le temps d'ex\u00e9cution cro\u00eet de mani\u00e8re exponentielle.</li> <li> <p>On a la construction suivante :</p> <p></p> <p></p> </li> </ol> <p>Multiples appels</p> <p>Dans l'exemple pr\u00e9c\u00e9dent de calcul de <code>fibo(6)</code>, on peut constater que les appels r\u00e9cursifs sont nombreux, et souvent pour calculer plusieurs fois la m\u00eame chose :</p> <p></p> <p>Ainsi :</p> <ul> <li><code>fibo(2)</code> est calcul\u00e9 \u00e0 5 reprises ;</li> <li><code>fibo(3)</code> est calcul\u00e9 \u00e0 3 reprises ;</li> <li><code>fibo(4)</code> est calcul\u00e9 \u00e0 2 reprises.</li> </ul> <p>Le nombre d'appels augmente exponentiellement en fonction de <code>n</code>. Par exemple le calcul r\u00e9cursif de <code>fibo(20)</code> n\u00e9cessite \\(4~181\\) appels au calcul <code>fibo(2)</code>, celui de <code>fibo(30)</code> le n\u00e9cessite \\(514~229\\) fois, celui de <code>fibo(40)</code> le n\u00e9cessite \\(63~245~986\\) fois....</p> <p>Si la limite de r\u00e9cursion (qui est de 1000 par d\u00e9faut pour Python) n'est pas atteinte pour <code>fibo(40)</code>, le temps de calcul, lui,  cro\u00eet aussi exponentiellement...</p>"},{"location":"NSI/Terminale/C08/ProgDyn/#programmation-dynamique","title":"Programmation dynamique","text":""},{"location":"NSI/Terminale/C08/ProgDyn/#premiers-exemples-sur-la-suite-de-fibonacci","title":"Premiers exemples sur la suite de Fibonacci","text":"<p>En consid\u00e9rant l'algorithme pr\u00e9c\u00e9dant, on comprend bien qu'il est particuli\u00e8rement inefficace de calculer plusieurs fois le m\u00eame sous-calcul. Afin d'am\u00e9liorer le temps de calcul de l'algorithme, nous d\u00e9cidons donc de m\u00e9moriser les calculs d\u00e9j\u00e0 effectu\u00e9s dans un tableau. Il existe deux m\u00e9thodes diff\u00e9rentes :</p> <p>Programmation dynamique de la suite de Fibonacci</p> M\u00e9thode ascendanteM\u00e9thode descendante <p>On va calculer les nombres de la suite de Fibonacci jusqu'\u00e0 \\(F(n)\\) en partant de \\(F(0)\\) et \\(F(1)\\). On appelle ce type de m\u00e9thode une m\u00e9thode Bottom-Up. Ce n'est pas une m\u00e9thode r\u00e9cursive.</p> <pre><code>def fiboAsc(n : int) -&gt; int :\n    F = [0]*(n+1)\n    F[1] = 1\n    for i in range(2,n+1) :\n        F[i] = F[i-1] + F[i-2]\n    return F[n]\n</code></pre> <p>On va calculer les nombres de Fibonacci r\u00e9cursivement, mais en sauvegardant les calculs d\u00e9j\u00e0 effectu\u00e9s dans une liste Python, en profitant de sa mutabilit\u00e9. On appelle ce type de m\u00e9thode une approche Top-Down :</p> <pre><code>def fiboDesc(n : int) -&gt; int :\n\n    memo = [0, 1]+[None]*(n-1)\n\n    def compute(n, memo) :\n        if memo[n] is  None :\n            memo[n] = compute(n-1, memo) + compute(n-2, memo)\n        return memo[n]\n\n    return compute(n, memo)\n</code></pre> <p>L'explication la plus simple du fonctionnement est visible dans Thonny, en utilisant le debugger, ou bien ici, pour un exemple sur <code>fiboDesc(6)</code>.</p>"},{"location":"NSI/Terminale/C08/ProgDyn/#principes-de-la-programmation-dynamique_1","title":"Principes de la programmation dynamique","text":"<p>La programmation dynamique, introduite au d\u00e9but des ann\u00e9es 1950 par Richard Bellman, est une m\u00e9thode pour r\u00e9soudre des probl\u00e8mes en combinant des solutions de sous-probl\u00e8mes, tout comme les m\u00e9thodes de type diviser pour r\u00e9gner.</p> <p>Un algorithme de programmation dynamique r\u00e9sout chaque sous-sous-probl\u00e8me une seule fois et m\u00e9morise sa r\u00e9ponse dans un tableau, \u00e9vitant ainsi le re-calcul de la solution chaque fois qu'il r\u00e9sout chaque sous-sous-probl\u00e8me.</p> <p>La programmation dynamique s'applique g\u00e9n\u00e9ralement aux probl\u00e8mes d'optimisation, comme ceux que nous avons vu l'an pass\u00e9 lorsque nous avons \u00e9tudi\u00e9 les algorithmes gloutons.</p>"},{"location":"NSI/Terminale/C08/ProgDyn/#le-probleme-du-rendu-de-monnaie","title":"Le probl\u00e8me du rendu de monnaie","text":"<p>Largement inspir\u00e9 de https://isn-icn-ljm.pagesperso-orange.fr/NSI-TLE/res/res_rendu_de_monnaie.pdf.</p>"},{"location":"NSI/Terminale/C08/ProgDyn/#le-probleme-introduction-et-traitement-debranche","title":"Le probl\u00e8me : introduction et traitement d\u00e9branch\u00e9","text":"<p>Vous avez \u00e0 votre disposition un nombre illimit\u00e9 de pi\u00e8ces de 2 cts, 5 cts, 10 cts, 50 cts et 1 euro (100 cts). Vous devez rendre une certaine somme (rendu de monnaie). Le probl\u00e8me est le suivant : \"Quel est le nombre minimum de pi\u00e8ces qui doivent \u00eatre utilis\u00e9es pour rendre la monnaie\"</p> <p>La r\u00e9solution \"gloutonne\" de ce probl\u00e8me peut \u00eatre la suivante :</p> <ul> <li>On prend la pi\u00e8ce qui a la plus grande valeur (il faut que la valeur de cette pi\u00e8ce soit inf\u00e9rieure ou \u00e9gale \u00e0 la somme restant \u00e0 rendre).</li> <li>On recommence l\u2019op\u00e9ration ci-dessus jusqu\u2019au moment o\u00f9 la somme \u00e0 rendre est \u00e9gale \u00e0 z\u00e9ro.</li> </ul> <p>Questions</p> \u00c9nonc\u00e9 <ol> <li>Appliquer cette m\u00e9thode pour une somme de 1\u20ac77 (177cts) \u00e0 rendre.</li> <li>Appliquer cette m\u00e9thode \u00e0 la somme de 11 centimes.<ol> <li>Quel est le probl\u00e8me ?</li> <li>Proposer une solution permettant de rendre 11 centimes. Est-elle unique ?</li> </ol> </li> </ol>"},{"location":"NSI/Terminale/C08/ProgDyn/#mise-au-point-dun-algorithme-recursif","title":"Mise au point d'un algorithme r\u00e9cursif","text":"<p>Nous allons essayer de mettre au point un algorithme r\u00e9cursif donnant une solution au probl\u00e8me de rendu de monnaie en utilisant le nombre minimal de pi\u00e8ces.</p> <p>Questions</p> \u00c9nonc\u00e9 <ol> <li> <p>Compl\u00e9ter l'arbre suivant donnant l'ensemble des possibilit\u00e9s de r\u00e9partition des pi\u00e8ces :</p> <p></p> </li> <li> <p>Combien de chemins sont des impasses (on termine avec 1 cts restant) ? Combien de solutions existent ? Quelle est la solution utilisant le nombre minimal de pi\u00e8ces ?</p> <p>Force Brute</p> <p>Quand une m\u00e9thode traite tous les cas possibles, on parle souvent de m\u00e9thode en force brute.</p> </li> <li> <p>Compl\u00e9ter la fonction suivante pour qu'elle donne le nombre minimal de pi\u00e8ces utilis\u00e9es pour une somme <code>s</code> donn\u00e9e :</p> <pre><code>def rendu_monnaie_rec(P : list, s : int) -&gt; int:\n\"\"\" renvoie le nombre minimal de pi\u00e8ces pour rendre la somme s\n    en utilisant le jeu de pi\u00e8ces P\"\"\"\n\n    if s==0:\n        return 0\n    else:\n        mini = float('inf') # On fixe le nombre de pi\u00e8c\u00e9 \u00e0 l'infini\n    for i in range(len(P)):\n        if ... &lt;= s:\n            nb = 1 + ...\n            if nb &lt; mini:\n                mini = nb\n    return mini\n</code></pre> </li> <li> <p>Testez la fonction avec le jeu de pi\u00e8ces <code>(2, 5, 10, 100)</code>, et pour des sommes augmentant \u00e0 partir de 11 cts. A partir de quelle v somme le programme devient-il visiblement plus lent ?</p> </li> </ol>"},{"location":"NSI/Terminale/C08/ProgDyn/#passage-en-programmation-dynamique","title":"Passage en programmation dynamique","text":"<p>On constate dans la partie pr\u00e9c\u00e9dente que la m\u00e9thode pr\u00e9c\u00e9dente fait de trop nombreux appels r\u00e9cursifs, qui ralentissent consid\u00e9rablement le temps de calcul, voire plante le programme d\u00e8s que la taille maximale de la pile est d\u00e9pass\u00e9e.</p> <p>On va donc utiliser la programmation dynamique pour acc\u00e9l\u00e9rer la vitesse de traitement du probl\u00e8me :</p> <p>Questions</p> \u00c9nonc\u00e9 <p>On consid\u00e8re la fonction suivante :</p> <p></p><pre><code>def renduMonnaie1(P : list, s : int) -&gt; int | None :\n    nb = [0]+[None] * (s)\n    for n in range(1, s+1) :\n        for p in P :\n            if p &lt;= ... and nb[...] is not None :\n                if nb[n] is ... or ... &gt; 1 + nb[n-p]:\n                    nb[n] = 1 + nb[n-p]                                         \n    return ...\n</code></pre> 1. Compl\u00e9ter la fonction afin qu'elle renvoie le nombre minimal de pi\u00e8ce pour rendre la monnaie, ou <code>None</code> s'il est impossible de rendre la monnaie. <ol> <li> <p>Est-ce une m\u00e9thode ascendante ou descendante ?       </p> </li> <li> <p>Cr\u00e9er une fonction <code>renduMonnaie2(P : list, s : int) -&gt; int | None</code> utilisant l'autre m\u00e9thode.</p> </li> </ol> Pour aller plus loin \u00c9nonc\u00e9 <p>Nos codes pr\u00e9c\u00e9dents ne nous permettent que de connaitre le nombre minimal de pi\u00e8ces n\u00e9cessaire pour un rendu de monnaie donn\u00e9. Nous ne connaissons par contre pas quelles pi\u00e8ces sont n\u00e9cessaires.</p> <p>Transformez une des fonction pr\u00e9c\u00e9dente afin qu'elle renvoie les pi\u00e8ces n\u00e9cessaires au rendu de monnaie.</p>"},{"location":"NSI/Terminale/C08/alignSeq/","title":"Alignements de s\u00e9quences","text":""},{"location":"NSI/Terminale/C08/alignSeq/#alignement-de-sequences","title":"Alignement de s\u00e9quences","text":""},{"location":"NSI/Terminale/C08/alignSeq/#presentation-du-sujet","title":"Pr\u00e9sentation du sujet","text":"<p>On dispose de deux cha\u00eenes de caract\u00e8res : \\(A\\), qui vaut <code>INFORMATIQUE</code>, et \\(B\\), qui vaut <code>NUMERIQUE</code>. On aimerait mettre ces deux chaines de caract\u00e8res en correspondance de la mani\u00e8re suivante :</p> <ul> <li>On place les 2 chaines l'une en dessous de l'autre\u202f;</li> <li>Si les derniers caract\u00e8res des deux chaines co\u00efncident, alors on passe aux caract\u00e8res suivants\u202f;</li> <li>Sinon, on va ajouter un trou dans une des deux chaines, symbolis\u00e9 par un - et on passe aux caract\u00e8res suivants.</li> </ul> <p>Voici un exemple d'alignement optimal :</p> <p></p> <p>Dans cette situation on a besoin de 9 tirets, pas moins.</p> <p>L'objectif est d'aligner le maximum de lettres (donc de mettre le moins de <code>-</code> possible). Ce n'est pas un probl\u00e8me simple, surtout quand les chaines sont longues, comme pour les s\u00e9quences d'ADN par exemple :</p> <p></p>"},{"location":"NSI/Terminale/C08/alignSeq/#resolution-par-une-methode-recursive","title":"R\u00e9solution par une m\u00e9thode r\u00e9cursive","text":"<p>Le principe est pr\u00e9sent\u00e9 dans la vid\u00e9o suivante :</p> <p>Pour les mots <code>GRAS</code> et <code>GERS</code>, l'arbre obtenu est le suivant :</p> <p></p> <p>Apr\u00e8s application d'une m\u00e9thode dynamique (Top Down) (c'est-\u00e0-dire r\u00e9cursive avec m\u00e9mo\u00efsation), on obtient le graphe suivant :</p> <p></p>"},{"location":"NSI/Terminale/C08/alignSeq/#resolution-par-une-methode-iterative","title":"R\u00e9solution par une m\u00e9thode it\u00e9rative","text":""},{"location":"NSI/Terminale/C08/alignSeq/#activite-debranchee","title":"Activit\u00e9 d\u00e9branch\u00e9e","text":"<p>Consid\u00e9rons les deux chaines de caract\u00e8res <code>GENOME</code> et <code>ENORME</code>. Afin de chercher le nombre minimal d'insertion \u00e0 effectuer, nous allons compl\u00e9ter le tableau suivant, avec la convention suivante : \u00e0 l'intersection de la colonne <code>N</code> et de la premi\u00e8re ligne <code>E</code> se trouve le nombre minimal d'insertion n\u00e9cessaire pour aligner les chaines <code>EN</code> et <code>GE</code>, c'est-\u00e0-dire 2 tirets. Par convention la premi\u00e8re ligne et la premi\u00e8re colonne correspondent \u00e0 une chaine vide.</p> <p></p> <p>Question</p> Enonc\u00e9R\u00e9ponse <p>En quoi la m\u00e9thode ci-dessus est-elle une m\u00e9thode it\u00e9rative (Bottom Up) ?</p> <ol> <li> <p>Pour compl\u00e9ter le tableau, on va commencer par compl\u00e9ter la premi\u00e8re ligne et la premi\u00e8re colonne. Par exemple, la case de la premi\u00e8re ligne correspondant \u00e0 l'intersection de <code>R</code> et de <code>-</code> doit contenir le nombre minimal de tirets n\u00e9cessaire pour aligner <code>ENOR</code> avec une chaine vide, c'est-\u00e0-dire 4.</p> <p></p> </li> <li> <p>Pour compl\u00e9ter ensuite le reste du tableau, il faut concevoir deux cas diff\u00e9rents :</p> <ol> <li> <p>Soit la case correspond aux deux m\u00eame lettres, comme dans l'exemple ci-dessous :</p> <p></p> <p>Le meilleur alignement de <code>ENO</code> et de <code>GENO</code> contient autant de tirets que le meilleur alignement de <code>EN</code> et de <code>GEN</code>, donc ici 1.</p> </li> <li> <p>Soit les deux lettre sont diff\u00e9rentes, et on peut consid\u00e9rer deux situations :</p> <p></p> <p></p> <p>On consid\u00e8re la case comme \u00e9tant une \u00e9volution de l'alignement de <code>ENO</code> et <code>GE</code>, qui contenait 3 tirets, vers l'alignement de <code>ENO</code> et <code>GEN</code>, qui en contiendra donc un de plus, soit 4.</p> <p></p> <p></p> <p>On consid\u00e8re la case comme \u00e9tant une \u00e9volution de l'alignement de <code>EN</code> et <code>GEN</code>, qui contenait 1 unique tiret, vers l'alignement de <code>ENO</code> et <code>GEN</code>, qui en contiendra donc un de plus, soit 2.</p> <p></p> </li> </ol> <p>Comme nous cherchons un alignement minimisant le nombre de tirets, on va alors compl\u00e9ter la case avec la valeur 2, provenant de la situation de droite ci-dessus.</p> </li> <li> <p>On termine alors de compl\u00e9ter le tableau :</p> <p></p> </li> </ol>"},{"location":"NSI/Terminale/C08/alignSeq/#application-en-python","title":"Application en Python","text":"<p>L'activit\u00e9 est disponible sous la forme d'un notebook capytale</p>"},{"location":"NSI/Terminale/C09/graphe/","title":"Notion de Graphe","text":""},{"location":"NSI/Terminale/C09/graphe/#les-graphes-definitions-et-vocabulaire","title":"Les graphes : d\u00e9finitions et vocabulaire","text":"<p>Probl\u00e8me des sept ponts de K\u00f6nigsberg</p> <p>La ville de K\u00f6nigsberg (aujourd'hui Kaliningrad) est construite autour de deux \u00eeles situ\u00e9es sur le Pregel et reli\u00e9es entre elles par un pont. Six autres ponts relient les rives de la rivi\u00e8re \u00e0 l'une ou l'autre des deux \u00eeles, comme repr\u00e9sent\u00e9s sur le plan ci-dessus. </p> <p></p> <p>Le probl\u00e8me consiste \u00e0 d\u00e9terminer s'il existe ou non une promenade dans les rues de K\u00f6nigsberg permettant, \u00e0 partir d'un point de d\u00e9part au choix, de passer une et une seule fois par chaque pont, et de revenir \u00e0 son point de d\u00e9part, \u00e9tant entendu qu'on ne peut traverser le Pregel qu'en passant sur les ponts. </p> <p>Le math\u00e9maticien Leonhard Euler donna la solution de ce probl\u00e8me en utilisant les pr\u00e9mices de ce qu'on appelera Th\u00e9orie des graphes</p>"},{"location":"NSI/Terminale/C09/graphe/#graphes-orientes-et-non-orientes","title":"Graphes orient\u00e9s et non-orient\u00e9s","text":"<p>Graphe non oriernt\u00e9 et vocabulaire</p> <p>Un Graphe \\(G\\) est la donn\u00e9e de d'un ensemble fini de noeuds(nodes en anglais) ou sommets (vertices en anglais) reli\u00e9s entre eux par des liens (edges en anglais).</p> <p>Si les liens sont :</p> <ul> <li>bidirectionnels (on peut les emprunter dans les deux sens), le graphe sera alors appel\u00e9 non-orient\u00e9. On parlera alors de noeuds et les liens seront appel\u00e9s ar\u00eates, et repr\u00e9sent\u00e9s par des segments ;</li> <li>unidirectionnels (on peut les emprunter dans un seul sens), le graphe sera alors appel\u00e9 orient\u00e9. On parlera alors de sommets et les liens seront appel\u00e9s arcs, et repr\u00e9sent\u00e9s par des fl\u00e8ches.</li> </ul> <p>Graphe du probl\u00e8me des ponts de K\u00f6nigsberg</p> <p>Le graphe suivant est un repr\u00e9sentatnt du probl\u00e8me des ponts de K\u00f6nigsberg :    </p> <p></p> <ul> <li>Les ponts pouvant \u00eatre franchis dans les deux sens, le graphe est non-orient\u00e9.</li> <li>Les diff\u00e9rentes zones (berges et iles) sont les sommets \\(A, B, C, D\\) du graphe.</li> <li>les diff\u00e9rents ponts sont les ar\u00eates \\(a, b, c, d, e, f, g\\).</li> </ul> <p>On dira qu'il s'agit d'une repr\u00e9sentation, car la forme du graphe n'est pas importante. Les dessins ci-dessous repr\u00e9sentent le m\u00eame graphe :</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Graphe d'\u00e9tat d'un procesus</p> <p>Dans le cours sur les processus, nous avons vu le sch\u00e9ma suivant :</p> <p></p> <ul> <li>Le graphe est orient\u00e9</li> <li>Les diff\u00e9rentes \u00e9tats sont les sommets <code>d\u00e9part</code>, <code>Pr\u00eat</code>, <code>Elu</code>, <code>Bloqu\u00e9</code> et <code>termin\u00e9</code>.</li> <li>les diff\u00e9rentes transitions sont les arcs <code>R\u00e9veil</code>, <code>Election</code>, <code>Blocage</code>, <code>D\u00e9blocage</code> et <code>Fin</code>.</li> </ul> <p>Voisinage</p> <p>Si il existe un arc d'un sommet \\(s\\) \u00e0 un sommet \\(t\\), on dit que \\(t\\) est adjacent \u00e0 \\(s\\), o\u00f9 que \\(t\\) est un voisin de \\(s\\).</p> <p>Exemple</p> <p>Dans le graphe ci-dessous :</p> <p></p> <ul> <li><code>A</code> a pour voisins <code>B</code>, <code>C</code> et <code>D</code> ;</li> <li><code>B</code> a pour voisins <code>D</code> et <code>C</code> ;</li> <li><code>C</code> n'a aucun voisin ;</li> <li><code>D</code> a pour voisin <code>A</code>.</li> </ul> <p>Divers vocabulaire</p> <ul> <li>L'ordre d'un graphe \\(G\\) est le nombre de sommets qui composent ce graphe, et est not\u00e9 \\(n = ord(G)\\).</li> <li>La taille d'un graphe est le nombre d'arcs/ar\u00eates qui le composent.</li> <li>Le degr\u00e9 d'un sommet est le nombre d'ar\u00eates dont ce sommet est une extr\u00e9mit\u00e9.</li> <li>On dira qu'un graphe est complet si tous ses sommets sont adjacents les uns avec les autres.</li> <li>On dira qu'un sommet est isol\u00e9 s'il n'est reli\u00e9 a aucun autre sommet.</li> <li>On parlera de boucle lorsqu'un arc ou une ar\u00eate a ses deux extr\u00e9mit\u00e9s sur le meme sommet.</li> <li>Un graphe est simple lorsqu\u2019 un graphe n\u2019a aucune boucle et si deux ar\u00eates ne relient jamais les m\u00eames paires de sommets.</li> </ul> <p>Exemple : graphe de recherche de texte</p> <p>On consid\u00e8re le graphe suivant :</p> <p></p> <ul> <li>Ce graphe est d'ordre 4 et de taille 9.</li> <li>Le noeud <code>2</code> est de degr\u00e9 4</li> <li>Ce graphe n'est pas complet car le noeud <code>2</code> n'est pas pas reli\u00e9 \u00e0 <code>1</code>.</li> <li>Il y a une boucle au noeud <code>0</code>, qui est donc d'ordre 6.</li> <li>Aucun sommet n'est isol\u00e9.</li> </ul> <p>Aventuriers du rail</p> Enonc\u00e9R\u00e9ponses <p>\u00ab Les aventuriers du Rail \u00bb est un jeu de plateau qui a pour but de relier les gares de diff\u00e9rentes villes sur une carte pr\u00e9existante, pour ainsi cr\u00e9er son r\u00e9seau ferroviaire au d\u00e9triment des autres joueurs. Il existe diff\u00e9rentes versions du jeu, la carte ci-dessous \u00e9tant la carte de la version Europe.</p> <p></p> <p>Une telle carte peut-\u00eatre mod\u00e9lis\u00e9e par un graphe. On en donne ci-dessous une partie en ayant extrait une partie des liaisons ferroviaires</p> <p></p> <ol> <li>A quoi correspond chacun des sommets ? chaque ar\u00eate ?</li> <li>Quel est l\u2019ordre du graphe ? Quelle est sa taille ?</li> <li>Quel est le degr\u00e9 de Paris ? de Rome ? de Marseille ?</li> <li>Comment peut-on interpr\u00e9ter les r\u00e9sultats de la question 3 ?</li> <li>Ce graphe est-il complet ?</li> </ol> <p>A venir !</p> <p>R\u00e9gion Midi-Pyr\u00e9n\u00e9es</p> Enonc\u00e9 <p>On donne ci-dessous un extrait de la carte de la France administrative ( avant remaniement des r\u00e9gions...). On s\u2019int\u00e9resse \u00e0 la r\u00e9gion Midi-Pyr\u00e9n\u00e9es et aux huit d\u00e9partements qui la composent. On s'int\u00e9resse aux fronti\u00e8res communes entre les d\u00e9partements de cette r\u00e9gion.</p> <p></p> <ol> <li>Repr\u00e9senter cette carte par un graphe mettant en \u00e9vidence ce d\u00e9coupage.</li> <li>A quoi correspond chacun des sommets ? chaque ar\u00eate ?</li> <li>Quel est l'ordre du graphe ? sa taille ?</li> <li>Ce graphe est-il complet ?</li> <li>D\u00e9terminer le degr\u00e9 de chaque sommet.</li> </ol> <p>Une conjecture su les graphes non-orient\u00e9s</p> Enonc\u00e9r\u00e9ponses <ol> <li> <p>On consid\u00e8re l\u2019\u00e9chiquier \\(3 \\times 3\\) ci-dessous dans lequel on s\u2019int\u00e9resse au d\u00e9placement du cavalier noir.</p> <p></p> <ol> <li>Repr\u00e9senter par un graphe cet \u00e9chiquier, les sommets \u00e9tant les cases de l'\u00e9chiquier, et les ar\u00eates repr\u00e9sentant les d\u00e9placementspossibles du cavalier.</li> <li>Quel est l'ordre de ce graphe ?</li> <li>Ce graphe est-il complet ?</li> <li>Que peut-on dire du sommet \\(b2\\) ?</li> <li>Compl\u00e9ter le tableau des d\u00e9gr\u00e9s des sommets du graphe.</li> <li>Calculer la somme des degr\u00e9s des sommets ainsi que le nombre d'ar\u00eates.</li> </ol> </li> <li> <p>Pour chacun des graphes suivants, calculer la somme des degr\u00e9s des sommets ainsi que le nombre d'ar\u00eates, puis \u00e9mettre une conjecture :</p> <p></p> </li> </ol> <p>A venir !</p> <p>Lemme dit \u00ab des poign\u00e9es de main\u00bb</p> Th\u00e9or\u00e8mePreuve <p>La somme des degr\u00e9s des sommets d\u2019un graphe non orient\u00e9 est \u00e9gale au double du nombre d\u2019ar\u00eates du graphe. </p> <p>Lorsqu\u2019on additionne les degr\u00e9s des sommets, chaque ar\u00eate est compt\u00e9e deux fois, une fois pour chaque extr\u00e9mit\u00e9.</p> <p>Les poign\u00e9es de main</p> Enonc\u00e9Solution <p>Les vingt-quatre maires des vingt-quatre communes de l\u2019\u00eele de la R\u00e9union se sont donn\u00e9 rendez-vous lors de l\u2019assembl\u00e9e g\u00e9n\u00e9rale de l\u2019Association des Maires du D\u00e9partement de la R\u00e9union (AMDR). \u00c0 cette occasion, chaque maire serre la main de tous les autres maires. Quel est le nombre de poign\u00e9es de mains \u00e9chang\u00e9es ?</p> <p>A venir !</p>"},{"location":"NSI/Terminale/C09/graphe/#hors-programme-le-langage-dot","title":"Hors programme : le langage <code>dot</code>","text":"<p>Il existe un ensemble d'outils informatiques sp\u00e9cialement d\u00e9di\u00e9s \u00e0 la cr\u00e9ation de graphes : <code>GraphViz</code>. Il en existe de nombreuses versions, mais vous pouvez en trouver une version en ligne ici, avec le graphe de l'exemple pr\u00e9c\u00e9dent comme exemple d'utilisation du langage.</p> <p>pour s'amuser un peu</p> Enonc\u00e9R\u00e9ponse <p>Cr\u00e9er le graphe orient\u00e9 suivant :</p> <ul> <li>les sommets sont les nombres de 2 \u00e0 12 ;</li> <li>un arc existe entre <code>a</code> et <code>b</code> si et seulement si <code>a</code> est un multiple de <code>b</code>.</li> </ul> <p>La solution ici</p>"},{"location":"NSI/Terminale/C09/graphe/#graphes-ponderes","title":"Graphes pond\u00e9r\u00e9s","text":"<p>Parfois il est n\u00e9cessaire d'associer une valeur aux arcs/ar\u00eates d'un graphe (orient\u00e9 ou non). On parle alors d'ajouter une pond\u00e9ration, et de graphes pond\u00e9r\u00e9s.</p> <p>Nous avons d\u00e9j\u00e0 rencontr\u00e9 ces graphes par exemple dans la partie routage, o\u00f9 les liaisons entre routeurs poss\u00e8dent :</p> <ul> <li>soit une distance ;</li> <li>soit une vitesse;</li> </ul> <p>Les valeurs de pond\u00e9rations sont donn\u00e9es directement \u00e0 c\u00f4t\u00e9 des arcs/ar\u00eates sur le graphe.</p> <p>Exemple</p> <p>Le graphe pond\u00e9r\u00e9 suivant repr\u00e9sente les distances routi\u00e8res minimales entre les villes de Paris (<code>P</code>), Lyon (<code>L</code>), Marseille (<code>M</code>), Nantes (<code>N</code>), Bordeaux (<code>B</code>) et Toulouse (<code>T</code>).</p> <p></p>"},{"location":"NSI/Terminale/C09/graphe/#chemins-et-cycles","title":"Chemins et cycles","text":"<p>Chemins et cycles</p> <p>Dans un graphe donn\u00e9, une cha\u00eene (graphe non-orient\u00e9) ou un chemin (graphe orient\u00e9) reliant un sommet \\(u\\) \u00e0 un sommet \\(v\\) est une s\u00e9quence finie de sommets reli\u00e9s deux \u00e0 deux par des arcs/ar\u00eates et menant de \\(u\\) \u00e0 \\(v\\).</p> <p>Un chemin est dit simple s'il n'emprunte pas deux fois le m\u00eame arc/ar\u00eate, et \u00e9l\u00e9mentaire si il ne passe pas deux fois par le m\u00eame sommet.</p> <p>Un chemin simple reliant  un sommet \u00e0 lui m\u00eame et contenant au moins un arc est appel\u00e9 un cycle(graphe non-orient\u00e9) ou un circuit(graphe orient\u00e9).</p> <p>Exemple</p> <p></p> <p>Sur le graphe ci-dessus, <code>a -&gt; c -&gt; d -&gt; e</code> est un chemin de <code>a</code> \u00e0 <code>e</code>, mais il n'est pas unique.</p> <p>On peut aussi avoir :</p> <ul> <li><code>a -&gt; b -&gt; c -&gt; d -&gt; e</code></li> <li><code>a -&gt; c -&gt; d -&gt; b -&gt; c -&gt; d -&gt; e</code></li> <li>et tous les chemins empruntant plusieurs fois le cycle <code>b -&gt; c -&gt; d -&gt; b</code></li> </ul> <p>Il n'existe par contre pas de chemins menant de <code>d</code> \u00e0 <code>a</code>.</p> <p>Longueur d'un chemin et distance entre deux sommets</p> <p>La longueur d'un chemin est d\u00e9finie comme \u00e9tant le nombre d'arcs/ar\u00eates composant ce chemin.</p> <p>La distance entre deux sommets est la longueur du plus petit chemin reliant ces deux sommets. Par convention la distance entre un sommet et lui-m\u00eame est 0, et n'est pas d\u00e9finie s'il n'existe pas de chemins entre les deux sommets.</p> <p>Exemple</p> <p>Dans le graphe pr\u00e9c\u00e9dent :</p> <p></p> <ul> <li>Le chemin <code>a -&gt; b -&gt; c -&gt; d -&gt; e</code> est de longueur 4.</li> <li>La distance entre <code>a</code> et <code>e</code> est 3 (par le chemin <code>a -&gt; c -&gt; d -&gt; e</code>).</li> </ul>"},{"location":"NSI/Terminale/C09/graphe/#connexite","title":"Connexit\u00e9","text":"<p>Connexit\u00e9</p> <p>Un graphe non-orient\u00e9 est dit connexe si il existe un chemin entre deux sommets quelconque du graphe (autrement dit il est en un seul morceau).</p> <p>Lorsqu'un graphe non-roient\u00e9 est compos\u00e9 de plusieurs morceaux, on chaque morceau  est appel\u00e9 une composante connexe du graphe.</p> <p>Exemple</p> <p></p> <p>Le graphe ci-dessus n'est pas connexe, mais poss\u00e8de deux composantes connexes : \\({0;1;2;3;4}\\) et \\({5;6;7;8}\\).</p> <p>Warning</p> <ul> <li>Il existe des d\u00e9finitions similaires pour les graphes orient\u00e9s (faible connexit\u00e9 et forte connexit\u00e9), mais elles d\u00e9passent le cadre du programme.</li> <li>Un arbre est un graphe connexe acyclique.</li> </ul>"},{"location":"NSI/Terminale/C09/graphe/#graphes-euleriens","title":"Graphes Eul\u00e9riens","text":"<p>Cha\u00eene/Chemin Eul\u00e9rien</p> <p>Une Cha\u00eene/Chemin Eul\u00e9rien(ne) ou Parcours Eul\u00e9rien est une cha\u00eene/chemin qui passe une fois et une seule par chaque ar\u00eate du graphe.</p> <p>Un Cycle/Circuit Eul\u00e9rien, ou une Tourn\u00e9e Eul\u00e9rienne, est un cycle qui parcoure toutes les ar\u00eates/arcs du graphe une et une seule fois (en revenant au sommet initial)</p> <p>Trouver des Chemins Eul\u00e9riens</p> Enonc\u00e9R\u00e9ponses <p>Pour chacun des graphes suivants, trouver lorsque c'est possible une cha\u00eene eul\u00e9rienne / un parcours eul\u00e9rien ( ce qui revient \u00e0 tracer le graphe sans lever le stylo, en ne passant qu'une et une seule fois par chaque ar\u00eate) : </p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>A venir !</p> <p>Th\u00e9or\u00e8me d'Euler</p> <p>Pour un graphe non-orient\u00e9, le th\u00e9or\u00e8me d'Euler \u00e9nonce :</p> <ul> <li>Un graphe connexe admet un parcours eul\u00e9rien si et seulement si ses sommets sont tous de degr\u00e9 pair sauf au plus deux.</li> <li>Un graphe connexe admet un circuit eul\u00e9rien si et seulement si tous ses sommets sont de degr\u00e9 pair.</li> </ul> <p>Que peut-on conclure alors pour le probl\u00e8me des ponts de K\u00f6nigsberg ?</p>"},{"location":"NSI/Terminale/C09/graphe_python/","title":"Les graphes en Python","text":""},{"location":"NSI/Terminale/C09/graphe_python/#modelisation-de-graphes-en-python","title":"Mod\u00e9lisation de graphes en Python","text":""},{"location":"NSI/Terminale/C09/graphe_python/#interface-dun-graphe","title":"Interface d'un graphe","text":"<p>Il existe de nombreuses mani\u00e8res d'impl\u00e9menter un graphe, mais dans de nombreux cas l'interface recherch\u00e9e est  assez simple \u00e0 concevoir. A ce titre l'utilisation d'une classe semble \u00eatre judicieuse. Afin de d\u00e9finir l'interface choisie nous devons d'abord consid\u00e9r\u00e9r les sp\u00e9cifications minimales de la cr\u00e9ation d'un graphe, orient\u00e9 ou non, et \u00e9ventuellement pond\u00e9r\u00e9 :</p> <ol> <li>Obtenir un graphe vide par une m\u00e9thode constructeur</li> <li>Etre capable d'ajouter un noeud/sommet \u00e0 un graphe existant.</li> <li>Etre capable d'ajouter des ar\u00eates/arcs \u00e0 un graphe existant, avec une \u00e9ventuelle pond\u00e9ration.</li> <li>Obtenir la liste des voisins d'un sommet.</li> </ol> <p>Une fois ces op\u00e9rations \u00e9l\u00e9mentaires impl\u00e9ment\u00e9es, nous pourrons rajouter des possibilit\u00e9s suppl\u00e9mentaires, comme par exemple</p> <ul> <li>obtenir l'ordre du graphe, sa taille ;</li> <li>obtenir donc le degr\u00e9 d'un sommet ;</li> <li>savoir si il existe un parcours eul\u00e9rien ou un cycle eul\u00e9rien dans ce graphe ;</li> <li>parcourir ce graphe en partant d'un sommet donn\u00e9 ;</li> <li>rep\u00e9rer les \u00e9ventuels cycles du graphe ;</li> <li>appliquer un algorithme sp\u00e9cifique, comem celui de Dijkstra par exemple.</li> </ul> <p>Pour commencer, nous allons donc d\u00e9finir une classe <code>Graph</code>, dont l'interface minimale sera la suivante (des ajustements seront possibles selon si le graphe est orient\u00e9 ou non, pond\u00e9r\u00e9 ou non) :</p> M\u00e9thode Arguments Valeur de retour Description <code>__init__</code> aucun ou  ordre <code>n</code> du graphe aucune Cr\u00e9e un graphe vide, d'ordre <code>n</code>b si n\u00e9cessaire <code>add_vertice</code> aucun ou <code>label</code> du  sommet aucune Ajoute un sommet d'\u00e9tiquette <code>label</code> si n\u00e9cesaire <code>add_edge</code> <code>s</code> et <code>e</code>, <code>p</code> \u00e9ventuellement aucune Ajoute un arc allant de <code>s</code> \u00e0 <code>e</code>, avec la pond\u00e9ration <code>p</code> si n\u00e9cessaire <code>exist_edge</code> <code>s</code> et <code>e</code> bool\u00e9en Renvoie <code>True</code> si il existe un arc entre <code>s</code> et <code>e</code> <code>get_neighbours</code> <code>s</code> it\u00e9rable renvoie un it\u00e9rable contenant les voisins de <code>s</code>"},{"location":"NSI/Terminale/C09/graphe_python/#implementation-par-une-matrice-dadjacence","title":"Impl\u00e9mentation par une Matrice d'adjacence","text":"<p>Matrice d'adjacence</p> <p>Une des possibilit\u00e9s pour repr\u00e9senter un graphe est d'utiliser ce qu'on appelle une matrice d'adjacence. Dans ce type de repr\u00e9sentation, les sommets sont ordonn\u00e9s, et consid\u00e9r\u00e9s comme \u00e9tiquet\u00e9s par des entiers de \\(0\\) \u00e0 \\(n-1\\), o\u00f9 \\(n\\) est l'ordre du graphe.</p> <p>Dans cette repr\u00e9sentation, le coefficient \\(a_{i~j}\\) de la matrice vaut :</p> <ul> <li>\\(0\\) si il n'existe pas d'arc entre les sommets \\(i\\) et \\(j\\) ;</li> <li>\\(1\\) ou la pond\u00e9ration \\(p\\) si il existe un arc entre les sommets \\(i\\) et \\(j\\).</li> </ul> <p>Exemples</p> <ul> <li> <p>la matrice d'adjacence  \\(M = \\begin{pmatrix}     0 &amp; 1 &amp; 0 &amp; 1\\\\     0 &amp; 0 &amp; 1 &amp; 1\\\\     0 &amp; 1 &amp; 1 &amp; 0 \\\\     0 &amp; 0 &amp; 1 &amp; 0     \\end{pmatrix}\\)      correspond au graphe suivant, avec les sommets dans l'ordre num\u00e9rique  </p> </li> <li> <p>la matrice d'adjacence  \\(M =  \\begin{pmatrix}     0 &amp; 1 &amp; 1 \\\\     1 &amp; 0 &amp; 1 \\\\     1 &amp; 1 &amp; 0      \\end{pmatrix}\\) correspond au graphe suivant, avec les sommets dans l'ordre num\u00e9rique </p> </li> <li> <p>la matrice d'adjacence \\(M = \\begin{pmatrix}     0 &amp; 10 &amp; 0 &amp; 0 \\\\     0 &amp; 0 &amp; 20 &amp; 0 \\\\     40 &amp; 0 &amp; 0 &amp; 30 \\\\     5 &amp; 0 &amp; 0 &amp; 0     \\end{pmatrix}\\) correspond au graphe suivant, avec les sommets dans l'ordre alphab\u00e9tique </p> </li> </ul> <p>Associer Matrices d'adjacence et graphes</p> Enonc\u00e9 <ol> <li>D\u00e9terminer la matrice d'adjacence associ\u00e9e \u00e0 ce graphe </li> <li>D\u00e9terminer la matrice d'adjacence associ\u00e9e \u00e0 ce graphe </li> <li>D\u00e9terminer la matrice d'adjacence associ\u00e9e \u00e0 ce graphe </li> <li>D\u00e9terminer la matrice d'adjacence associ\u00e9e \u00e0 ce graphe  </li> <li>Tracer un graphe pouvant correspondre \u00e0 la matrice \\(\\begin{pmatrix} 1 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\\\ \\end{pmatrix}\\) Est-ce un graphe orient\u00e9 ou non-orient\u00e9 ?</li> <li>Tracer un graphe pouvant correspondre \u00e0 la matrice \\(\\begin{pmatrix} 1 &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 1 &amp; 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ 1 &amp; 1 &amp; 1 &amp; 1 &amp; 0  \\end{pmatrix}\\). Est-ce un graphe orient\u00e9 ou non-orient\u00e9 ?</li> <li>Tracer un graphe pouvant correspondre \u00e0 la matrice \\(\\begin{pmatrix} 1 &amp; 2 &amp; 3 \\\\ 10 &amp; 20 &amp; 30 \\\\ 100 &amp; 200 &amp; 300 \\\\ \\end{pmatrix}\\) Est-ce un graphe orient\u00e9 ou non-orient\u00e9 ?</li> <li>Quelle propri\u00e9t\u00e9 semble poss\u00e9der les matrices d'adjacence d'un graphe non-orient\u00e9 ?</li> </ol> <p>Impl\u00e9mentation en Python</p> Enonc\u00e9R\u00e9ponses <p>Le code suivant permet d'impl\u00e9menter en partie l'interface voulue d'un graphe avec une matrice d'adjacence :</p> <pre><code>class Graph :\n    def __init__(self, n=0) :\n        self.n = n\n        self.adj = [[0]*n for _ in range(n)]\n\n    def add_vertice(self) :\n        self.n +=1\n        for l in self.adj :\n            l.append(0)\n        self.adj.append([0]*(self.n))\n\n    def add_edge(self, s, e, p=1) :\n        self.adj[s][e] = p          \n</code></pre> <ol> <li>Ajouter une m\u00e9thode DUNDERS <code>__repr__</code> afin qu'elle renvoie la cha\u00eene de caract\u00e8re correspondant \u00e0 la matrice d'adjacence (et donc directement utilisable par l'instruction <code>print(G)</code>). Pour des raisons de facilit\u00e9s d'\u00e9critures, on pourra utiliser le formatage automatique des cha\u00eenes de caract\u00e8res, comme par exemple :     <code>`python     &gt;&gt;&gt; e = 15     &gt;&gt;&gt; f\"BOB{e: &gt;3}\"     BOB 15</code>     o\u00f9 l'expression <code>e: &gt;3</code> signifie d'\u00e9crire e sous la forme d'une cha\u00eene de caract\u00e8res align\u00e9e \u00e0 droite d'au moins 3 caract\u00e8res, des espaces \u00e9tant ins\u00e9r\u00e9s si n\u00e9cessaire.</li> <li>Compl\u00e9ter la m\u00e9thode <code>exist_edge</code> de la classe <code>Graph</code> pour qu'elle corresponde aux sp\u00e9cifications de l'interface.</li> <li>Compl\u00e9ter la m\u00e9thode <code>get_neighbours</code> de la classe <code>Graph</code> pour qu'elle corresponde aux sp\u00e9cifications de l'interface.</li> <li>Ajouter une m\u00e9thode <code>get_order</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie l'ordre du graphe.</li> <li>Ajouter une m\u00e9thode <code>get_degree</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie le degr\u00e9 d'un sommet pass\u00e9 en argument.</li> <li>Ajouter une m\u00e9thode <code>get_vertices</code> \u00e0 la classe <code>Graph</code> qui renvoie la liste des sommets.</li> <li>Ajouter une m\u00e9thode <code>is_directed</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie <code>True</code> si le graphe est orient\u00e9 et <code>False</code> sinon.</li> <li>Ajouter une m\u00e9thode <code>is_undirected_and_eulerian</code> qui renvoie :<ul> <li><code>False</code> si le graphe est non-orient\u00e9 et qu'il n'existe pas de parcours eul\u00e9rien du graphe</li> <li><code>True</code> si le graphe est non-orient\u00e9 et qu'il existe un cycle eul\u00e9rien.</li> <li>un tuple <code>(s,e)</code> donnant les sommlets de d\u00e9part et d'arriv\u00e9e d'un \u00e9ventuel chemin eul\u00e9rien.</li> </ul> </li> <li>Ajouter une m\u00e9thode <code>delete_edge</code> \u00e0 la classe <code>Graph</code> pour qu'elle supprime l'arc situ\u00e9 entre les sommets <code>s</code> et <code>e</code> pass\u00e9s en argument.</li> </ol> <pre><code>class Graph :\n    def __init__(self, n=0) :\n        self.n = n\n        self.adj = [[0]*n for _ in range(n)]\n\n    def add_vertice(self) :\n        self.n +=1\n        for l in self.adj :\n            l.append(0)\n        self.adj.append([0]*(self.n))\n\n    def add_edge(self, s, e, p=1) :\n        self.adj[s][e] = p\n\n    def exist_edge(self, s, e) :\n        return self.adj[s][e] !=0\n\n    def get_order(self) :\n        return self.n\n\n    def get_neighbours(self,s) :\n        neighbours = []\n        for i in range(self.n) :\n            if self.adj[s][i] !=0 :\n                neighbours.append(i)\n        return neighbours\n\n    def get_degree(self, s):\n        deg = 0\n        for i in range(self.n) :\n            deg += self.adj[s][i]!=0\n            deg += self.adj[i][s]!=0\n        return deg\n\n    def get_vertices(self) :\n        return [i for i in range(self.n)]\n\n    def is_directed(self) :\n        for i in range(self.n) :\n            for j in range(i,self.n) :\n                if self.adj[i][j] != self.adj[j][i] :\n                    return True\n        return False\n\n    def is_undirected_and_eulerian(self) :\n        if self.is_directed() :\n            return False\n        degrees=[]\n        for i in range(self.n) :\n            # ATTENTION ! La m\u00e9thode get_degree renvoie le double\n            # du degr\u00e9 r\u00e9el dans le cas d'un graphe non-orient\u00e9\n            # Pour que le th\u00e9or\u00e8me d'Euler fonctionne\n            # il faut donc diviser par 2 la valeur obtenue !\n            degrees.append((self.get_degree(i)//2)%2)\n        print(degrees)\n        if sum(degrees) == 0 :\n            return True\n        elif sum(degrees) == 2 :\n            return degrees.index(1), self.n-1-degrees[::-1].index(1)\n        return False\n\n    def delete(self,s, e) :\n        self.adj[s][e] = 0\n\n\n    def __repr__(self) :\n        rep =\"\"\n        for l in self.adj :\n            for e in l :\n                rep+=f'{e: &gt;3} '\n            rep += \"\\n\"\n        return rep\n</code></pre> <p>Limites du mod\u00e8le</p> <p>Si l'utilisation d'une matrice d'adjacence sous la forme pr\u00e9sent\u00e9e est tr\u00e8s utile d'un point de vue math\u00e9matique (voir par exemple la propri\u00e9t\u00e9 de l'it\u00e9r\u00e9e sur la page wikipedia), et tr\u00e8s facile \u00e0 mettre en oeuvre, elle poss\u00e8de n\u00e9anmoins ceryaines limites :</p> <ul> <li>Elle utilise une place en m\u00e9moire proportionnelle \u00e0 \\(n^2\\). Pour un graphe de 1000 sommets, il faudra plus d'un million d'entiers pour stocker cette matrice d'adjacence, ce qui commence \u00e0 \u00eatre consid\u00e9rable;</li> <li>Pour conna\u00eetre les voisins d'un sommet, il faut parcourir la totalit\u00e9 de la lign,e correspondant \u00e0 ce sommet, ce qui peut rapidement \u00eatre trop long   .</li> <li>Les sommets sont limit\u00e9s \u00e0 des entiers, ou \u00e0 un ordre d\u00e9fini, et il est difficile d'int\u00e9grer de nouveau sommets qui ne respecteraient pas la convention fix\u00e9e.</li> </ul>"},{"location":"NSI/Terminale/C09/graphe_python/#implementation-par-un-dictionnaire","title":"Impl\u00e9mentation par un dictionnaire","text":"<p>Pour r\u00e9duire la taille prise en m\u00e9moire par la matrice d'adjacence, il est possible d'utiliser un  dictionnaire de voisinage. Ce dictionnaire apportera en plus la capacit\u00e9 d'avoir des cha\u00eenes des caract\u00e8res comme identifiant des sommets.</p> <p>Selon que le graphe soit pond\u00e9r\u00e9 ou non, on aura quelques diff\u00e9rences dans l'impl\u00e9mentation.</p>"},{"location":"NSI/Terminale/C09/graphe_python/#graphe-non-pondere","title":"Graphe non pond\u00e9r\u00e9","text":"<p>Impl\u00e9mentation en Python</p> Enonc\u00e9Solution <p>Le code suivant permet d'impl\u00e9menter en partie l'interface voulue d'un graphe avec un dictionnaire de voisinage  :</p> <pre><code>class Graph :\n    def __init__(self) :\n        self.vertice = {}\n\n    def add_vertice(self,s) :\n        if s not in self.vertice :\n            self.vertice[s] = set() # cr\u00e9e un objet set vide, et graranti l'unicit\u00e9 de chaque \u00e9l\u00e9ment\n\n    def add_edge(self, s, e) :\n        self.add_vertice(s)\n        self.add_vertice(e)\n        self.vertice[s].add(e) # La m\u00e9thode add des objets de type set fonctionne comme append\n</code></pre> <ol> <li>Ajouter une m\u00e9thode DUNDERS <code>__repr__</code> afin qu'elle renvoie la cha\u00eene de caract\u00e8re correspondant \u00e0 la matrice d'adjacence (et donc directement utilisable par l'instruction <code>print(G)</code>).</li> <li>Compl\u00e9ter la m\u00e9thode <code>exist_edge</code> de la classe <code>Graph</code> pour qu'elle corresponde aux sp\u00e9cifications de l'interface.</li> <li>Compl\u00e9ter la m\u00e9thode <code>get_neighbours</code> de la classe <code>Graph</code> pour qu'elle corresponde aux sp\u00e9cifications de l'interface.</li> <li>Ajouter une m\u00e9thode <code>get_order</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie l'ordre du graphe.</li> <li>Ajouter une m\u00e9thode <code>get_degree</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie le degr\u00e9 d'un sommet pass\u00e9 en argument.</li> <li>Ajouter une m\u00e9thode <code>get_vertices</code> \u00e0 la classe <code>Graph</code> qui renvoie la liste des sommets.</li> <li>Ajouter une m\u00e9thode <code>is_directed</code> \u00e0 la classe <code>Graph</code> pour qu'elle renvoie <code>True</code> si le graphe est orient\u00e9 et <code>False</code> sinon.</li> <li>Ajouter une m\u00e9thode <code>is_undirected_and_eulerian</code> qui renvoie :<ul> <li><code>False</code> si le graphe est non-orient\u00e9 et qu'il n'existe pas de parcours eul\u00e9rien du graphe</li> <li><code>True</code> si le graphe est non-orient\u00e9 et qu'il existe un cycle eul\u00e9rien.</li> <li>un tuple <code>(s,e)</code> donnant les sommlets de d\u00e9part et d'arriv\u00e9e d'un \u00e9ventuel chemin eul\u00e9rien.</li> </ul> </li> <li>Ajouter une m\u00e9thode <code>delete_edge</code> \u00e0 la classe <code>Graph</code> pour qu'elle supprime l'arc situ\u00e9 entre les sommets <code>s</code> et <code>e</code> pass\u00e9s en argument.</li> </ol> <pre><code>class Graph :\n    def __init__(self) :\n        self.vertice = {}\n\n    def add_vertice(self,s) :\n        if s not in self.vertice :\n            self.vertice[s] = set() # cr\u00e9e un objet set vide, et graranti l'unicit\u00e9 de chaque \u00e9l\u00e9ment\n\n    def add_edge(self, s, e) :\n        self.add_vertice(s)\n        self.add_vertice(e)\n        self.vertice[s].add(e) # La m\u00e9thode add des objets de type set fonctionne comme append\n\n    def exist_edge(self, s, e) :\n        return  e in self.vertice[s]\n\n    def get_vertices(self) :\n        return self.vertice.keys()\n\n    def get_order(self) :\n        return len(self.vertice.keys())\n\n    def get_degree(self, s) :\n        return len(self.vertice[s])\n\n    def get_neighbours(self,s) :\n        return list(self.vertice[s])\n\n    def is_directed(self) :\n        for s in self.get_vertices() :\n            for t in self.get_neighbours(s) :\n                if s not in self.get_neighbours(t) :\n                    return True\n        return False\n\n    def is_undirected_and_eulerian(self) :\n        if self.is_directed() :\n            return False\n        degrees=[]\n        for s in self.get_vertices() :\n            degrees.append(self.get_degree(s)%2)\n        if sum(degrees) == 0 :\n            return True\n        elif sum(degrees) == 2 :\n            return degrees.index(1), self.get_order()-1-degrees[::-1].index(1)\n        return False\n\n    def delete_edge(self, s, e) :\n        self.vertices[s].remove(e)\n\n\n\n    def __repr__(self) :\n        rep = \"\"\n        for s in self.get_vertices() :\n            rep += f\"{s} :\\n\"\n            for t in self.vertice[s] :\n                rep += f\"   -&gt;{t}\\n\"\n        return rep\n</code></pre>"},{"location":"NSI/Terminale/C09/graphe_python/#graphes-ponderes","title":"Graphes pond\u00e9r\u00e9s","text":"<p>Il existe plusieurs m\u00e9thodes permettant d'ajouter une pond\u00e9ration sur chaque arc :</p> <ul> <li>on peut ajouter dans le dictionnaire de voisinage un tuple contenant \u00e0 la fois le nom et le poids de l'arc consid\u00e9r\u00e9 ;</li> <li>on peut aussi ajouter un autre dictionnaire parall\u00e8le \u00e0 <code>self.adj</code> dont les cl\u00e9s sont les couples de sommets et les valeurs le poids de l'arc consid\u00e9r\u00e9.</li> </ul> <p>Impl\u00e9mentation en Python avec un tuple</p> Enonc\u00e9 <p>Le code suivant permet d'impl\u00e9menter en partie l'interface voulue d'un graphe avec un dictionnaire de voisinage et une pond\u00e9ration :</p> <pre><code>class Graph :\n    def __init__(self) :\n        self.vertice = {}\n\n    def add_vertice(self,s) :\n        if s not in self.vertice :\n            self.vertice[s] = set() # cr\u00e9e un objet set vide, et graranti l'unicit\u00e9 de chaque \u00e9l\u00e9ment\n\n    def add_edge(self, s, e, p=1) :\n        self.add_vertice(s)\n        self.add_vertice(e)\n        self.vertice[s].add((e,p)) \n</code></pre> <p>Quels sont les changements \u00e0 apporter aux autres m\u00e9thodes par rapport \u00e0 la situation sans pond\u00e9ration ?</p> <p>Impl\u00e9mentation en Python avec un dictionnaire d'arcs</p> Enonc\u00e9r\u00e9ponses <p>Le code suivant permet d'impl\u00e9menter en partie l'interface voulue d'un graphe avec un dictionnaire de voisinage et une pond\u00e9ration :</p> <pre><code>class Graph :\n    def __init__(self) :\n        self.vertice = {}\n        self.edges= {}\n\n    def add_vertice(self,s) :\n        if s not in self.vertice :\n            self.vertice[s] = set() \n\n    def add_edge(self, s, e, p=1) :\n        self.add_vertice(s)\n        self.add_vertice(e)\n        self.vertice[s].add(e) \n        self.edges[(s,e)]=p\n</code></pre> <p>Quels sont les changements \u00e0 apporter aux autres m\u00e9thodes par rapport \u00e0 la situation pr\u00e9c\u00e9dente ?</p> <p>A venir</p>"},{"location":"NSI/Terminale/C09/graphe_python/#notion-dheritage-hors-programme","title":"Notion d'h\u00e9ritage (hors programme)","text":"<p>Construction d'un graphe non-orient\u00e9</p> <p></p> <p></p> <p></p> <p>Dans toutes les impl\u00e9mentations que nous avons jusqu'ici cr\u00e9\u00e9es, nous sommes rest\u00e9 sur une notion de graphe orient\u00e9. Plus pr\u00e9cis\u00e9mment, pour cr\u00e9er un graphe non orient\u00e9 tel que celui ci-contre \u00e0 partir d'une des impl\u00e9mentations pr\u00e9c\u00e9dentes, il faudra utiliser le code suivant :</p> <pre><code>G = Graph()\nG.add_edge(0, 1, 20)\nG.add_edge(1, 0, 20)\nG.add_edge(0, 2, 128)\nG.add_edge(2, 0, 128)\nG.add_edge(1, 2, 42)\nG.add_edge(2, 1, 42)\n</code></pre> <p>On se retrouve donc \u00e0 devoir doubler les lignes \u00e0 chaque cr\u00e9ation d'ar\u00eate... Ce qui n'est pas du tout ergonomique...</p> <p></p> <p>Bien entendu, il est possible de cr\u00e9er de nouveau une nouvelle classe qui impl\u00e9menterait cette possibilit\u00e9 imm\u00e9diatement. Mais il exsite aussi en POO une notion fondamentale qui va nous permettre, sans changer le code de notre classe <code>Graph</code> actuelle et en effectuant qu'un codage minimal, de cr\u00e9er une nouvelle classe permettant d'impl\u00e9menter sp\u00e9cifiquement des graphes non orient\u00e9s.</p> <p>Il s'agit de le notion d'h\u00e9ritage de classe. Sans rentrer dans les d\u00e9tails(que vous pouvez par exemple trouver ici), il s'agira de cr\u00e9er une classe fille h\u00e9ritant de toutes les capacit\u00e9s de la classe m\u00e8re - attributs et m\u00e9thodes, mais dans laquelle on pourra rajouter ou modifier des caract\u00e9ristiques sp\u00e9cifiques.</p> <p>Ainsi, en simplifiant, on peut dire qu'un graphe non-orient\u00e9 est un graphe orient\u00e9 dans lequel les arcs sont doubl\u00e9s. Les graphes non-orient\u00e9s sont donc une sous-classe des graphes orient\u00e9s, d'un point de vue codage.</p> <p>Voici le code permettant de cr\u00e9er cette nouvelle classe :</p> <pre><code>class UndirectedGraph(Graph) :\n    def __init__(self) :\n        super().__init__()\n\n    def add_edge(self, s, e, p=1) :\n        super().add_edge(s,e,p)\n        super().add_edge(e,s,p)\n</code></pre> <ul> <li>En ligne 1, on cr\u00e9e une classe <code>UndirectedGraph</code>, qui d\u00e9rive, ou h\u00e9rite de la classe <code>Graph</code>. </li> <li>En ligne 2, on d\u00e9finit la m\u00e9thode constructeur des objets de classe <code>UndirectedGraph</code>.  Celle-ci se compose d'une unique ligne, disant simplement que l'initialisation d'un objet de classe <code>UndirectedGraph</code> se fait de la m\u00eame mani\u00e8re qu'un objet de la classe m\u00e8re <code>Graph</code>, par l'interm\u00e9diaire du mot-cl\u00e9 <code>super()</code>.      On fait ainsi appel \u00e0 la m\u00e9thode constructeur de la classe <code>Graph</code> pour construire un objet de classe <code>UndirectedGraph</code>.</li> <li>En ligne 5, on va red\u00e9finir la m\u00e9thode <code>add_edge</code>. On appelle une telle red\u00e9finition un surcharge  de m\u00e9thode. Il s'agira en fait d'appeler deux fois la m\u00e9thode <code>add_edge</code> de la classe <code>Graph</code>, encore une fois en utilisant le mot-cl\u00e9 <code>super()</code>.</li> </ul> <p>Une fois cette nouvelle classe cr\u00e9\u00e9, elle peut \u00eatre directement utilis\u00e9e tout en conservant toutes les m\u00e9thodes de la classe m\u00e8re :</p> <pre><code>G = UndirectedGraph()\nG.add_edge(0, 1, 20)\nG.add_edge(0, 2, 128)\nG.add_edge(2, 1, 42)\nG.get_neighbours(1)\nG.get_order()\nprint(G)\n</code></pre> <p>Dans le code ci-dessus, m\u00eame si nous n'avons pas surcharg\u00e9 les m\u00e9thodes <code>get_neighbours</code>, <code>get_order</code> et la m\u00e9thode DUNDERS <code>__repr__</code>, elles demeurent accessible \u00e0 tout objet de classe <code>UndirectedGraph</code>, puisque directement h\u00e9rit\u00e9es de la classe m\u00e8re <code>Graph</code>.</p> <p>Objets en Python</p> <p>En Python, tout est objet. Cette phrase n'est pas qu'une d\u00e9claration de principe, puisqu'il existe une classe g\u00e9n\u00e9rique (appel\u00e9e classe abstraite) <code>Object</code>, dont d\u00e9rivent toutes les autres classes, comme <code>int</code>, <code>float</code>, <code>tuple</code>,...</p> <p>Polymorphisme</p> <p>Il est tout \u00e0 fait possible de faire h\u00e9riter une classe de plusieurs autres classes. Cette notion s'appelle le polymorphisme, mais est compl\u00e8tement hors du programme de terminale...</p>"},{"location":"NSI/Terminale/C09/graphe_python/#exemple-dutilisation-coloration-dun-graphe","title":"Exemple d'utilisation : Coloration d'un graphe","text":"<p>Th\u00e9or\u00e8me des 4 couleurs</p> <p>Le th\u00e9or\u00e8me des 4 couleurs est un th\u00e9or\u00e8me classique de th\u00e9orie des graphes. D'apr\u00e8s wikipedia :</p> <p>\u00ab Le th\u00e9or\u00e8me des quatre couleurs indique qu'il est possible, en n'utilisant que quatre couleurs diff\u00e9rentes, de colorier n'importe quelle carte d\u00e9coup\u00e9e en r\u00e9gions connexes, de sorte que deux r\u00e9gions adjacentes (ou limitrophes), c'est-\u00e0-dire ayant toutes une fronti\u00e8re (et non simplement un point) en commun re\u00e7oivent toujours deux couleurs distinctes. L'\u00e9nonc\u00e9 peut varier et concerner, de mani\u00e8re tout \u00e0 fait \u00e9quivalente, la coloration des faces d'un poly\u00e8dre ou celle des sommets d'un graphe planaire, en rempla\u00e7ant la carte par un graphe dont les sommets sont les r\u00e9gions et les ar\u00eates sont les fronti\u00e8res entre r\u00e9gions.  [...] M\u00eame si l'\u00e9nonc\u00e9 de ce th\u00e9or\u00e8me est \u00e9l\u00e9mentaire, on n'en conna\u00eet pas de preuve simple. Les d\u00e9monstrations connues d\u00e9composent le probl\u00e8me en un nombre de sous-cas tellement important qu'elles n\u00e9cessitent l'assistance d'un ordinateur pour \u00eatre v\u00e9rifi\u00e9es.</p> <p>Le th\u00e9or\u00e8me se g\u00e9n\u00e9ralise \u00e0 certaines classes de graphes non planaires. Cependant, lorsqu'on g\u00e9n\u00e9ralise le probl\u00e8me \u00e0 un graphe quelconque, il devient NP-complet de d\u00e9terminer s'il est coloriable avec seulement quatre couleurs (ou m\u00eame trois).  \u00bb</p> <p>Si cette possibilit\u00e9 de colorier avec au maximum 4 couleurs existe, il est par contre parfois difficile  de trouver un coloriage qui corresponde r\u00e9ellement.</p> <p>Il est cependant possible d'utiliser un algorithme glouton qui trouvera un coloriage \u00ab presque \u00bb optimal.</p> <p>Cr\u00e9ation de l'algorithme de coloriage</p> Enonc\u00e9R\u00e9ponses <p>Consid\u00e9rons la carte des r\u00e9gions fran\u00e7aises suivantes :</p> <p></p> <p>et le code suivant permettant de cr\u00e9\u00e9r un graphe non-orient\u00e9 correspondant \u00e0 cette carte dans le fichier suivant (en utilisant la classe <code>UndirectedGraph</code>).</p> <p>Le principe de l'algorithme et le suivant :</p> <ul> <li>les couleurs seront  repr\u00e9sent\u00e9es par des entiers, en partant de \\(0\\) ;        </li> <li>on prend un sommet du graphe au hasard, on regarde les couleurs d\u00e9j\u00e0 donn\u00e9es \u00e0 ses voisins, et on lui donnera comme couleur la plus petite valeur non-affect\u00e9e \u00e0 un de  ses voisins.</li> </ul> <p>Afin de cr\u00e9er les fonctions n\u00e9cessaires :</p> <ol> <li> <p>Cr\u00e9er une fonction <code>min_neighbours_color</code> prenant deux arguments :</p> <ul> <li><code>voisins</code> : un it\u00e9rable contenant une liste de noms de r\u00e9gions</li> <li><code>couleur</code> : un dictionnaire associant \u00e0 des noms de r\u00e9gions le num\u00e9ro de couleur qui lui est associ\u00e9.</li> </ul> <p>et qui renvoie la valeur de couleur la plus petite non associ\u00e9es aux voisins.</p> <p>Par exemple : </p><pre><code>&gt;&gt;&gt; min_couleurs_voisins([\"Normandie\", \"Pays de la Loire\"], {\"Normandie\" : 0, \"Pays de la Loire\" : 2, \"\u00cele-de-France\" : 1})\n1\n&gt;&gt;&gt; min_couleurs_voisins([], {\"Normandie\" : 0, \"Pays de la Loire\" : 2, \"\u00cele-de-France\" : 1})\n0\n&gt;&gt;&gt; min_couleurs_voisins([\"Hauts-de-France\"], {\"Normandie\" : 0, \"Pays de la Loire\" : 2, \"\u00cele-de-France\" : 1})\n0\n&gt;&gt;&gt; min_couleurs_voisins([\"Normandie\", \"Pays de la Loire\", \"\u00cele-de-France\"], {\"Normandie\" : 0, \"Pays de la Loire\" : 2, \"\u00cele-de-France\" : 1})\n3\n</code></pre> </li> <li> <p>Construire enfin une fonction <code>color_graph</code> qui prend en argument un graphe et une r\u00e9gion de d\u00e9part et renvoie un tuple contenant :</p> <ul> <li>le nombre de couleurs utilis\u00e9es ;</li> <li>un dictionnaire affectant \u00e0 chaque r\u00e9gion sa couleur.</li> </ul> <p>Combien de couleurs sont alors utilis\u00e9es ?</p> </li> <li> <p>Pouvez-vous donner un coloriage utilisant exactement 4 couleurs ?</p> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C09/parcours/","title":"Parcours de Graphes","text":""},{"location":"NSI/Terminale/C09/parcours/#parcours-de-graphes-et-applications","title":"Parcours de graphes et applications","text":""},{"location":"NSI/Terminale/C09/parcours/#parcours-en-profondeur","title":"Parcours en profondeur","text":""},{"location":"NSI/Terminale/C09/parcours/#comparaison-avec-un-arbre","title":"Comparaison avec un arbre","text":"<p>Le parcours en profondeur d'un graphe (Depth First Search en anglais), c'est-\u00e0-dire un parcours o\u00f9 on explore chaque chemin jusqu'\u00e0 son extr\u00e9mit\u00e9 finale,  est \u00e9quivalent \u00e0 celui pour un arbre comme pr\u00e9sent\u00e9 dans le chapitre idoine, \u00e0 une subtilit\u00e9 pr\u00eat : dans un graphe il est possible de trouver des boucles, ce qui pourrait amener \u00e0 un chemin infini :</p> <p>le cas d'une boucle</p> <p></p> <p>Dans un parcours DFS d'un graphe comme ci-dessus, et en partant de \\(A\\), on aura un parcours dans l'ordre suivant (en consid\u00e9rant les voisins dans l'ordre alphab\u00e9tique) :</p> <ul> <li>On ira de \\(A\\) \u00e0 \\(B\\) puis de \\(B\\) \u00e0 \\(C\\) ;</li> <li>Une fois en \\(C\\), il faut remonter au dernier sommet visit\u00e9, donc \\(B\\), et regarder si il existe d'autres voisins, donc on passera ensuite \u00e0 \\(D\\), puis \u00e0 \\(A\\), puis \u00e0 \\(B\\), etc.</li> </ul> <p>On obtient donc un parcours infini \\(A -&gt; B -&gt; C -&gt; D -&gt; A -&gt; ...\\), et l'algorithme ne s'arr\u00eate pas.</p>"},{"location":"NSI/Terminale/C09/parcours/#algorithme-en-langage-naturel","title":"Algorithme en langage naturel","text":"<p>Pour que l'algorithme puisse fonctionner, il faudra donc marquer les sommets d\u00e9j\u00e0 visit\u00e9s, comme sur l'exemple suivant :</p> <p></p> <p>On consid\u00e8rera qu'il existe une m\u00e9thode pour marquer les sommets, et donc qu'on n'explore plus un sommet d\u00e9j\u00e0 marqu\u00e9.</p> <pre><code>fonction explore_graphe(G, s) :\n    Marquer(s)\n    pour chaque voisin v de s :\n        si v n'est pas marqu\u00e9 :\n            explorer_graphe(G,v)\n</code></pre> <p>Graphes avec de multiples composantes connexes</p> <p>Cette fonction ne permet pas d'explorer tout le graphe si celui-ci comporte pluiseurs composantes connexes,  car on explore uniquement de voisins en voisins :</p> <p></p> <p>Sur un graphe tel que ci-dessus, la fonction pr\u00e9c\u00e9dente appel\u00e9e sur \\(A\\) n'explorera que les sommets \\(A\\), \\(B\\), \\(C\\) et \\(D\\) dans cet ordre.</p> <p>Il faut donc encapsuler la fonction pr\u00e9c\u00e9dente dans une autre fonction :</p> <pre><code>fonction parcours_profondeur(G) :\n    pour chaque sommet s de G :\n        si s n'est pas marqu\u00e9 :\n            explorer_graphe(G,s)\n</code></pre>"},{"location":"NSI/Terminale/C09/parcours/#implementation-en-python","title":"Impl\u00e9mentation en Python","text":"<p>Pour pouvoir impl\u00e9menter le parcours de graphe en profondeur, il nous faut utiliser une structure permettant de conserver les sommets visit\u00e9s, tout en gardant leur ordre. Une solution \u00e9vidente est d'utiliser une liste Python, et d'utiliser en particulier sa propri\u00e9t\u00e9 de mutabilit\u00e9.</p> <p>Hors programme : param\u00e8tre mutable d'une fonction</p> <p>Consid\u00e9rons le code suivant et son ex\u00e9cution dans PythonTutor :</p> <p> </p> <p>L'objectif est de comprendre la diff\u00e9rence entre objets mutables et non-mutables :</p> <ul> <li>un objet de type <code>list</code> est mutable, et poss\u00e8de une m\u00e9thode <code>.append</code> qui permet de lui ajouter un \u00e9l\u00e9ment ;</li> <li> <p>un objet de type <code>tuple</code> est non-mutable. Pour ajouter un \u00e9l\u00e9ment on est oblig\u00e9 de cr\u00e9er un nouvel objet, qu'on r\u00e9affecte au nom <code>tpl</code>   :</p> <pre><code>tpl = *tpl, n\n</code></pre> <p>On utilise ici l'op\u00e9rateur <code>*</code> pour <code>unpacker</code> (d\u00e9compacter) les \u00e9l\u00e9ments constituant le tuple <code>tpl</code>, puis ajouter l'\u00e9l\u00e9ment <code>n</code> au nouveau tuple.</p> </li> </ul> <p>A la fin de l'ex\u00e9cution du code, alors que les m\u00e9thodes semblent similaires, on constate que les objets tuples cr\u00e9\u00e9s ont disparu \u00e0 la fin de l'ex\u00e9cution de chaque instance de la fonction <code>fibonacci</code>, alors que l'objet de type <code>list</code> a lui \u00e9t\u00e9 modifi\u00e9 au fur et \u00e0 mesure, et que ces modifications sont conserv\u00e9es !</p> <p>Le param\u00e8tre <code>lst</code> de la fonction <code>fibonacci</code> est donc un argument mutable, ce qui :</p> <ul> <li>est parfois fort pratique ;</li> <li>est souvent un g\u00e9n\u00e9rateur d'effets de bords ind\u00e9sir\u00e9s !</li> </ul> Totalement hors programme : utilisation d'une liste en param\u00e8tre non-mutable <p>En r\u00e9alit\u00e9, ce n'est pas tant la structure de liste utilis\u00e9e qui est importante dans l'exemple ci-dessus, mais bien l'utilisation d'une m\u00e9thode en place comme <code>append</code>. On peut en effet utiliser une liste comme un param\u00e8tre pseudo non-mutable comme dans l'exemple ci-dessous, avec la concat\u00e9nation de listes :</p> <p> </p> <p>Au vu de mon exp\u00e9rience, un conseil : NE FAITES SURTOUT PAS CA ! Vous vous \u00e9viterez des heures de d\u00e9buggage frustrantes !</p> <p>Si vous tenez \u00e0 conserver un param\u00e8tre non-mutable, utilisez TOUJOURS une structure qui est construite en ce sens...</p> <p>Impl\u00e9mentation en Python</p> Enonc\u00e9Corrig\u00e9 <ol> <li>Ajouter \u00e0 la classe <code>Graph</code> (impl\u00e9mentation au choix) une m\u00e9thode <code>get_vertices()</code> renvoyant la liste des sommets dans l'ordre lexicographique.</li> <li>Cr\u00e9er une fonction <code>explore_graph(G, s, explored)</code> qui explore r\u00e9cursivement le graphe <code>G</code> \u00e0 partir du sommet <code>s</code>, connaissant un objet de type  <code>list</code> <code>explored</code> contenant la liste des sommets d\u00e9j\u00e0 explor\u00e9s.</li> <li>Cr\u00e9er une fonction <code>DFS(G)</code> renvoyant la liste des sommets explor\u00e9s, dans l'ordre d'exploration lexicographique (dans l'exemple du graphe \u00e0 deux composantes connexes ci dessu, on obtiendra <code>[A, B, C, D, E, F, G, H]</code>, et dans l'exemple pr\u00e9sent\u00e9 exhaustivement, on aura <code>[A, B, D, E, C]</code>).</li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C09/parcours/#parcours-en-largeur","title":"Parcours en largeur","text":""},{"location":"NSI/Terminale/C09/parcours/#comparaison-avec-un-arbre_1","title":"Comparaison avec un arbre","text":"<p>Le parcours en largeur d'un graphe (Breadth First Search en anglais), c'est-\u00e0-dire un parcours o\u00f9 on explore chaque chemin jusqu'\u00e0 son extr\u00e9mit\u00e9 finale,  est \u00e9quivalent \u00e0 celui pour un arbre comme pr\u00e9sent\u00e9 dans le chapitre idoine, tout en  ajoutant le m\u00eame probl\u00e8me que pour le parcours en profondeur : il faut marquer les sommets d\u00e9j\u00e0 visit\u00e9s.</p> <p></p> <p>Ainsi, dans le graphe ci-dessus, l'ordre de parcours des sommets est : \\(A, B, E, C, D, F, G, H\\).</p>"},{"location":"NSI/Terminale/C09/parcours/#algorithme-en-langage-naturel_1","title":"Algorithme en langage naturel","text":"<p>L'algorithme it\u00e9ratif s'impl\u00e9mente \u00e0 l'aide d'une file :</p> <pre><code>fonction explore_largeur(G, s):\n       Cr\u00e9er une file f\n       Enfiler s dans f\n       marquer s\n       tant que la file est non vide\n            defiler f dans s\n            afficher s\n            pour tout voisin t de s dans G\n                si t non marqu\u00e9\n                    Enfiler t dans f\n                    marquer t\n</code></pre> <p>De m\u00eame que pour un parcours en profondeur, la fonction ci-dessus ne permet pas un parcours de graphe non-connexe. On compl\u00e8tera donc cette fonction par :</p> <pre><code>fonction parcours_largeur(G) :\n    Pour chaque sommet s de G \n        si s n'est pas marqu\u00e9   \n            explore_largeur(G,s)\n</code></pre>"},{"location":"NSI/Terminale/C09/parcours/#implementation-en-python_1","title":"Impl\u00e9mentation en Python","text":"<p>Percours en largeur</p> Enonc\u00e9Corrig\u00e9 <ol> <li> <p>Cr\u00e9er une fonction <code>explore_width(G,s)</code> qui effectue un parcours en largeur \u00e0 partir du sommet <code>s</code> du graphe <code>G</code> et renvoie les sommets dans l'ordre de visite. Pour \u00e9viter d'avoir \u00e0 r\u00e9impl\u00e9menter nous-m\u00eame une classe <code>File</code>, nous pouvons utiliser le module <code>queue</code> de Python et les commanes suivantes :</p> <ul> <li><code>F = queue.Queue()</code>, pour cr\u00e9er une file vide ;</li> <li><code>F.put(item)</code> : enfile <code>item</code> dans la file <code>F</code> ;</li> <li><code>item = F.get()</code> : d\u00e9file la file <code>F</code> et stocke dans <code>item</code> ;</li> </ul> </li> <li> <p>Cr\u00e9er une fonction <code>BFS(G)</code> qui renvoie les sommets dans l'ordre de visite du parcours en largeur.</p> </li> </ol> <p>A venir !</p>"},{"location":"NSI/Terminale/C09/parcours/#application-recherche-de-cycle-dans-un-graphe","title":"Application : Recherche de cycle dans un graphe","text":"<p>Il est parfois n\u00e9cessaire de d\u00e9tecter dans un graphe la pr\u00e9sence d'un cycle, comme par exemple :</p> <ul> <li>pour d\u00e9terminer la longueur de cycle d'un g\u00e9n\u00e9rateur de nombre pseudo-al\u00e9atoires ;</li> <li>en cryptographie, en particulier pour d\u00e9tecter des collisions dans des fonctions de hachage cryptographiques (CHF) ;</li> <li>pour d\u00e9tecter des boucles infinies dans certains programmes, en utilisant une repr\u00e9sentation du programme sous la forme d'un graphe (M\u00e9thodes formelles) ;</li> <li>etc.</li> </ul> <p>Le parcours en profondeur est adapt\u00e9 aux recherches de cycles dans un graphe, mais il faudra lui apporter quelques modifications. En effet, dans le parcours en profondeur, on marque un noeud avant d'explorer ses voisins. Quand on retombe sur un noeud d\u00e9j\u00e0 marqu\u00e9, on ne peut pas forc\u00e9ment savoir si c'est \u00e0 cause de la pr\u00e9sence d'un cycle. Prenons comme exemple les deux graphes ci-dessous :</p> <p>Tips</p> <p></p> <p></p> <p></p> <p></p> <p></p> <ul> <li>Dans le cas du graphe de gauche, on va explorer <code>A</code>, puis <code>B</code> puis <code>C</code>, et donc <code>C</code> sera marqu\u00e9. Puis on retombera sur <code>C</code> en venant de <code>D</code>, mais sans cycle puisqu'il s'agit de chemins parall\u00e8les.</li> <li>Dans le cas du graphe de droite, on va explorer <code>A</code>, puis <code>B</code> puis <code>C</code>, et donc <code>C</code> sera marqu\u00e9. Puis on retombera sur <code>C</code> en venant de <code>D</code>, mais par un cycle !</li> </ul> <p>La diff\u00e9rence entre les deux situations est que dans le premier cas, la visite des voisins de <code>C</code> est termin\u00e9e, alors qu'elle est toujours en cours dans le deuxi\u00e8me cas. On va donc devoir diff\u00e9rencier ces deux situations.</p> <p>Algorithme de d\u00e9tection de cycles</p> <p>Nous adopterons une solution en utilisant 3 couleurs pour marquer ces sommets : blanc, gris et noir. Initialement, tous les sommets seront de couleur blanche.</p> <p>Lorsqu'on visitera un sommet <code>s</code> :</p> <ul> <li>s'il est blanc :<ol> <li>on colore le sommet <code>s</code> en gris ;</li> <li>on visite tous les voisins de <code>s</code> r\u00e9cursivement ;</li> <li>on colore le sommet <code>s</code> en noir une fois toutes les \u00e9tapes pr\u00e9c\u00e9dentes franchies.</li> </ol> </li> <li>s'il est gris, c'est qu'on vient de d\u00e9couvrir un cycle ;</li> <li>s'il est noir, on ne fait rien.</li> </ul> <p>Application</p> <p>Pour chacun des graphes ci-dessous, appliquez l'algorithme de d\u00e9tection d'un cycle au graphe ci-dessous (vous partirez du sommet de votre choix). </p> Graphe 1Graphe 2 <p></p> <p></p> <p>Codage en Python</p> <pre><code>BLANC, GRIS, NOIR = 1, 2, 3\n\n### Un dictionnaire est mutable, donc on peut le modifier par appels r\u00e9cursifs.\n\ndef parcours_cycle(graphe : Graph, couleur : dict , s : Sommet) -&gt; boolean :\n    if couleur[s] == ... :\n        return True\n    if couleur[s] == ... :\n        return False\n    couleur[s] = ...\n    for v in graphe.get_neighbours(s) :\n        got_cycle = parcours_cycle(g, couleur, s)\n        if  got_cycle :\n            return True\n    couleur[s] = ...\n    return False\n\ndef cycle(graphe) :\n    couleur = {}    \n    for s in ... :\n        couleur[s] = BLANC\n    for s in ... :\n        if parcours_cycle(graphe, couleur, s) :\n            return True\n    return False        \n</code></pre>"},{"location":"NSI/Terminale/C10/BoyerMoore/","title":"Recherche textuelles","text":""},{"location":"NSI/Terminale/C10/BoyerMoore/#recherches-textuelles","title":"Recherches textuelles","text":"<p>Largement inspir\u00e9 de https://www.lyceum.fr/tg/nsi/5-algorithmique/5-recherche-textuelle</p> <p>Le contexte</p> <p>La recherche de sous-cha\u00eene dans une cha\u00eene donn\u00e9e est un probl\u00e8me important de l'informatique, puisque ses applications sont nombreuses, comme pour les moteurs de recherches, l'utilisation des outils de recherche dans les traitements de textes ou navigateurs web, mais aussi au sein de la bio-informatique, pour la recherche de s\u00e9quences donn\u00e9es de nucl\u00e9otides.</p>"},{"location":"NSI/Terminale/C10/BoyerMoore/#lalgorithme-naif","title":"L'algorithme na\u00eff","text":"<p>Une m\u00e9thode \u00e9vidente pour trouver une sous-cha\u00eene dans une cha\u00eene de caract\u00e8re donn\u00e9e est la suivante : </p> <ul> <li>on avance dans le texte caract\u00e8re par caract\u00e8re ;</li> <li>puis si le caract\u00e8re consid\u00e9r\u00e9 correspond au premier caract\u00e8re du mot, nous comparerons les caract\u00e8res suivants \u00e0 ceux du mot. </li> <li>Si la recherche s'av\u00e8re fructueuse on renvoie <code>True</code>, et sinon <code>False</code></li> </ul> <p>Codage en Python</p> Enonc\u00e9Solution <ol> <li> <p>Coder une fonction <code>recherche(mot : str, chaine : str) -&gt; bool</code> qui renvoie <code>True</code> si mot appartient \u00e0 <code>chaine</code>, sans utiliser le mot cl\u00e9 <code>in</code> de python.</p> <p>On pourra tester avec :</p> <ul> <li><code>recherche('dab', 'abracadabra')</code></li> <li><code>recherche('bad', 'abracadabra')</code></li> </ul> </li> <li> <p>T\u00e9l\u00e9charger le fichier suivant, et utiliser la fonction suivante pour lire ce fichier et stocker son contenu dans la variable <code>texte</code> :</p> <pre><code>def lit_texte(fichier) :\n    with open(fichier, 'r', encoding='utf8') as f :\n        contenu = f.readlines()\n    return \" \".join(contenu).replace(\"\\n\", \"\")\n</code></pre> </li> <li> <p>Comparez maintenant la recherche de la phrase suivante, en utilisant notre fonction <code>recherche</code> et le mot-cl\u00e9 <code>in</code>  :</p> <pre><code>phrase = \"Mais toutes ces pens\u00e9es ne dur\u00e8rent \"\\\n\"que l'espace d'une seconde, le temps qu'il port\u00e2t \"\\\n\"la main \u00e0 son coeur, repr\u00eet sa respiration et parvint \"\\\n\"\u00e0 sourire pour dissimuler sa torture. D\u00e9j\u00e0 il recommen\u00e7ait \"\\\n\"\u00e0 poser ses questions. Car sa jalousie qui avait pris une peine \"\\\n\"qu'un ennemi ne se serait pas donn\u00e9e pour arriver \u00e0 lui faire \"\\\n\"ass\u00e9ner ce coup, \u00e0 lui faire faire la connaissance de la douleur \"\\\n\"la plus cruelle qu'il n'e\u00fbt encore jamais connue, sa jalousie ne \"\\\n\"trouvait pas qu'il eut assez souffert et cherchait \u00e0 lui faire recevoir \"\\\n\"une blessure plus profond encore.\"\n</code></pre> </li> <li> <p>Faire de m\u00eame avec la chaine <code>\"majest\u00e9 dodon\u00e9enne\"</code>.</p> </li> </ol> <p>A venir !</p> <p>Co\u00fbt de la m\u00e9thode na\u00efve</p> <p>On pose la longueur de la chaine <code>N</code> et la longueur du mot <code>n</code>.</p> <p>L'ex\u00e9cution est relativement lente, la fonction doit tester <code>N-n</code> positions dans la chaine et pour chacune effectuer jusqu'\u00e0 <code>n</code> comparaisons.</p> <p>La complexit\u00e9 de cet algorithme est donc dans le pire des cas \\(\\mathscr{O}\\left( (N-n) \\times n \\right )\\), c'est-\u00e0-dire une complexit\u00e9 quadratique. </p> <p>Nous allons voir qu'il est beaucoup plus efficace de faire la recherche \u00e0 l'envers \u00e0 partir de la fin du mot.</p>"},{"location":"NSI/Terminale/C10/BoyerMoore/#algorithme-de-boyer-moore-horspool","title":"Algorithme de Boyer-Moore-Horspool","text":""},{"location":"NSI/Terminale/C10/BoyerMoore/#presentation-et-exemples","title":"Pr\u00e9sentation et exemples","text":"<p>L'algorithme de Boyer-Moore est un algorithme de recherche de sous-cha\u00eene particuli\u00e8rement efficace. Il a \u00e9t\u00e9 d\u00e9velopp\u00e9 par Robert S. Boyer et J Strother Moore en 1977.</p> <p>Il existe une verion simplifi\u00e9e, d\u00e9velopp\u00e9e par Nigel Horspool en 1980, que nous allons pr\u00e9senter ici.</p> <p>Principes de l'algorithme</p> <ol> <li>On aligne le mot (ou motif, ou pattern en anglais) sous la chaine, en partant de la gauche.</li> <li>On compare les lettres du mots avec celles correspondantes de la chaine, mais en partant de la fin du mot (c'est contre-intuitif). Trois cas peuvent alors se produire :<ul> <li>Les lettres du mot et de la chaine correspondent, on continue alors en remontant le motif de la droite vers la gauche.</li> <li>les lettres ne correspondent pas, et la lettre de la chaine n'est pas pr\u00e9sente dans le motif. On va alors d\u00e9caler le motif vers la gauche d'un nombre de saut \u00e9gal \u00e0 sa longueur.</li> <li>les lettres ne correspondent pas, et la lettre de la chaine est pr\u00e9sente dans le motif. On va alors d\u00e9caler le motif de mani\u00e8re \u00e0 faire correspondre la lettre de la chaine \u00e0 celle du motif.</li> </ul> </li> </ol> <p>Exemple comment\u00e9</p> <p>On veut chercher le motif <code>DAB</code> dans la cha\u00eene <code>ABRACADABRA</code>. On utilisera deux compteurs :</p> <ul> <li><code>i</code> qui repr\u00e9sente la position du premier caract\u00e8re du motif par rapport \u00e0 la cha\u00eene. </li> <li><code>j</code> qui repr\u00e9sente l'indice du cracat\u00e8re du motif \u00e9tudi\u00e9.</li> </ul> 123456 <p></p> <p>Le premier caract\u00e8re du motif est plac\u00e9 \u00e0 l'indice <code>i=0</code>. On compare alors le dernier caract\u00e8re du motif, d'indice <code>j=2</code>, avec celui de la chaine d'indice <code>i+j</code>, soit 2. Ils sont diff\u00e9rents, et le caract\u00e8re de la cha\u00eene est <code>R</code>, qui n'est pas pr\u00e9sent dans le motif. On va donc d\u00e9caler le motif de sa propre longueur, soit 3, vers la droite. Ce qui signifie que son premier caract\u00e8re sera en <code>i = i+3</code>.</p> <p></p> <p>Apr\u00e8s l'\u00e9tape pr\u00e9c\u00e9dente, on a <code>i=3</code> et <code>j=2</code>, et on compare le dernier caract\u00e8re du motif, avec celui de la cha\u00eene d'indice <code>i+j</code>, soit 5. Ils diff\u00e8rent, mais le caract\u00e8re <code>A</code> en position 5 de la cha\u00eene est pr\u00e9sent dans le motif <code>DAB</code>. On va d\u00e9caler le motif d'un rang, car <code>A</code> est l'avant dernier caract\u00e8re de <code>DAB</code>. Ce qui signifie que son premier caract\u00e8re sera en <code>i = i+1</code>.</p> <p></p> <p>Apr\u00e8s l'\u00e9tape pr\u00e9c\u00e9dente, on a <code>i=4</code> et <code>j=2</code>, et on compare le dernier caract\u00e8re du motif, avec celui de la cha\u00eene d'indice <code>i+j</code>, soit 6. Ils diff\u00e8rent, mais le caract\u00e8re <code>D</code> en position 6 de la cha\u00eene est pr\u00e9sent dans le motif <code>DAB</code>. On va d\u00e9caler le motif d'un rang, car <code>D</code> est l'avant-avant-dernier caract\u00e8re de <code>DAB</code>. Ce qui signifie que son premier caract\u00e8re sera en <code>i = i+2</code>.</p> <p></p> <p>Apr\u00e8s l'\u00e9tape pr\u00e9c\u00e9dente, on a <code>i=6</code> et <code>j=2</code>, et on compare le dernier caract\u00e8re du motif, avec celui de la cha\u00eene d'indice <code>i+j</code>, soit 8. Ils sont identiques, donc on ne d\u00e9place pas le motif, mais on va le remonter vers la gauche, en d\u00e9cr\u00e9mentant de 1 la valeur de <code>j</code>.</p> <p></p> <p>Apr\u00e8s l'\u00e9tape pr\u00e9c\u00e9dente, on a <code>i=6</code> et <code>j=1</code>, et on compare l'avant-dernier caract\u00e8re du motif , avec celui de la cha\u00eene d'indice <code>i+j</code>, soit 7. Ils sont identiques, donc on ne d\u00e9place pas le motif, mais on va le remonter vers la gauche, en d\u00e9cr\u00e9mentant de 1 la valeur de <code>j</code>.</p> <p></p> <p>Apr\u00e8s l'\u00e9tape pr\u00e9c\u00e9dente, on a <code>i=6</code> et <code>j=0</code>, et on compare le premier caract\u00e8re du motif , avec celui de la cha\u00eene d'indice <code>i+j</code>, soit 6. Ils sont identiques, donc on ne d\u00e9place pas le motif, mais on va le remonter vers la gauche, en d\u00e9cr\u00e9mentant de 1 la valeur de <code>j</code>. Mais <code>j</code> devenant n\u00e9gatif, c'est qu'on a fini la comparaison, et le motif a \u00e9t\u00e9 trouv\u00e9. Il a donc suffit de faire 6 comparaisons pour trouver le motif, alors que 9 auraient \u00e9t\u00e9 n\u00e9cessaires avec la m\u00e9thode na\u00efve.</p> <p>Tester avec un autre motif</p> <p>On veut rechercher le motif <code>string</code> dans la cha\u00eene <code>stupid_spring_string</code>.</p> <ol> <li>Combien d'\u00e9tapes sont n\u00e9cessaires avec l'algorithme na\u00eff ?</li> <li>Appliquer l'algorithme de Boyer-Moore-Horspool sur cette recherche. Combien d'\u00e9tapes sont n\u00e9cessaires ?</li> </ol>"},{"location":"NSI/Terminale/C10/BoyerMoore/#codage-de-lalgorithme","title":"Codage de l'algorithme","text":"<p>Pr\u00e9-traitement du motif</p> <p>Une des cl\u00e9s de l'algorithme est de savoir de combien de pas d\u00e9placer le motif quand la lettre \u00e9tudi\u00e9e appartient au motif. Nous cr\u00e9erons donc une fonction de pr\u00e9-traitement qui renverra un dictionnaire donnant pour chaque lettre du motif (sauf la derni\u00e8re) le nombre de d\u00e9calages n\u00e9cessaires.</p> <p>Compl\u00e9ter la fonction suivante :</p> <pre><code>def pre_traitement(mot : str) -&gt; dict :\n\"\"\"Renvoie un dictionnaire avec pour cl\u00e9 la lettre et pour valeur le d\u00e9calage\"\"\"\n    n = len(mot)\n    d\u00e9calages = {}\n    for i, letter in enumerate(...):\n        d\u00e9calages[letter] = ...\n    return d\u00e9calages\n\n# tests\nassert pre_traitement(\"dab\") == {'d': 2, 'a': 1}\nassert pre_traitement(\"maman\") == {'m': 2, 'a': 1}\n</code></pre> <p>Recherche Boyer-Moore-Horspool</p> <p>Compl\u00e9ter la fonction suivante (on se servira des assertions comme tests) :</p> <p></p>###Lancerassert recherchepy-undBMH('abracadabra', 'dab')bksl-nlassert recherchepy-undBMH('abracadabra', 'abra')bksl-nlassert recherchepy-undBMH('abracadabra', 'obra') is Falsebksl-nlassert recherchepy-undBMH('abracadabra', 'bara') is Falsebksl-nlassert recherchepy-undBMH('maman est l\u00e0', 'maman')bksl-nlassert recherchepy-undBMH('bonjour maman', 'maman')bksl-nlassert recherchepy-undBMH('bonjour maman', 'papa') is Falsebksl-nlbksl-nl Valider                5/5                T\u00e9l\u00e9chargerT\u00e9l\u00e9verser RechargerSauvegarderdef recherchepy-undBMH(mot : str, chaine : str) -&gt; bool :bksl-nl    N = len(chaine)bksl-nl    n = len(mot)bksl-nl    i = 0bksl-nl    j = ...bksl-nl    while i&lt;... and j&gt;... :bksl-nl        ...        bksl-nl    return Falsebksl-nlbksl-nldef recherchepy-undBMH(mot : str, chaine : str) -&gt; bool :bksl-nl    N = len(chaine)bksl-nl    n = len(mot)bksl-nl    i = 0bksl-nl    j = ...bksl-nl    while i&lt;... and j&gt;... :bksl-nl        ...bksl-nl        bksl-nl    return Falsebksl-nlbksl-nl <pre><code>def recherche_BMH(mot : str, chaine : str) -&gt; bool :\n    N = len(chaine)\n    n = len(mot)\n    i = 0\n    j = ...\n    while i&lt;... and j&gt;... :\n        ...\n\n    return False\n\nassert recherche_BMH('abracadabra', 'dab')\nassert recherche_BMH('abracadabra', 'abra')\nassert recherche_BMH('abracadabra', 'obra') is False\nassert recherche_BMH('abracadabra', 'bara') is False\nassert recherche_BMH('maman est l\u00e0', 'maman')\nassert recherche_BMH('bonjour maman', 'maman')\nassert recherche_BMH('bonjour maman', 'papa') is False\n</code></pre>"},{"location":"NSI/Terminale/C11/Securisation/","title":"S\u00e9curisation des communications","text":""},{"location":"NSI/Terminale/C11/Securisation/#securisation-des-communications","title":"S\u00e9curisation des communications","text":""},{"location":"NSI/Terminale/C11/Securisation/#rappels-communication-sur-internet","title":"Rappels : communication sur internet","text":"<p>Que se passe-t-il lorsque nous tapons dans la barre d'adresse de Firefox une URL, telle que <code>http://www.zonensi.fr/</code> ? Entre le cours de SNT de seconde, et celui de NSI, nous pouvons d\u00e9crire l'enchainement des communications ainsi :</p> <ol> <li>L'URL est d\u00e9cod\u00e9e par le navigateur, qui isole :<ul> <li>le protocole utilis\u00e9 : <code>HTTP</code></li> <li>le nom de domaine : <code>www.zonensi.fr</code></li> <li>le chemin vers la ressource : <code>/</code>, la racine du site.</li> </ul> </li> <li>Le navigateur effectue une r\u00e9solution de nom, soit en se connectant \u00e0 un serveur <code>DNS</code>, soit dans son propre cache <code>DNS</code>, ce qui lui donne l'adresse <code>IP</code> de la ressource cherch\u00e9e.</li> <li> <p>Le navigateur peut \u00e9tablir une connexion <code>TCP</code> vers l'adresse <code>IP</code>, via un handshaking en trois temps, comme montr\u00e9 sur l'image ci-dessous :</p> <p></p> </li> <li> <p>Une fois la connexion \u00e9tablie, client et serveur \u00e9changent des donn\u00e9es en utilisant le protocole <code>HTTP</code>, tout en d\u00e9coupant les donn\u00e9es en paquets <code>TCP</code>, eux-m\u00eames encapsul\u00e9s dans des paquets <code>IP</code> (on pourra se rappeler du mod\u00e8le <code>OSI</code>).</p> <p></p> </li> <li> <p>Les paquets sont transmis de routeurs en routeurs, en \u00e9tant \u00e0 chaque fois d\u00e9sencapsul\u00e9s pour inscrire l'adresse <code>IP</code> du prochain routeur.</p> <p></p> </li> </ol> <p>Des limites</p> <p>Ce syst\u00e8me, en place depuis l'invention de <code>TCP/IP</code> dans les ann\u00e9es 1970, a vu l'int\u00e9gration de chaque nouveau protocole (<code>FTP</code>, <code>SMTP</code>, etc) au sein de la couche application. Mais avec la d\u00e9mocratisation d'Internet, des probl\u00e8mes sont rapidement apparus : si on utilise tel quel le mod\u00e8le \u00e9crit ci-dessus pour effectuer des op\u00e9rations bancaires ou \u00e9changer des donn\u00e9es confidentielles, on se rend compte qu'un grand nombre d'interm\u00e9diaires (en particulier les routeurs) sont en possibilit\u00e9 de lire les donn\u00e9es transmises.</p> <p>On souhaite donc s\u00e9curiser les connexions afin que seul l'\u00e9metteur et le destinataire puissent avoir connaissance du contenu. D'o\u00f9 un questionnement sur trois aspects :</p> <ul> <li>Comment chiffrer le contenu des communications afin qu'elles ne soient lisibles que par la source et la destination (garantie de confidentialit\u00e9) ?</li> <li>Comment garantir que le serveur auquel on se connecte est bien celui auquel on pense se connecter (garantie d'authenticit\u00e9) ?</li> <li>Comment s'assurer que le message transmis n'a pas \u00e9t\u00e9 modifi\u00e9 par un tiers (garantie d'int\u00e9grit\u00e9) ?</li> </ul> <p>Le tout devant bien entendu se faire dans le cadre d'une communication en utilisant l'infrastructure d'Internet, \u00e0 savoir les communications <code>TCP/IP</code> ?</p>"},{"location":"NSI/Terminale/C11/Securisation/#quelques-definitions-necessaires","title":"Quelques d\u00e9finitions n\u00e9cessaires","text":"<p>Coder/D\u00e9coder</p> <p> Coder, c'est repr\u00e9senter l'information par un ensemble de signes pr\u00e9d\u00e9finis. D\u00e9coder, c'est interpr\u00e9ter un ensemble de signes pour en extraire l'information qu'ils repr\u00e9sentent. </p> <p>Coder et d\u00e9coder s'emploient lorsqu'il n'y a pas de secret. Par exemple on peut coder/d\u00e9coder des entiers relatifs par une suite de bits par un \u00abcodage en compl\u00e9ment \u00e0 deux\u00bb.</p> <p>Cryptographie</p> <p>La cryptographie est une discipline veillant \u00e0 prot\u00e9ger des messages (pour en assurer la confidentialit\u00e9, l'authenticit\u00e9 et l'int\u00e9grit\u00e9), par l'interm\u00e9diaire de cl\u00e9s de chiffrements.</p> <p>La cryptographie est utilis\u00e9e depuis au moins l'antiquit\u00e9.</p> <p>Son pendant est la cryptanalyse, qui est la technique qui consiste \u00e0 d\u00e9duire un texte en clair d\u2019un texte chiffr\u00e9 sans poss\u00e9der la cl\u00e9 de chiffrement. Le processus par lequel on tente de comprendre un message en particulier est appel\u00e9 une attaque.</p> <p>Chiffrer un message, c'est rendre une suite de symboles incompr\u00e9hensible au moyen d'une cl\u00e9 de chiffrement.</p> <p>D\u00e9chiffrer ou d\u00e9crypter, c'est retrouver la suite de symboles originale \u00e0 partir du message chiffr\u00e9. On utilise d\u00e9chiffrer quand on utilise la cl\u00e9 de chiffrement pour r\u00e9cup\u00e9rer le texte original, et d\u00e9crypter lorsqu'on arrive \u00e0 retrouver le message original sans connaitre la cl\u00e9 de chiffrement.</p>"},{"location":"NSI/Terminale/C11/Securisation/#cryptographie-symetrique","title":"Cryptographie sym\u00e9trique","text":"<p>Cryptographie sym\u00e9trique</p> <p>On parle de cryptographie sym\u00e9trique lorsque la m\u00eame cl\u00e9 est utilis\u00e9e pour chiffrer et d\u00e9chiffrer un message.</p>"},{"location":"NSI/Terminale/C11/Securisation/#code-de-cesar","title":"Code de C\u00e9sar","text":"<p>Le code (ou chiffre) de C\u00e9sar : chiffrement par d\u00e9calage</p> <p>Le chiffre de C\u00e9sar est une m\u00e9thode de chiffrement tr\u00e8s simple utilis\u00e9e par Jules C\u00e9sar dans ses correspondances secr\u00e8tes (ce qui explique le nom \u00ab chiffre de C\u00e9sar \u00bb). </p> <p>Le texte chiffr\u00e9 est obtenu en rempla\u00e7ant chaque lettre du texte original par une lettre obtenue par un d\u00e9calage \u00e0 distance fixe, toujours du m\u00eame c\u00f4t\u00e9, dans l'ordre de l'alphabet. </p> <p></p> <p>On a ainsi, pour un chiffre de C\u00e9sar avec un cl\u00e9 de 3, les correspondances suivantes :</p> <pre><code>&gt;&gt;&gt; alphabet_clair = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n&gt;&gt;&gt; alphabet_chiff = \"DEFGHIJKLMNOPQRSTUVWXYZABC\"\n</code></pre> <p>Exercice</p> <p>Afin de pouvoir chiffrer un message avec le code de C\u00e9sar, il faut avoir un texte ne comportant que des lettres majuscules de l'alphabet latin, donc nettoyer le texte de tous les accents, espaces, signes de ponctuation, etc. </p> <ol> <li>Cr\u00e9er une fonction <code>formate_texte(texte : str) -&gt; str</code> qui prend en argument un texte non format\u00e9, et renvoie le texte sans accents, sans signes de ponctuations ni espaces, et en majuscule</li> <li>Cr\u00e9er alors une fonction <code>code_Cesar(texte :str, cle : int) -&gt; texte</code> qui renvoie le chiffre de C\u00e9sar d'un texte qui lui est pass\u00e9 en argument, avec une cl\u00e9 sous la forme d'un entier entre 1 et 26 qui repr\u00e9sente le d\u00e9calage devant \u00eatre obtenu. On rappelle les \u00e9l\u00e9ments suivants :</li> </ol> <pre><code>&gt;&gt;&gt; ord('A')\n65\n&gt;&gt; chr(66)\n'B'\n&gt;&gt;&gt; chr(((ord('Z')-65)+3)%26+65)\n'C'\n</code></pre> <p>Cryptanalyse d'un chiffre de C\u00e9sar</p> Enonc\u00e9Attaque par force bruteAttaque par analyse de fr\u00e9quences <p>Proposer un texte long chiffr\u00e9 au professeur. Combien de temps va-t-il mettre pour d\u00e9crypter celui-ci ?</p> <p>Une attaque par force brute consiste \u00e0 attaquer en testant toutes les possibilit\u00e9s. Avec le chiffre de C\u00e9sar, il n'existe que 26 cl\u00e9s diff\u00e9rentes, la m\u00e9thode par force brute est donc particuli\u00e8rement adapt\u00e9e, m\u00eame dans le cas d'un texte long.</p> <pre><code>def brute_force_Cesar(texte : str) -&gt; str :\n    decrypte = []\n    for k in range(1,26) :\n        decrypte.append(code_Cesar(texte, k))\n    return decrypte\n</code></pre> <p>Une \u00e9tude des textes \u00e9crits en fran\u00e7ais montre que la lettre la plus fr\u00e9quemment utilis\u00e9e est \u00abE\u00bb (minuscule ou majuscule). Si on sait que le texte est \u00e9crit en fran\u00e7ais, il est probable que la lettre la plus fr\u00e9quente dans le code de C\u00e9sar soit celle qui remplace le \u00abE\u00bb. Il est alors possible de tester en premier la cl\u00e9 correspondant \u00e0 ce d\u00e9calage.</p> <pre><code>def get_freq_texte(texte : str) -&gt; dict :\n    dico = dict()\n    for letter in texte :\n        if letter in dico :\n            dico[letter] += 1\n        else :\n            dico[letter] = 1\n    return dico\n\ndef attaque_Cesar_analyse_frequence(texte : str) -&gt; str:\n    dico = get_freq_texte(texte)\n    max_dico = []\n    maxi = 0\n    for letter in dico :\n        if dico[letter]&gt; maxi :\n            max_dico=[letter]\n            maxi = dico[letter]\n        elif dico[letter] == maxi :\n            max_dico.append(letter)\n    possible_keys = [ord(k)-ord('E') for k in max_dico]\n    possible_texts = [ f\"Cl\u00e9 {k} :\\n\\n\"+code_Cesar(crypto, 26-k) for k in possible_keys]\n    return possible_texts\n</code></pre> Chiffre de Vigen\u00e8re <p>Le chiffre de C\u00e9sar est donc tr\u00e8s facilement d\u00e9chiffrable, comme tout chiffrement monoalphab\u00e9tique (o\u00f9 une lettre est toujours remplac\u00e9e par le m\u00eame symbole). Il existe d'autres m\u00e9thodes de chiffrement par substitution, dits polyalphab\u00e9tiques, pour lesquels la m\u00eame lettre n'est pas forc\u00e9ment toujours remplac\u00e9e par le m\u00eame symbole, tels que le chiffre de Vigen\u00e8re. Cependant de telles m\u00e9thodes ne r\u00e9siste pas forc\u00e9ment \u00e0 des attaques par analyse de fr\u00e9quences.</p>"},{"location":"NSI/Terminale/C11/Securisation/#chiffrement-xor","title":"Chiffrement XOR","text":"<p>XOR ( OU exclusif)</p> <p>L'op\u00e9rateur binaire <code>XOR</code>, o\u00f9 OU Exclusif, not\u00e9 \\(\\oplus\\), est un op\u00e9rateur dont la table de v\u00e9rit\u00e9 est :</p> \\[\\begin{array}{|c|c|c|} \\hline \\oplus &amp; 0 &amp; 1\\\\\\hline 0 &amp; 0 &amp; 1 \\\\\\hline 1 &amp; 1 &amp; 0 \\\\\\hline \\end{array} \\] <p>L'op\u00e9rateur XOR, en plus d'\u00eatre commutatitf (\\(A\\oplus B = B \\oplus A\\)) poss\u00e8de la propri\u00e9t\u00e9 de r\u00e9versibilit\u00e9, ce qui signifie que si \\(A \\oplus B = C\\), alors on a les \u00e9galit\u00e9s suivantes :</p> <ul> <li>\\(A \\oplus C = B\\)</li> <li>\\(B \\oplus C = A\\)</li> </ul> <p>Chiffrement XOR</p> <p>\u00c9tant donn\u00e9 un message, par exemple \u00abUN MESSAGE TR\u00c8S SECRET\u00bb, et une cl\u00e9 de chiffrement, par exemple \u00abNSI\u00bb, on recopie plusieurs fois la cl\u00e9 sous le message :</p> <p></p><pre><code>UN MESSAGE TR\u00c8S SECRET\nNSINSINSINSINSINSINSIN\n</code></pre> Chaque caract\u00e8re du message est associ\u00e9 \u00e0 une valeur num\u00e9rique enti\u00e8re (par exemple son Unicode) : <pre><code>85 78 32 77 69 83 83 65 71 69 32 84 82 200 83 32 83 69 67 82 69 84\n78 83 73 78 83 73 78 83 73 78 83 73 78  83 73 78 83 73 78 83 73 78\n</code></pre> <p>On effectue ensuite l'op\u00e9ration \\(\\oplus\\) entre chaque nombre du message et de la cl\u00e9. par exemple pour le premier caract\u00e8re :</p> \\[ \\begin{array}{cccccccccr}   &amp;0&amp;1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1&amp;&amp;85\\\\ \\oplus&amp;0&amp;1&amp;0&amp;0&amp;1&amp;1&amp;1&amp;0&amp;&amp;78\\\\\\hline &amp;0&amp;0&amp;0&amp;1&amp;1&amp;0&amp;1&amp;1&amp;&amp;27 \\end{array} \\] <p>Le code obtenu dans notre exemple est donc :</p> <pre><code>27 29 105 3 22 26 29 18 14 11 115 29 28 155 26 110 0 12 13 1 12 26\n</code></pre> <p>L'op\u00e9rateur \\(\\oplus\\) \u00e9tant r\u00e9versible, la r\u00e9it\u00e9ration de l'op\u00e9ration sur le message chiffr\u00e9 rendra le message original.</p> <p>Chiffr\u00e9/d\u00e9chiffr\u00e9</p> <ol> <li>Cr\u00e9er une fonction <code>get_unicode(chaine : str) -&gt; list</code> qui prend en argument une chaine de caract\u00e8re et renvoie la liste des codes unicode correspondant aux caract\u00e8res.</li> <li>Cr\u00e9er une fonction <code>get_string(liste : list) -&gt; str</code> qui fait l'op\u00e9ration inverse de la fonction <code>get_unicode</code>.</li> <li> <p>Cr\u00e9er une fonction <code>chiffre_XOR(texte : list, cle : list) -&gt; list</code> qui renvoie une liste de valeurs enti\u00e8res correspondant \u00e0 l'application d'un <code>XOR</code> sur chacun des valeurs des deux listes <code>texte</code> et <code>cle</code>.</p> <p>Indications :</p> <ul> <li> <p>l'op\u00e9rateur \\(\\oplus\\) en python s'\u00e9crit de la mani\u00e8re suivante :</p> <pre><code>&gt;&gt; 85 ^ 78\n27\n</code></pre> </li> <li> <p>Il n'est pas n\u00e9cessaire de cr\u00e9er une liste de la m\u00eame longueur que le texte avec la cl\u00e9. Une utilisation judicieuse de l'op\u00e9ration modulo doit vous permettre de vous en sortir.</p> </li> </ul> </li> <li> <p>V\u00e9rifiez que la fonction <code>chiffre_XOR</code> permet bien de chiffrer/d\u00e9chiffrer un texte avec une cl\u00e9 donn\u00e9e.</p> </li> </ol> <p>Les caract\u00e9ristiques de l'op\u00e9rateur <code>XOR</code>, et le fait qu'il puisse \u00eatre impl\u00e9ment\u00e9 directement dans le processeur, font qu'il est souvent utilis\u00e9 dans les algorithmes de chiffrement modernes, comme AES ou ChaCha20. Bien s\u00fbr ces algorithmes sont nettement plus complexes que la m\u00e9thode na\u00efve que nous avons utilis\u00e9e, mais leurs principes reposent sur des fonctionnements similaires.</p> <p>En plus d'\u00eatre relativement s\u00fbrs (voir ci-dessous), ces algorithmes sont tr\u00e8s efficaces et permettent de chiffrer tr\u00e8s rapidement. On peut ainsi chiffrer en direct des communications audio ou vid\u00e9o en temps r\u00e9el.</p> <p>Cryptanalyse : attention \u00e0 la longueur de la cl\u00e9 !</p> <p>Une cl\u00e9 trop courte peut compromettre la s\u00e9curit\u00e9 des donn\u00e9es : dans le cas o\u00f9 un mot du message peut-\u00eatre envisag\u00e9, et o\u00f9 la cl\u00e9 est de taille raisonnable (en pratique dans le code suivant, de taille maximale de 4), il est tout \u00e0 fait possible de faire une attaque par force brute :</p> <pre><code>def all_possible(length : int) :\n\"\"\" cr\u00e9e une liste de toutes les cl\u00e9s possible de longueur donn\u00e9e\"\"\"\n    if length ==0 :\n        return ['']\n    poss = []\n    disp = all_possible(length-1)\n    for uni in range(65, 65+26) :\n        for d in disp :\n            poss.append(chr(uni)+d)\n    return poss\n\ndef cryptanalyse_XOR(chiffre : list, contain : str, taille_cle : int) :\n\"\"\" renvoie les cl\u00e9s possibles qui trouvent la chaine contain dans le code chiffre, en testant toutes les cl\u00e9s possibles de taille taille_cle\"\"\"\n    poss_keys = []\n    for k in all_possible(taille_cle) :\n        decode = get_string(chiffre_XOR(chiffre, get_unicode(k)))\n        if contain in decode :\n            poss_keys.append(k)\n    return poss_keys\n</code></pre> <p>Un point sur les mots de passe : entropie de Shannon</p> <p>En informatique, la robustesse d'un mot de passe al\u00e9atoire est exprim\u00e9e en terme d'entropie de Shannon, mesur\u00e9e en bits. </p> <p>D'apr\u00e8s wikipedia, \u00ab au lieu de mesurer la robustesse par le nombre de combinaisons de caract\u00e8res qu'il faut tester pour trouver le mot de passe avec certitude, on utilise le logarithme en base 2 de ce nombre. Cette mesure est appel\u00e9e l'entropie du mot de passe. Un mot de passe avec une entropie de 42 bits calcul\u00e9e de la sorte serait aussi robuste qu'une chaine de 42 bits choisie au hasard.</p> <p>En d'autres termes, un mot de passe de 42 bits de robustesse ne serait bris\u00e9 de fa\u00e7on certaine qu'apr\u00e8s \\(2^{42} = 4 398 046 511 104\\) tentatives lors d'une attaque par force brute. L'ajout d'un bit d'entropie \u00e0 un mot de passe double le nombre de tentatives requises, ce qui rend la t\u00e2che de l'attaquant deux fois plus difficile.\u00bb</p> <p>L'entropie d'un mot de passe de taille \\(L\\) utilisant des caract\u00e8res parmi \\(N\\) possibilit\u00e9s aura une entropie \\(H\\) calcul\u00e9e de la mani\u00e8re suivante :</p> \\[ H = L.\\log_2(N) = L. \\cfrac{\\ln(N)}{\\ln(2)}\\] <p>Ce qui donne les r\u00e9sultats suivants :</p> Nombre de symboles A-Z (26) a-zA-Z(52) a-zA-Z0-9 (62) a-zA-Z0-9,;:!... (95) 6 caract\u00e8res 28 34 35 39 10 caract\u00e8res 47 57 59 66 12 caract\u00e8res 56 68 71 79 20 caract\u00e8res 94 114 119 131 <p>On constate donc qu'un mot de passe de 10 caract\u00e8res latin majuscules est plus \u00abr\u00e9sistant\u00bb qu'un mot de passe de 6 caract\u00e8res utilisant n'importe quel symbole du clavier fran\u00e7ais... Cela signifie que le nombre de caract\u00e8re est nettement plus important que la diversit\u00e9 de ceux-ci. On peut le voir gr\u00e2ce au tableau suivant :</p> <p></p> <p>Vous pouvez calculer l'entropie de vos mots de passe sur le site suivant.</p> <p>Gardez toutefois en t\u00eate que la s\u00e9curit\u00e9 est maximale lorsque vous utilisez des mots de passe al\u00e9atoires de longueur suffisante, utilisant le maximum de caract\u00e8res, et diff\u00e9rents pour chaque site. Pour aider \u00e0 retenir tous ces mots de passe, l'utilisation d'un gestionnaire de mots de passe, tel que Cozy Pass est n\u00e9cessaire. celui-ci peut-\u00eatre prot\u00e9g\u00e9 gr\u00e2ce \u00e0 une Pass-Phrase, c'est \u00e0 dire une phrase compos\u00e9e de mots (al\u00e9atoires de pr\u00e9f\u00e9rence), garantissant une grande difficult\u00e9 de d\u00e9cryptage.</p> <p>Et le mot de la fin sera pour xkcd</p> <p></p>"},{"location":"NSI/Terminale/C11/Securisation/#cryptographie-asymetrique","title":"Cryptographie asym\u00e9trique","text":"<p>Le gros probl\u00e8me des cryptographies sym\u00e9triques est le suivant : les deux protagonistes de l'\u00e9change doivent connaitre la cl\u00e9, et donc se l'\u00e9changer. Or ils n'ont pas de moyens de communications s\u00e9curis\u00e9s pour l'instant. Il leur reste donc deux solutions :</p> <ul> <li>soit ils \u00e9changent la cl\u00e9 par un moyen de communication non s\u00e9curis\u00e9, comme des mails ou du courrier, mais un attaquant pourrait alors s'emparer de la cl\u00e9 et compromettre la s\u00fbret\u00e9 des communications futures ;</li> <li>soit ils \u00e9changent la cl\u00e9 par un moyen plus s\u00fbr, mais moins pratique (sur un pont isol\u00e9 par une nuit sans lune dans une mallette menott\u00e9e au poignet, comme dans les films noirs des ann\u00e9es 1950).</li> </ul> <p>Pour r\u00e9soudre ce probl\u00e8me, les scientifiques am\u00e9ricains et britanniques dans les ann\u00e9es 1970, puis la recherche acad\u00e9mique publique, se sont tourn\u00e9s vers la cryptographie asym\u00e9trique. Il s'agit de m\u00e9thodes utilisant des techniques de math\u00e9matiques avanc\u00e9es, dont on ne pr\u00e9sentera pas ici les v\u00e9ritables tenants et aboutissants. On peut cependant pr\u00e9senter quelques m\u00e9thodes et en expliquer sommairement le fonctionnement.</p>"},{"location":"NSI/Terminale/C11/Securisation/#les-puzzles-de-merkle","title":"Les puzzles de Merkle","text":"<p>La m\u00e9thode du puzzle de Merkle, cr\u00e9\u00e9 en 1974 et pour la premi\u00e8re fois publi\u00e9e en 1978, est la premi\u00e8re m\u00e9thode de chiffrement asym\u00e9trique (non top secr\u00e8te) \u00e0 cl\u00e9 publique.</p> <p>D\u00e9roul\u00e9 d'un \u00e9change</p> <p>Voici les \u00e9tapes de la m\u00e9thode des puzzles de Merkle, qui permette \u00e0 Alice et Bob d'\u00e9changer des messages sans qu'Eve (diminutif de eavesdropper, ou oreille indiscr\u00e8te, espion) puisse d\u00e9crypter les messages :</p> Etape 1Etape 2Etape 3Et Eve ? <p>Alice g\u00e9n\u00e8re un fichier de tr\u00e8s grande taille, par exemple 100 000 lignes, o\u00f9 chaque ligne consiste en un identifiant unique et une cl\u00e9 de longueur suffisante :</p> <pre><code>...\nId : 345768 Key : p(;;9a\"ZMBz53P&lt;6C5Q3\nId : 768453 Key : 8uQw(;e3SRHaN=]QsFp%\nId : 108943 Key : &gt;ye5JH@%,%%J6&lt;FsGWE,\n...\n</code></pre> <p>Elle crypte ce fichier avec un chiffre <code>XOR</code>, mais en respectant les consignes suivantes :</p> <ul> <li>chaque ligne est chiffr\u00e9e avec une cl\u00e9 diff\u00e9rente ;</li> <li>les cl\u00e9s utilis\u00e9es sont de petites tailles.</li> </ul> <p>Elle transmet ensuite le fichier \u00e0 Bob.</p> <p>Le fichier est probablement intercept\u00e9 par Eve.</p> <p>Bob re\u00e7oit le message chiffr\u00e9 d'Alice. Il choisit au hasard une des lignes, et l'attaque par force brute. Comme la cl\u00e9 utilis\u00e9e est de petite taille, l'attaque est possible en un temps raisonnable, disons 10 minutes.</p> <p>Bob r\u00e9cup\u00e8re donc une ligne avec un identifiant et une cl\u00e9.</p> <p></p><pre><code>Id : 768453 Key : 8uQw(;e3SRHaN=]QsFp%\n</code></pre> Bob transmet alors en clair l'identifiant <code>768453</code> \u00e0 Alice. <p>Eve intercepte probalement cet identifiant.</p> <p>Alice regarde dans son fichier non crypt\u00e9 la cl\u00e9 correspondant \u00e0 l'identifiant transmis : <code>8uQw(;e3SRHaN=]QsFp%</code>. Avec cette cl\u00e9, la communication s'engage entre Alice et Bob en utilisant un chiffrement sym\u00e9trique.</p> <p>A aucun moment la cl\u00e9 n'a \u00e9t\u00e9 transmise en clair entre les deux protagonistes, qui n'ont pas eu besoin de se rencontrer non plus pour entamer une communication s\u00e9curis\u00e9e.</p> <p>Eve a donc en sa possession un fichier crypt\u00e9 de 100 000 lignes, et un identifiant en clair. Mais pour faire correspondre cet identifiant \u00e0 une cl\u00e9, il faut qu'elle d\u00e9crypte par force brute chacune des lignes du fichier jusqu'\u00e0 trouver le bon identifiant. Pour d\u00e9crypter la totalit\u00e9 du fichier, il lui faudra donc 100 000 fois 10 minutes, soit pr\u00e8s de 12 jours. Donc, en moyenne, Alice et Bob peuvent communiquer sereinement pendant 6 jours avec la m\u00eame cl\u00e9.</p>"},{"location":"NSI/Terminale/C11/Securisation/#methode-de-diffie-hellman","title":"M\u00e9thode de Diffie-Hellman","text":"<p>La m\u00e9thode des puzzle de Merkle, bien que novatrice pour son \u00e9poque, n'est plus jug\u00e9e suffisante de nos jours pour garantir une v\u00e9ritable s\u00e9curit\u00e9. Cependant elle a pos\u00e9 les bases d'autres m\u00e9thodes, comme la m\u00e9thode de Diffie-Helman, propos\u00e9e en 1974 par les cryptologues am\u00e9ricains Bailey W. Diffie et Martin Hellman.</p> <p>Cette m\u00e9thode repose sur l'utilisation d'une fonction math\u00e9matique \u00e0 deux variables. Cette fonction, souvent nomm\u00e9e \\(M\\) (pour \u00abm\u00e9lange\u00bb), doit respecter les propri\u00e9t\u00e9s suivantes :</p> <ol> <li>\\(M\\) est connue, ce qui signifie qu'on connait l'algorithme ou la formule qui permet de calculer des images (toutes les fonctions ne sont pas calculables, voir th\u00e9orie de la calculabilit\u00e9).</li> <li>Si on connait \\(M(x;y)\\) et \\(x\\), il doit \u00eatre tr\u00e8s difficile de retrouver \\(y\\). Par difficile, on entend le fait que pour trouver le \\(y\\) donnant \u00e0 \\(M(x;y)\\) une valeur donn\u00e9e, il faudra essayer sur tous les entiers \\(y\\) possibles.</li> <li>Pour tous entiers \\(x, y\\) et \\(z\\), on a \\(M(M(x;y);z) = M(M(x;z);y)\\), autrement dit \\(y\\) et \\(z\\) sont commutables.</li> </ol> <p>Une analogie couramment utilis\u00e9e pour expliquer le fonctionnement de  cette fonction \\(M\\) est celle des pots de peinture :</p> <p>Pots de Peintures</p> <p>Les images suivantes ont \u00e9t\u00e9 extraites et modifi\u00e9es depuis Id\u00e9e originale\u00a0: A.J. Han VinckVersion vectorielle\u00a0: Flugaal Traduction\u00a0: Dereckson, Public domain, via Wikimedia Commons</p> Etape 1Etape 2Etape 3Etape 4Etape 5Et Eve ? <p>On dispose d'un tr\u00e8s grand nombre de pots de peinture de couleurs diff\u00e9rentes. Alice et Bob se mettent d'accord pour choisir une couleur commune \\(x\\), qui sera \u00abpublique\u00bb, puisqu'elle peut \u00eatre intercept\u00e9e.</p> <p></p> <p>Alice et Bob choisissent alors chacun une couleur, respectivement \\(y\\) et \\(z\\), qui resteront priv\u00e9es et secr\u00e8tes et ne seront jamais \u00e9chang\u00e9es.</p> <p></p> <p>Alice et Bob \u00e9laborent alors leurs m\u00e9langes, en utilisant la couleur commune et leur propre couleur priv\u00e9e. </p> <p></p> <p>Alice et Bob \u00e9changent en clair leurs m\u00e9langes respectifs, qui peuvent donc \u00eatre intercept\u00e9s.</p> <p></p> <p>Alice et Bob ajoutent alors au m\u00e9lange qu'ils ont re\u00e7u leur couleur secr\u00e8te. La fonction de m\u00e9lange est construite afin que les mix obtenus par Alice et Bob soient identiques. Ils ont ainsi une \u00abcouleur\u00bb commune secr\u00e8te, qui peut alors leur permettre d'effectuer des \u00e9changes via un cryptage sym\u00e9trique.</p> <p></p> <p>Eve peut connaitre trois choses : la couleur commune, et chacun des mix ayant circul\u00e9 en clair. Pour autant, la fonction de m\u00e9lange est faite de telle mani\u00e8re qu'il soit extr\u00eamement long et difficile d'extraire les couleurs secr\u00e8tes m\u00eame si la couleur commune est connue. </p> <p>Par ailleurs, m\u00eame en m\u00e9langeant les deux mix obtenus, on n'obtiendra pas la m\u00eame couleur que celle obtenue par ALice et Bob, puisque la couleur commune sera deux fois plus pr\u00e9sente.</p> <p></p> <p>Le protocole d'\u00e9change de cl\u00e9 de Diffie-Hellman propose donc une mani\u00e8re \u00e9l\u00e9gante de r\u00e9gler le probl\u00e8me d'\u00e9change de cl\u00e9 pos\u00e9 par le chiffrement sym\u00e9trique. Cependant, un probl\u00e8me reste \u00e0 r\u00e9gler, il s'agit du probl\u00e8me de l'authentification : la suret\u00e9 des communications d\u00e9pend essentiellement sur le fait qu'Alice et Bob soient certains de communiquer avec la bonne personne.</p> <p>Attaque de l'homme du milieu</p> <p>Imaginons qu'Eve ne se contente pas d'intercepter la couleur commune, mais qu'elle se fasse passer pour Bob aupr\u00e8s d'Alice, et d'Alice aupr\u00e8s de Bob. Eve peut alors choisir une couleur commune avec Alice, et une autre avec Bob. Le protocole d'\u00e9change se poursuit normalement, mais Eve intercepte et d\u00e9code chaque message transmis, avant de le retransmettre \u00e0 son tour, modifi\u00e9 ou non :</p> <p></p> <p>Une telle technique s'appelle une attaque de l'homme du milieu, ou man in the middle attack, souvent abr\u00e9g\u00e9e en MITM.</p>"},{"location":"NSI/Terminale/C11/Securisation/#cryptage-rsa","title":"Cryptage RSA","text":"<p>Syst\u00e8me RSA</p> <p>Le syst\u00e8me RSA est un syst\u00e8me de chiffrement asym\u00e9trique bas\u00e9 sur des paires de cl\u00e9s publiques et priv\u00e9es, pour la premi\u00e8re fois publi\u00e9 en 1978. Son nom provient des initiales de ses trois inventeurs : Ron Rivest, Adi Shamir et Len Adelman. </p> <p>Les math\u00e9matiques derri\u00e8re le syst\u00e8me RSA utilisent entre autres les congruences sur les entiers et le petit th\u00e9or\u00e8me de Fermat. Tous les calculs se font modulo un nombre entier \\(n\\) qui est le produit de deux nombres premiers, en g\u00e9n\u00e9ral tr\u00e8s grands, car les messages clairs et chiffr\u00e9s sont des entiers inf\u00e9rieurs \u00e0 l'entier \\(n\\). Les op\u00e9rations de chiffrement et de d\u00e9chiffrement consistent \u00e0 \u00e9lever le message \u00e0 une certaine puissance modulo \\(n\\), ce qui donne des calculs tr\u00e8s couteux.</p> <p>Globalement, le syst\u00e8me consiste en la mise en place d'une paire de cl\u00e9s publiques et priv\u00e9es pour chaque participant :</p> <ul> <li>Alice poss\u00e8de une cl\u00e9 \\(K_A^{pub}\\) et une cl\u00e9 priv\u00e9e \\(K_A^{pri}\\).</li> <li>Bob poss\u00e8de une cl\u00e9 \\(K_B^{pub}\\) et une cl\u00e9 priv\u00e9e \\(K_B^{pri}\\).</li> </ul> <p>On notera \\(K_P^x(m)\\) le fait de chiffrer un message avec la cl\u00e9 \\(x\\) de la personne \\(P\\).</p> <p>La mani\u00e8re exacte de cr\u00e9er ces cl\u00e9s est complexe, mais l'essentiel est de comprendre que l'utilisation des deux cl\u00e9s d'une personne permet de d\u00e9chiffrer un message. Par exemple pour Alice :</p> \\[K_A^{pub}\\left(K_A^{pri}(m)\\right) = K_A^{pri}\\left(K_A^{pub}(m)\\right) = m\\] <p>Ce qui signifie qu'un message chiffr\u00e9 avec la cl\u00e9 publique d'Alice peut \u00eatre d\u00e9chiffrer avec sa cl\u00e9 priv\u00e9e, et r\u00e9ciproquement.</p> <p>D'autre part, les propri\u00e9t\u00e9s des cl\u00e9s font que :</p> <ul> <li>il est impossible en connaissant \\(K_A^{pub}\\) de deviner \\(K_A^{pri}\\) ;</li> <li>il est impossible en connaissant \\(K_A^{pub}(m)\\) ou \\(K_A^{pri}(m)\\) de deviner \\(m\\).</li> </ul> <p>Fonctionnement d'une communication</p> <p>Si Bob veut envoyer un message secret \u00e0 Alice, les deux proc\u00e8dent comme suit :</p> <ol> <li>Alice met \u00e0 disposition sa cl\u00e9 publique \\(K_A^{pub}\\), en la mettant par exemple sur son site web ou en l'envoyant par mail.</li> <li>Bob chiffre son message \\(m\\) avec la cl\u00e9 publique d'Alice et envoie le r\u00e9sultat \\(K_A^{pub}(m)\\) \u00e0 Alice.</li> <li>Alice applique sa cl\u00e9 priv\u00e9e sur le message re\u00e7u \\(K_A^{pri}\\left(K_A^{pub}(m)\\right) = m\\), et d\u00e9chiffre ainsi le message de Bob.</li> </ol> <p>L'inconv\u00e9nient majeur de RSA est que les chiffrements et d\u00e9chiffrements sont tr\u00e8s couteux en temps de calcul, et ne permettent pas des \u00e9changes sur des gros volumes de donn\u00e9es, ou sur des flux de communications audio ou vid\u00e9o.</p> <p>Cependant, il est possible d'utiliser RSA \u00e0 la mani\u00e8re de Diffie-Hellman, afin d'\u00e9changer une cl\u00e9 pour un algorithme de chiffrement sym\u00e9trique, qui est en g\u00e9n\u00e9ral un fichier de quelques milliers de bits.</p> <p>Un autre des avantages de RSA est qu'il est possible de l'utiliser comme syst\u00e8me d'authentification.</p>"},{"location":"NSI/Terminale/C11/Securisation/#certificats-et-tiers-de-confiance","title":"Certificats et tiers de confiance","text":"<p>En France, l\u2019\u00c9tat d\u00e9livre aux citoyens une carte d'identit\u00e9. Lorsque une personne se pr\u00e9sente au bureau de poste pour retirer un colis, son identit\u00e9 est v\u00e9rifi\u00e9e par la personne au guichet par l'interm\u00e9diaire de cette carte d'identit\u00e9. A priori, un bout de carton plastifi\u00e9 \u00e0 lui seul ne permet pas de garantir r\u00e9ellement une authentification. Le syst\u00e8me fonctionne parce que le bureau de poste fait confiance \u00e0 l\u2019\u00c9tat, qui a fait les v\u00e9rifications n\u00e9cessaires pour s'assurer de l'identit\u00e9 de la personne, et qui a mis en place une carte difficile \u00e0 falsifier. L'\u00c9tat joue ici le r\u00f4le d'un tiers de confiance.</p> <p>On retrouve le m\u00eame syst\u00e8me dans les communications sur Internet, o\u00f9 certains acteurs jouent le r\u00f4le de tiers de confiance. Ils fournissent des certificats num\u00e9riques, cr\u00e9\u00e9s \u00e0 partir des cl\u00e9s RSA publiques des participants.</p> <p>Exemple d'authentification</p> <p>Imaginons que Bob veuille s'assurer que c'est bien Alice avec qui il va entrer en communication, via son site web.</p> <ol> <li> <p>Alice fait appel \u00e0 Thierry, un tiers de confiance. Thierry v\u00e9rifie qu'ALice est bien la propri\u00e9taire du site, en constant qu'elle peut administrer le site, ou bien par l'interm\u00e9diaire de factures montrant qu'elle poss\u00e8de le nom de domaine ainsi que le serveur qui h\u00e9berge le site. Une fois ces v\u00e9rifications effectu\u00e9es, Thierry cr\u00e9e un certificat avec sa cl\u00e9 priv\u00e9e et la cl\u00e9 publique d'Alice :</p> \\[ c = K_T^{pri}(K_A^{pub})\\] </li> <li> <p>Quand Bob se connecte au site d'Alice, celui-ci envoie le certificat \\(c\\) et la cl\u00e9 publique d'Alice \\(K_A^{pub}\\).</p> </li> <li> <p>Bob se sert alors de la cl\u00e9 publique de Thierry sur le certificat :</p> \\[K_T^{pub}(c) = K_T^{pub}\\left(K_T^{pri}(K_A^{pub})\\right) = K_A^{pub}\\] <p>Il compare le r\u00e9sultat avec la cl\u00e9 que lui a fourni le site d'Alice. Si il y a correspondance, il est assur\u00e9 d'\u00eatre en communication avec Alice. Il peut alors d\u00e9marrer un \u00e9change de cl\u00e9 soit en utilisant RSA, soit Diffie-Hellman.</p> </li> </ol>"},{"location":"NSI/Terminale/C11/Securisation/#le-protocole-https","title":"Le protocole HTTPS","text":""},{"location":"NSI/Terminale/C11/Securisation/#autorites-de-certifications","title":"Autorit\u00e9s de certifications","text":"<p>Une autorit\u00e9 de certification (ou AC), est une entit\u00e9 habilit\u00e9e \u00e0 d\u00e9livrer des certificats. Il s'agit de tiers de confiance, que l'on peut classer en trois cat\u00e9gories :</p> <ul> <li>les entreprises sp\u00e9cialis\u00e9es ;</li> <li>les associations (comme Let's Encrypt, que nous croiserons plus tard);</li> <li>les entit\u00e9s \u00e9tatiques.</li> </ul> <p>Leur r\u00f4le est d'attester par l'interm\u00e9diaire de certificat qu'une entit\u00e9 est bien ce qu'elle pr\u00e9tend \u00eatre. Elles sont soumises \u00e0 des audits r\u00e9guliers et pointilleux, dont les r\u00e9sultats sont publics, et il existe une hi\u00e9rarchie des AC. En effet, une AC doit \u00eatre elle-m\u00eame certifi\u00e9e par une autre AC, ce qui cr\u00e9e un arbre de certification jusqu'\u00e0 des AC appell\u00e9es AC racines. La fondation Mozilla reconnait \u00e0 ce jour (24 Mai 2023) 142 AC racines. </p> <p>Le club des AC est donc tr\u00e8s ferm\u00e9, les OS et navigateurs ayant chacun les cl\u00e9s publiques des AC qu'ils reconnaissent (au passage, Google, Microsoft et Apple ne reconnaissent pas exactement les m\u00eames AC que Mozilla).</p>"},{"location":"NSI/Terminale/C11/Securisation/#normes-de-certifications-x509","title":"Normes de certifications X.509","text":"<p>Les AC suivent g\u00e9n\u00e9ralement le format standard de certficat qui est \u00e0 l'heure actuelle le format <code>X.509</code>. Il s'agit d'un format de fichier binaire contenant entre autre :</p> <ul> <li>l'identifiant de l'AC qui signe(chiffre) le certificat ;</li> <li>les dates de validit\u00e9 du certificat (dates de d\u00e9part et dates de fin);</li> <li>l'identit\u00e9 de l'entit\u00e9 certifi\u00e9e ;</li> <li>la cl\u00e9 publique de l'entit\u00e9 certifi\u00e9e ;</li> <li>l'algorithme utilis\u00e9 pour la signature du certificat ;</li> <li>la signature du certificat par l'AS.</li> </ul> <p>On retrouve la construction pr\u00e9sent\u00e9e pr\u00e9c\u00e9demment, mais avec quelques points techniques suppl\u00e9mentaires : plut\u00f4t que de v\u00e9rifier la signature de chaque ligne du fichier, on utilise une fonction de hachage qui g\u00e9n\u00e8re une somme de contr\u00f4le du fichier. Cette somme de contr\u00f4le est alors chiffr\u00e9e avec la cl\u00e9 priv\u00e9e de l'AC.</p> <p>Zonensi.fr</p> <p>Voici un extrait du certificat de zonensi.fr :</p> <p></p><pre><code>Certificate:\n    Data:\n        Version: 3 (0x2)\n        [...]\n        Issuer: C = US, O = Let's Encrypt, CN = R3\n        Validity\n            Not Before: May 15 22:38:03 2023 GMT\n            Not After : Aug 13 22:38:02 2023 GMT\n        Subject: CN = zonensi.fr\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:ae:43:ac:a5:ae:80:f4:38:4c:52:32:f7:...\n                Exponent: 65537 (0x10001)\n        [...]\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        59:17:d1:ff:e2:2f:1f:a1:e5:2f:71:b6:e3:4a:4d:e4:...\n</code></pre> On constate donc que : <ul> <li>l'AC qui a sign\u00e9 le certificat est Let's Encrypt ;</li> <li>celui-ci est valide du 15 mai 2023 au 13 Aout 2023 ;</li> <li>il certifie le domaine <code>zonensi.fr</code> ;</li> <li>la cl\u00e9 publique est une cl\u00e9 RSA, sur 2048 bits, et calcul\u00e9e \u00e0 partir des informations <code>Modulus</code>et <code>Exponent</code>.</li> <li>l'algorithme utilis\u00e9 pour cr\u00e9er la somme de contr\u00f4le du fichier est <code>sha256WithRSAEncryption</code> ;</li> </ul> <p>Quand vous vous connectez \u00e0 <code>zonensi.fr</code> en <code>https</code>, votre navigateur :</p> <ul> <li>r\u00e9cup\u00e8re le certificat ;</li> <li>la signature est le r\u00e9sultat du chiffrage de la somme de contr\u00f4le par la cl\u00e9 priv\u00e9e de l'AC.</li> <li>retire les deux derni\u00e8res lignes et utilise l'algorithme <code>sha256WithRSAEncryption</code>pour calculer la somme de contr\u00f4le du certificat ;</li> <li>utilise la cl\u00e9 publique de Let's Encrypt sur la signature du certificat, et compare le r\u00e9sultat \u00e0 la somme de contr\u00f4le calcul\u00e9e ;</li> <li>en cas d'\u00e9galit\u00e9, l'identit\u00e9 est v\u00e9rifi\u00e9e et on peut commencer une transaction asym\u00e9trique.</li> </ul> <p>Les certificats des AC sont r\u00e9guli\u00e8rement mis \u00e0 jour, aussi bien au niveau du syst\u00e8me d'exploitation que du navigateur : ici on voit une mise \u00e0 jour des certificats d'AC sur une distribution LinuxMint :</p> <p></p>"},{"location":"NSI/Terminale/C11/Securisation/#http-ssltls-https","title":"HTTP+ SSL/TLS = HTTPS","text":"<p>SSL/TLS</p> <p>La Transport Layer Security (TLS) (et son pr\u00e9decesseur Secure Sockets Layer (SSL)) est un protocole de s\u00e9curisation des \u00e9changes d\u00e9velopp\u00e9 par l'Internet Engineering Task Force (IETF) (\u00e0 la suite de la soci\u00e9t\u00e9 Netscape Communication Corporation*, qui a d\u00e9velopp\u00e9 SSL pour son navigateur).</p> <p>On parle parfois de <code>SSL/TLS</code> pour d\u00e9signer indiff\u00e9remment <code>SSL</code> ou <code>TLS</code>.</p> <p>Actuellement les versions les plus utilis\u00e9es de <code>TLS</code> sont <code>TLS 1.2</code> (publi\u00e9e en 2008) et <code>TLS 1.3</code> (publi\u00e9e en 2018).</p> <p><code>TLS</code> est un protocole se rajoutant entre la couche <code>TCP</code> et la couche applicative (<code>HTML</code> par exemple). Ses r\u00f4les sont :</p> <ul> <li>de garantir l'authentification du serveur ;</li> <li>la confidentialit\u00e9 des donn\u00e9es ;</li> <li>l'int\u00e9grit\u00e9 des donn\u00e9es ;</li> <li>et de mani\u00e8re optionnelle, l'authentification du client.</li> </ul> <p>Le protocole <code>HTTPS</code> est donc la mise en place d'une communication <code>HTTP</code> s\u00e9curis\u00e9e par <code>TLS</code>, pour laquelle le port de communication est le port 443 \u00e0 la place du port 80.</p> <p>Une communication s\u00e9curis\u00e9e par <code>TLS</code> est indiqu\u00e9e dans un navigateur par un cadenas dans la barre de navigation. Un clique sur le cadenas vous donneras les informations sur le la s\u00e9curisation de la connexion. Par exemple pour <code>https://www.zonensi.fr</code> :</p> <p></p> <p>Fonctionnement d'un \u00e9change HTTPS</p> <p></p> <p>On peut d\u00e9crire sommairemment la brique <code>SSL/TLS</code> de la mani\u00e8re suivante :</p> <ol> <li>Le client envoie un message <code>HELLO</code>, qui contient quelqus options (versions de TLS support\u00e9e, algorithmes support\u00e9s).</li> <li>Le serveur envoie un message <code>HELLO</code>, avec ses options, ainsi que son certificat au client.</li> <li>Le client tente de v\u00e9rifier la signature num\u00e9rique du certificat, \u00e0 l'aide des cl\u00e9s publiques des AC. Plusieurs solutions peuvent alors se produire</li> <li>Si l'une d'entre elle fonctionne, le navigateur v\u00e9rifie quelques autres points (entre autres les dates de validit\u00e9), puis g\u00e9n\u00e8re une cl\u00e9 de chiffrement sym\u00e9trique, appel\u00e9e cl\u00e9 de session, qu'il chiffre avec la cl\u00e9 publique du serveur. Une fois la cl\u00e9 re\u00e7ue par le serveur, un \u00e9change <code>HTTP</code> chiffr\u00e9 est donc possible.</li> <li>Si aucune des cl\u00e9s des AC ne fonctionne, le navigateur tente alors de v\u00e9rifier la signature num\u00e9rique du certificat avec la cl\u00e9 publique du serveur. En cas de r\u00e9ussite, cela signifie que le serveur a g\u00e9n\u00e9r\u00e9 lui-m\u00eame son certificat. Un message d'avertissement s'affiche alors sur le navigateur, pr\u00e9venant que l'identit\u00e9 du serveur n'a pas pu \u00eatre v\u00e9rifi\u00e9e, et qu'il peut s'agir potentiellement d'un site frauduleux (mais il s'agit parfois simplement d'un d\u00e9passement de validit\u00e9 du certificat, le propri\u00e9taire du site ayant oubli\u00e9 de renouveler son certificat aupr\u00e8s d'une AC).</li> </ol>"},{"location":"NSI/Terminale/C11/Securisation/#sources","title":"Sources","text":"<ul> <li> <p>http://www.monlyceenumerique.fr/nsi_premiere/archios_arse/a3_encapsulation_tcp_ip.php</p> </li> <li> <p>https://fr.wikipedia.org/wiki/Three-way_handshake</p> </li> <li> <p>Num\u00e9rique et Sciences Informatique Tle : 24 le\u00e7ons avec exercices corrig\u00e9s, Balabonski, Conchon, Filli\u00e2tre, Nguyen, \u00e9ditions Ellipses</p> </li> <li> <p>Wikipedia, pour une tr\u00e8s grande partie des informations ci-dessus.</p> </li> </ul>"},{"location":"NSI/Terminale/Projets/ClickersWars/CW/","title":"Projet : ClickerWars","text":""},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#projet-clickerwars","title":"Projet : ClickerWars","text":""},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#le-jeu","title":"Le jeu","text":"<p>Le principe est de cr\u00e9er un jeu de type clicker, o\u00f9 le/la joueur\u00b7euse clicque sur un bouton pour r\u00e9colter des points fournis par des personnages. Dans le m\u00eame temps, ces personnages voient leur barre de vie diminuer r\u00e9guli\u00e8rement, et il faut les nourrir individuellement avec les points accumul\u00e9s pour \u00e9viter qu'ils ne meurent.</p> <p>Lorsque leur barre de vie est pleine, ils changent de niveau, ce qui augmente leur r\u00e9sistance, augmente le nombre de points r\u00e9colt\u00e9s, mais g\u00e9n\u00e8re aussi un besoin de nourriture plus important.</p> <p>Une pr\u00e9sentation possible est la suivante :</p> <p></p>"},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#la-structure-du-code","title":"La structure du code","text":""},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#la-classe-personnage","title":"La classe personnage","text":"<p>Un objet de la classe <code>personnage</code> devra poss\u00e9der \u00e0 minima les attributs suivants :</p> <ul> <li>un niveau ;</li> <li>un nombre de points de vie maximum ;</li> <li>un nombre de points de vie actuels ;</li> <li>un nombre de points de collecte (combien il rapporte \u00e0 chaque clic) ;</li> <li>une vitesse de d\u00e9croissance des points de vie ;</li> <li>des attributs sp\u00e9cifiants quelles sont les augmentations/diminutions des autres attributs \u00e0 chaque augmentation de niveau.</li> <li>il devra aussi avoir des attributs pointants vers d'autres objets comme :<ul> <li>la barre de vie ;</li> <li>le bouton pour le nourrir ;</li> <li>le texte donnant son niveau</li> <li>et bien s\u00fbr l'image associ\u00e9e au personnage</li> </ul> </li> </ul> <p>Il devra aussi avoir les m\u00e9thodes suivantes :</p> <ul> <li>une m\u00e9thode d'initialisation d'instance <code>__init__</code>, d\u00e9finissant les attributs et les initialisant ;</li> <li>une m\u00e9thode permettant de baisser le nombre de points de vie ;</li> <li>une m\u00e9thode permettant de modiffier les attributs lors d'un changement de niveau ;</li> <li>une m\u00e9thode d'affichage permettant d'afficher le bloc de personnage.</li> </ul> <p>Bien entendu, il sera peut-\u00eatre n\u00e9cessaire de cr\u00e9er d'autres m\u00e9thodes selon la mani\u00e8re choisie pour impl\u00e9menter le code.</p>"},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#bouton-de-collecte","title":"Bouton de collecte","text":"<p>Une classe sera n\u00e9cessaire pour encapsuler youtes les donn\u00e9es li\u00e9es au bouton de collecte, et cette classe devra avoir deux m\u00e9thodes :</p> <ul> <li>une m\u00e9thode d'initialisation ;</li> <li>une m\u00e9thode d'affichage.</li> </ul>"},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#bouton-de-nourriture","title":"Bouton de nourriture","text":"<p>Chaque personnage aura associ\u00e9 un objet correspondant \u00e0 une classe de type bouton, qui devra avoir au moins 3 m\u00e9thodes :</p> <ul> <li>la m\u00e9thode d'initialisation ;</li> <li>la m\u00e9thode d'affichage ;</li> <li>une m\u00e9thode sp\u00e9cifique permettant de nourrir le personnage auquel ce bouton est rattach\u00e9, en vidant la r\u00e9serve de points accumul\u00e9e d'un certain nombre de points :<ul> <li>soit elle vide compl\u00e8tement la r\u00e9serve si le nombre de points n'est pas suffisant pour amener la barre de vie au maximum ;</li> <li>soit elle vide la r\u00e9serve du nombre de points exact permettant \u00e0 un personnage de changer de niveau.</li> </ul> </li> </ul>"},{"location":"NSI/Terminale/Projets/ClickersWars/CW/#reserve-de-points","title":"r\u00e9serve de points","text":"<p>Une classe sp\u00e9cifique pourra \u00eatre cr\u00e9\u00e9e pour contenir et afficher la r\u00e9serve de points.</p>"},{"location":"SNT/College/PixelArt/","title":"Session Coll\u00e8ge","text":""},{"location":"SNT/College/PixelArt/#pixel-art-avec-python","title":"Pixel Art avec Python","text":""},{"location":"SNT/College/PixelArt/#se-preparer-pour-lactivite","title":"Se pr\u00e9parer pour l'activit\u00e9","text":"<ol> <li>Ouvrez le logiciel <code>Thonny</code> depuis le menu <code>Windows</code>.</li> <li> <p>Dans le menu <code>Tools&gt;Manage packages</code>, tapez dans la barre de saisie le mot <code>pillow</code> puis cliquez sur <code>Find package from PyPi</code>.</p> <p></p> <p>Puis cliquez sur <code>Install</code> (si vous voyez \u00e0 la place les boutons <code>Upgrade</code> et <code>Uninstall</code>, ce n'est pas n\u00e9cessaire). Laissez le logiciel installer jusqu'au bout, cela prend quelques secondes.</p> </li> <li> <p>Ouvrez l'explorateur de fichier <code>windows</code>, puis allez dans le dossier <code>Images</code>. Cr\u00e9ez un sous-dossier avec votre nom et pr\u00e9nom. Ce dossier sera celui dans lequel vous devrez copier tous les fichiers de cette activit\u00e9.</p> </li> <li> <p>Rendez-vous sur le site www.zonensi.fr, menu <code>SNT</code> et cliquez sur <code>&gt; Session Coll\u00e8ge</code>. Enregistrez tous les fichiers suivants dans votre dossier personnel.</p> <ul> <li>PixelArt.py</li> <li>makeMatrix.py</li> <li>bigMatrix.txt</li> </ul> </li> </ol>"},{"location":"SNT/College/PixelArt/#du-pixel-art-en-noir-et-blanc","title":"Du Pixel Art en Noir et Blanc","text":"<p>Pixels et tableaux de nombres</p> <p>Une image num\u00e9rique est compos\u00e9e de pixels. Ces pixels sont les plus petites \u00ab lampes \u00bb allumables par l'ordinateur. Pour demander \u00e0 l'ordinateur d'allumer un pixel, on lui donne une valeur num\u00e9rique. Une image num\u00e9rique est donc repr\u00e9sent\u00e9e dans un ordinateur par un tableau de nombres, appel\u00e9 matrice en fran\u00e7ais  (matrix en anglais).</p> <ol> <li> <p>Voici une image en noir et blanc de 8 pixels de long, et de 8 pixels de haut, ainsi que sa repr\u00e9sentation sous la forme d'une matrice dans le langage Python :</p> <p></p> <p></p> <p></p> <pre><code>matrix=[\n    [255, 0, 0, 255, 255, 0, 0, 255],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [255, 0, 0, 0, 0, 0, 0, 255],\n    [255, 255, 0, 0, 0, 0, 255, 255],\n    [255, 255, 255, 0, 0, 255, 255, 255],\n    [255, 255, 255, 255, 255, 255, 255, 255],\n    ]\n</code></pre>  A quoi correspondent les valeurs \\(0\\) et \\(255\\) dans la matrice ? </li> <li> <p>Ouvrir le logiciel <code>Thonny</code>, et depuis ce logiciel ouvrez le fichier <code>pixelArt.py</code>  (avec le menu <code>File&gt;open</code>).</p> </li> <li> <p>Cliquez sur la petite fl\u00e8che verte pour ex\u00e9cuter le script Python.</p> <p></p> <p>Qu'obtient-on ?</p> </li> <li> <p>La ligne cr\u00e9ant l'image et l'affichent \u00e0 partir de la matrice est la ligne 35 :</p> <pre><code>makeImage(matrix, 8, 8)\n</code></pre> <p>Dans cette ligne, la fonction<code>makeImage</code> utilise la variable <code>matrix</code>, pour cr\u00e9er une image de dimension \\(8 \\times 8\\). Remplacer cette ligne par la ligne suivante :</p> <pre><code>makeBiggerImage(matrix, 8, 8, scale=5)\n</code></pre> <p>Qu'obtient-on ?</p> </li> <li> <p>Sauvegarder cette nouvelle image dans le m\u00eame dossier que le fichier <code>pixelArt.py</code> sous le nom <code>greatHeart.png</code>. Combien de pixels composent cette image ?</p> </li> <li>Comment faire pour obtenir une image de \\(80\\times 80\\) pixels ?</li> <li> <p>A l'aide des grilles suivantes, cr\u00e9ez deux nouvelles images de dimension \\(8\\times 8\\) (vous pouvez vous inspirer du site www.pixelart.name).     </p> <p></p> <p></p> <p></p> <p></p> </li> <li> <p>Modifier le programme Python afin d'afficher vous deux images en noir et blanc, en taille \\(80 \\times 80\\), et sauvegardez-les.</p> </li> <li> <p>Combien de nombres sont n\u00e9cessaires pour une image de \\(16 \\times 16\\) pixels ? de \\(32 \\times 32\\) pixels ? de \\(64 \\times 64\\) pixels ?</p> </li> </ol>"},{"location":"SNT/College/PixelArt/#une-image-en-niveau-de-gris","title":"Une image en niveau de gris","text":"<ol> <li>Ouvrez avec le bloc-note le fichier <code>bigMatrix.txt</code> et copiez-collez la totalit\u00e9 de ce texte dans le fichier <code>pixelArt.py</code>, \u00e0 la place de la variable <code>matrix</code>.</li> <li>Cette nouvelle variable <code>bigMatrix</code> est une matrice de dimension \\(16 \\times 16\\). Mis \u00e0 part sa taille et son nom, qu'a-t-elle de nouveau par rapport \u00e0 la variable pr\u00e9c\u00e9dente ?</li> <li> <p>Modifiez la ligne <code>makeBiggerImage...</code> de la mani\u00e8re suivante :</p> <pre><code>makeBiggerImage(bigMatrix, 16, 16, scale=5)\n</code></pre> <p>Puis ex\u00e9cutez le code. Qu'obtient-on ?</p> </li> </ol> <p>Les niveaux de gris</p> <p>Nous avons vu qu'un pixel peut \u00eatre \u00ab allum\u00e9 \u00bb quand on lui donne la valeur \\(255\\), et qu'il est \u00ab \u00e9teint \u00bb quand on lui donne la valeur \\(0\\). Mais en r\u00e9alit\u00e9 on peut lui donner n'importe quelle valeur entre \\(0\\) et \\(255\\), ce qui donnera un niveau de gris, sachant que plus la valeur est grande, plus la nuance se est \u00e9claircie, et plus elle est proche de \\(0\\) plus elle est assombrie.</p>"},{"location":"SNT/College/PixelArt/#votre-propre-matrice","title":"Votre propre matrice","text":"<ol> <li>Allez chercher sur le web une image - pas trop grande en dimension, et sauvegardez-l\u00e0 dans votre dossier.</li> <li>Ouvrez dans <code>Thonny</code> le fichier <code>makeMatrix.py</code>.</li> <li>Modifiez la ligne \\(11\\) en rempla\u00e7ant le nom <code>Mario.png</code> par le nom de votre image (ou par le nom que vous choisissez). Attention \u00e0 bien conserver les guillemets !</li> <li>Ex\u00e9cutez alors le code. Qu'obtenez-vous ?</li> <li>Copiez-collez la matrice obtenue \u00e0 la place de la pr\u00e9c\u00e9dente dans le fichier <code>pixelArt.py</code>, puis modifiez le fichier afin de pouvoir l'ex\u00e9cuter. Attention, il vous faudra conna\u00eetre le nombre de pixels de cette image pour pouvoir ex\u00e9cuter correctement le code !</li> </ol>"},{"location":"SNT/Donnees/Arborescence/","title":"Arborescence des fichiers et dossiers","text":""},{"location":"SNT/Donnees/Arborescence/#arborescence-des-fichiers-et-des-dossiers","title":"Arborescence des fichiers et des dossiers","text":""},{"location":"SNT/Donnees/Arborescence/#les-fichiers-informatiques","title":"Les fichiers informatiques","text":""},{"location":"SNT/Donnees/Arborescence/#definitions","title":"D\u00e9finitions","text":"<p>Fichier informatique</p> <p>Un fichier informatique est un ensemble de donn\u00e9es coh\u00e9rentes r\u00e9unies, c'est-\u00e0-dire une suite de chiffres binaires dont l'ordre poss\u00e8de une signification pour un ou des programmes informatiques. Un fichier informatique est enregistr\u00e9 dans une m\u00e9moire de stockage (disque dur local ou r\u00e9seau, cl\u00e9 USB ou carte m\u00e9moire Flash, CD/DVD, ... ) afin de pouvoir lire et/ou modifier les donn\u00e9es qui y sont \u00e9crites.</p> <p>Un fichier informatique est rep\u00e9r\u00e9 par son nom, qui poss\u00e8de souvent, mais pas toujours, la structure suivante :</p> <pre><code>nom.extension\n</code></pre> <p>o\u00f9 le nom est une suite de caract\u00e8res quelconques, et l'extension est une suite de deux, trois ou quatre lettres pouvant donner une id\u00e9e du contenu du fichier.</p> <p>Remarques</p> <ul> <li>Un nom de fichier peut n'avoir aucune extension, et peut m\u00eame n'\u00eatre \u00e9crit qu'avec des espaces... Mais c'est peu recommand\u00e9.</li> <li>Les programmes informatiques sont eux aussi des fichiers (ou des ensembles de fichiers) qui sont lus par le syst\u00e8me d'exploitation.</li> <li>Le syst\u00e8me d'exploitation est aussi un ensemble de fichiers.</li> <li>On peut g\u00e9n\u00e9ralement ouvrir un fichier informatique avec un \u00e9diteur de texte. Mais le contenu sera illisible par un \u00eatre humain.</li> <li>L'organisation de tous les fichiers, appel\u00e9e \\textit{syst\u00e8me de fichiers}, d\u00e9pend du syst\u00e8me d'exploitation (Windows, Unix, Linux, etc) </li> </ul>"},{"location":"SNT/Donnees/Arborescence/#les-extensions","title":"Les extensions","text":"<p>Utilit\u00e9 des extensions</p> <p>Sous les syst\u00e8mes windows, le syst\u00e8me d'exploitation peut \u00eatre configur\u00e9 de mani\u00e8re \u00e0 s\u00e9lectionner automatiquement( c'est-\u00e0-dire par double-clique ) un programme pour ouvrir un type de fichier, en fonction de son extension.</p> <p>Ainsi, g\u00e9n\u00e9ralement, pour les fichiers portant l'extension <code>.jpg</code>, le syst\u00e8me d'exploitation sera configur\u00e9 de mani\u00e8re \u00e0 ouvrir avec un logiciel visionneur d'image, ou bien un \u00e9diteur d'image.</p> <p>Remarques</p> <ul> <li>Il est tout \u00e0 fait possible de changer le logiciel avec lequel on ouvre un fichier, gr\u00e2ce au menu contextuel  <code>Ouvrir avec</code>.</li> <li>Certaines extensions de fichiers ne sont pas reconnues par le syst\u00e8me d'exploitation. Ce sera par exemple le cas avec les sauvegardes de l'application <code>frisechrono.fr</code>. Dans ce cas, il est n\u00e9cessaire de d'abord d\u00e9marrer le logiciel ou l'application, puis utiliser le menu `Ouvrir` de celui-ci pour chercher le fichier \u00e0 ouvrir.</li> <li>\u26a0 En changeant l'extension d'un fichier, on ne change pas fondamentalement les donn\u00e9es. Par contre on risque d'avoir un fichier illisible !</li> </ul> <p>Conna\u00eetre les diff\u00e9rentes extensions</p> Enonc\u00e9Solution <p>Compl\u00e9ter le tableau suivant :</p> Types de fichiers Extensions possibles Remarques Images compress\u00e9es Images brutes <code>.avi</code>, <code>.mp4</code>, <code>.wmv</code>, <code>.vob</code> Textes format\u00e9s Textes bruts <code>.zip</code>, <code>.7z</code>, <code>.gz</code> <code>.pdf</code> Ex\u00e9cutables windows Sons compress\u00e9s Sons bruts <code>.html</code>, <code>.css</code>, <code>.js</code>, <code>.py</code> Types de fichiers Extensions possibles Remarques Images compress\u00e9es <code>.png</code>, <code>.jpg</code>, <code>.gif</code> A utiliser sur le net Images brutes <code>.raw</code>, <code>.bmp</code>, ... Quand on traite des images Vid\u00e9os <code>.avi</code>, <code>.mp4</code>, <code>.wmv</code>, <code>.vob</code> Selon le support Textes format\u00e9s <code>.doc</code>, <code>.odt</code> Les fichiers de suites offices Textes bruts <code>.txt</code>, <code>.csv</code> Des fichiers ne contenant que des caract\u00e8res Archives <code>.zip</code>, <code>.7z</code>, <code>.gz</code> Pour cr\u00e9er un ficheir \u00e0 partir de plusieurs Documents portables <code>.pdf</code> Multiplateforme, simple \u00e0 transmettre, mais compliqu\u00e9s \u00e0 modifier Ex\u00e9cutables windows <code>.exe</code>, <code>.msi</code> Danger ! Attention, il faut savoir ce qu'on fait quand on ouvre un de ces fichiers Sons compress\u00e9s <code>.mp3</code>,<code>.ogg</code> petits mais certaines fr\u00e9quences sont absentes Sons bruts <code>.wav</code>, <code>.raw</code> peuvent \u00eatre cons\u00e9quents Code informatiques <code>.html</code>, <code>.css</code>, <code>.js</code>, <code>.py</code> ce ne sont que des fichiers textes"},{"location":"SNT/Donnees/Arborescence/#meta-donnees","title":"M\u00e9ta-donn\u00e9es","text":"<p>M\u00e9ta-donn\u00e9es d'un fichier</p> <p>Non seulement un fichier contient des donn\u00e9es brutes ( la vid\u00e9o en question, le texte, etc. ), mais il contient aussi des m\u00e9ta-donn\u00e9es (certaines informations concernant les informations) - telles que, suivant le syst\u00e8me de fichier, la longueur du fichier, son auteur, les personnes autoris\u00e9es \u00e0 le manipuler, ou la date de la derni\u00e8re modification. </p> <p>Savoir lire les informations</p> <p>On consid\u00e8re l'image suivante, capture d'\u00e9cran faite sur un syst\u00e8me d'exploitation Windows.</p> <p></p> Enonc\u00e9Solution <ol> <li>Quelles sont les extensions pr\u00e9sentes de fichiers images ? </li> <li>Lesquels de ces fichiers ne peuvent \u00eatre ouverts par double-clic ?</li> <li>Deux fichiers peuvent-ils avoir le m\u00eame nom mais pas la m\u00eame extension ?</li> <li>Quel est le plus ancien fichier ? </li> <li>Quel est celui qui a \u00e9t\u00e9 modifi\u00e9 le plus tard  ? </li> <li>Quelle est la nature des deux plus gros fichiers ?</li> </ol> <ol> <li> <p>Il y a :</p> <ul> <li>des fichiers <code>.gif</code></li> <li>des fichiers <code>.png</code> et <code>.jpg</code> (images c\u00e7ompress\u00e9es)</li> <li>des fichiers <code>.bmp</code> (images brutes)</li> </ul> </li> <li> <p>Le fichier <code>genereBMP.py</code>  ne peut pas \u00eatre ouvert par double-clique. On le voit car il n'est associ\u00e9 \u00e0 aucun ic\u00f4ne d'application.       </p> </li> <li>Oui, il y a les fichiers <code>N1_Images_NB_Gris.pdf</code> et <code>N1_Images_NB_Gris.tex</code>.</li> <li>Le fichier <code>Matrice_RGB2.jpg</code>  qui date du 17/02/2020.</li> <li>Le fichier <code>N1_Images_NB_Gris.pdf</code> \u00e0 22h09.</li> <li>Les deux plus gros fichiers sont des fichiers images compress\u00e9s (<code>.jpg</code>).</li> </ol>"},{"location":"SNT/Donnees/Arborescence/#arborescence-des-fichiers","title":"Arborescence des fichiers","text":""},{"location":"SNT/Donnees/Arborescence/#dossiers-et-arborescence","title":"Dossiers et arborescence","text":"<p>Dossiers informatiques</p> <p>Un dossier informatique (ou r\u00e9pertoire, directory en anglais)  est un fichier particulier qui contient les r\u00e9f\u00e9rences \u00e0 d'autres fichiers.</p> <p>Dans tous les syst\u00e8me de fichier, chaque fichier ou dossier est r\u00e9f\u00e9renc\u00e9 par un autre dossier, appel\u00e9 parent du fichier ou du dossier correspondant.</p> <p>Un tel syst\u00e8me forme une hi\u00e9rarchie, appel\u00e9e arborescence, dont le point d'entr\u00e9e est appel\u00e9 r\u00e9pertoire racine.</p> <p>Exemple : Arborescence compl\u00e8te dessin\u00e9e sous la forme d'un arbre</p><p></p> <p>Lire une arborescence</p> <p>A partir de l'arborescence pr\u00e9c\u00e9dente :</p> Enonc\u00e9Solution <ol> <li>Le r\u00e9pertoire racine est  ?</li> <li>Le dossier parent de <code>Programmation</code> est ?</li> <li>Le dossier <code>Users</code> poss\u00e8de deux enfants qui sont ?</li> <li>Le dossier <code>www</code> poss\u00e8de combien de r\u00e9f\u00e9rences ?</li> </ol> <ol> <li>Le r\u00e9pertoire racine est  C:.</li> <li>Le dossier parent de <code>Programmation</code> est Programmes.</li> <li>Le dossier <code>Users</code> poss\u00e8de deux enfants qui sont Toto et Tata.</li> <li>Il en poss\u00e8de deux : le fichier <code>index.html</code> ainsi que le r\u00e9pertoire <code>Images</code>.</li> </ol>"},{"location":"SNT/Donnees/Arborescence/#chemin-absolu","title":"Chemin absolu","text":"<p>Chemin absolu d'un fichier ou d'un dossier</p> <p>Donner le chemin absolu d'un fichier ou d'un dossier, c'est donner l'ensemble des dossiers travers\u00e9s depuis le r\u00e9pertoire racine pour atteindre ce fichier ou dossier.</p> <p>Remarques</p> <p>Pour s\u00e9parer des dossiers, on utilise un caract\u00e8re sp\u00e9cifique :</p> <ul> <li>sous windows : l'\u00ab antislash \u00bb ++backslah++;</li> <li>sous syst\u00e8me Unix : le \u00ab slash \u00bb /.</li> </ul> <p>Exemples</p> <ul> <li> <p>On consid\u00e8re le chemin absolu suivant sur un syst\u00e8me windows :</p> <pre><code>C:\\Windows\\System32\\avifile.dll\n</code></pre> <ul> <li>La cible est <code>avifile.dll</code></li> <li>Le r\u00e9pertoire racine est <code>C:</code></li> <li>Le r\u00e9pertoire parent de <code>avifile.dll</code> est <code>System32</code>.</li> <li>Le r\u00e9pertoire parent de <code>System32</code> est <code>Windows</code>.</li> <li>Le r\u00e9pertoire parent de <code>Windows</code> est le r\u00e9pertoire racine</li> </ul> </li> <li> <p>On consid\u00e8re maintenant le chemin absolu suivant sur un t\u00e9l\u00e9phone Android :</p> <pre><code>/InternalStorage/Pictures/facebook/FB_IMG_352.jpg\n</code></pre> <ul> <li>La cible est <code>FB_IMG_352.jpg</code>.</li> <li>Le r\u00e9pertoire racine est <code>/</code> (c'est bizarre mais c'est comme \u00e7a avec les syst\u00e8mes UNIX).</li> <li>Le r\u00e9pertoire parent de <code>facebook</code> est <code>Pictures</code>.</li> <li>Le r\u00e9pertoire parent de <code>Pictures</code> est  <code>InternalStorage</code>.</li> </ul> </li> </ul> <p>A partir de l'arborescence exemple</p> <p>On consid\u00e8re l'arborescence dessin\u00e9e sous la forme d'un arbre  :</p> <p></p> Enonc\u00e9Solution <ol> <li>Quelle est l'adresse absolue du fichier <code>image2.jpg</code> ?       </li> <li>Quelle est l'adresse absolue du dossier <code>Audio</code> ?        </li> <li>Quelle est l'adresse absolue du fichier <code>config.ini</code> ?</li> </ol> <ol> <li><code>C:\\www\\Images\\image2.jpg</code></li> <li><code>C:\\Programmes\\Audio</code></li> <li><code>C:config.ini</code></li> </ol> <p>A partir d'une arborescence Windows r\u00e9elle</p> <p>On consid\u00e8re la capture d'\u00e9cran ci-dessous :</p> <p></p> Enonc\u00e9Solution <ol> <li>Quel est le r\u00e9pertoire racine de cette arborescence ?</li> <li>Quelle est l'adresse absolue du fichier <code>Eratosthene.png</code> ?</li> <li>Combien de sous-r\u00e9pertoires (ou sous-dossiers, ou r\u00e9pertoires enfants) poss\u00e8de le dossier <code>2020-2021</code> ?</li> <li>Voit-on dans l'arborescence les fichiers contenus dans le r\u00e9pertoire <code>2de2</code> ?  </li> </ol> <ol> <li><code>D:</code></li> <li><code>D:\\Cours et exercices 2nde\\Archives\\2019-2020\\C01_Ensembles_Nombres\\Eratosthene.png</code></li> <li>Un seul : <code>2de2</code></li> <li>Non</li> </ol> <p>Arborescence Android</p> <p>On consid\u00e8re la capture d'\u00e9cran ci-dessous :</p> <p></p> Enonc\u00e9Solution <p>Quelles sont les informations disponibles concernant l'arborescence des fichiers sur cette capture d'\u00e9cran ?</p> <p>Il y a deux fichiers images, situ\u00e9s dans le dossier dont l'adresse absolue est :</p> <pre><code>/Stockage interne/Pictures/facebook/\n</code></pre>"},{"location":"SNT/Donnees/Arborescence/#chemin-relatif","title":"Chemin relatif","text":"<p>Chemin relatif d'un fichier ou d'un dossier}</p> <p>Il est possible de donner le chemin relatif vers un fichier ou un dossier \u00e0 partir d'un autre dossier de la m\u00eame arborescence.</p> <p>Pour cela il est parfois n\u00e9cessaire de remonter dans les r\u00e9pertoires parents. Le nom du r\u00e9pertoire parent n'\u00e9tant pas connu par le r\u00e9pertoire courant, on utilise la convention  <code>..</code>  (deux points) pour signifier qu'il faut remonter d'un parent vers la racine.</p> <p>Exemple</p> <p>Dans l'exemple d'arborescence dessin\u00e9e, si on se trouve dans le r\u00e9pertoire <code>mesDocs</code>, alors l'adresse relative du fichier <code>sonImage.png</code> est :</p> <pre><code>..\\..\\Tata\\sonImage.png\n</code></pre> <p></p> <ul> <li>le premier <code>..</code> permet de remonter dans le dossier  <code>Toto</code>.</li> <li>le second  <code>..</code> permet de remonter dans le dossier <code>Users</code></li> <li>Ensuite on descend normalement dans l'arborescence.</li> </ul> <p>Chemins relatifs</p> <p>Toujours dans l'arboprescence dessin\u00e9e :</p> <p></p> Enonc\u00e9Solution <ol> <li>Quelle est l'adresse relative du fichier <code>image1.png</code> par rapport \u00e0  <code>index.html</code> ?</li> <li>Quelle est l'adresse relative du fichier <code>HelloWorld.py</code> par rapport au fichier <code>index.html</code> ?</li> <li>Quelle est l'adresse relative du fichier <code>config.ini</code> par rapport au fichier <code>monFichier.txt</code>  ?</li> </ol> <ol> <li><code>Images/image1.png</code> (Inutile de remonter l'arborescence, <code>index.html</code> est dans <code>www</code> tout comme le dossier <code>Images</code>).</li> <li><code>..\\Programmes\\Programmation\\Python\\HelloWorld.py</code></li> <li><code>..\\..\\..\\config.ini</code></li> </ol>"},{"location":"SNT/Geolocalisation/Dijkstra/","title":"Recherche du chemin le plus court","text":""},{"location":"SNT/Geolocalisation/Dijkstra/#recherche-du-chemin-le-plus-court-lalgorithme-de-dijkstra","title":"Recherche du chemin le plus court : l'algorithme de Dijkstra","text":"<p>Le contexte</p> <p>Un des probl\u00e8mes classique en informatique est de trouver le plus court chemin reliant deux \u00e9l\u00e9ments d'un m\u00eame r\u00e9seau, que ce soit deux villes dans un r\u00e9seau routier ou deux routeurs d'un r\u00e9seau informatique.</p>"},{"location":"SNT/Geolocalisation/Dijkstra/#representer-une-carte-routiere-notion-de-graphe","title":"Repr\u00e9senter une carte routi\u00e8re, notion de graphe","text":"<p>On consid\u00e8re l'extrait de carte de la r\u00e9gion Auvergne-Rh\u00f4ne-Alpes donn\u00e9 ci-dessous :</p> <p></p> <p>Un technicien d'une entreprise doit se d\u00e9placer et pouvoir intervenir sur les diff\u00e9rents sites de cette entreprises, situ\u00e9s dans les villes suivantes : Aurillac (A), Bourg-en-Bresse (B), Clermont-Ferrand (C), Saint-Etienne (E), Grenoble(G), Lyon (L), Le Puy-en-Velay(P), Valence(V). Il connait les distances suivantes par autoroute, en km :</p> <ul> <li>AC = 160</li> <li>AP = 180</li> <li>CP = 130</li> <li>CE = 140</li> <li>CL = 180</li> </ul> <ul> <li>PE = 80 </li> <li>PV = 100</li> <li>EL = 70 </li> <li>EV = 100</li> <li>LV = 100</li> </ul> <ul> <li>LB = 80 </li> <li>LG = 110</li> <li>BG = 180</li> <li>VG = 90 </li> </ul> <p> Exercice</p> Enonc\u00e9Solution <p>Donner une repr\u00e9sentation graphique simplifi\u00e9e de la situation pr\u00e9sent\u00e9e ci-dessus.</p> <p>Notion de graphe (non orient\u00e9)</p> <ul> <li>Un tel type de repr\u00e9sentation s'appelle un graphe non orient\u00e9 (undirected graph) - car les segments peuvent \u00eatre parcourus dans les deux sens.</li> <li>Les points A, B, C, etc sont appel\u00e9s sommets (nodes) du graphe.</li> <li>Les segments reliant deux sommets sont appel\u00e9s ar\u00eates (edges).</li> <li>Les valeurs sur les ar\u00eates sont appel\u00e9es poids (weights).</li> <li>Deux sommets sont dits voisins si il existe une ar\u00eate entre ces deux sommets.</li> <li>Une cha\u00eene (ou un chemin, path en anglais) est une suite finie d'ar\u00eates cons\u00e9cutive, et le poids d'une cha\u00eene est la somme des poids de ses ar\u00eates.</li> </ul> <p>La th\u00e9orie des graphes est une branche particuli\u00e8re des math\u00e9matiques ayant une importance capitale dans le d\u00e9veloppement de l'informatique, et de nombreux algorithmes classiques li\u00e9s \u00e0 la th\u00e9orie des graphes sont syst\u00e9matiquement \u00e9tudi\u00e9s par les \u00e9l\u00e8ves des diff\u00e9rentes \u00e9coles et universit\u00e9s faisant de l'informatique. De nombreux probl\u00e8mes sont r\u00e9solubles gr\u00e2ce \u00e0 une implantation sous la forme de graphe, dont certains probl\u00e8mes historiques comme :</p> <ul> <li> <p>Le probl\u00e8me des ponts de K\u00f6nigsberg : est il possible de visiter \u00e0 pied la ville de K\u00f6nigsberg en passant une et une seule fois par chacun des ponts ?</p> <p></p> </li> <li> <p>Le probl\u00e8me de la coloration de graphe : On veut colorier une carte g\u00e9ographique trac\u00e9e sur le plan (ou la sph\u00e8re) de mani\u00e8re que deux r\u00e9gions voisines soient toujours de couleurs diff\u00e9rentes. Combien de couleurs sont n\u00e9cessaires au minimum ?</p> <p></p> </li> </ul>"},{"location":"SNT/Geolocalisation/Dijkstra/#lalgorithme-de-dijkstra","title":"L'algorithme de Dijkstra","text":"<p>Edsger Dijkstra</p> <p></p> <p>Edsger Wybe Dijkstra (math\u00e9maticien et informaticien n\u00e9erlandais 1930 \u2212 2002) a propos\u00e9 en 1959 un algorithme qui permet de calculer le plus court chemin entre un sommet particulier et tous les autres. C'est l'un des plus efficaces pour traiter les probl\u00e8mes de plus court chemin. Gr\u00e2ce \u00e0 la puissance du traitement informatique, il est utilis\u00e9 par les logiciels d'optimisation de trajets r\u00e9els (Navigateurs GPS, Site RATP. . .) ou virtuels (routage internet). Cet algorithme ne fonctionne que si le graphe ne poss\u00e8de que des valeurs positives.</p> <p></p> <p></p> <p></p>"},{"location":"SNT/Geolocalisation/Dijkstra/#description-de-lalgorithme","title":"Description de l'algorithme","text":"<p>Algorithme de Dijkstra</p> <p>Si le plus court chemin reliant le sommet \\(E\\) (entr\u00e9e) au sommet \\(S\\) (sortie) passe par les sommets \\(s_1 , s_2 , . . . , s_k\\) alors, les diff\u00e9rentes \u00e9tapes sont aussi les plus courts chemins reliant \\(E\\) aux sommets successifs \\(s_1 , s_2 , . . . , s_k\\) .  Nous devons dons construire de proche en proche le chemin cherch\u00e9 en choisissant \u00e0 chaque it\u00e9ration de l'algorithme, un sommet \\(s_i\\) du graphe parmi ceux qui n'ont pas encore \u00e9t\u00e9 trait\u00e9s, tel que la longueur connue provisoirement du plus court chemin allant de \\(E\\) \u00e0 \\(s_i\\) soit la plus courte possible. L'algogramme correspondant est donn\u00e9 ci-dessous : </p> <p></p>"},{"location":"SNT/Geolocalisation/Dijkstra/#exemple-complet-debranche","title":"Exemple complet d\u00e9branch\u00e9","text":"<p>Table de Dijkstra</p> <p>Pour faciliter la recherche du plus court chemin il est commode de pr\u00e9senter les r\u00e9sultats dans un tableau.</p> <p>Exercice</p> <ol> <li> <p>Ayant termin\u00e9 sa semaine de travail \u00e0 Bourg-en-Bresse, le technicien souhaite retourner chez lui \u00e0 Aurillac en faisant le moins de kilom\u00e8tres possibles.     D\u00e9terminer, en utilisant l'algorithme de Dijkstra, le plus court chemin entre les villes de Bourg-en-Bresse et Aurillac en empruntant le r\u00e9seau routier, en s'aidant du tableau ci-dessous :</p> <p></p> <p>Quelle est alors la route \u00e0 emprunter ?</p> </li> <li> <p>La route entre Le Puy-en-Velay et Aurillac est ferm\u00e9e \u00e0 la circulation. Quel chemin doit-il alors emprunter?</p> </li> </ol> <p>D'autres utilisations</p> <p>Alexis part en voyage dans l\u2019Est des Etats-Unis. Il souhaite visiter les villes suivantes : Atlanta (A), Boston (B), Chicago (C), Miami (M), New York (N)et Washington (W).Une compagnie a\u00e9rienne propose les liaisons suivantes repr\u00e9sent\u00e9es par le graphe ci-dessous :</p> <p></p> <ol> <li>Alexis veut relier Boston \u00e0 Miami.D\u00e9terminer le trajet le moins cher ainsi que le co\u00fbt de ce trajet.</li> <li>Le site https://graphonline.ru/fr/ permet de tracer un graphe et de d\u00e9terminer entre autre le chemin le plus court gr\u00e2ce \u00e0 l'algorithme de Dijkstra. V\u00e9rifiez vos calculs pr\u00e9c\u00e9dents avec ce site.</li> </ol>"},{"location":"SNT/Geolocalisation/geolocalisation/","title":"Coordonn\u00e9es et GPS","text":""},{"location":"SNT/Geolocalisation/geolocalisation/#coordonnees-et-gps","title":"Coordonn\u00e9es et GPS","text":""},{"location":"SNT/Geolocalisation/geolocalisation/#introduction-mais-ou-est-ce","title":"Introduction : mais o\u00f9 est-ce ?","text":"<p>T\u00e9l\u00e9chargez et ouvrez le fichier suivant. </p> <p>J'ai pris cette photo lors de mes derni\u00e8res vacances. Pouvez-vous dire pr\u00e9cisemment le nom du camping o\u00f9 je me trouvais ?</p>"},{"location":"SNT/Geolocalisation/geolocalisation/#coordonnees-sur-le-globe-terrestre","title":"Coordonn\u00e9es sur le globe terrestre","text":"<p>Syst\u00e8me g\u00e9od\u00e9sique WGS84</p> <p>Tout point situ\u00e9 \u00e0 la surface du globe terrestre est d\u00e9termin\u00e9 par ses coordonn\u00e9es g\u00e9ographiques :</p> <ul> <li>la latitude : angle d'\u00e9cart par rappor \u00e0 l'\u00e9quateur ;</li> <li>la longitude : angle d'\u00e9cart par rapport au m\u00e9ridien de r\u00e9f\u00e9rence (m\u00e9ridien de Greenwich) ; </li> <li>son altitude  : \u00e9l\u00e9vation par rapport au niveau de la mer</li> </ul> <p></p> <p></p> <p></p> <p> </p> <p></p> <p>L'ensemble de ces trois notions, auquel on ajoute le centre de la Terre, est le syst\u00e8me g\u00e9od\u00e9sique WGS84. Il est utilis\u00e9 comme syst\u00e8me de r\u00e9f\u00e9rence mondial pour d\u00e9terminer les positions sur la terre par les syst\u00e8mes GPS dont nous parlerons plus loin (et par les syst\u00e8mes concurrents).</p> <p>Il existe plusieurs fa\u00e7ons de noter les coordonn\u00e9es latitudinales et longitudinales. On peut utiliser la notation sexag\u00e9simale DMS (D\u00e9gr\u00e9s, Minutes, Secondes) ou bien les degr\u00e9s d\u00e9cimaux, et on peut donner la direction (Nord ou Sud pour la latitude, Est ou Ouest pour la longitude) ou bien utiliser des latitudes et des longitudes positives ou n\u00e9gatives ( par d\u00e9faut la latitude positive correspond \u00e0 l'h\u00e9misph\u00e8re nord, et la longitude positive correspond  \u00e0 la direction Est).</p> <p>Ainsi on a l'\u00e9quivalence entre les notations :</p> <ul> <li>\\(48^{\\circ}51'24''\\) nord, \\(2^{\\circ}21'07''\\) ouest</li> <li>\\(48,856448^{\\circ}\\) nord, \\(2,352197^{\\circ}\\) ouest</li> <li>\\((48,856448~;~-2,352197)\\)</li> </ul> <p>Exercice</p> Enonc\u00e9R\u00e9ponses <ol> <li>Trouver les coordonn\u00e9es g\u00e9od\u00e9siques du Lyc\u00e9e Auguste Pavie</li> <li>Convertir ces coordonn\u00e9es dans le syst\u00e8me DMS.</li> <li>Quel b\u00e2timent trouve-t-on aux coordonn\u00e9es \\((51,99837~;~-0,74397)\\) ?</li> </ol> <p>A venir !</p>"},{"location":"SNT/Geolocalisation/geolocalisation/#principes-de-geolocalisation","title":"Principes de g\u00e9olocalisation","text":"<p>Pour comprendre le principe de localisation utilis\u00e9 par les syst\u00e8mes tels que le GPS, il faut comprendre le principe de triangulation. Regardons l'exemple simplifi\u00e9 suivant:</p> <p>Exercice</p> Enonc\u00e9R\u00e9ponse <p>Le messager du roi de la tour 1 doit se rendre \u00e0 la tour 3 au travers d'une for\u00eat dense. Pour l\u2019aider \u00e0 s\u2019orienter, les tours 1, 2 et 4 vont tirer un coup de canon toutes les heures \u00e0 2 minutes d\u2019intervalle pr\u00e9cises. Le messager part et traverse la for\u00eat, sans s'arr\u00eater jusqu'\u00e0 entendre le premier coup de canon. Il s'arr\u00eate alors et attends les coups de canons suivants. Il consulte sa montre d'une tr\u00e8s grande pr\u00e9cision (oui, c'est peu cr\u00e9dible, mais c'est pour l'exemple...)</p> <ol> <li>La premi\u00e8re tour tire \u00e0 \\(10\\) h et le messager entend la d\u00e9tonation \u00e0 \\(10\\) h et \\(30\\) s.</li> <li>Il entend la d\u00e9tonation de la tour 2 \u00e0 \\(10\\) h \\(2\\) min et \\(35\\) s.</li> <li>Celle de la tour 4 \u00e0 \\(10\\) h \\(4\\) min et \\(40\\) s.</li> </ol> <p>Sachant que la vitesse du son est d'environ \\(340~m.s^{-1}\\), localiser le messager sur le plan ci-dessous (\u00e9chelle \\(0,5~cm\\) pour \\(1~km\\)).</p> <p>Vous pouvez travailler directement sur la feuille, ou bien importer l'image suivante dans le logiciel <code>GeoGebra</code>.</p> <p></p> <p>A venir !</p>"},{"location":"SNT/Geolocalisation/geolocalisation/#les-systemes-de-geolocalisation","title":"Les syst\u00e8mes de G\u00e9olocalisation","text":"<p>Le syst\u00e8me GPS</p> Enonc\u00e9R\u00e9ponses <ol> <li>Regarder la vid\u00e9o suivante</li> <li>Quelle est l'incertitude de la mesure avec un m\u00e8tre ?</li> <li>De quand date les premiers satellites du r\u00e9seau GPS ?</li> <li>Votre t\u00e9l\u00e9phone portable poss\u00e8de une puce GPS. Est-ce elle qui envoie des informations au satellite ou bien est-ce le satellite qui envoie des informations ?</li> <li>Quelles sont les donn\u00e9es importantes pour d\u00e9terminer la distance entre la puce GPS et le satellite ?</li> <li>Question hors vid\u00e9o : combien de satellites sont consid\u00e9r\u00e9s comme \u00e0 minima n\u00e9cessaires pour obtenir \u00e0 la fois latitude, longitude et altitude d'une puce GPS ?</li> </ol> <p>A venir !</p> <p>Le syst\u00e8me GPS (Etats-Unis)</p> <p>Le GPS (Global Positioning System) est un syst\u00e8me de positionnement par rapport \u00e0 un r\u00e9seau de satellites. Le satellite envoie un signal qui comprend sa position et son heure d'\u00e9mission. Pour cela, le satellite poss\u00e8de \u00e0 son bord une horloge atomique d\u2019une tr\u00e8s grande pr\u00e9cision.</p> <p>Le r\u00e9cepteur GPS compare l\u2019heure d'\u00e9mission du signal \u00e0 l\u2019heure \u00e0 laquelle il l\u2019a re\u00e7u. La diff\u00e9rence correspond au temps mis par le signal qu\u2019on obtient entre le satellite et le r\u00e9cepteur. En le multipliant par la vitesse du signal, qui est la vitesse de la lumi\u00e8re (\\(300~000~km.s^{-1}\\)), on obtient la distance entre le satellite \u00e9metteur et le r\u00e9cepteur.</p> <p>Avec au moins trois satellites, le r\u00e9cepteur peut trianguler sa position. Une constellation de 31 satellites est en orbite autour de la Terre et couvre toute la surface terrestre. La qualit\u00e9 de la g\u00e9olocalisation d\u00e9pend de la synchronisation des horloges entre les satellites et le r\u00e9cepteur. Une erreur d\u2019un milliardi\u00e8me de seconde correspond \u00e0 une erreur de positionnement de 30 cm. </p> <p>L'heure d\u00e9livr\u00e9e par les horloges atomiques des satellites GPS est aussi utilis\u00e9e pour synchroniser des syst\u00e8mes de t\u00e9l\u00e9communication, les r\u00e9seaux \u00e9lectriques ou financiers.</p> <p>Autres m\u00e9thodes de G\u00e9olocalisation</p> <p>Le syst\u00e8me GPS n'est pas le seul a \u00eatre utils\u00e9 pour la g\u00e9oocalisation. Le r\u00e9seau de satellites  Galileo devrait permettre \u00e0 terme d'obtenir un concurrent europ\u00e9en au syst\u00e8me GPS. Mais il existe aussi d'autres formes de g\u00e9olocalisation qu'on soup\u00e7onne moins :</p> <ol> <li> <p>La g\u00e9olocalisation par bornage Wi-Fi : le WPS (Wi-Fi Positioning System)</p> <p>Un terminal Wi-Fi peut se g\u00e9olocaliser en fonction des identifiants des bornes Wi-Fi qu\u2019il d\u00e9tecte. Il va pour cela se r\u00e9f\u00e9rer \u00e0 des bases de donn\u00e9es contenant les identifiants des bornes Wi-Fi ainsi que leurs coordonn\u00e9es g\u00e9ographiques. Plus il d\u00e9tecte de bornes Wi-Fi, plus la localisation est pr\u00e9cise.</p> </li> <li> <p>G\u00e9olocalisation par antenne relais :</p> <p>Il existe d\u2019autres modes de g\u00e9olocalisation reposant sur le m\u00eame principe, par exemple la g\u00e9olocalisation par GSM : un t\u00e9l\u00e9phone peut se g\u00e9olocaliser en fonction des antennes relais qu\u2019il d\u00e9tecte, l'identifiant et la position des antennes relais (au sol) \u00e9tant connus. La pr\u00e9cision de la localisation par GSM est de l\u2019ordre de \\(200\\) m en milieu urbain : elle augmente avec la densit\u00e9 des antennes relais.</p> </li> </ol>"},{"location":"SNT/Images/NB/","title":"Noir, Blanc, Gris","text":""},{"location":"SNT/Images/NB/#les-images-numeriques-du-noir-blanc-aux-niveaux-de-gris","title":"Les images num\u00e9riques : du Noir &amp; Blanc aux niveaux de gris","text":""},{"location":"SNT/Images/NB/#la-revolution-des-images-numeriques","title":"La r\u00e9volution des images num\u00e9riques","text":"<p>La photographie argentique</p> <p>La photographie a \u00e9t\u00e9 invent\u00e9e par le fran\u00e7ais Nic\u00e9phore Ni\u00e9pce vers 1824. D'abord sur des plaques d'argent recouvertes de bitumes, et qui n\u00e9cessitaient plusieurs jours d'exposition aux rayons du soleil. le proc\u00e9d\u00e9 fut am\u00e9lior\u00e9 par Louis Daguerre, qui recouvrit la plaque d'argent par une fine couche d'iodure d'argent, cette plaque \u00e9tant ensuite expos\u00e9e dans une chambre obscure puis soumise \u00e0 des vapeurs de mercure qui provoquaient l'apparition de l'image. Le proc\u00e9d\u00e9 s'am\u00e9liora au fur et \u00e0 mesure, par l'utilisation de papier argentiques r\u00e9alisant un n\u00e9gatif de l'image souhait\u00e9e, la photographie se r\u00e9v\u00e9lant apr\u00e8s un bain dans diff\u00e9rentes substances chimiques au sein d'une chambre noire.</p> <p>Les proc\u00e9d\u00e9s de photographie couleur ne sont apparus qu'au milieu des ann\u00e9e 1930.</p> <p>Au temps de la photographie argentique, obtenir une photographie n\u00e9cessitait l'exposition puis le d\u00e9veloppement d'une pellicule sur du papier trait\u00e9 sp\u00e9cialement. Il fallait donc du temps, et chaque photo prise devait \u00eatre d\u00e9velopp\u00e9e - et donc coutait une certaine somme - quel que soit le r\u00e9sultat de la photo.</p> <p>Pour mieux comprendre, rien de tel qu'une s\u00e9rie de vid\u00e9o de C'est pas sorcier :</p> <ul> <li>Comment fonctionne la photographie argentique ?</li> <li>A quoi sert l'obturateur d'un appareil photo ?</li> <li>Comment d\u00e9veloppe-t'on une photo ?</li> </ul> <p>Question</p> \u00c9nonc\u00e9R\u00e9ponses <p>Quels sont les avantages et les d\u00e9fauts de la photographie argentique par rapport \u00e0 la photographie num\u00e9rique ?</p> <p>La photographie num\u00e9rique - et par extension la vid\u00e9o num\u00e9rique - a consid\u00e9rablement chang\u00e9 notre rapport \u00e0 l'image. Tout possesseur de smartphone peut prendre des centaines de photographies, consulter imm\u00e9diatement le r\u00e9sultat de la prise de vue, supprimer, \u00e9diter ou am\u00e9liorer la photographie, et l'envoyer \u00e0 l'autre bout du monde via internet, tout cela pour un co\u00fbt extr\u00eamement bas par photographie.</p> <p>Bien entendu, comme tout progr\u00e8s technologique, celui-ci n'est pas sans poser de nombreux probl\u00e8mes. Par exemple, il est tr\u00e8s facile de copier une photographie num\u00e9rique ( c'est ce qu'on appelle la non-rivalit\u00e9 de l'information num\u00e9rique ). D'o\u00f9 un certain nombre de probl\u00e8mes :</p> <ul> <li>droits d'auteurs ;</li> <li>respect de la vie priv\u00e9e ;</li> <li>droit \u00e0 l'effacement compromis ;</li> <li>deep-fake et manipulation de l'information</li> <li>etc...</li> </ul> <p>Dans ce th\u00e8me, nous \u00e9tudierons \u00e0 la fois le c\u00f4t\u00e9 num\u00e9rique et technologique - comment est constitu\u00e9e une image num\u00e9rique, sous quelle forme elle est stock\u00e9e dans l'ordinateur - mais aussi sur les aspects soci\u00e9taux li\u00e9s \u00e0 l'utilisation des images num\u00e9riques.</p>"},{"location":"SNT/Images/NB/#quelques-considerations-optiques","title":"Quelques consid\u00e9rations optiques","text":""},{"location":"SNT/Images/NB/#les-trames-benday","title":"Les trames Benday","text":"<p>Lors des ann\u00e9es 1950 -1970, les comics am\u00e9ricains ainsi qu'un certain nombre d'\u00e9diteurs de bandes dessin\u00e9es europ\u00e9ens utilisaient pour leurs couleurs une impression quadrichromique bas\u00e9e sur  la m\u00e9thode des Benday dots. Cette m\u00e9thode consiste \u00e0 appliquer de la couleur par une juxtaposition de points de couleurs primaires (par couches cyan, magenta, jaune et noire - \u00e7a ne vous rappelle rien ?) comme dans les images suivantes :</p> <p>BD et Benday Dots</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Cette m\u00e9thode permettait \u00e0 moindre co\u00fbt d'obtenir des nuances de couleurs suffisantes pour une impression de bandes dessin\u00e9es. L'artiste am\u00e9ricain de pop art Roy Lichtenstein. s'est par ailleurs empar\u00e9 de cette m\u00e9thode pour r\u00e9aliser de nombreuses oeuvres.</p>"},{"location":"SNT/Images/NB/#le-pouvoir-de-resolution-de-loeil","title":"Le pouvoir de r\u00e9solution de l'oeil","text":"<p>Si la m\u00e9thode des Benday Dots fonctionne et nous donne l'impression de nuances de couleurs, c'est parce qu'\u00e0 une distance suffisante, nous sommes dans l'impossibilit\u00e9 de distinguer ces points. Ceci est d\u00fb au pouvoir de r\u00e9solution de l'oeil</p> <p>Pour la vision humaine, selon wikip\u00e9dia, \u00able pouvoir de r\u00e9solution de l'\u0153il est d'environ une minute d'arc (\\(1' = 1/60\u00b0 = 0,017\u00b0\\)), soit environ 100 km sur la surface de la Lune vue de la Terre, ou plus proche de nous, un d\u00e9tail d'environ 1 mm pour un objet ou une image situ\u00e9 \u00e0 3 m de distance.\u00bb</p> <p>Exemple</p> <p>A titre d'exemple, on peut consid\u00e9rer cette image sous trois r\u00e9solutions diff\u00e9rentes :</p> <p></p> <p>Si de pr\u00e8s l'image de gauche est beaucoup plus nette que l'image de droite, en vous reculant par rapport \u00e0 l'image, vous trouverez une distance pour laquelle vous ne verrez plus de diff\u00e9rence entre les images. Vous aurez ainsi atteint la limite de r\u00e9solution de votre oeil.</p>"},{"location":"SNT/Images/NB/#du-noir-et-blanc-aux-niveaux-de-gris","title":"Du noir et blanc aux niveaux de gris","text":""},{"location":"SNT/Images/NB/#du-caractere-a-limage","title":"Du caract\u00e8re \u00e0 l'image","text":"<p>Du caract\u00e8re \u00e0 l'image</p> Enonc\u00e9Solution <ol> <li>Cr\u00e9ez un dossier <code>ImagesNumeriques</code> dans votre dossier <code>SNT</code>.</li> <li>T\u00e9l\u00e9chargez et enregistrez dans le dossier pr\u00e9c\u00e9dent le fichier reallyNumbers.txt</li> <li>Ouvrez avec <code>Notepad++</code> le fichier <code>reallyNumbers.txt</code>. Que contient-t-il ?</li> <li>A l'aide de la combinaison <code>CTRL+Molette</code>, d\u00e9zoomer le fichier. Quel constat pouvez-vous faire ?</li> <li>A l'aide de l'outil de remplacement (<code>Recherche &gt; Remplacer</code>), remplacer toutes les valeurs \u00ab<code>255</code>\u00bb  par rien (c'est-\u00e0-dire PAS PAR UN ESPACE), puis remplacez toutes les valeurs \u00ab<code>0</code>\u00bb ( c'est-\u00e0-dire un z\u00e9ro suivi d'un espace) par \u00ab<code>0</code>\u00bb (c'est-\u00e0-dire z\u00e9ro non suivi d'un espace). D\u00e9zoomez de nouveau. Que constate-t-on ?</li> <li>Combien de lignes poss\u00e8de ce fichier ?</li> <li>Combien de caract\u00e8res, espaces compris, y-a-t-il par ligne ?</li> </ol>"},{"location":"SNT/Images/NB/#une-image-en-noir-et-blanc","title":"Une image en noir et blanc","text":"<p>Images en noir et blanc</p> Enonc\u00e9Solutions <ol> <li>T\u00e9l\u00e9chargez et enregistrez dans le r\u00e9pertoire <code>ImagesNumeriques</code> le fichier champiNB.bmp</li> <li>Ouvrez le fichier <code>champiNB.bmp</code> dans un visionneur d'images.</li> <li>Quelle est la largeur en pixel de l'image ?</li> <li>Quelle est la hauteur en pixel de l'image ?</li> <li>Combien y-a-t-il de pixels dans l'image ?</li> <li>Quelle est la dimension en octet de cette image ?</li> </ol> <p>Repr\u00e9senter une image en noir et blanc</p> <p>En simplifiant beaucoup, l'image obtenue dans la partie pr\u00e9c\u00e9dente est une image num\u00e9rique en noir et blanc. Le fichier <code>reallyNumbers.txt</code> est une version lisible du fichier <code>champiNB.bmp</code>. Chaque pixel de l'image est repr\u00e9sent\u00e9 par deux valeurs : \\(255\\) pour du blanc et \\(0\\) pour du noir - soit un octet plein (<code>1111 1111</code>) pour du blanc et un octet vide (<code>0000 0000</code>) pour du noir.</p> <p>Le nombre d'octets dans l'image BMP correpond donc \u00e0 peu pr\u00e8s au nombre de pixels de l'image. La diff\u00e9rence provient d'un petit nombre d'informations - les m\u00e9tadonn\u00e9es - situ\u00e9es dans l'ent\u00eate du fichier pour pr\u00e9ciser le r\u00e9el format de l'image - ici le format <code>BMP</code> ( BitmaP, ou windows BitMap).</p> <p>Ecrans monochromes</p> <p>Au d\u00e9but de l'informatique - des ann\u00e9es 1960 aux ann\u00e9es 1980, il \u00e9tait tr\u00e8s fr\u00e9quent d'utiliser des \u00e9crans monochromes. Ces \u00e9crans \u00e9taient constitu\u00e9s de luminophores - une substance qui \u00e9met de la lumi\u00e8re si elle subit une excitation. Ces luminophores donnaient \u00e0 l'\u00e9cran, en fonction de leurs caract\u00e9ristiques, soit une couleur blanche, soit une couleur orange, mais le plus souvent une couleur verte ! D'o\u00f9 les images bien connues du film <code>Matrix</code>, ou les couleurs des affichages des ordinateurs de bord dans la premi\u00e8re trilogie de <code>Star Wars</code>.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Certains \u00e9crans monochromes sont toujours utilis\u00e9s en raison de leur tr\u00e8s grande lisibilit\u00e9.</p>"},{"location":"SNT/Images/NB/#generer-ses-propres-images","title":"G\u00e9n\u00e9rer ses propres images","text":"<p>Fabriquer en PixelArt</p> Enonc\u00e9 <ol> <li>Ouvrir le logiciel <code>Thonny</code>.</li> <li> <p>Ouvrir le menu <code>Tools &gt; Manage packages</code> et dans la barre de recherche, chercher le module <code>pillow</code>, et l'installer si il n'est pas d\u00e9j\u00e0 install\u00e9.</p> <p></p> </li> <li> <p>T\u00e9l\u00e9chargez et sauvegardez le fichier GenereBMP.py, puis ouvrez le dans <code>Thonny</code>.</p> </li> <li>Ex\u00e9cutez le programme, en sauvegardant le fichier sous le nom <code>Stripes.bmp</code>. Ouvrez l'image obtenue. Qu'obtient-on ?</li> <li> <p>Dans le code, quelle structure repr\u00e9sente l'image ?</p> <p>Matrice des pixels</p> <p>En Python, une telle structure est un tableau (plus pr\u00e9cis\u00e9ment, un tableau est une liste de listes). Un tableau de nombre est appel\u00e9 une matrice. Dans notre cas chaque nombre de la matrice <code>pix</code> repr\u00e9sente un pixel soit de couleur noire (\\(0\\)), soit de couleur blanche(\\(255\\)).</p> </li> <li> <p>Combien y-a-t-il de pixels dans cette image ?</p> </li> <li> <p>Modifiez la matrice afin d'obtenir l'image suivante :</p> <p></p> </li> <li> <p>A l'aide des grilles suivantes, cr\u00e9ez deux nouvelles images :</p> <p></p> <p></p> <p></p> <p></p> <p></p> </li> <li> <p>Modifiez la matrice pour cr\u00e9er vos deux images.</p> </li> <li>Combien de valeurs sont n\u00e9cessaires pour une image de \\(16 \\times 16\\) pixels ? de \\(32 \\times 32\\) pixels ? de \\(64 \\times 64\\) pixels ?</li> </ol>"},{"location":"SNT/Images/NB/#les-niveaux-de-gris","title":"Les niveaux de gris","text":"<p>T\u00e9l\u00e9chargez et sauvegardez les fichiers champisGris.txt et champisGris.bmp.</p> <p>Le fichier <code>champiGris.txt</code> contient l'extraction des pixels du fichier <code>champiGris.bmp</code>. Quelle est la principale diff\u00e9rence par rapport au fichier <code>champiNB.txt</code> ?</p> <p>Nuances de gris</p> <p>Contrairement aux \u00e9crans monochromes, qui ne pouvaient pour chaque luminophore prendre que deux valeurs (allum\u00e9s et \u00e9teints), les \u00e9crans de t\u00e9l\u00e9vision \u00e0 tubes cathodiques dits \u00ab en noir et blanc \u00bb \u00e9taient en fait capable de prendre toute une nuance de couleur entre le noir et le blanc, ce qu'on appelle des niveaux de gris.</p> <p>De la m\u00eame mani\u00e8re qu'en noir et blanc, ont peut donc cr\u00e9er et manipuler des images en niveau de gris, chaque pixel pouvant alors prendre une valeur enti\u00e8re comprise entre \\(0\\) et \\(255\\), soit \\(256\\) nuances diff\u00e9rentes.</p>"},{"location":"SNT/Images/NB/#transformer-des-images","title":"Transformer des images","text":"<p>Manipuler et transformer des images</p> Enonc\u00e9 <ol> <li>T\u00e9l\u00e9chargez et enregistrez le fichier vador.jpeg dans votre dossier <code>SNT/ImagesNum\u00e9riques</code>.</li> <li>T\u00e9l\u00e9chargez et enregistrez traitementGris.py  puis ouvrez-le dans <code>Thonny</code>.</li> <li>Ex\u00e9cuter le fichier <code>traitementGris.py</code>.</li> <li> <p>Comment s'appelle la transformation effectu\u00e9e entre les deux images ?</p> <p>La carte des pixels (Pixel Map)</p> <p>Chaque pixel d'une image est rep\u00e9r\u00e9 par ses coordonn\u00e9es, sous la forme d'un couple \\((x~;~y)\\) d'entiers, compris entre :</p> <ul> <li><code>0</code> et <code>width-1</code>, o\u00f9 <code>width</code> est la largeur de l'image;</li> <li><code>0</code> et <code>height-1</code>, o\u00f9 <code>height</code> est la hauteur de l'image.</li> </ul> <p>L'axe des abscisses est horizontal, et dirig\u00e9 vers la droite (comme en maths). L'axe des ordonn\u00e9es est vertical, et dirig\u00e9 vers le bas (au contraire des maths !)</p> <p></p> <p>Le pixel obtenu par sym\u00e9trie axiale d'axe vertical m\u00e9dian en partant du pixel de coordonn\u00e9es \\((x~;~y)\\) est donc celui de coordonn\u00e9es \\((width - 1 - x~;~y)\\).</p> <p>On voit cette transformation dans le code Python :</p> <p></p><pre><code>gs, alpha = file.getpixel((x,y))\n# On place dans la nouvelle image le sym\u00e9trique du pixel travaill\u00e9\npixels[width-1-x,y] = (gs, alpha)\n</code></pre> D\u00e9taillons le code : <ul> <li><code>gs, alpha = file.getpixel((x,y))</code> : on cr\u00e9e deux variables <code>gs</code> et <code>alpha</code>, qui contiennent les valeurs <code>gs</code> et <code>alpha</code> du pixel de coordonn\u00e9es \\((x;y)\\) de l'image d'origine (<code>file</code>). A titre d'information :<ul> <li><code>gs</code> (pour greyscale) contient le niveau de gris ;</li> <li><code>alpha</code> contient le niveau de transparence (canal alpha) du pixel (inutile dans ce TP).</li> </ul> </li> <li><code>pixels[width-1-x,y] = (gs, alpha)</code> : on place dans la nouvelle image <code>pixels</code> aux coordonn\u00e9es sym\u00e9triques\\((width-1-x;y)\\) les valeurs <code>gs</code> et <code>alpha</code> r\u00e9cup\u00e9r\u00e9es.</li> </ul> </li> <li> <p>Comment transformer le code pour obtenir une sym\u00e9trie d'axe horizontal ?</p> </li> <li>Comment transformer le code pour obtenir une rotation \u00e0 180\u00b0 de l'image originale ?</li> <li> <p>Pour obtenir un n\u00e9gatif de l'image originelle, il faut changer la valeur de chaque pixel de la mani\u00e8re suivante :</p> <ul> <li>un pixel de valeur 255 devient de valeur 0 et inversement ;</li> <li>un pixel de valeur 250 devient de valeur 5 et inversement :</li> <li>un pixel de valeur 100 devient de valeur 1555 et inversement :</li> <li>...</li> </ul> <p>Que changer dans la ligne suivante pour obtenir un tel n\u00e9gatif ?</p> <pre><code>pixels[width-1-x,y] = (gs, alpha)\n</code></pre> </li> </ol> <p>Autres images</p> <p>Vous pouvez aussi vous amuser avec d'autres images, il suffit de les mettre dans votre dossier <code>SNT/Images</code> et de changer le nom dans la ligne 6 du programme <code>traitementGris.py</code>.</p>"},{"location":"SNT/Images/RGB/","title":"La couleur et le RGB","text":""},{"location":"SNT/Images/RGB/#les-images-en-couleur","title":"Les images en couleur","text":""},{"location":"SNT/Images/RGB/#les-ecrans-couleurs","title":"Les \u00e9crans couleurs","text":"<p>Toutes les questions suivantes sont \u00e0 r\u00e9aliser \u00e0 l'aide de l'appareil photo de votre t\u00e9l\u00e9phone portable. Si la manipulation ne fonctionne pas, vous pourrez trouver des images d'exemples dazns le r\u00e9pertoire de votre classe.</p> <ol> <li>A l'aide de l'appareil photo de votre t\u00e9l\u00e9phone portable, prenez une photo de l'\u00e9cran ed l'ordinateur avec un zoom maximal. Essayez d'obtenir une photo la plus nette possible.</li> <li>Ouvrez la photo prise, et zoomez la au maximum. Que voit-on ? Faites un sch\u00e9ma ci-dessous.</li> </ol>"},{"location":"SNT/Images/RGB/#le-format-rgb","title":"Le format RGB","text":"<p>la synth\u00e8se additive RGB</p> <p>Une norme fr\u00e9quemment utilis\u00e9e pour les images num\u00e9riques est la norme <code>RGB</code> (Red Green Blue). Ce qu'on appelle un pixel d'\u00e9cran est compos\u00e9 de trois leds des trois couleurs RGB. Un pixel informatique est alors repr\u00e9sent\u00e9 sous la forme de trois valeurs num\u00e9riques comprises entre \\(0\\) et \\(255\\), \\(0\\) repr\u00e9sentant la led \u00e9teinte, et \\(255\\) la led totalement allum\u00e9e.  Ainsi  :</p> <ul> <li>la couleur rouge est repr\u00e9sent\u00e9e par \\((255,0,0)\\) ;</li> <li>la couleur verte est repr\u00e9sent\u00e9e par \\((0,255,0)\\) ;</li> <li>la couleur bleue est repr\u00e9sent\u00e9e par \\((0,0,255)\\) ;</li> <li>la couleur fuchsia (violet) est repr\u00e9sent\u00e9e par \\((255,0,255)\\) ...</li> </ul> <p>Vous pouvez utiliser le site suivant pour essayer les diff\u00e9rentes valeurs.</p> <ol> <li>Quelle est le triplet de valeur RGB pour la couleur jaune ?</li> <li>Quelle est la couleur repr\u00e9sent\u00e9e par le triplet RGB \\((255, 153, 0)\\) ?</li> <li> <p>T\u00e9l\u00e9chargez puis ouvrez avec Thonny le fichier <code>FunWithFlags.py</code>, puis ex\u00e9cutez-le.</p> <ol> <li>Quel est le nom du fichier image cr\u00e9\u00e9 ?</li> <li>Quelle est la dimension en pixel de l'image cr\u00e9\u00e9e ?</li> <li> <p>A quoi sert la ligne d'instructions</p> <pre><code>for x in range(200) :\n</code></pre> </li> <li> <p>Que repr\u00e9sentent les variables \\(x\\) et \\(y\\) dans la ligne de commande :     </p><pre><code>img.putpixel((x,y),(0,0,255))\n</code></pre> </li> <li>Compl\u00e9ter le fichier afin de r\u00e9aliser le drapeau fran\u00e7ais.</li> <li>Faire de m\u00eame avec le drapeau belge.</li> <li>Comment r\u00e9aliser un drapeau N\u00e9erlandais ?</li> </ol> </li> </ol>"},{"location":"SNT/Images/RGB/#un-peu-dart","title":"Un peu d'art","text":"<p>Transparence et Canal Alpha</p> <p>Pour certains types d'images, un quatri\u00e8me octet est utilis\u00e9 pour chaque pixel. Il s'agit du canal alpha, qui caract\u00e9rise la transparence de ce pixel. Cette couche suppl\u00e9mentaire permet de superposer des images - par exemple dans un jeu vid\u00e9o un sprite pourra  appara\u00eetre sur le fond, sans masquer la totalit\u00e9 sous la forme d'un carr\u00e9.</p> <p>Cet octet suppl\u00e9mentaire est utilis\u00e9 de la mani\u00e8re suivante :</p> <ul> <li>si il est \u00e0 \\(255\\), le pixel est correctemnt affich\u00e9 ;</li> <li>si il est \u00e0 \\(0\\), le pixel est transparent.</li> </ul> <p>Dans toutes les images suivantes, le canal alpha a \u00e9t\u00e9 d\u00e9sactiv\u00e9. Il n'y aura donc pas de transparence !</p> <p>Andy Warhol</p> <p>Andy Warhol est un artiste am\u00e9ricain, n\u00e9 le 6 ao\u00fbt 1928 \u00e0 Pittsburgh, en Pennsylvanie, et mort le 22 f\u00e9vrier 1987 \u00e0 New York. Il est l'un des principaux repr\u00e9sentants du pop art. Il est particuli\u00e8rement c\u00e9l\u00e8bre pour certaines de ses oeuvres mettant en sc\u00e8ne l'actrice Marilyn Monroe, le visage de cette derni\u00e8re \u00e9tant reproduit plusieurs fois avec diff\u00e9rentes couleurs, et les portraits \u00e9tant juxtapos\u00e9s.</p> <p></p> <p>De nombreux artistes du pop-art,du street-art et m\u00eame de la culture geek ont repris cette oeuvre et l'ont d\u00e9tourn\u00e9e avec leurs propres personnages.</p> <p>N'\u00e9tant pas (encore) des artistes \u00e9m\u00e9rites, nous nous contenterons donc de copier Andy Warhol, en commen\u00e7ant pas extraire et cr\u00e9er des images monochromes \u00e0 partir d'une seule image. Pour cela, nous allons appliquer des filtres \u00e0 une image originelle, filtres qui vont nous renvoyer une matrice de pixels modifi\u00e9e par ces filtres.</p> <ol> <li>T\u00e9l\u00e9chargez et copiez dans votre espace personnel les fichiers <code>MonoChromes.py</code> et <code>Stormtroppers.png</code>.</li> <li>Ouvrez le fichier <code>MonoChromes.py</code> avec Thonny, puis ex\u00e9cutez-le. Normalement vous devriez voir appara\u00eetre une image de Stormtrooper en niveaux de gris. Observez ensuite les derni\u00e8re lignes du code Python.</li> </ol> <p>Fonctions du code</p> <p>Voici une description de quelques fonctions pr\u00e9sente dans le code :</p> <ul> <li><code>makeMatrix</code> (L.98) : fabrique une matrice de  pixel RGB \u00e0 partir d'une image s\u00e9lectionn\u00e9e et ouverte dans la ligne 97.</li> <li><code>showFromMatrix</code> (L.99) : affiche dans le visionneur d'image l'image g\u00e9n\u00e9r\u00e9e par la matrice qui lui est donn\u00e9e en argument.</li> </ul>"},{"location":"SNT/Images/RGB/#monochromes","title":"Monochromes","text":"<ol> <li>D\u00e9commentez (= supprimez le symbole #) les lignes 100 et 101, et commentez(= ajoutez devant une ligne le symbole #)</li> <li>Ex\u00e9cutez le code. Qu'obtenez-vous ?</li> <li>La fonction utilis\u00e9e en ligne 100 utilise un filtre sous la forme \\((0,1,0)\\). A quoi correspondent ces nombres selon vous ?</li> <li>Appliquer un filtre donnant une image rouge. Quel filtre avez-vous appliqu\u00e9 ?</li> <li>Appliquer un filtre donnant une image bleue. Quel filtre avez-vous appliqu\u00e9 ?</li> <li>Quel filtre faut-il appliquer pour obtenir une image jaune ? magenta ? cyan ?</li> </ol> <p>Filtres de couleurs</p> <p>La fonction <code>extractColor</code> (L.26-46) utilise un filtre pour extraire la coloration d'une image. Le filtre RGB est \u00e9crit sous la forme d'un tuple \\((x,y,z)\\) (un tuple est une structure Python contenant plusieurs donn\u00e9es, s\u00e9par\u00e9es par des virgules, et encadr\u00e9es par une paire de parenth\u00e8ses).</p> <p>\\(x\\), \\(y\\) et \\(z\\) sont des r\u00e9els qui sont compris entre 0 et 2 avec la norme suivante :</p> <ul> <li>\u00e0 0, renvoie la valeur 0 de la composante ;</li> <li>\u00e0 1, renvoie la valeur actuelle de la composante du pixel ;</li> <li>\u00e0 2, renvoie la valeur maximale de cette composante ( 255) ;</li> <li>toute autre valeur donnera une teinte modifi\u00e9e de la teinte originale, plus sombne si le nombre est compris entre 0 et 1, plus claire si ce nombre est compris entre 1 et 2.</li> </ul>"},{"location":"SNT/Images/RGB/#posterisation","title":"Post\u00e9risation","text":"<ol> <li>Commentez les lignes 100 et 101, et d\u00e9commentez les lignes 102 et 103.</li> <li>Ex\u00e9cutez alors le code. Qu'obtient-on ?</li> <li>Observez la ligne 69 :     <pre><code>poster =  [[0]*2*width for _ in range(1*height)]\n</code></pre>     A votre avis, quelle est la dimension de la matrice <code>poster</code> par rapport \u00e0 l'image originale ?</li> <li> <p>Que se passe-t-il dans les lignes 70 \u00e0 73 ?</p> <pre><code>M1 = makeMatrix(img)\nMR = extractColor(img,(1,0,0))\nMG = extractColor(img,(0,1,0))\nMB = extractColor(img,(0,0,1))\n</code></pre> </li> <li> <p>Dans la ligne 76,</p> <p></p><pre><code>poster[y][x] = M1[y][x]\n</code></pre> Chaque pixel de l'image originale <code>M1</code> est plac\u00e9 aux m\u00eame coordonn\u00e9es dans la matrice <code>poster</code>. Que signifie alors la ligne 77 ? <pre><code>poster[y][x+width] = MR[y][x]\n</code></pre> <p>Post\u00e9riser</p> <p>Pour post\u00e9riser \u00e0 la mani\u00e8re d'Andy Warhol notre image, nous devrons copier dans la matrice <code>poster</code> les images manquantes vertes et bleues. Pour cela il faut comprendre la fa\u00e7on dont les matrices devront s'organiser, et pour cela iol faut comprendre le syst\u00e8me de coordonn\u00e9es des images :</p> <p></p> </li> <li> <p>Modifier la ligne 69 puis les lignes situ\u00e9es apr\u00e8s la ligne 77 pour obtenir une post\u00e9risation telle que celle-ci :</p> <p></p> </li> <li> <p>Vous pouvez d\u00e9sormais choisir votre propre image, et la post\u00e9riser \u00e0 la mani\u00e8re d'Andy Warhol. Vous pouvez m\u00eame  cr\u00e9er des images telles que celles-ci, sans modifier beaucoup le code :</p> <p></p> </li> </ol>"},{"location":"SNT/Images/RGB/#autres-transformations","title":"Autres transformations","text":"<ol> <li> <p>Dans le code on trouve la fonction <code>negativ</code>, qui prend une image en argument et renvoie la matrice du n\u00e9gatif de cette image. Le principe est simple : pour chaque composante RGB, on affecte la teinte oppos\u00e9e, par le calcul \\(255-x\\), o\u00f9 \\(x\\) est la valeur de la composante. On obtient ainsi un n\u00e9gatif de l'image originelle. Vous pouvez essayer en d\u00e9commentant les lignes suivantes :</p> <p></p><pre><code>neg = negativ(originalImg)\nshowFromMatrix(neg)\n</code></pre> 2. En s'inspirant de la fonction <code>negativ</code>, cr\u00e9er une fonction <code>permuteBRG</code> qui permute les composantes RGB d'une image, en transformant le rouge en bleu, le vert en rouge, et le bleu en vert. 3. Faire de m\u00eame avec une fonction <code>permuteGBR</code> qui permute les composantes RGB d'une image, en transformant le rouge en vert, le vert en bleu, et le bleu en rouge. 4. Cr\u00e9er \u00e0 partir de la fonction <code>negativ</code> une nouvelle fonction <code>rotateRGB</code>, et remplacer la ligne <pre><code>negat[y][x] = 255-R,255-G,255-B\n</code></pre> par  <pre><code>negat[y][x] = matrix[height-1-y][width-1-x]\n</code></pre> Comment est l'image obtenue ? </li> <li> <p>Modifier de m\u00eame la fonction pour obtenir une sym\u00e9trie horizontale, puis une sym\u00e9trie verticale.</p> </li> </ol>"},{"location":"SNT/Reseaux/Creation_reseaux/","title":"Cr\u00e9ation de r\u00e9seaux","text":""},{"location":"SNT/Reseaux/Creation_reseaux/#connecter-des-reseaux-entre-eux-internet","title":"Connecter des r\u00e9seaux entre eux : Internet","text":"<p>Nous avons vu dans la partie pr\u00e9c\u00e9dente l'importance du protocole TCP/IP dans la communication entre plusieurs ordinateurs d'un m\u00eame r\u00e9seau.</p> <p>Adresses MAC</p> <p>En fait, au sein d'un m\u00eame r\u00e9seau, les adresses IP ne sont pas essentielles. Ce sont en fait les adresses MAC - th\u00e9oriquement uniques - qui sont \u00e9chang\u00e9es entre les machines. Mais pour des raisons de simplifications nous resterons sur les adresses IP.</p> <p>Cr\u00e9er un  r\u00e9seau est donc une chose relativement ais\u00e9e. Mais comment relier deux r\u00e9seaux existants entre eux ? Comment interconnecter plusieurs de ces r\u00e9seaux, pour obtenir le r\u00e9seau des r\u00e9seaux, commun\u00e9ment appel\u00e9 Internet ?</p>"},{"location":"SNT/Reseaux/Creation_reseaux/#adresses-ip-et-masques-de-sous-reseau","title":"Adresses IP et masques de sous-r\u00e9seau","text":"<p>Masque de sous-r\u00e9seau</p> <p>Dans le protocole TCP/IP, l'adresse IP n'est pas seulement l'adresse de la machine. Il s'agit aussi de l 'adresse du r\u00e9seau. Plus sp\u00e9cifiquement, une adresse IP est toujours accompagn\u00e9e de ce qu'on appelle un masque r\u00e9seau. Il s'agit d'un nombre binaire sur 4 octets ( comme les adresses IP ), qui peut \u00eatre repr\u00e9sent\u00e9 sous la m\u00eame forme qu'une adresse IP.</p> <p>G\u00e9n\u00e9ralement, les masques sont de la forme :</p> <ul> <li><code>255.0.0.0</code> ;</li> <li><code>255.255.0.0</code> ;</li> <li><code>255.255.255.0</code> .</li> </ul> Pour les curieux <p>Un masque r\u00e9seau IPV4 est une s\u00e9rie de 32 bits ( 8x4 donc 32 bits), telle que les bits de gauche soient tous des 1 et ceux de droite tous des z\u00e9ros. Par exemple <code>11111111.11111111.00000000.00000000</code> est un masque, <code>11111111.11111111.11110000.00000000</code> est aussi un masque, mais <code>11111111.11111111.00001111.00000000</code> n'en est pas un.</p> <p>La question n'est pas ici de rentrer dans une technique de calculs binaires assez complexe, mais de vous faire comprendre comment fonctionne globalement un masque. Il faut juste retenir que le nombre \\(255\\) en base 10 s'\u00e9crit en binaire <code>11111111</code>, et que le nombre \\(0\\) s'\u00e9crit <code>00000000</code> Donc nous allons supposer que seul les 3 premiers octets peuvent \u00eatre pleins de 1,c'est \u00e0 dire :</p> <ul> <li><code>255.0.0.0</code> (soit <code>11111111.00000000.00000000.00000000</code>);</li> <li><code>255.255.0.0</code> (soit <code>11111111.11111111.00000000.00000000</code>);</li> <li><code>255.255.255.0</code> (soit <code>11111111.11111111.11111111.00000000</code>).</li> </ul> <p>Ce n'est pas exact, car en r\u00e9alit\u00e9 le masque n'est pas oblig\u00e9 de compl\u00e9ter int\u00e9gralement un octet. On peut ainsi avoir des masques de type <code>11111111.11100000.00000000.00000000</code>, o\u00f9 le deuxi\u00e8me octet n'est que partiellement compl\u00e9t\u00e9 - ce qui donne alors un masque <code>255.204.0.0</code>. Mais ce type de masque a pour cons\u00e9quence de rendre certains calculs tr\u00e8s fastidieux pour les humains, qui comptent en base d\u00e9cimale, alors que les machines, qui comptent en binaire r\u00e9ussissent facilement ces calculs.</p> <p>Exercice</p> <ol> <li>Placer deux ordinateurs dans l'espace de travail <code>Filius</code>.</li> <li>Configurez :<ol> <li>le premier avec comme adresse IP <code>192.168.0.10</code> et comme masque <code>255.255.255.0</code> ;</li> <li>le second avec avec comme adresse IP <code>192.168.1.10</code> et comme masque <code>255.255.0.0</code>.</li> </ol> </li> <li>Installez sur chacun des pc le programme Ligne de commande.</li> <li>Sur la machine <code>192.168.0.10</code>, essayez de joindre avec la commande <code>ping</code> la machine <code>192.168.1.10</code>. Que se passe-t-il ?</li> <li>Sur la machine <code>192.168.1.10</code>, essayez de joindre avec la commande <code>ping</code> la machine <code>192.168.0.10</code>. Que se passe-t-il ?</li> </ol> <p>Masque de r\u00e9seau et IP</p> <p>Le masque de r\u00e9seau permet de d\u00e9finir quelle partie de l'adresse IP est celle du r\u00e9seau, et quelle partie est celle de la machine. Ainsi la machine dont l'IP est <code>172.16.180.1</code> avec la masque <code>255.255.0.0</code> a pour adresse de r\u00e9seau <code>172.16.X.X</code> et pour adresse de machine <code>X.X.180.1</code> Une machine ne pourra communiquer par principe qu'avec les machines poss\u00e9dant le m\u00eame num\u00e9ro de r\u00e9seau.</p> <p>Exemple</p> <p>Avec les donn\u00e9es de l'exercice pr\u00e9c\u00e9dent :</p> <p></p>"},{"location":"SNT/Reseaux/Creation_reseaux/#le-routeur-un-appareil-pour-relier-les-reseaux","title":"Le routeur : un appareil pour relier les r\u00e9seaux","text":"<p>Routeur</p> <p>Un routeur est une machine poss\u00e9dant plusieurs cartes r\u00e9seaux, et \u00e9tant capable de faire des liens (des routes) entre diff\u00e9rents r\u00e9seaux. Un routeur poss\u00e8de une adresse IP pour chacun des r\u00e9seaux duquel il fait partie, et est consid\u00e9r\u00e9 comme faisant partie de chacun des r\u00e9seaux auquel il est reli\u00e9.</p> <p>Exercice</p> <p>Nous allons tenter de relier deux r\u00e9seaux diff\u00e9rents entre eux :</p> <ul> <li>dans le premier il y a trois machines (sous forme de tours) d'IP <code>192.168.0.10</code> \u00e0 <code>192.168.0.12</code>, toutes avec le masque <code>255.255.255.0</code>, reli\u00e9es par un switch ;</li> <li>dans le deuxi\u00e8me il y a trois machines (sous forme de portables) d'IP <code>172.180.100.110</code> \u00e0 <code>172.180.100.112</code>, toutes avec le masque <code>255.255.0.0</code>, reli\u00e9es par un switch.</li> </ul> <p>R\u00e9pondez \u00e0 chacune des questions suivantes :</p> <ol> <li>Quel est le num\u00e9ro de r\u00e9seau du premier r\u00e9seau ? Du second r\u00e9seau ?</li> <li>Cr\u00e9ez dans <code>Filius</code> ces deux r\u00e9seaux, le r\u00e9seau <code>192.168.0.X</code>. \u00e9tant situ\u00e9 \u00e0 gauche de l'acran, et le r\u00e9seau <code>172.180.X.X</code> \u00e9tant \u00e0 doite.</li> <li>Installez la ligne de commande sur une des machines de chacun des r\u00e9seaux, et v\u00e9rifiez si vous pouvez utiliser correctement la commande <code>ping</code>.</li> <li>Placez un routeur au milieu, avec deux interfaces, et joignez le par un c\u00e2ble \u00e0 chaque switch.</li> <li> <p>Le routeur \u00e9tant une machine du r\u00e9seau, il faut lui adresser une IP compatible pour chacun de ces r\u00e9seaux. Vous lui donnerez comme IP <code>192.168.0.254</code> pour le premier, et <code>172.180.100.254</code> pour le second.     Testez la commande <code>ping</code> entre deux postes des deux r\u00e9seaux. Que se passe-t-il ?</p> <p>Passerelle</p> <p>Une machine basique n'est normalement pas capable de r\u00e9soudre (c'est-\u00e0-dire identifier) des adresses IP n'appartenant pas \u00e0 son r\u00e9seau. Elle d\u00e9l\u00e8gue ce travail \u00e0 une machine particuli\u00e8re, appel\u00e9e passerelle (ou \\emph{Gateway}). Cette machine particuli\u00e8re peut \u00eatre une machine du r\u00e9seau, comme un serveur sp\u00e9cifique, ou bien directement un routeur.</p> </li> <li> <p>Configurez les machines du r\u00e9seau <code>192.168.0.X</code>  pour qu'elles aient comme passerelle l'IP du routeur, c'est-\u00e0-dire <code>192.168.0.254</code>. Faites de m\u00eame avec le r\u00e9seau <code>172.180.X.X</code>.     Testez de nouveau la commande <code>ping</code>. Que se passe-t-il ?</p> </li> <li>Installez sur une machine du r\u00e9seau <code>192.168.0.X</code> un serveur web, et testez sur les machines du r\u00e9seau <code>172.180.X.X</code> l'affichage de la page web d'accueil du serveur.</li> </ol>"},{"location":"SNT/Reseaux/Creation_reseaux/#multiples-reseaux-multiples-routeurs","title":"Multiples r\u00e9seaux, multiples routeurs","text":"<p>*Cette partie est tr\u00e8s largement inspir\u00e9e du travail de David Roche.</p> <p>Internet</p> <p>D'apr\u00e8s wikip\u00e9dia ; \u00ab Internet est le r\u00e9seau informatique mondial accessible au public. C'est un r\u00e9seau de r\u00e9seaux, \u00e0 commutation de paquets, sans centre n\u00e9vralgique, compos\u00e9 de millions de r\u00e9seaux aussi bien publics que priv\u00e9s, universitaires, commerciaux et gouvernementaux, eux-m\u00eames regroup\u00e9s en r\u00e9seaux autonomes (il y en avait plus de 91 000 en 2019). \u00bb </p> <p>Nous avons vu comment relier deux r\u00e9seaux diff\u00e9rents. Internet fonctionne donc de la m\u00eame mani\u00e8re, mais avec plusieurs milliers de r\u00e9seaux reli\u00e9s entre eux par l'interm\u00e9diaire de nombreux routeurs, priv\u00e9s ou publics.</p> <p>Exercice</p> <p>Dans <code>Filius</code> ouvrez le fichier <code>snt_sim_res.fls</code> situ\u00e9 dans les documents en consultations de votre r\u00e9pertoire de classe. Ce fichier repr\u00e9sente une petite portion d'Internet simplifi\u00e9e \u00e0 l'extr\u00eame :</p> <p></p> <p>Il contient :</p> <ul> <li>\\(15\\) ordinateurs : \\(M1\\) \u00e0 \\(M15\\) ;</li> <li>\\(6\\) switchs : \\(R1\\) \u00e0 \\(R6\\) ;</li> <li>$8 $routeurs : \\(A, B, C, D, E, F, G\\) et \\(H\\).</li> </ul> <p>Voici quelques exemples de communications entre 2 ordinateurs. Pour chacun des suivants, donnez les trajets (c'est-\u00e0-dire les machines) suivis par les paquets de donn\u00e9es :</p> <ol> <li>cas n\u00b01 : M1 veut communiquer avec M3</li> <li>cas n\u00b02 : M1 veut communiquer avec M6</li> <li>cas n\u00b03 : M1 veut communiquer avec M9</li> <li>cas n\u00b04 : M13 veut communiquer avec M9</li> </ol> <p>Routage des paquets</p> <p>Il est tr\u00e8s important de bien comprendre qu'il existe souvent plusieurs chemins possibles pour relier 2 ordinateurs. Nous pouvons avoir : </p> \\[ M13 \\rightarrow R6 \\rightarrow Routeur~G \\rightarrow Routeur~F \\rightarrow Routeur~E \\rightarrow R4 \\rightarrow M9 \\] <p>ou encore :</p> \\[ M13 \\rightarrow R6 \\rightarrow Routeur~G \\rightarrow Routeur~F \\rightarrow Routeur~H \\rightarrow Routeur~C \\rightarrow Routeur~D\\\\ \\rightarrow Routeur~E \\rightarrow R4 \\rightarrow M9 \\] <p>On pourrait penser que le chemin \u00ab \\(Routeur~F \\rightarrow Routeur~E\\)\u00bb est plus rapide et donc pr\u00e9f\u00e9rable au chemin \u00ab \\(Routeur~F \\rightarrow Routeur~H\\)\u00bb, cela est sans doute vrai, mais imaginez qu'il y ait un probl\u00e8me technique entre le Routeur F et le Routeur E, l'existence du chemin \u00ab \\(Routeur~F \\rightarrow Routeur~H\\)\u00bb permettra tout de m\u00eame d'\u00e9tablir une communication entre \\(M13\\) et \\(M9\\). Parfois, on entend certains politiques ou journalistes \u00e9voquer \u00ab la coupure d'internet \u00bb, peut \u00eatre comprendrez-vous mieux maintenant que cela n'a aucun sens, car m\u00eame si une autorit\u00e9 quelconque d\u00e9cidait de couper une partie des infrastructures, les paquets pourraient passer par un autre chemin. C'est ce \u00e0 quoi font r\u00e9f\u00e9rence les termes \u00ab sans centre n\u00e9vralgique \u00bb dans la d\u00e9finition de wikip\u00e9dia.</p>"},{"location":"SNT/Reseaux/DHCP_DNS/","title":"Pour aller plus loin, DHCP et DNS","text":""},{"location":"SNT/Reseaux/DHCP_DNS/#pour-aller-plus-loin-dhcp-et-dns","title":"Pour aller plus loin: DHCP et DNS","text":"<p>Dans notre quotidien, nous ne nous pr\u00e9occupons jamais de savoir quelle est l'adresse IP de notre machine, et nous utilisons des pages web dont le nom est plus humainement lisible que <code>223.145.172.37</code>. Ceci est d\u00fb \u00e0 l'utilisation de deux protocoles : <code>DHCP</code> et <code>DNS</code>.</p>"},{"location":"SNT/Reseaux/DHCP_DNS/#dhcp","title":"DHCP","text":"<p>DHCP</p> <p>DHCP est un acronyme signifiant Dynamic Host Configuration Protocol. Il s'agit d'un protocole dont le r\u00f4le est de distribuer automatiquement les adresses de configuration IP des machines d'un r\u00e9seau. Il s'agit en fait de deux programmes, un pour le serveur et un pour les clients.</p> <ol> <li>Dans Filius, placer un ordinateur, un switch et un routeur ( avec plus de 3 interfaces).</li> <li>Relier le switch aux deux autres \u00e9l\u00e9ments.</li> <li>Configurer le routeur c\u00f4t\u00e9 switch avec :<ul> <li>IP : <code>192.168.0.254</code></li> <li>Masque : <code>255.255.255.0</code></li> </ul> </li> <li>Configurer l'ordinateur :<ul> <li>Nom : Serveur DHCP</li> <li>IP : <code>192.168.0.1</code></li> <li>Masque : <code>255.255.255.0</code></li> <li>Passerelle : <code>192.168.0.254</code></li> </ul> </li> <li>Toujours sur cette machine, dans l'onglet de configuration, cliquer sur <code>Configuration du service DHCP</code>.</li> <li>Configurer :<ul> <li>D\u00e9but de plage : <code>192.168.0.100</code></li> <li>Fin de plage : <code>192.168.0.200</code></li> <li>V\u00e9rifier que la passerelle et le masque sont conformes au r\u00e9seau cr\u00e9\u00e9.</li> <li>Cocher la case \u00ab Activer le service DHCP \u00bb.</li> </ul> </li> <li>Placer maintenant 5 ordinateurs portables, \u00e0 relier au switch.</li> <li>Pour chacun de ces portables, dans la configuration, cochez :<ul> <li>\u00ab Utiliser l'adresse IP comme nom \u00bb</li> <li>\u00ab Adressage automatique par serveur DHCP\u00bb</li> </ul> </li> <li>D\u00e9marrez  la simulation et observez ce qui se passe.</li> </ol> <p>Construction d'un r\u00e9seau</p> <p>Ainsi, avec un serveur DHCP, il est inutile de configurer une machine classique \u00e0 la main. C'est ce qui se passe chez vous, votre Box internet donnant automatiquement une configuration, donc une adresse IP. Cette configuration n'est cependant pas absolue, l'adresse IP d'une machine peut varier au sein d'un r\u00e9seau. En effet, le DHCP distribue sa configuration pour un temps donn\u00e9, appel\u00e9 bail (pluriel : baux). Au terme du bail, une machine peut donc se voir attribuer une adresse IP diff\u00e9rente, et ce de mani\u00e8re transparente.</p> <p>Cependant, il est parfois n\u00e9cessaire sur un r\u00e9seau d'avoir une machine possd\u00e9ant une adresse IP fixe, comme par exemple pour un serveur web, o\u00f9 une passerelle. Dans ce cas on r\u00e8gle l'IP \u00e0 la main en dehors de la plage d'adresse du DHCP.</p>"},{"location":"SNT/Reseaux/DHCP_DNS/#lier-noms-de-domaine-et-adresses-ip-dns","title":"Lier noms de domaine et adresses IP : DNS","text":"<p>Serveur DNS</p> <p>Dans notre utilisation quotidienne du web, nous tapons des adresses constitu\u00e9es de noms de domaines, comme par exemple <code>www.toutatice.fr</code>. Or nous avons vu qu'un site web n'est qu'un ensemble de fichiers situ\u00e9s sur une machine, et que pour rep\u00e9rer cette machine on utilise son adresse IP.</p> <p>Il existe donc des machines tr\u00e8s importantes sur le r\u00e9seau, appel\u00e9es serveurs DNS (acronyme de Domain Name Server), qui permettent de faire le lien entre un nom de domaine et une adresse IP.</p> <p>Ceci impose aux serveurs web d'avoir une IP fixe et non attribu\u00e9e dynamiquement par un serveur DHCP.</p> <ol> <li> <p>Cr\u00e9er un deuxi\u00e8me r\u00e9seau, avec :</p> <ul> <li>Un serveur DHCP d'IP <code>172.16.180.1</code>, de masque <code>255.255.255.0</code>, de passerelle <code>172.16.180.254</code>, et de plage d'IP pour le DHCP <code>172.16.180.100</code> \u00e0 <code>172.16.180.200</code>.</li> <li>Un switch ;</li> <li>3 PC portables avec adressage automatique ;</li> <li>D'un routeur avec 2 interfaces, dont celle reli\u00e9e au r\u00e9seau portant l'IP <code>172.16.180.254</code>.</li> </ul> </li> <li> <p>Relier les deux routeurs entre eux par un cable.</p> </li> <li> <p>Pour le routeur du r\u00e9seau <code>192.168.0.X</code> :</p> <ul> <li>Donner sur l'interface de liaison entre routeurs l'IP <code>1.0.0.1</code>, avec un masque <code>255.0.0.0</code> ;</li> <li>Dans l'onglet <code>General</code>, cocher la case <code>Routage Automatique</code> ;</li> </ul> </li> <li> <p>Pour le routeur du r\u00e9seau <code>172.16.180.X</code> :</p> <ul> <li>Donner sur l'interface de liaison entre routeurs l'IP <code>1.0.0.2</code>, avec un masque <code>255.0.0.0</code> ;</li> <li>Dans l'onglet <code>General</code>, cocher la case <code>Routage Automatique</code> ;</li> </ul> </li> <li> <p>Placer un ordinateur que vous relierez par un c\u00e2ble au routeur directement li\u00e9 au r\u00e9seau <code>192.168.0.X</code>.</p> </li> <li>Configurez cet ordinateur de la mani\u00e8re suivante :<ul> <li>Nom : Serveur DNS</li> <li>IP : <code>10.0.0.100</code></li> <li>Masque : <code>255.255.255.0</code></li> <li>Passerelle : <code>10.0.0.1</code></li> </ul> </li> <li>Configurez sur le routeur la liaison avec le serveur DNS :</li> <li>IP : <code>10.0.0.1</code></li> <li>Masque : <code>255.255.255.0</code></li> <li>Sur les deux serveurs DHCP, configurez la ligne <code>Serveur DNS</code> avec <code>10.0.0.100</code>.</li> <li>Lancez la simulation. Testez sur plusieurs machines si les donn\u00e9es circulent gr\u00e2ce \u00e0 la commande <code>ping</code>.</li> <li>Sur le serveur DHCP du r\u00e9seau <code>192.168.0.X</code>, installez aussi un serveur web, et d\u00e9marrez-le.</li> <li>Testez sur au moins un porable de chaque r\u00e9seau si le serveur web r\u00e9pond, en installant un navigateur web et en demandant dans la barre d'adresse <code>192.168.0.1</code>.     Si tout fonctionne correctement, nous allons pouvoir changer la mani\u00e8re d'atteindre le serveur web.</li> <li>Sur le serveur DNS, installez le logiciel <code>Serveur DNS</code>, d\u00e9marrez-le.</li> <li>Ajoutez comme nom de domaine \u00ab supersite.fr \u00bb pour l'adresse IP <code>192.168.0.1</code>.</li> <li>Testez alors depuis le navigateur d'un portable, avec l'url <code>supersite.fr</code>.</li> </ol>"},{"location":"SNT/Reseaux/DHCP_DNS/#pour-les-plus-courageux","title":"Pour les plus courageux","text":"<p>Sur un serveur web, installez un \u00e9diteur de texte, puis copiez-collez le code HTML du site que vous aviez fabriqu\u00e9 dans la premi\u00e8re partie du cours de SNT.</p> <p>Essayez de le faire s'afficher directement via les portables.</p>"},{"location":"SNT/Reseaux/TCP_IP/","title":"Adresses IP et TCP/IP","text":""},{"location":"SNT/Reseaux/TCP_IP/#adresses-ip-et-protocole-tcpip","title":"Adresses IP et protocole TCP/IP","text":"<p>Lorsque vous tapez dans votre navigateur une URL, comme par exemple \u00ab www.toutatice.fr \u00bb, et que vous appuyez sur entr\u00e9e, votre ordinateur ou t\u00e9l\u00e9phone se met en communication avec une autre machine, probablement \u00e0 Rennes, et cette machine vous renvoie la page HTML correspondante.</p> <p>Cet acte que nous pratiquons quotidiennement soul\u00e8ve de nombreuses questions quand on r\u00e9fl\u00e9chit \u00e0 son fonctionnement :</p> <ul> <li>Comment les ordinateurs se reconnaissent-ils entre eux ?</li> <li>Comment font-ils pour trouver par o\u00f9 faire passer les donn\u00e9es   ?</li> <li>Comment les donn\u00e9es circulent-elles et sont elles reconstitu\u00e9es correctement par l'ordinateur qui les re\u00e7oit ?</li> </ul> <p>Nous ne pourrons bien entendu pas r\u00e9pondre \u00e0 toutes ces questions dans le cadre du cours de SNT, mais nous pouvons quand m\u00eame lever un peu le voile sur le fonctionnement r\u00e9el de l'internet.</p>"},{"location":"SNT/Reseaux/TCP_IP/#connecter-entre-eux-deux-ordinateurs","title":"Connecter entre eux deux ordinateurs","text":"<p>Dans toute la suite de ce th\u00e8me, nous utiliserons le logiciel libre Filius, qui permet de simuler de mani\u00e8re simplifi\u00e9e les r\u00e9seaux informatiques.</p> <p>Commen\u00e7ons donc par connecter deux ordinateurs entre eux, et regardons comment ils communiquent :</p> <ol> <li> <p>Ouvrez le logiciel <code>Filius</code>.</p> <p>Attention : choix de la langue</p> <p>Attention, la premi\u00e8re chose que vous demandera <code>Filius</code> sera de choisir votre langue d'utilisation, et il n'y a pas moyen de changer cette langue sauf en supprimant le fichier de configuration qui se trouve dans le dossier <code>C:\\Users\\\"nom d\u2019utilisateur sur le r\u00e9seau\" \\AppData\\Local\\.filius</code> (sous win7 et win 10).</p> <p>Il est possible de supprimer uniquement le fichier <code>konfig.xml</code> :</p> <pre><code>del C:\\Users\\\"nom d\u2019utilisateur sur le r\u00e9seau\"\\AppData\\Local\\.filius\\konfig.xml\n</code></pre> </li> <li> <p>Par glisser-d\u00e9poser avec l'ic\u00f4ne , placez deux ordinateurs dans l'espace de travail.</p> </li> <li>Ajoutez un c\u00e2ble entre les-deux.</li> <li> <p>Cliquez-droit sur un des ordinateurs, puis choisissez le menu Configurer. Vous ouvrez un menu de configuration de l'ordinateur.</p> <p>Adresses IP - premier aper\u00e7u</p> <p>Afin de pouvoir s'identifier, tout ordinateur poss\u00e8de une adresse sur un r\u00e9seau, appel\u00e9e adresse IP ( pour Internet Protocol).</p> <p>Une adresse IP est de la forme  <code>195.221.67.112</code> (cette adresse IP correspond au serveur <code>epwebc1.toutatice.fr</code>, correspondant \u00e0 l'URL www.toutatice.fr .</p> <p>Les adresses IP, en version 4, sont de la forme : <code>a.b.c.d</code>, avec \\(a, b, c\\) et \\(d\\) qui sont des entiers compris entre 0 et 255. Il existe une version 6 des adresses IP, utilisant 6 valeurs, mais nous nous contenterons d'\u00e9tudier l'IP V4 .</p> <p>Modifiez l'adresse IP d'un des ordinateurs en la rempla\u00e7ant par <code>192.168.0.11</code>. Vous devez aussi, pour chacun des ordinateurs, cocher l'option \u00e0 droite \u00ab <code>Utiliser l'adresse IP comme nom</code> \u00bb.</p> <p></p> </li> <li> <p>D\u00e9marrez la simulation gr\u00e2ce \u00e0 l'ic\u00f4ne .</p> </li> <li> <p>Cliquez-droit sur l'ordinateur portant l'IP <code>192.168.0.10</code> (en n'oubliant pas de r\u00e9gler de mani\u00e8re \u00e0 avoir son IP comme nom), et cliquez sur <code>Afficher les \u00e9changes de donn\u00e9es</code>. D\u00e9placez la fen\u00eatre sur la droite de l'\u00e9cran afin de pouvoir voir \u00e0 la fois cette fen\u00eatre et les deux ordinateurs.</p> <p>Arr\u00eater la simulation</p> <p>En cas de besoin, vous pouvez toujours arr\u00eater la simulation en  cliquant sur l'ic\u00f4ne , et ainsi pouvoir d\u00e9placer les ordinateurs dans le plan de travail.</p> </li> <li> <p>Cliquez droit toujours sur le m\u00eame ordinateur et s\u00e9lectionnez <code>Afficher le bureau</code>.</p> </li> <li> <p>Dans ce bureau, cliquez sur l'installateur de logiciels et installez <code>Ligne de commande</code>. Une fois l'installation effectu\u00e9e (c'est imm\u00e9diat !), ouvrez le logiciel <code>Ligne de commande</code> par un click gauche. Vous devriez avoir une situation telle que celle-ci :</p> <p></p> </li> <li> <p>Dans l'invite de commande, tapez la ligne suivante :</p> <pre><code>    ping 192.168.0.11\n</code></pre> <p>Question</p> QuestionR\u00e9ponse <p>Que s'est-il pass\u00e9 ?</p> <p>A venir !</p> </li> <li> <p>On s'int\u00e9resse dans les \u00e9changes de donn\u00e9es \u00e0 la premi\u00e8re ligne utilisant le protocole <code>ICMP</code> (Internet Control Message Protocol), qui doit \u00eatre en toute logique la n\u00b03. Cette ligne, appel\u00e9e trame, repr\u00e9sente un \u00e9change de donn\u00e9es entre les deux machines. Cliquez sur la ligne pour obtenir les informations Dans cette trame :</p> <ol> <li> <p>Quelle est l'IP de la source ?</p> Done <p>A venir !</p> </li> <li> <p>Quelle est l'IP de la destination ?</p> Done <p>A venir !</p> </li> <li> <p>Quel est le commentaire ? </p> Done <p>A venir !</p> </li> </ol> </li> <li> <p>Dans la trame suivante :</p> <ol> <li> <p>Quelle est l'IP de la source ?</p> Done <p>A venir !</p> </li> <li> <p>Quelle est l'IP de la destination ?</p> Done <p>A venir !</p> </li> <li> <p>Quel est le commentaire ? </p> Done <p>A venir !</p> </li> </ol> </li> </ol> <p>Commande <code>ping</code></p> <p>La commande <code>ping</code> est une commande tr\u00e8s souvent utilis\u00e9e pour effectuer des tests r\u00e9seau, en cas de dysfonctionnement. Elle s'utilise en donnant soit l'adresse IP de l'ordinateur cible, soit en donnant le nom de domaine de l'ordinateur cible, par exemple :</p> <pre><code>ping www.google.fr\n</code></pre> <p>Cette commande est disponible sur tous les syst\u00e8mes d'exploitation, vous pouvez vous amuser chez vous \u00e0 tenter quelques pings, depuis la ligne de commande.</p>"},{"location":"SNT/Reseaux/TCP_IP/#echanger-des-donnees","title":"\u00c9changer des donn\u00e9es","text":"<p>Nos deux ordinateurs sont bien connect\u00e9s, ils se reconnaissent l'un l'autre et forment donc un r\u00e9seau informatique, que nous agrandirons plus tard. Nous allons maintenant simuler, avec ces deux ordinateurs, une requ\u00eate web classique.</p> <ol> <li>Ne fermez les fen\u00eatres de bureau et d'\u00e9changes de donn\u00e9es de l'ordinateur <code>192.168.0.10</code>.</li> <li>Cliquez droit sur l'ordinateur <code>192.168.0.11</code>, et ouvrez le bureau.</li> <li>Installez le logiciel Serveur Web.</li> <li>Cliquez sur le nouvel ic\u00f4ne et d\u00e9marrez le serveur.</li> <li>Sur l'ordinateur <code>192.168.0.10</code>, installez le navigateur web.</li> <li>Ouvrez le navigateur et tapez dans la barre d'adresse l'IP du serveur web, c'est-\u00e0-dire <code>192.168.0.11</code>. Vous obtenez une page web, certes basique, mais r\u00e9elle.</li> <li> <p>Si vous avez regard\u00e9 la fen\u00eatre montrant les \u00e9changes de donn\u00e9es, vous avez constat\u00e9 que beaucoup d'\u00e9changes se sont produits. Nous passerons sur les trois premi\u00e8res lignes (il s'agit de la n\u00e9gociation des param\u00e8tres de la transmission entre les deux ordinateurs, appel\u00e9e TCP-handshake, qui est hors-programme de SNT), mais nous nous arr\u00eaterons sur les \u00e9changes des trames en bleu fonc\u00e9 :</p> <ol> <li> <p>Cliquez sur la premi\u00e8re des lignes bleu fonc\u00e9 dont la source est <code>192.168.0.11</code> (en th\u00e9orie la deuxi\u00e8me ligne bleu fonc\u00e9):</p> <ol> <li> <p>Dans la couche <code>Transport</code>, quel est le num\u00e9ro de s\u00e9quence <code>SEQ</code> ?</p> Done <p>A venir !</p> </li> <li> <p>Dans la couche <code>Application</code>, que contient le commentaire ?</p> Done <p>A venir !</p> </li> <li> <p>Quel est le num\u00e9ro d'acquittement (<code>ACK</code>) de la ligne bleue-claire suivante ? Par qui cette trame a-t-elle \u00e9t\u00e9 \u00e9mise ?</p> Done <p>A venir !</p> </li> </ol> </li> <li> <p>Cliquez sur la ligne bleu fonc\u00e9 suivante.</p> <ol> <li> <p>Qui est l'\u00e9metteur ?</p> Done <p>A venir !</p> </li> <li> <p>Quelle est la demande ?</p> Done <p>A venir !</p> </li> </ol> </li> <li> <p>Que contiennent les lignes bleu fonc\u00e9 suivantes ?</p> Done <p>A venir !</p> </li> </ol> </li> </ol>"},{"location":"SNT/Reseaux/TCP_IP/#protocole-tcpip","title":"Protocole TCP/IP","text":"<p>Depuis le d\u00e9but de cette activit\u00e9, j'utilise le mot protocole. Mais que signifie-t-il ?</p> <p>Protocole</p> <p>Cherchez la d\u00e9finition Wikip\u00e9dia et donnez la d\u00e9finition de \u00ab protocole \u00bb dans le cas g\u00e9n\u00e9ral puis en informatique :</p> <p>En informatique, il existe de nombreux protocoles. Vous en avez quelques exemples avec Filius : <code>ARP</code>, <code>ICMP</code>, <code>TCP</code>, etc.</p> <p>Nous nous int\u00e9resserons uniquement \u00e0 2 protocoles : <code>IP</code> et <code>TCP</code> (Transmission Control Protocol), qui sont tr\u00e8s utilis\u00e9s pour les transmissions web. Ils sont tellement li\u00e9s qu'on parle souvent de protocole <code>TCP/IP</code>.</p> <p>D\u00e9taillons-en un peu le fonctionnement !</p> <p>Lorsqu'un ordinateur \\(A\\) veut envoyer des donn\u00e9es, par exemple une image, \u00e0 un ordinateur \\(B\\), le protocole <code>TCP</code> va, avec un certain nombre d'op\u00e9rations, d\u00e9couper les donn\u00e9es de l'image en petits paquets, les num\u00e9roter, puis les transmettre au protocole <code>IP</code>.</p> <p>Le protocole IP encapsule les donn\u00e9es et rajoute, entre autre, l'adresse <code>IP</code> de la source (ordinateur \\(A\\)) et celle de la destination (ordinateur \\(B\\)).</p> <p>Une analogie simple serait de consid\u00e9rer l'id\u00e9e de transmettre par la poste un tr\u00e8s tr\u00e8s long texte. <code>TCP</code> \u00e9crirait ce texte sur des feuilles simples et num\u00e9roterait ces feuilles. Chacune des feuilles serait transmise au protocole <code>IP</code>, qui les mettrait dans une enveloppe, sur laquelle est \u00e9crit \u00e0 la fois l'adresse du destinataire, ainsi que celle de l'exp\u00e9diteur. <code>IP</code> envoie ensuite chacune des enveloppes \u00e0 l'ordinateur \\(B\\).</p> <p></p> <p><code>TCP</code> et <code>IP</code> ne se contentent pas d'envoyer. Ils travaillent aussi \u00e0 la r\u00e9ception. <code>IP</code> d\u00e9sencapsule les donn\u00e9es (il sort les feuilles des enveloppes), puis <code>TCP</code> remets les feuilles dans l'ordre tout en envoyant \u00e0 l'exp\u00e9diteur un accus\u00e9 de r\u00e9ception (<code>ACK</code>) pour lui signaler que le paquet est bien arriv\u00e9. Une fois l'accus\u00e9 re\u00e7u par l'\u00e9metteur, le protocole <code>TCP</code> de l'ordinateur \\(A\\) envoie le paquet suivant. Au bout d'un certain temps, si l'ordinateur \\(A\\) ne re\u00e7oit pas d'accus\u00e9, il renvoie le paquet une nouvelle fois.  D'o\u00f9 le <code>C</code> de <code>TCP</code>, qui signifie \u00ab Contr\u00f4le \u00bb, car le protocole <code>TCP</code> est un protocole qui contr\u00f4le l'int\u00e9grit\u00e9 des donn\u00e9es.</p> <p>Protocole UDP</p> <p><code>TCP/IP</code> n'est pas le seul protocole utilis\u00e9 pour envoyer des donn\u00e9es. Entre autres parce que <code>TCP/IP</code> est lent avec toutes les phases d'accus\u00e9s de r\u00e9ception. Un des autres protocoles utilis\u00e9 est <code>UDP</code> (User Datagram Protocol), qui envoie les donn\u00e9es en flux continu sans se pr\u00e9occuper de leur r\u00e9ception. Ce type de protocole est particuli\u00e8rement utilis\u00e9 lorsque la perte de donn\u00e9es n'est pas un gros probl\u00e8me, par exemple lors de la transmission de flux vid\u00e9os de streaming en temps r\u00e9el, ou pour de la voix sur IP.</p>"},{"location":"SNT/Reseaux/TCP_IP/#plus-dordinateurs","title":"Plus d'ordinateurs","text":"<p>\u00c9videmment, un r\u00e9seau ne peut pas se contenter d'avoir uniquement deux ordinateurs. Pour connecter plusieurs ordinateurs entre eux, on utilise un Switch.</p> <ol> <li>Dans <code>Filius</code>, retirez le c\u00e2ble entre les deux ordinateurs, ajoutez un <code>switch</code> \u00e0 l'aide de l'ic\u00f4ne correspondant et ajoutez deux autres ordinateurs.</li> <li>Connectez les ordinateurs au <code>switch</code> \u00e0 l'aide de c\u00e2bles, puis configurez correctement votre r\u00e9seau, en donnant \u00e0 chacun des ordinateurs les IP de types <code>192.168.0.X</code> o\u00f9 <code>X</code> est un nombre entier entre \\(1\\) et \\(254\\)</li> <li>Testez ensuite les connexions entre les machines \u00e0 l'aide soit de la ligne de commandes, soit d'un navigateur web. Vous pouvez utiliser le cadre ci-dessous pour prendre des notes.</li> </ol>"},{"location":"SNT/Web/Bases_HTML/","title":"HTML","text":""},{"location":"SNT/Web/Bases_HTML/#construire-une-page-web-bases-de-html","title":"Construire une page Web : Bases de HTML","text":""},{"location":"SNT/Web/Bases_HTML/#une-page-web","title":"Une page web ?","text":"<p>D\u00e9couvrir HTML</p> <ol> <li> <p>Dans le lecteur r\u00e9seau de votre classe, dossier <code>Documents en consultation/SNT/Web</code>, r\u00e9cup\u00e9rez le fichier <code>Micro_Maqueen</code> et copiez-le dans votre r\u00e9pertoire <code>SNT</code> dans lequel vous aurez au pr\u00e9alable cr\u00e9\u00e9 un dossier <code>web</code>.</p> </li> <li> <p>Double-cliquez sur ce fichier. Quel logiciel l'ouvre ?</p> </li> <li> <p>Quelle est la nature du contenu du fichier ?</p> </li> <li> <p>Vous pouvez fermer le logiciel. Nous allons changer l'extension du fichier <code>Micro_Maqueen</code>. Pour ce faire :</p> <ol> <li> <p>Placez-vous dans votre dossier <code>SNT/web</code> \u00e0 l'aide de votre explorateur de fichier, puis cliquez sur le menu en haut <code>Affichage</code>, puis cochez la case <code>Extensions de noms de fichiers</code>. Quelle extension a pour l'instant le fichier <code>Micro_Maqueen</code> ?</p> </li> <li> <p>S\u00e9lectionnez le fichier puis appuyez sur <code>F2</code> pour renommer, puis changez l'extension <code>.txt</code> en <code>.html</code>. Que se passe-t-il pour l'ic\u00f4ne de fichier ?</p> </li> </ol> </li> <li> <p>Double-cliquez sur le fichier. Quel logiciel l'ouvre ?</p> </li> <li> <p>Quelle est la nature du contenu du fichier ?</p> </li> <li> <p>Quelle est l'URL de la page ?</p> </li> <li> <p>Dans le dossier <code>Documents en consultation/SNT/Web</code>, r\u00e9cup\u00e9rez les fichiers images <code>BBC_Microbit.jpg</code> et <code>Maqueen.png</code>, et copiez-les dans le m\u00eame r\u00e9pertoire que votre fichier <code>Micro_Maqueen.html</code>. Rechargez la page web.</p> <p>Quels sont les changements apport\u00e9s ?</p> </li> <li> <p>R\u00e9duisez sans fermer votre navigateur, puis cliquez-droit sur le fichier <code>Micro_Maqueen.html</code>, et s\u00e9lectionnez <code>Edit with Notepad++</code>. Que retrouvez-vous ?</p> </li> <li> <p>Quelles diff\u00e9rences constatez-vous entre le fichier ouvert dans un navigateur, et le fichier ouvert par <code>Notepad++</code>?</p> </li> </ol>"},{"location":"SNT/Web/Bases_HTML/#le-fond-du-texte-et-de-lhypertexte-html","title":"Le fond : du texte et de l'hypertexte - HTML","text":"<p>HTML et notion de balises</p> <p>Une page web, c'est un fichier contenant du texte, ce texte \u00e9tant enrichi par un syst\u00e8me de balises ouvrantes - par exemple <code>&lt;p&gt;</code> et fermantes - par exemple <code>&lt;/p&gt;</code>, permettant de donner un sens particulier au texte encadr\u00e9 par ces balises.</p> <p>Ces balises sont interpr\u00e9t\u00e9es par le navigateur web et donnent une s\u00e9mantique particuli\u00e8re au texte (titre, paragraphe, \u00e9l\u00e9ment de liste, etc), ou bien introduisent des comportement particuliers \u00e0 certains \u00e9l\u00e9ments ( transforment en lien hypertextuels, ins\u00e8rent des images, etc).</p> <p>Le langage utilis\u00e9 qui contient le texte et les balises s'appelle HTML ( d'o\u00f9 le nom de l'extension <code>.html</code> ) , qui est un acronyme pour Hyper Text Markup Language, soit langage de balisage hypertexte. Il est \u00e0 noter que <code>HTML</code> n'est pas un langage de programmation, mais simplement un langage de mise en valeur du texte, privil\u00e9giant la mise en avant du sens avant la forme.</p> <p>Il existe de nombreux langages de balisages, permettant de donner une forme particuli\u00e8re \u00e0 du texte ou \u00e0 des chaines de caract\u00e8res. Par exemple, <code>HTML</code> pour le Web, <code>LaTeX</code> pour les documents scientifiques et les formules math\u00e9matiques, <code>XML</code> pour organiser des donn\u00e9es, ou m\u00eame <code>Mardown</code>, un langage ultra simplifi\u00e9 utilis\u00e9 par exemple dans des Notebooks Jupyter ( que nous utiliserons plus tard dans l'ann\u00e9e ), mais aussi sur des plateforme de r\u00e9seaux sociaux telles que <code>Discord</code>.</p> <p>L'objectif des questions suivantes est de vous faire comprendre le r\u00f4le des balises HTML. Vous devez donc comparer les deux visions du fichier HTML, celle vue par le navigateur et celle vue par l'\u00e9diteur de texte.</p> <p>Ex1 : Comprendre HTML : une balise - vocabulaire</p> <p>Prenons la deuxi\u00e8me ligne du fichier, vue dans <code>Notepad++</code>. Celle ci contient une balise ouvrante de nom <code>html</code>, et d'attribut <code>lang</code>, encadr\u00e9s par des chevrons <code>&lt;</code> et <code>&gt;</code>.</p> <ol> <li> <p>L'attribut <code>lang</code> poss\u00e8de une valeur. Quelle est-elle ?</p> </li> <li> <p>Toute balise ouvrante doit \u00eatre ferm\u00e9e. O\u00f9 se trouve la balise fermante correspondant \u00e0 <code>&lt;html lang=\"fr\"&gt;</code> ? Avec quoi la distingue-t-on ?</p> </li> </ol> <p>Ex2 : Comprendre HTML : les principales balises </p> <p>Pour chacun des cas ci-dessous, trouver le couple de balise qui correspond :</p> <ol> <li> <p>Texte affich\u00e9 dans l'onglet :</p> </li> <li> <p>Titre principal :</p> </li> <li> <p>Sous-titre :</p> </li> <li> <p>Sous-sous-titre :</p> </li> <li> <p>Paragraphe :</p> </li> <li> <p>Mise en gras dans un paragraphe :</p> </li> <li> <p>Hyperlien :</p> </li> <li> <p>\u00c9l\u00e9ment d'une liste :</p> </li> <li> <p>Liste num\u00e9rot\u00e9e :</p> </li> <li> <p>Liste \u00e0 puces :</p> </li> <li> <p>En-t\u00eate de la page :</p> </li> <li> <p>Corps principal de la page :</p> </li> <li> <p>Haut du corps de page :</p> </li> <li> <p>Pied du corps page :</p> </li> <li> <p>Ensemble du code html :</p> </li> </ol> <p>Ex3 : Comprendre HTML - Des balises sp\u00e9cifiques</p> <ol> <li> <ol> <li> <p>Concernant les balises de liens hypertextes de la page, les deux ne se comportent pas de la m\u00eame mani\u00e8re. Comment expliquer cela ?</p> </li> <li> <p>Toujours concernant les liens hypertextes, que doit-on renseigner pour donner la cible du lien ?</p> </li> </ol> </li> <li> <ol> <li> <p>Nous n'avons pas \u00e9voqu\u00e9 les images pr\u00e9sentes sur la page. Quelle balise permet d'afficher ces images ? Qu'a-t-elle de particulier par rapport \u00e0 toutes celles vues avant ?</p> <p>Obtenir le lien r\u00e9el d'une image sur le web</p> <p>Lorsque vous faites une recherche par Google Image ou tout autre moteur de recherche, et que vous cliquez-droit sur une image puis sur <code>Copier le lien de l'image</code>, vous n'obtenez pas le r\u00e9el lien hypertexte de l'image, mais un lien cr\u00e9e par le moteur de recherche vers une copie de cette image qu'il stocke dans sur ses serveurs de mani\u00e8re temporaire.</p> <p>Pour \u00e9viter de perdre ainsi l'image, il est toujours pr\u00e9f\u00e9rable d'aller directement sur le site o\u00f9 se situe l'image et de copier le lien correspondant.</p> </li> <li> <p>Faites survoler ces deux images par votre pointeur de souris dans votre navigateur. Vous devez constater une diff\u00e9rence de traitement entre les deux. Comment l'expliquer ?</p> </li> <li> <p>Mais, au d\u00e9part, avant de copier les fichiers images dans le m\u00eame r\u00e9pertoire que le fichier <code>N3_Micro_Maqueen.html</code>, les images n'\u00e9taient pas affich\u00e9es. Par quoi \u00e9taient elles remplac\u00e9es ?</p> </li> </ol> </li> <li> <p>Le pied de page est particulier, car il a un caract\u00e8re sp\u00e9cial. Comment ce caract\u00e8re est-il repr\u00e9sent\u00e9 en HTML ?</p> </li> <li> <p>Il y a trois vid\u00e9os, toutes issues de <code>Youtube</code> :</p> <ol> <li> <p>Quelle balise permet de les visionner ? Est-elle fermante ?</p> </li> <li> <p>Quels sont les attributs donn\u00e9s, et \u00e0 quoi correspondent-ils ?</p> </li> <li> <p>L'une de ces vid\u00e9os n'a pas le m\u00eame comportement que les deux     autres. Comment expliquer cela ?</p> </li> </ol> <p>Trouver le code pour ins\u00e9rer une vid\u00e9o</p> <p>Quand vous visionnez une vid\u00e9o sur <code>Youtube</code>, sous la vid\u00e9o vous avez un ic\u00f4ne <code>Partager</code>. En cliquant sur cet ic\u00f4ne, vous obtenez des liens pour partager sur <code>Facebook</code>, <code>Twitter</code>, etc. Mais vous avez aussi un ic\u00f4ne <code>Int\u00e9grer</code>. En cliquant sur celui-ci, vous obtenez la balise compl\u00e8te vous permettant d'int\u00e9grer la vid\u00e9o en question dans votre site web.</p> </li> <li> <p>Au milieu du code est ins\u00e9r\u00e9 ce qu'on appelle un commentaire, c'est-\u00e0-dire une ligne qui ne peut \u00eatre lue que par ceux qui regardent le code source (le contenu r\u00e9el du HTML). Cette ligne sert \u00e0 faire des commentaires \u00e0 la personne qui voudra comprendre le code donn\u00e9. Quelle balise introduit ces commentaires ?</p> </li> </ol>"},{"location":"SNT/Web/Bases_HTML/#a-vous-de-jouer","title":"\u00c0 vous de jouer","text":"<p>Vous devez cr\u00e9er une page web sur le sujet de votre choix, contenant :</p> <ul> <li>un titre principal ;</li> <li>deux sous-parties ;</li> <li>deux hyperliens vers des sites externes ;</li> <li>une liste (\u00e0 puce ou num\u00e9rot\u00e9e) ;</li> <li>au moins deux images ;</li> <li>une vid\u00e9o (ou un lien vers une vid\u00e9o).</li> </ul> <p>On respectera aussi les recommandations suivantes :</p> <ul> <li>Un soin particulier sera\u00a0apport\u00e9 \u00e0 l'orthographe.</li> <li>Le copi\u00e9-coll\u00e9 depuis un autre site doit imp\u00e9rativement mentionner l'origine du texte. Sans ces sources cit\u00e9es, vous pourriez \u00eatre accus\u00e9 de plagiat.</li> <li>De m\u00eame l'origine des images ou des vid\u00e9os doit \u00eatre explicitement donn\u00e9 dans le site, soit sous la forme d'infobulles, soit sous la forme d'un commentaire d'image (balises <code>&lt;figure&gt;</code> et <code>&lt;figcaption&gt;</code>, voir ici).</li> <li>Attention aux informations que vous trouvez sur le web. Certaines sont fortement dat\u00e9es et utilisent des balises qui sont obsol\u00e8tes (comme les balises <code>&lt;center&gt;</code>, <code>&lt;S&gt;</code>, <code>&lt;U&gt;</code>, <code>&lt;B&gt;</code>). De mani\u00e8re g\u00e9n\u00e9rale, n'essayez pas de faire de la mise en page ! <code>HTML</code> n'est pas fait pour \u00e7a, nous utiliserons un autre langage pour am\u00e9liorer notre page.</li> <li>La m\u00e9thode la plus s\u00fbre si vous cherchez de nouvelles balises, ou bien des attributs sp\u00e9cifiques, est d'aller sur le site consacr\u00e9 au <code>HTML</code> de la fondation Mozilla.</li> </ul> <p>Transmettre le/les fichiers</p> <p>Le fichier <code>.html</code> de votre site devra \u00eatre d\u00e9pos\u00e9 sur pronote \u00e0 la date indiqu\u00e9e par le professeur.</p> <p>Si votre site utilise plusieurs fichiers <code>HTML</code> ou des images t\u00e9l\u00e9charg\u00e9es, vous devrez alors cr\u00e9er un fichier compress\u00e9 (<code>.zip</code>) contenant \u00e0 la fois votre/vos fichier(s) <code>HTML</code> et vos images en suivant la m\u00e9thode ci-dessous :</p> <ul> <li>S\u00e9lectionnez votre/vos fichier(s) <code>HTML</code> ainsi que les fichiers images n\u00e9cessaires (\u00e0 l'aide de la touche ++CTRL++ pour faire une s\u00e9lection multiple).</li> <li>Cliquez droit sur un des fichiers s\u00e9lectionn\u00e9 puis dans le menu contextuel <code>7zip</code>, s\u00e9lectionnez <code>Ajouter \u00e0 XXXX.zip</code>, o\u00f9 <code>XXXX</code> est le nom du dossier dans lequel vous avez vos fichiers. Vous obtiendrez alors un fichier archive qui sera celui que vous transmettrez au professeur.</li> </ul>"},{"location":"SNT/Web/CSS/","title":"CSS","text":""},{"location":"SNT/Web/CSS/#mettre-en-forme-le-css","title":"Mettre en forme : le CSS","text":""},{"location":"SNT/Web/CSS/#separer-le-fond-et-la-forme-un-exemple-avec-un-traitement-de-texte","title":"S\u00e9parer le fond et la forme : un exemple avec un traitement de texte","text":"<p>Activit\u00e9 avec un traitement de texte</p> <ol> <li>T\u00e9l\u00e9chargez puis ouvrez le fichier <code>Styles_et_mod\u00e8les.odt</code> avec Libre Office.</li> <li>Allez \u00e0 la page 7 du document.</li> <li>Ouvrez la fen\u00eatre de style  en appuyant sur F11. </li> <li>D\u00e9ployez le menu <code>Style par d\u00e9faut</code> en appuyant sur +.</li> <li>D\u00e9ployez de m\u00eame le menu <code>Titre</code>, puis cliquez droit sur <code>Titre 1</code>, puis <code>modifier</code>.</li> <li>Passez la couleur de la police en rouge, puis activez un surlignage simple en jaune. Validez puis observez le document. <ol> <li>Quelles parties ont \u00e9t\u00e9 chang\u00e9es ? </li> <li>Y-a-t-il eu des changements sur d'autres pages ?</li> <li>Qu'ont en commun toutes les zones chang\u00e9es ?</li> </ol> </li> <li>Dans la fen\u00eatre de style, modifiez <code>Liste 1</code> en ajoutant une lettrine, et en ajoutant au fond un d\u00e9grad\u00e9 de tpe <code>Radial</code>. Observez les modifications du document.</li> <li>Allez \u00e0 la page 18, s\u00e9lectionnez les \u00e9l\u00e9ments de la liste \u00e0 puce, et changez le style de celle-ci, qui est actuellement en <code>Liste 1</code>, en <code>Liste 2</code>. le texte at-il \u00e9t\u00e9 chang\u00e9 ?</li> </ol> <p>S\u00e9parer le fond de la forme</p> <p>Un m\u00eame document num\u00e9rique peut \u00eatre lu de diff\u00e9rentes mani\u00e8res :</p> <ul> <li>sur un \u00e9cran couleur ;</li> <li>par un logiciel de synth\u00e8se vocale ;</li> <li>sur un \u00e9cran monochrome ( ou dans la console) ;</li> <li>sur un \u00e9cran de smartphone ;</li> <li>par une impression sur un papier A4, ou A3, ou autres formats ;</li> <li>...</li> </ul> <p>Pour \u00e9viter de cr\u00e9er un document diff\u00e9rent pour chacun de ces supports, l'id\u00e9e est apparue \u00e0 la fin des ann\u00e9es 1960 de cr\u00e9er une s\u00e9paration compl\u00e8te entre la structure logique d'un document (titres, chapitres, paragraphes, illustrations...), et sa mise en page, qui d\u00e9pend du support de pr\u00e9sentation, et qui est d\u00e9finie en dehors du document lui-m\u00eame dans une ou plusieurs feuilles de style, regroupant police, style, taille et couleur des caract\u00e8res, alignement et espacement des paragraphes...</p>"},{"location":"SNT/Web/CSS/#cascading-style-sheets","title":"Cascading Style Sheets","text":""},{"location":"SNT/Web/CSS/#definition","title":"D\u00e9finition","text":"<p>CSS</p> <p>CSS est l'acronyme de Cascading Style Sheets, soit Feuilles de Styles en cascades en fran\u00e7ais. Un fichier <code>CSS</code> est appel\u00e9  par une ou plusieurs pages <code>HTML</code> (entre autre), et associe \u00e0 certaines balises et/ou attributs <code>html</code> certaines caract\u00e9ristiques graphiques, \u00e0 l'aide d'un s\u00e9lecteur de balises.</p> <p>Pour utiliser une feuille de style nomm\u00e9e <code>toto.css</code> dans une page <code>html</code>, il faut inclure entre les balises <code>&lt;head&gt;</code> et <code>&lt;/head&gt;</code> la ligne suivante :</p> <pre><code>    &lt;link href=\"toto.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n</code></pre> <p>Exemple</p> <p>Dans l'exemple ci-dessous, le fichier <code>style.css</code> est utilis\u00e9 par les diff\u00e9rentes pages html : </p><p> </p>"},{"location":"SNT/Web/CSS/#declaration-dune-regle-css-vocabulaire-associe-et-premiers-exemples","title":"D\u00e9claration d'une r\u00e8gle CSS : vocabulaire associ\u00e9 et premiers exemples","text":"<p>Vocabulaire</p> <p>Au sein d'un fichier CSS, on d\u00e9clare des r\u00e8gles, qui vont permettre la mise en forme d'\u00e9l\u00e9ments bien pr\u00e9cis. Par exemple :</p> <p></p><p> </p> <ul> <li>le s\u00e9l\u00e9cteur <code>p</code> signale que les d\u00e9clarations suivantes s'appliquent \u00e0 toutes les balises <code>&lt;p&gt;</code> et <code>&lt;/p&gt;</code>. Toutes les d\u00e9clarations doivent \u00eatre \u00e0 l'int\u00e9rieur d'une paire d'accolades ( Ctrl+Alt+` ou AltGr+` donne { et Ctrl+Alt+= ou AltGr+= donne }).</li> <li>la propri\u00e9t\u00e9 <code>color</code> indique que la r\u00e8gle concerne la couleur de police ;</li> <li>la valeur associ\u00e9e <code>red</code> indique que la couleur de police sera rouge ;</li> <li>la d\u00e9claration est termin\u00e9e par un point-virgule (c'est important !), et propri\u00e9t\u00e9 et valeur sont s\u00e9par\u00e9es par un symbole deux-points.</li> </ul> <p>Il est possible et m\u00eame souhaitable d'effectuer plusieurs d\u00e9clarations au sein de la m\u00eame r\u00e8gle. Par exemple, la d\u00e9claration suivante est parfaitement valable :</p> <pre><code>h1 {\ncolor : magenta;\nbackground-color : lightblue;\nfont-style : italic;\nfont-size : 3em;\nfont-variant : small-caps;\n}\n</code></pre> <p>Il existe des dizaines de propri\u00e9t\u00e9s et des centaines de d\u00e9clarations possibles. Pour les trouver je vous conseille fortement le site MDN webdocs et surtourt (mais en anglais) W3Schools.</p> <p>Vous pouvez essayer de modifier le CSS dans le bac-\u00e0-sable suivant sur capytale.</p> <p>L'inspecteur d'objet</p> <p>Il est possible dans <code>Firefox</code>, comme dans de nombreux navigateurs actuels, d'afficher les informations d'une page web, y compris bien s\u00fbr les styles CSS attach\u00e9s \u00e0 cette page. Dans <code>Firefox</code>, vous obtiendrez cet inspecteur de style par l'interm\u00e9diaire des touches Ctrl+Shift+I, ou bien par <code>Menu &gt; Outils suppl\u00e9mentaires &gt; Outils de d\u00e9veloppement web</code>.</p> <p>L'int\u00e9r\u00eat de l'inspecteur est de pouvoir modifier \u00e0 sa guise les attributs et valeurs CSS d'une page web et d'en voir imm\u00e9diatement les effets. Les modifications sont bien entendues locales (elles ne sont valables que sur la copie de la page web dans votre navigateur, vous ne modifiez pas vraiment la page web r\u00e9elle... Et heureusement !!!)</p> <p>Exercice : Modifier une page web existante</p> <ol> <li>Rendez-vous sur la page https://www.zonensi.fr/SNT/Web/CSS/.</li> <li>Ouvrez l'inspecteur d'objets.</li> <li>Cliquez sur la petite fl\u00e8che situ\u00e9e \u00e0 droite de la barre de menu de l'inspecteur, puis s\u00e9lectionnez ensuite le titre de la page <code>Mettre en forme : le CSS</code>.</li> <li>Vous devez voir appar\u00e2itre toutes les d\u00e9clarations dont d\u00e9pend le titre de la page. Ajoutez au s\u00e9lecteur <code>.md-typeset h1</code> la d\u00e9claration <code>background-color : pink</code>.</li> <li>Enjoy </li> </ol>"},{"location":"SNT/Web/CSS/#les-selecteurs-en-css","title":"Les s\u00e9lecteurs en CSS","text":"<p>Il est possible de cibler de mani\u00e8re tr\u00e8s pr\u00e9cise des \u00e9l\u00e9ments d'une page web par l'interm\u00e9diaire de ces s\u00e9lecteurs. La syntaxe permettant d'effectuer ce ciblage est tr\u00e8s pr\u00e9cise, mais particuli\u00e8rement efficace quand elle est bien utilis\u00e9e. L'objectif du cours n'est pas d'apprendre tous les s\u00e9lecteurs, mais d'en discerner les plus utiles.</p>"},{"location":"SNT/Web/CSS/#selecteur-de-type","title":"S\u00e9lecteur de type :","text":"<p>Cible toutes les balises d'un certain nom. Par exemple :</p> <pre><code>body {\nbackground-color : black;\n}\np {\ncolor : green;\n}\n</code></pre>"},{"location":"SNT/Web/CSS/#selecteur-de-classe","title":"S\u00e9lecteur de classe :","text":"<p>Il est possible de regrouper des balises, m\u00eame diff\u00e9rentes, en leur donnant un attribut <code>class</code>. Toutes les balises poss\u00e9dant le m\u00eame attribut <code>class</code> peuvent \u00eatre alors cibl\u00e9es en ajoutant un point <code>.</code> pr\u00e9c\u00e9dant le nom de la classe. Par exemples :</p> <ul> <li>cibler toutes les balises poss\u00e9dant l'attribut <code>class=\"definition\"</code></li> </ul> <pre><code>.definition {\ncolor : red; border-width : 2px;\nborder-style : dashed;\n}\n</code></pre> <ul> <li>cible les titres de rang <code>h2</code> et poss\u00e9dant l'attribut <code>class=\"chapitre\"</code> (les autres balises poss\u00e9dant uniquement l'un des deux attributs ne sont pas cibl\u00e9es)</li> </ul> <pre><code>h2.chapitre {\ntext-decoration : underline;\n}\n</code></pre>"},{"location":"SNT/Web/CSS/#selecteur-didentifiant","title":"S\u00e9lecteur d'identifiant :","text":"<p>Il est aussi possible de sp\u00e9cifier une balise sp\u00e9cifique en lui attribuant un identifiant unique par l'interm\u00e9diaire de l'attribut <code>id</code>. Par exemple, pour cibler la balise poss\u00e9dant l'attribut <code>id=\"titresite\"</code>, on utilise le symbole <code>#</code> :</p> <pre><code>#titresite{\ntext-align: center;\n}\n</code></pre>"},{"location":"SNT/Web/CSS/#ordre-dapplication-des-selecteurs","title":"Ordre d'application des s\u00e9lecteurs","text":"<p>Priorit\u00e9 des s\u00e9lecteurs</p> <p>Il existe une priorit\u00e9 des s\u00e9lecteurs, tout comme existe une priorit\u00e9 des op\u00e9rations arithm\u00e9tiques. Il s'agit d'une norme, donc par nature elle est \u00e0 conna\u00eetre pour \u00e9viter les comportement erratiques du CSS :</p> <ol> <li>La mise en forme d\u00e9finie pour le s\u00e9lecteur le plus pr\u00e9cis l'emporte (<code>id</code> est plus pr\u00e9cis que <code>class</code> qui est plus pr\u00e9cis que le nom de la balise).</li> <li>Le dernier d\u00e9fini est appliqu\u00e9 lorsque le niveau de priorit\u00e9 est \u00e9gal.</li> </ol>"},{"location":"SNT/Web/CSS/#les-boites-css","title":"Les bo\u00eetes CSS...","text":"<p>Cette partie est quasiment copi\u00e9-coll\u00e9e depuis MDN Mozilla.</p>"},{"location":"SNT/Web/CSS/#une-boite","title":"Une bo\u00eete...","text":"<p>Vous verrez rapidement qu'avec les CSS, tout tourne autour de bo\u00eetes : d\u00e9finir leurs tailles, leurs couleurs, leurs positions, etc. Les \u00e9l\u00e9ments HTML d'une page peuvent, pour la plupart, \u00eatre vus comme des bo\u00eetes plac\u00e9es les unes sur les autres.</p> <p>Chacun de ces blocs prend un certain espace sur la page, de cette fa\u00e7on :</p> <ul> <li><code>padding</code> : l'espace autour, proche du contenu (par exemple, l'espace autour du texte d'un paragraphe) (en fran\u00e7ais, on pourrait traduire cela par du \u00ab remplissage \u00bb mais le terme padding \u00e9tant commun\u00e9ment utilis\u00e9 lorsqu'on parle de CSS, on continuera \u00e0 utiliser ce terme)</li> <li><code>border</code> : la ligne qui est juste autour du padding (en fran\u00e7ais cela correspond \u00e0 la bordure).</li> <li><code>margin</code> : l'espace ext\u00e9rieur, autour de l'\u00e9l\u00e9ment (en fran\u00e7ais cela correspond \u00e0 la marge).</li> </ul> <p></p>"},{"location":"SNT/Web/CSS/#des-boites","title":"Des boites !","text":"<p>Chaque \u00e9l\u00e9ment poss\u00e8de par d\u00e9faut un type de placement :</p> <ul> <li>\u00e9l\u00e9ment <code>block</code> : un \u00e9l\u00e9ment <code>block</code> occupe par d\u00e9faut toute la largeur de l'\u00e9cran. Quand des \u00e9l\u00e9ments <code>block</code> s'enchainent, ils sont les uns au dessus des autres. Par d\u00e9faut les \u00e9l\u00e9ments <code>&lt;h1&gt;,&lt;h2&gt;,...,&lt;h6&gt;</code>,  <code>&lt;p&gt;</code> et surtout <code>&lt;div&gt;</code> (balise g\u00e9n\u00e9rique de type <code>block</code>) sont des \u00e9l\u00e9ments de type <code>block</code>.</li> <li>\u00e9l\u00e9ment <code>inline</code> : un \u00e9l\u00e9ment <code>inline</code> s'ins\u00e8re dans la ligne de texte, sans g\u00e9n\u00e9rer de saut de ligne avant ou apr\u00e8s.Par d\u00e9faut les \u00e9l\u00e9ments <code>&lt;a&gt;,&lt;img&gt;,&lt;strong&gt;,...</code> sont des \u00e9l\u00e9ments de type <code>inline</code>.</li> </ul> <p>Il existe bien des subtilit\u00e9s concernant les \u00e9l\u00e9ments <code>inline</code> et <code>block</code>, qui d\u00e9passent largement le cadre de ce cours. Ce document permettra peut-\u00eatre de r\u00e9pondre \u00e0 certaines questions que vous poyurriez vous poser. </p> <p>Modifier le type d'un \u00e9l\u00e9ment : <code>display</code></p> <p>Il est possible de sp\u00e9cifier explicitement pour un \u00e9l\u00e9ment son type d'apparition dans le flux de donn\u00e9es d'une page html. Pour cela on utilise la propri\u00e9t\u00e9 <code>display</code> et ses diff\u00e9rentes valeurs :</p> <ul> <li><code>none</code> : retire l'\u00e9l\u00e9ment des \u00e9l\u00e9ments disponibles. Cet \u00e9l\u00e9ment ainsi que ses descendants ne sont plus accessibles.</li> <li><code>block</code> : rend l'\u00e9l\u00e9ment de type <code>block</code>;</li> <li><code>inline</code> : rend l'\u00e9l\u00e9ment de type <code>inline</code>;</li> <li><code>grid</code> : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment d'une grille(ou tableau) ;</li> <li><code>flex</code> : ins\u00e8re l'\u00e9l\u00e9ment comme \u00e9l\u00e9ment de dimension flexible - outil \u00e0 privil\u00e9gier pour rendre la page ou le site visible sur diff\u00e9rents appareils. La documentation en ligne est tr\u00e8s bien faite.</li> </ul>"},{"location":"SNT/Web/CSS/#les-dimensions-et-unites-de-mesures-les-plus-utiles","title":"Les dimensions et unit\u00e9s de mesures les plus utiles","text":"<p>En CSS, il est souvent imp\u00e9ratif de donner des longueurs, ou des bases de dimensions pour les \u00e9l\u00e9ments. Les unit\u00e9s sont nombreuses, souvent myst\u00e9rieuses ou absconses pour nous europ\u00e9ens. En voici quelques types :</p> <ul> <li>valeur en pourcentage : <code>font-size : 120\\%;</code> d\u00e9finit une taille de police valant 120% de la valeur de l'\u00e9l\u00e9ment parent. Il ne faut pas d'espace entre le nombre et le symbole %.</li> <li>hauteur <code>em</code> : cadratin, ou hauteur de la fonte dans une police donn\u00e9e \u00e9gal \u00e0 la largeur du caract\u00e8re <code>M</code>. <code>font-size : 1.5em;</code> \u00e9crira le texte 50% plus gros que la taille de base utilis\u00e9e, qui est par d\u00e9finition de <code>1em</code>.</li> <li>valeur en pixels : il est toujours possible de calculer une taille en pixels, mais l'application exacte d\u00e9pend du navigateur utilis\u00e9. Par exemple <code>width : 50px;</code> mettra la largeur de l'\u00e9l\u00e9ment \u00e0 500 pixels. A proscrire sauf cas particuliers.</li> <li>valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : <code>margin-left : 50vw;</code> permettra de cr\u00e9er une marge \u00e0 gauche de la boite valant 50% de la largeur de la fen\u00eatre.</li> <li>valeur en unit\u00e9 relative \u00e0 la largeur de la fen\u00eatre : <code>margin-left : 50vh;</code> permettra de cr\u00e9er une marge en haut de la boite valant 50\\% de la hauteur de la fen\u00eatre.</li> </ul>"},{"location":"SNT/Web/CSS/#adaptation-aux-differents-ecransmedias-de-sortie","title":"Adaptation aux diff\u00e9rents \u00e9crans/m\u00e9dias de sortie","text":"<p>Jusqu'aux ann\u00e9es 2010, les sites web \u00e9taient souvent con\u00e7us pour n'\u00eatre lus que sur des \u00e9crans d'ordinateurs. Depuis, les smartphones sont arriv\u00e9s, avec leurs nombreuses tailles d'\u00e9crans diff\u00e9rentes, et leur capacit\u00e9 \u00e0 basculer du format portrait au format paysage.</p> <p>Afin d'afficher correctement  un site web, il faut donc pr\u00e9voir \u00e0 l'avance, dans le fichier css, diff\u00e9rentes version du site. Pour cela on utilise des media-queries - soit requ\u00eates de media. Il s'agit d'un type particulier de commande qui \u00e9value certaines caract\u00e9ristiques du m\u00e9dia utilis\u00e9 pour lire le site.</p> <p>Il existe de nombreuses requ\u00eates, mais en pratique nous n'utiliserons que les deux requ\u00eates suivantes :</p> <ul> <li><code>max-width</code> : applique les r\u00e8gles si la largeur  de l'\u00e9cran est inf\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ;</li> <li><code>min-width</code> : applique les r\u00e8gles si la largeur de l'\u00e9cran est sup\u00e9rieure ou \u00e9gale \u00e0 la taille donn\u00e9e en pixel ;</li> </ul> <p>Exemple</p> <p>L'exemple suivant provient du document Outils CSS pour le responsive design d'Alexandre Niveau, sur le site de l'Universit\u00e9 de Caen.</p> <pre><code>/* version par d\u00e9faut: sur grand \u00e9cran */\n.menu { width: 30em; /* etc. */ }\n\n/* \u00e9cran plus petit: on passe le menu en horizontal */\n@media (max-width: 100em) {\n.menu { width: 100%; }\n.menu li { display: inline-block; }\n/* etc. */\n}\n\n/* \u00e9cran encore plus petit: on cache le menu */\n@media (max-width: 50em) {\n.menu { display: none; }\n}\n</code></pre> <p>A faire</p> <p>Maintenant que vous connaissez quelques secrets du CSS, vous allez pouvoir l'utiliser pour effectuer une mise en page plus agr\u00e9able de votre page html !</p>"}]}